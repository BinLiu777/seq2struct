{"beams": [{"score": -2.0093317458304227, "choice_history": [59, 124, "<UNK>", "Blade", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", " ", "Blade", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>BladeBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade Blade', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>BladeBlade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -0.440428227186203, -0.0014176041586324573, -0.05941056087613106, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0003223419189453125, -0.00167083740234375, -8.02278082119301e-05, -0.0003070831298828125, -0.028451204299926758, -0.5191259384155273, -5.6743483582977206e-05, -8.0108642578125e-05, -0.007938745431602001, 0.0, -0.5876814126968384, 0.0, -0.3312187194824219, 0.0, -0.002353668212890625, 0.0, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.00107574462890625, -0.0019057807512581348, -1.9073486328125e-06, -0.00014971998461987823, 0.0, -0.009241222403943539, 0.0]}, {"score": -2.2173727803165093, "choice_history": [59, 124, "<UNK>", "Blade", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>BladeBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>BladeBlade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -0.440428227186203, -0.0014176041586324573, -0.05941056087613106, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0003223419189453125, -0.00167083740234375, -8.02278082119301e-05, -0.0003070831298828125, -0.028451204299926758, -0.9049453735351562, -0.006216504145413637, -1.1444091796875e-05, -0.29955780506134033, 0.0, -0.44213199615478516, 0.0, -0.0027675628662109375, 0.0, -0.0004502534866333008, 0.0, -1.9073486328125e-06, -8.392333984375e-05, -0.0020427703857421875, -0.0010163405677303672, -1.9073486328125e-06, -6.294150080066174e-05, 0.0, -0.009776473045349121, 0.0]}, {"score": -2.399571134301368, "choice_history": [59, 124, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>Blade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -1.0344260931015015, -0.045416008681058884, -5.841255187988281e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0016307830810546875, -9.465213952353224e-05, -0.000270843505859375, -0.0015446525067090988, -0.3213510513305664, -0.004663763102144003, -1.9073486328125e-06, -0.9157397747039795, 0.0, -0.04321479797363281, 0.0, -0.00211334228515625, 0.0, -0.0001239776611328125, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.001064300537109375, -0.001155783305875957, -1.9073486328125e-06, -9.929875523084775e-05, 0.0, -0.010171650908887386, 0.0]}, {"score": -2.5861433239551843, "choice_history": [59, 124, "<UNK>", "Blade", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>BladeBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>BladeBlade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -0.440428227186203, -0.0014176041586324573, -0.05941056087613106, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0003223419189453125, -0.00167083740234375, -8.02278082119301e-05, -0.0003070831298828125, -0.028451204299926758, -0.5191259384155273, -5.6743483582977206e-05, -8.0108642578125e-05, -0.007938745431602001, 0.0, -1.4394975900650024, 0.0, -0.05575847625732422, 0.0, -0.00226593017578125, 0.0, -9.72747802734375e-05, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.000621795654296875, -0.0018227237742394209, -3.814697265625e-06, -0.0001922728115459904, 0.0, -0.010345814749598503, 0.0]}, {"score": -2.7735952185466886, "choice_history": [59, 124, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>Blade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -1.0344260931015015, -0.045416008681058884, -5.841255187988281e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0016307830810546875, -9.465213952353224e-05, -0.000270843505859375, -0.0015446525067090988, -0.3213510513305664, -0.004663763102144003, -1.9073486328125e-06, -0.8764417171478271, 0.0, -0.45612525939941406, 0.0, -0.0024776458740234375, 0.0, -0.00020229816436767578, 0.0, -1.9073486328125e-06, -7.05718994140625e-05, -0.00136566162109375, -0.001309493207372725, -1.9073486328125e-06, -8.797451300779358e-05, 0.0, -0.009674072265625, 0.0]}, {"score": -2.9198718198458664, "choice_history": [59, 124, "<UNK>", "Blade", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>BladeBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>BladeBlade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -0.440428227186203, -0.0014176041586324573, -0.05941056087613106, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0003223419189453125, -0.00167083740234375, -8.02278082119301e-05, -0.0003070831298828125, -0.028451204299926758, -0.9049453735351562, -0.006216504145413637, -1.1444091796875e-05, -0.29955780506134033, 0.0, -1.1445627212524414, 0.0, -0.0028667449951171875, 0.0, -0.0004903078079223633, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -0.0013275146484375, -0.000883429020177573, -1.9073486328125e-06, -4.148452717345208e-05, 0.0, -0.010523676872253418, 0.0]}, {"score": -3.093414876915631, "choice_history": [59, 124, "<UNK>", "Blade", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", " ", "Blade", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>BladeBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade Blade', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade Blade", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>BladeBlade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -0.440428227186203, -0.0014176041586324573, -0.05941056087613106, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0003223419189453125, -0.00167083740234375, -8.02278082119301e-05, -0.0003070831298828125, -0.028451204299926758, -0.5191259384155273, -5.6743483582977206e-05, -8.0108642578125e-05, -0.007938745431602001, 0.0, -0.5876814126968384, 0.0, -1.4148178100585938, 0.0, -0.002780914306640625, 0.0, -0.000164031982421875, 0.0, -1.9073486328125e-06, -7.2479248046875e-05, -0.0007724761962890625, -0.0021199272014200687, -1.9073486328125e-06, -0.00010359021689509973, 0.0, -0.009391306899487972, 0.0]}, {"score": -3.2978324275900377, "choice_history": [59, 124, "<UNK>", "Blade", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>BladeBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>BladeBlade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -0.440428227186203, -0.0014176041586324573, -0.05941056087613106, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0003223419189453125, -0.00167083740234375, -8.02278082119301e-05, -0.0003070831298828125, -0.028451204299926758, -0.9049453735351562, -0.006216504145413637, -1.1444091796875e-05, -1.7884570360183716, 0.0, -0.03526878356933594, 0.0, -0.00196075439453125, 0.0, -0.0002766847610473633, 0.0, -1.9073486328125e-06, -5.7220458984375e-05, -0.001262664794921875, -0.0009625111124478281, -3.814697265625e-06, -7.843811181373894e-05, 0.0, -0.010023713111877441, 0.0]}, {"score": -3.3943080399840255, "choice_history": [59, 124, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>Blade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -1.0344260931015015, -0.045416008681058884, -5.841255187988281e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0016307830810546875, -9.465213952353224e-05, -0.000270843505859375, -0.0015446525067090988, -1.2926464080810547, -9.095664427150041e-05, -3.814697265625e-06, -0.008031284436583519, 0.0, -0.9319261312484741, 0.0, -0.04494762420654297, 0.0, -0.00261688232421875, 0.0, -8.0108642578125e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.00038909912109375, -0.0020919719245284796, -3.814697265625e-06, -0.00024817176745273173, 0.0, -0.011394618079066277, 0.0]}, {"score": -3.4661528003889543, "choice_history": [59, 124, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>Blade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -1.0344260931015015, -0.045416008681058884, -5.841255187988281e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0016307830810546875, -9.465213952353224e-05, -0.000270843505859375, -0.0015446525067090988, -0.3213510513305664, -0.004663763102144003, -1.9073486328125e-06, -0.8764417171478271, 0.0, -1.148198127746582, 0.0, -0.003021240234375, 0.0, -0.00021755695343017578, 0.0, -1.9073486328125e-06, -0.000118255615234375, -0.0008335113525390625, -0.001105176517739892, -1.9073486328125e-06, -5.471654367283918e-05, 0.0, -0.010321973823010921, 0.0]}, {"score": -3.5593936742588994, "choice_history": [59, 124, "<UNK>", "Blade", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", " ", "Blade", "<EOS>", "5", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>BladeBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade Blade', 5, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "WARLOCK", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>BladeBlade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -0.440428227186203, -0.0014176041586324573, -0.05941056087613106, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0003223419189453125, -0.00167083740234375, -8.02278082119301e-05, -0.0003070831298828125, -0.028451204299926758, -0.5191259384155273, -5.6743483582977206e-05, -8.0108642578125e-05, -0.007938745431602001, 0.0, -2.0535502433776855, 0.0, -0.416046142578125, 0.0, -0.001861572265625, 0.0, -0.0001735687255859375, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -0.0006046295166015625, -0.0021960530430078506, -1.9073486328125e-06, -0.00022361935407388955, 0.0, -0.009188770316541195, 0.0]}, {"score": -3.705742466132506, "choice_history": [59, 124, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>Blade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -1.0344260931015015, -0.045416008681058884, -5.841255187988281e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0016307830810546875, -9.465213952353224e-05, -0.000270843505859375, -0.0015446525067090988, -0.3213510513305664, -0.004663763102144003, -1.9073486328125e-06, -2.1783769130706787, 0.0, -0.08765888214111328, 0.0, -0.0019130706787109375, 0.0, -0.0001583099365234375, 0.0, -1.9073486328125e-06, -0.00011444091796875, -0.0002899169921875, -0.001409017015248537, -1.9073486328125e-06, -9.190840501105413e-05, 0.0, -0.009889482520520687, 0.0]}, {"score": -3.827646251076658, "choice_history": [59, 124, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", " ", "Blade", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade Blade', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>Blade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -1.0344260931015015, -0.045416008681058884, -5.841255187988281e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0016307830810546875, -9.465213952353224e-05, -0.000270843505859375, -0.0015446525067090988, -1.2926464080810547, -9.095664427150041e-05, -3.814697265625e-06, -0.008031284436583519, 0.0, -1.0945466756820679, 0.0, -0.31685924530029297, 0.0, -0.0022106170654296875, 0.0, -0.000125885009765625, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -0.00055694580078125, -0.0023467624559998512, -1.9073486328125e-06, -0.00021301055676303804, 0.0, -0.010167954489588737, 0.0]}, {"score": -4.329538734564267, "choice_history": [59, 124, "<UNK>", "Blade", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", " ", "Blade", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>BladeBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade Blade', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade Blade", "hole3": "COMMON"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>BladeBlade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -0.440428227186203, -0.0014176041586324573, -0.05941056087613106, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0003223419189453125, -0.00167083740234375, -8.02278082119301e-05, -0.0003070831298828125, -0.028451204299926758, -0.5191259384155273, -5.6743483582977206e-05, -8.0108642578125e-05, -0.007938745431602001, 0.0, -3.14534330368042, 0.0, -0.0929107666015625, 0.0, -0.0016460418701171875, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.000274658203125, -0.0028611146844923496, -3.814697265625e-06, -0.00015985197387635708, 0.0, -0.010647056624293327, 0.0]}, {"score": -4.359629617189057, "choice_history": [59, 124, "<UNK>", "Blade", "Blade", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Blade", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>BladeBlade(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 5, "_type": "Template3", "hole0": "<UNK> Blade Blade", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Weapon"}], "hole0": "<UNK>BladeBlade", "hole3": "create_weapon"}, "score_history": [-0.000270843505859375, -0.000125885009765625, -0.0005025863647460938, -0.01528002880513668, -0.440428227186203, -0.0014176041586324573, -2.9245004653930664, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0009708404541015625, -0.0007801055908203125, -0.00016546246479265392, -0.0002613067626953125, -0.021448234096169472, -0.4263477325439453, -4.816048021893948e-05, -7.2479248046875e-05, -0.007149923127144575, 0.0, -0.4093970060348511, 0.0, -0.0950765609741211, 0.0, -0.0020694732666015625, 0.0, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.000537872314453125, -0.0017237169668078423, -3.814697265625e-06, -0.0001665268646320328, 0.0, -0.010741709731519222, 0.0]}], "gold_code": "class AssassinsBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Assassin's Blade\", 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}
{"beams": [{"score": -0.5789131544124402, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 6, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.1024467945098877, -2.3841855067985307e-07, -0.0001500816288171336, -1.9073486328125e-06, -0.04945361614227295, 0.0, -7.987022399902344e-06, 0.0, -6.401538848876953e-05, 0.0, 0.0, 0.0, -0.013956069946289062, 0.0, 0.0, -0.006228089332580566, -1.1920928244535389e-07, -0.0002487896999809891, -1.9073486328125e-06]}, {"score": -1.641741517977806, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Boulderfist", " ", "Ogre", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}}], "args": [{"s": "Boulderfist Ogre", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -1.0986518859863281, -0.0049343109130859375, -4.00543212890625e-05, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, -1.83581723831594e-05, -1.5616416931152344e-05, -2.0265558760002023e-06, -4.768371127283899e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.1671568751335144, -2.3841855067985307e-07, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -1.1444091796875e-05, -0.008365035057067871, -7.62939453125e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.0002346038818359375, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.3575838804244995, -3.62396240234375e-05, -2.288818359375e-05, 0.0, -0.0004712343215942383, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.002537250518798828, -8.106222594506107e-06, -0.0004402385966386646, -2.3126602172851562e-05]}, {"score": -2.8146844547563745, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -2.3303818702697754, -1.1920928244535389e-07, -0.00016295825480483472, -1.9073486328125e-06, -0.07076728343963623, 0.0, -1.33514404296875e-05, 0.0, -5.364418029785156e-05, 0.0, 0.0, 0.0, -0.002155303955078125, 0.0, 0.0, -0.004530429840087891, -1.1920928244535389e-07, -0.00026202184380963445, -1.9073486328125e-06]}, {"score": -3.1376004259338686, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Boulderfist", " ", "Ogre", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}], "args": [{"s": "Boulderfist Ogre", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -1.0986518859863281, -0.0049343109130859375, -4.00543212890625e-05, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, -1.83581723831594e-05, -1.5616416931152344e-05, -2.0265558760002023e-06, -4.768371127283899e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.1671568751335144, -2.3841855067985307e-07, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -1.1444091796875e-05, -0.008365035057067871, -7.62939453125e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.0002346038818359375, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -1.8535412549972534, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0005017518997192383, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -0.0024580955505371094, -9.179100743494928e-06, -0.00041592016350477934, -2.3245811462402344e-05]}, {"score": -3.3648088611837466, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Boulderfist", " ", "Ogre", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}}], "args": [{"s": "Boulderfist Ogre", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -1.0986518859863281, -0.0049343109130859375, -4.00543212890625e-05, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, -1.83581723831594e-05, -1.5616416931152344e-05, -2.0265558760002023e-06, -4.768371127283899e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.8720446825027466, 0.0, -2.6702880859375e-05, 0.0, -3.62396240234375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.030365347862243652, -3.814697265625e-06, -0.000141143798828125, -9.5367431640625e-06, -0.0002346038818359375, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.3538120985031128, -3.62396240234375e-05, -2.288818359375e-05, 0.0, -0.0004712343215942383, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.0025069713592529297, -8.106222594506107e-06, -0.00044083461398258805, -2.3126602172851562e-05]}, {"score": -3.3862558641564817, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Boulderfist", " ", "Ogre", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}}], "args": [{"s": "Boulderfist Ogre", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -1.0986518859863281, -0.0049343109130859375, -4.00543212890625e-05, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, -1.83581723831594e-05, -1.5616416931152344e-05, -2.0265558760002023e-06, -4.768371127283899e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.1671568751335144, -2.3841855067985307e-07, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -1.1444091796875e-05, -0.008365035057067871, -7.62939453125e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.0002346038818359375, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.101844549179077, 0.0, -9.5367431640625e-06, 0.0, -0.0005741119384765625, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.1961669921875e-05, -1.1920883480343036e-07, -3.814697265625e-06, -0.0027420520782470703, -8.463848644169047e-06, -0.0004276024701539427, -2.3245811462402344e-05]}, {"score": -4.716305436607364, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 6, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.1024467945098877, -2.3841855067985307e-07, -0.0001500816288171336, -1.9073486328125e-06, -4.131570816040039, 0.0, -4.8160552978515625e-05, 0.0, -7.736682891845703e-05, 0.0, 0.0, 0.0, -0.06951904296875, 0.0, 0.0, -0.00579524040222168, -1.1920928244535389e-07, -0.00034022293402813375, -1.9073486328125e-06]}, {"score": -4.923986139107875, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 6, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.1024467945098877, -2.3841855067985307e-07, -0.0001500816288171336, -1.9073486328125e-06, -4.39194393157959, 0.0, -2.9802322387695312e-05, 0.0, -5.710124969482422e-05, 0.0, 0.0, -1.9073486328125e-06, -0.017007827758789062, 0.0, 0.0, -0.005758881568908691, -1.1920928244535389e-07, -0.00023400774807669222, 0.0]}, {"score": -5.159546792576258, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 6, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.1024467945098877, -2.3841855067985307e-07, -0.0001500816288171336, -1.9073486328125e-06, -0.04945361614227295, 0.0, -7.987022399902344e-06, 0.0, -6.401538848876953e-05, 0.0, 0.0, 0.0, -4.432228088378906, -1.1920838005607948e-07, -1.1920928244535389e-07, -0.0014390945434570312, 0.0, -0.00014281051699072123, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.16651451587677002, 0.0, -6.67572021484375e-05, -5.7220458984375e-06, -0.0006313323974609375, 0.0]}, {"score": -5.367999734630722, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 6, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.1024467945098877, -2.3841855067985307e-07, -0.0001500816288171336, -1.9073486328125e-06, -4.821120738983154, 0.0, -2.1696090698242188e-05, 0.0, -7.30752944946289e-05, 0.0, 0.0, 0.0, -0.031232833862304688, 0.0, 0.0, -0.006309032440185547, -1.1920928244535389e-07, -0.00028777107945643365, -1.9073486328125e-06]}, {"score": -5.655766668071891, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 6, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.1024467945098877, -2.3841855067985307e-07, -0.0001500816288171336, -1.9073486328125e-06, -0.04945361614227295, 0.0, -7.987022399902344e-06, 0.0, -6.401538848876953e-05, 0.0, 0.0, 0.0, -0.013956069946289062, 0.0, 0.0, -5.083062171936035, 0.0, -0.0002683399652596563, -1.9073486328125e-06]}, {"score": -5.955235664089727, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -2.3303818702697754, -1.1920928244535389e-07, -0.00016295825480483472, -1.9073486328125e-06, -3.209233045578003, 0.0, -2.288818359375e-05, 0.0, -6.687641143798828e-05, 0.0, 0.0, 0.0, -0.0039272308349609375, 0.0, 0.0, -0.004779338836669922, -1.1920928244535389e-07, -0.00030386418802663684, -1.9073486328125e-06]}, {"score": -6.058048071613449, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.WARRIOR)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 6, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "WARRIOR"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.1024467945098877, -2.3841855067985307e-07, -0.0001500816288171336, -1.9073486328125e-06, -5.482235431671143, -3.814697265625e-05, -1.4066696166992188e-05, 0.0, -5.412101745605469e-05, 0.0, 0.0, 0.0, -0.060540199279785156, 0.0, 0.0, -0.005939483642578125, -1.1920928244535389e-07, -0.00027203545323573053, -1.9073486328125e-06]}, {"score": -6.78985077362173, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "SHAMAN", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.SHAMAN)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 6, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "SHAMAN"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.1024467945098877, -2.3841855067985307e-07, -0.0001500816288171336, -1.9073486328125e-06, -6.220535755157471, -1.9073486328125e-06, -0.00018191334675066173, 0.0, -8.20159912109375e-05, 0.0, 0.0, -1.9073486328125e-06, -0.05341053009033203, 0.0, 0.0, -0.006430506706237793, -1.1920928244535389e-07, -0.0002535581006668508, 0.0]}, {"score": -7.390783492414798, "choice_history": [59, 124, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boulderfist", " ", "Ogre", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "Boulderfist Ogre", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "BoulderfistOgre", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.00012397686077747494, -0.00021610308613162488, -0.000251739751547575, -1.1918018572032452e-07, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, -0.4056663513183594, -3.814697265625e-06, -4.29153169534402e-06, -2.5272369384765625e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -2.3303818702697754, -1.1920928244535389e-07, -0.00016295825480483472, -1.9073486328125e-06, -4.643254280090332, 0.0, -4.9591064453125e-05, 0.0, -7.843971252441406e-05, 0.0, 0.0, 0.0, -0.005950927734375, 0.0, 0.0, -0.004210710525512695, -1.1920928244535389e-07, -0.0003371232305653393, -1.9073486328125e-06]}], "gold_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}
{"beams": [{"score": -1.7414864647087072, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -0.5896960496902466, 0.0, -7.62939453125e-06, -0.0002269744873046875, -0.0002765655517578125, -5.340576171875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.2788095474243164, -1.9073486328125e-06, -0.0003528594970703125, 0.0, -0.6787109375, 0.0, -2.288818359375e-05, -0.00035858154296875]}, {"score": -2.372364197939298, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -1.1249428987503052, -3.814697265625e-06, -3.814697265625e-06, -0.0007381439208984375, -0.0006809234619140625, -2.47955322265625e-05, -6.29425048828125e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.5353708267211914, 0.0, -0.0028944015502929688, 0.0, -0.514664888381958, 0.0, -1.33514404296875e-05, -3.4332275390625e-05]}, {"score": -2.68548655611243, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "<UNK>", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -0.5896960496902466, 0.0, -7.62939453125e-06, -0.0002269744873046875, -0.0002765655517578125, -5.340576171875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.2788095474243164, -1.9073486328125e-06, -0.0003528594970703125, 0.0, -1.0987062454223633, 0.0, -0.00016021728515625, -0.04001808166503906, -0.00023651123046875, -1.1444091796875e-05, -1.9073486328125e-06, -0.1547170877456665, -0.06817781925201416, -0.00012969970703125, -0.08679008483886719, 0.0, -0.051975447684526443, -0.12216795235872269]}, {"score": -2.699498091905973, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(2)\n        self.target.increase_health(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -1.1249428987503052, -3.814697265625e-06, -3.814697265625e-06, -0.0007381439208984375, -0.0006809234619140625, -2.47955322265625e-05, -6.29425048828125e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.8838996887207031, -3.814697265625e-06, -0.0004425048828125, 0.0, -0.49555015563964844, 0.0, -1.1444091796875e-05, -0.0002040863037109375]}, {"score": -2.7079955684837316, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -0.5896960496902466, 0.0, -7.62939453125e-06, -0.0002269744873046875, -0.0002765655517578125, -5.340576171875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.4212045669555664, 0.0, -0.0032548904418945312, 0.0, -0.5002357959747314, 0.0, -2.09808349609375e-05, -4.9591064453125e-05]}, {"score": -2.820728455751798, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_armor", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -1.1249428987503052, -3.814697265625e-06, -3.814697265625e-06, -0.0007381439208984375, -0.0006809234619140625, -2.47955322265625e-05, -6.29425048828125e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.5353708267211914, 0.0, -0.0028944015502929688, 0.0, -0.9630138874053955, -1.9073486328125e-06, -1.71661376953125e-05, -4.38690185546875e-05]}, {"score": -3.1986047374900792, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_armor", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -0.5896960496902466, 0.0, -7.62939453125e-06, -0.0002269744873046875, -0.0002765655517578125, -5.340576171875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.4212045669555664, 0.0, -0.0032548904418945312, 0.0, -0.9908468723297119, -1.9073486328125e-06, -1.52587890625e-05, -5.14984130859375e-05]}, {"score": -4.072379504412076, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -0.5896960496902466, 0.0, -7.62939453125e-06, -0.0002269744873046875, -0.0002765655517578125, -5.340576171875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.2788095474243164, -1.9073486328125e-06, -0.0003528594970703125, 0.0, -3.009706974029541, 0.0, -1.52587890625e-05, -0.000263214111328125]}, {"score": -4.131079589098356, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -2.7157058715820312, 0.0, -3.0517578125e-05, -0.49066638946533203, -0.000949859619140625, -2.09808349609375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -0.3401336669921875, 0.0, -0.0041408538818359375, 0.0, -0.38641083240509033, 0.0, -1.71661376953125e-05, -4.00543212890625e-05]}, {"score": -4.299908925860784, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "<UNK>", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -1.1249428987503052, -3.814697265625e-06, -3.814697265625e-06, -0.0007381439208984375, -0.0006809234619140625, -2.47955322265625e-05, -6.29425048828125e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.8838996887207031, -3.814697265625e-06, -0.0004425048828125, 0.0, -1.557772159576416, 0.0, -8.0108642578125e-05, -0.05543327331542969, -0.0004024505615234375, -1.71661376953125e-05, -3.814697265625e-06, -0.1882244348526001, -0.04733908176422119, -0.0001220703125, -0.08035850524902344, 0.0, -0.05310112237930298, -0.11332233250141144]}, {"score": -4.54483858224534, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -2.7157058715820312, 0.0, -3.0517578125e-05, -0.9675302505493164, 0.0, -0.15259194374084473, -2.6345251171733253e-05, -0.49269580841064453, -0.006573677062988281, -0.0002536773681640625, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.00011444091796875, 0.0, -0.007895469665527344, 0.0, -0.00835418701171875, -2.09808349609375e-05, -7.62939453125e-06, -9.72747802734375e-05]}, {"score": -4.949918662279508, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_armor", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -2.7157058715820312, 0.0, -3.0517578125e-05, -0.49066638946533203, -0.000949859619140625, -2.09808349609375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -0.3401336669921875, 0.0, -0.0041408538818359375, 0.0, -1.205236554145813, 0.0, -1.9073486328125e-05, -5.14984130859375e-05]}, {"score": -4.979462538927457, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(2)\n        self.target.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -0.062401771545410156, -5.7220458984375e-06, -6.4849853515625e-05, -4.38690185546875e-05, -4.9591064453125e-05, 0.0, -0.010997772216796875, -3.814697265625e-06, -0.000240325927734375, 0.0, -1.1249428987503052, -3.814697265625e-06, -3.814697265625e-06, -0.0007381439208984375, -0.0006809234619140625, -2.47955322265625e-05, -6.29425048828125e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.8838996887207031, -3.814697265625e-06, -0.0004425048828125, 0.0, -2.7755584716796875, 0.0, -9.5367431640625e-06, -0.0001621246337890625]}, {"score": -5.431483839701727, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 71, 99, 20, 92, 16, 82, 16, 82, 24, 112, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 7, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "increase_health", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if minion.card.minion_type == MINION_TYPE.TOTEM:\n                minion.increase_health(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "If", "body": [{"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Eq"}]}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -2.94891357421875, -0.00025177001953125, -1.9073486328125e-06, 0.0, -0.00033473968505859375, -2.0384783056215383e-05, -0.012716293334960938, -2.47955322265625e-05, -0.001049041748046875, 0.0, -0.0032863616943359375, 0.0, -0.0008535385131835938, 0.0, -0.0003986358642578125, -0.24181842803955078, -0.000133514404296875, -0.000240325927734375, -8.20159912109375e-05, -0.000705718994140625, -3.814697265625e-06, -0.010046005249023438, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.010568618774414062, 0.0, -0.0110321044921875, 0.0, -0.003237009048461914, -8.583057933719829e-06, -0.0010814666748046875, -0.9578332901000977, -1.9073486328125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -6.4849853515625e-05, 0.0, -0.002429962158203125, -1.9073486328125e-06, -0.5449907779693604, 0.0, -0.0005474090576171875, -7.43865966796875e-05, -2.6702880859375e-05, -0.0004482269287109375, 0.0, -0.000761866569519043, -2.0265558760002023e-06, -0.34701210260391235, -1.1920928244535389e-07, -9.5367431640625e-06, -0.0002346038818359375, -0.11274147033691406, -0.001506805419921875, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, 0.0, -0.0001220703125, 0.0, -0.0031423568725585938, 0.0, -0.09336113929748535, -1.9073486328125e-06, -1.1444091796875e-05, -8.20159912109375e-05]}, {"score": -5.481253926705435, "choice_history": [59, 126, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 71, 99, 20, 92, 16, 82, 16, 82, 24, 112, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "increase_health", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if minion.card.minion_type is MINION_TYPE.TOTEM:\n                minion.increase_health(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "If", "body": [{"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole0": "Deadly Poison", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DeadlyPoison", "hole3": "use"}, "score_history": [-0.000202178955078125, -7.62939453125e-05, -3.576278118089249e-07, -4.8040190449682996e-05, -0.00010680816194508225, -0.00023695174604654312, -5.960462772236497e-07, -1.5497207641601562e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0018596649169921875, -1.33514404296875e-05, -2.1576648578047752e-05, -9.822844003792852e-05, -1.1920928244535389e-07, -0.0002976235409732908, -1.8596632799017243e-05, 0.0, -0.09229183197021484, 0.0, -0.011346697807312012, 0.0, -0.0005686283111572266, 0.0, -0.00033915042877197266, 0.0, -0.00011444091796875, -7.62939453125e-06, -1.33514404296875e-05, -3.1590458092978224e-05, -1.537799835205078e-05, -0.010641098022460938, -2.09808349609375e-05, -7.62939453125e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.876866998733021e-05, -3.24249267578125e-05, -1.9788742065429688e-05, 0.0, -0.000324249267578125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -2.94891357421875, -0.00025177001953125, -1.9073486328125e-06, 0.0, -0.00033473968505859375, -2.0384783056215383e-05, -0.012716293334960938, -2.47955322265625e-05, -0.001049041748046875, 0.0, -0.0032863616943359375, 0.0, -0.0008535385131835938, 0.0, -0.0003986358642578125, -0.24181842803955078, -0.000133514404296875, -0.000240325927734375, -8.20159912109375e-05, -0.000705718994140625, -3.814697265625e-06, -0.010046005249023438, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.010568618774414062, 0.0, -0.0110321044921875, 0.0, -0.003237009048461914, -8.583057933719829e-06, -0.0010814666748046875, -0.6935691833496094, -1.33514404296875e-05, -5.53131103515625e-05, 0.0, -0.0002040863037109375, 0.0, -0.0013904571533203125, -1.9073486328125e-06, -0.8744931221008301, 0.0, -0.001689910888671875, -5.91278076171875e-05, -2.86102294921875e-05, -0.0002727508544921875, 0.0, -0.0008637905120849609, -2.0265558760002023e-06, -0.3366357386112213, -1.1920928244535389e-07, -9.5367431640625e-06, -0.0002422332763671875, -0.09786605834960938, -0.00151824951171875, -3.4332275390625e-05, 0.0, -2.86102294921875e-05, 0.0, -0.0001277923583984375, 0.0, -0.0030927658081054688, 0.0, -0.10301995277404785, -1.9073486328125e-06, -1.1444091796875e-05, -8.392333984375e-05]}], "gold_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.weapon.base_attack += 2\n        player.hero.change_temp_attack(2)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n"}
{"beams": [{"score": -1.5406967224915604, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -1.07742440700531, 0.0, -0.0001926422119140625, -0.0034732818603515625, 0.0, -0.012506484985351562, -1.9073486328125e-06, -0.000408172607421875, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00018203258514404297, 0.0, -3.62396240234375e-05, -0.000354766845703125, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001354217529296875, -0.0041075944900512695, -2.4795384888420813e-05, -1.71661376953125e-05, -0.0058994293212890625, -0.4168663024902344, -1.9073486328125e-06, -0.00270652724429965, -0.0020487308502197266, 0.0, -9.799003601074219e-05, -5.7220458984375e-06, -5.7935030781663954e-05, 0.0, -4.9591064453125e-05, -9.1552734375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -6.198883056640625e-06, -4.172316494077677e-06, -0.007187008857727051, -1.1205610462639015e-05]}, {"score": -1.8730802356838865, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -1.3553003072738647, 0.0, -0.0011386871337890625, -0.05102062225341797, 0.0, -0.031510353088378906, -1.9073486328125e-06, -0.00026702880859375, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.00033295154571533203, 0.0, -2.6702880859375e-05, -0.0004253387451171875, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001468658447265625, -0.0040051937103271484, -2.5987455956055783e-05, -1.9073486328125e-05, -0.006317138671875, -0.4035634994506836, -1.9073486328125e-06, -0.0027141564060002565, -0.0019381046295166016, 0.0, -9.989738464355469e-05, -5.7220458984375e-06, -5.7935030781663954e-05, 0.0, -4.9591064453125e-05, -8.96453857421875e-05, -1.1444091796875e-05, -1.192074705613777e-07, -1.9073486328125e-06, -6.198883056640625e-06, -4.172316494077677e-06, -0.007190823554992676, -1.1324817933200393e-05]}, {"score": -2.3267226032718042, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -1.07742440700531, 0.0, -0.0001926422119140625, -0.0034732818603515625, 0.0, -0.012506484985351562, -1.9073486328125e-06, -0.000408172607421875, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00018203258514404297, 0.0, -3.62396240234375e-05, -0.000354766845703125, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001354217529296875, -0.0041075944900512695, -2.4795384888420813e-05, -1.71661376953125e-05, -0.0058994293212890625, -1.0819740295410156, -0.004094123840332031, -5.91278076171875e-05, -9.5367431640625e-06, -0.024251339957118034, -0.00027310848236083984, -8.58306884765625e-05, -0.0056438446044921875, -5.7220458984375e-05, -0.0034475326538085938, -3.24249267578125e-05, -0.0016193389892578125, 0.0, -0.0009100437164306641, -5.53131103515625e-05, -3.814697265625e-06, -9.5367431640625e-05, -0.008123397827148438, -1.9073486328125e-06, -0.0790414810180664, -1.71661376953125e-05, -0.0004271268844604492, -0.0001816746371332556, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.5524353734217584e-05, 0.0, -2.09808349609375e-05, -0.000118255615234375, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -8.225440979003906e-06, -3.3378546504536644e-06, -0.004549264907836914, -3.2186455882765586e-06]}, {"score": -2.54274938727562, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.0885231494903564, 0.0, -0.0002613067626953125, -0.00588226318359375, 0.0, -0.029340744018554688, -3.814697265625e-06, -0.00038909912109375, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001437664031982422, 0.0, -3.814697265625e-05, -0.000316619873046875, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.0039958953857421875, -2.443776247673668e-05, -1.71661376953125e-05, -0.0057277679443359375, -0.3889446258544922, -1.9073486328125e-06, -0.0026844735257327557, -0.0020182132720947266, 0.0, -9.78708267211914e-05, -5.7220458984375e-06, -5.733900616178289e-05, 0.0, -4.9591064453125e-05, -9.1552734375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -6.198883056640625e-06, -4.172316494077677e-06, -0.007183194160461426, -1.1205610462639015e-05]}, {"score": -2.7002168707172984, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -1.3553003072738647, 0.0, -0.0011386871337890625, -0.05102062225341797, 0.0, -0.031510353088378906, -1.9073486328125e-06, -0.00026702880859375, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.00033295154571533203, 0.0, -2.6702880859375e-05, -0.0004253387451171875, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001468658447265625, -0.0040051937103271484, -2.5987455956055783e-05, -1.9073486328125e-05, -0.006317138671875, -1.1083431243896484, -0.0040493011474609375, -5.7220458984375e-05, -9.5367431640625e-06, -0.025638101622462273, -0.00027692317962646484, -8.7738037109375e-05, -0.0055904388427734375, -5.7220458984375e-05, -0.0034389495849609375, -3.24249267578125e-05, -0.001613616943359375, 0.0, -0.0009157657623291016, -5.53131103515625e-05, -3.814697265625e-06, -9.5367431640625e-05, -0.008139610290527344, -1.9073486328125e-06, -0.07907962799072266, -1.71661376953125e-05, -0.0004271268844604492, -0.0001816746371332556, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.540514808264561e-05, 0.0, -2.09808349609375e-05, -0.000118255615234375, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -8.225440979003906e-06, -3.3378546504536644e-06, -0.0045511722564697266, -3.2186455882765586e-06]}, {"score": -2.7899067223150666, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.2573082447052, 0.0, -0.0004749298095703125, -0.02792072296142578, 0.0, -0.07325077056884766, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00019919872283935547, -1.9073486328125e-06, -3.0517578125e-05, -0.0003604888916015625, -1.1444091796875e-05, -5.7220458984375e-06, -0.000133514404296875, -0.004078865051269531, -2.491459235898219e-05, -1.71661376953125e-05, -0.0057582855224609375, -0.4011363983154297, -1.9073486328125e-06, -0.002733468310907483, -0.001974344253540039, 0.0, -9.608268737792969e-05, -5.7220458984375e-06, -5.733900616178289e-05, 0.0, -4.9591064453125e-05, -9.1552734375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -6.198883056640625e-06, -4.172316494077677e-06, -0.007196545600891113, -1.1324817933200393e-05]}, {"score": -2.9644790708942708, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.3967630863189697, -9.5367431640625e-06, -0.0001316070556640625, -0.04382514953613281, 0.0, -0.07968616485595703, -1.9073486328125e-06, -0.0001678466796875, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00020694732666015625, 0.0, -3.4332275390625e-05, -0.00030517578125, -9.5367431640625e-06, -5.7220458984375e-06, -0.000133514404296875, -0.003963470458984375, -2.527221295167692e-05, -1.71661376953125e-05, -0.0058269500732421875, -0.4143657684326172, -1.9073486328125e-06, -0.0027148716617375612, -0.0019648075103759766, 0.0, -9.608268737792969e-05, -5.7220458984375e-06, -5.757741746492684e-05, 0.0, -4.9591064453125e-05, -9.1552734375e-05, -1.1444091796875e-05, -1.1920838005607948e-07, -1.9073486328125e-06, -6.198883056640625e-06, -4.172316494077677e-06, -0.007215619087219238, -1.1324817933200393e-05]}, {"score": -3.4126578383043977, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.0885231494903564, 0.0, -0.0002613067626953125, -0.00588226318359375, 0.0, -0.029340744018554688, -3.814697265625e-06, -0.00038909912109375, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001437664031982422, 0.0, -3.814697265625e-05, -0.000316619873046875, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.0039958953857421875, -2.443776247673668e-05, -1.71661376953125e-05, -0.0057277679443359375, -1.1383256912231445, -0.004166603088378906, -6.103515625e-05, -9.5367431640625e-06, -0.023883817717432976, -0.00027501583099365234, -8.58306884765625e-05, -0.005677223205566406, -5.7220458984375e-05, -0.0034637451171875, -3.24249267578125e-05, -0.001613616943359375, 0.0, -0.0009005069732666016, -5.53131103515625e-05, -3.814697265625e-06, -9.5367431640625e-05, -0.008119583129882812, -1.9073486328125e-06, -0.07885265350341797, -1.71661376953125e-05, -0.0004290342330932617, -0.00018155542784370482, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.540514808264561e-05, 0.0, -2.09808349609375e-05, -0.000118255615234375, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -8.225440979003906e-06, -3.3378546504536644e-06, -0.004549264907836914, -3.2186455882765586e-06]}, {"score": -3.506863457203366, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -3.033665895462036, 0.0, -0.0002269744873046875, -0.0036144256591796875, 0.0, -0.017882347106933594, -1.9073486328125e-06, -0.0003681182861328125, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001609325408935547, 0.0, -4.00543212890625e-05, -0.0003452301025390625, -9.5367431640625e-06, -5.7220458984375e-06, -0.000133514404296875, -0.0040596723556518555, -2.4676177417859435e-05, -1.71661376953125e-05, -0.0058460235595703125, -0.4213829040527344, -1.9073486328125e-06, -0.0027325148694217205, -0.0020487308502197266, 0.0, -9.608268737792969e-05, -5.7220458984375e-06, -5.757741746492684e-05, 0.0, -4.9591064453125e-05, -9.1552734375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -6.198883056640625e-06, -4.172316494077677e-06, -0.007192730903625488, -1.1205610462639015e-05]}, {"score": -3.6237747482740303, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.2573082447052, 0.0, -0.0004749298095703125, -0.02792072296142578, 0.0, -0.07325077056884766, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00019919872283935547, -1.9073486328125e-06, -3.0517578125e-05, -0.0003604888916015625, -1.1444091796875e-05, -5.7220458984375e-06, -0.000133514404296875, -0.004078865051269531, -2.491459235898219e-05, -1.71661376953125e-05, -0.0057582855224609375, -1.1133508682250977, -0.004120826721191406, -5.91278076171875e-05, -9.5367431640625e-06, -0.02503502182662487, -0.00027501583099365234, -8.58306884765625e-05, -0.005675315856933594, -5.7220458984375e-05, -0.0034379959106445312, -3.24249267578125e-05, -0.0015811920166015625, 0.0, -0.0009043216705322266, -5.53131103515625e-05, -3.814697265625e-06, -9.5367431640625e-05, -0.008138656616210938, -1.9073486328125e-06, -0.07892131805419922, -1.71661376953125e-05, -0.0004290342330932617, -0.0001816746371332556, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.7431702367030084e-05, 0.0, -2.09808349609375e-05, -0.0001163482666015625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -8.225440979003906e-06, -3.3378546504536644e-06, -0.004556894302368164, -3.3378546504536644e-06]}, {"score": -3.7582566551576235, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.3967630863189697, -9.5367431640625e-06, -0.0001316070556640625, -0.04382514953613281, 0.0, -0.07968616485595703, -1.9073486328125e-06, -0.0001678466796875, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00020694732666015625, 0.0, -3.4332275390625e-05, -0.00030517578125, -9.5367431640625e-06, -5.7220458984375e-06, -0.000133514404296875, -0.003963470458984375, -2.527221295167692e-05, -1.71661376953125e-05, -0.0058269500732421875, -1.0866546630859375, -0.004082679748535156, -5.91278076171875e-05, -9.5367431640625e-06, -0.024817584082484245, -0.00027501583099365234, -8.58306884765625e-05, -0.005634307861328125, -5.7220458984375e-05, -0.0034437179565429688, -3.24249267578125e-05, -0.0015888214111328125, 0.0, -0.0009024143218994141, -5.53131103515625e-05, -3.814697265625e-06, -9.5367431640625e-05, -0.008148193359375, -1.9073486328125e-06, -0.07902336120605469, -1.71661376953125e-05, -0.0004290342330932617, -0.0001816746371332556, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.7431702367030084e-05, 0.0, -2.09808349609375e-05, -0.0001163482666015625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -8.225440979003906e-06, -3.3378546504536644e-06, -0.004556894302368164, -3.3378546504536644e-06]}, {"score": -4.279763083886195, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -3.033665895462036, 0.0, -0.0002269744873046875, -0.0036144256591796875, 0.0, -0.017882347106933594, -1.9073486328125e-06, -0.0003681182861328125, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001609325408935547, 0.0, -4.00543212890625e-05, -0.0003452301025390625, -9.5367431640625e-06, -5.7220458984375e-06, -0.000133514404296875, -0.0040596723556518555, -2.4676177417859435e-05, -1.71661376953125e-05, -0.0058460235595703125, -1.073349952697754, -0.004063606262207031, -5.91278076171875e-05, -9.5367431640625e-06, -0.02426922135055065, -0.00027120113372802734, -8.58306884765625e-05, -0.005656242370605469, -5.7220458984375e-05, -0.0034475326538085938, -3.24249267578125e-05, -0.001605987548828125, 0.0, -0.0009062290191650391, -5.53131103515625e-05, -3.814697265625e-06, -9.5367431640625e-05, -0.008131027221679688, -1.9073486328125e-06, -0.07909107208251953, -1.71661376953125e-05, -0.0004271268844604492, -0.0001816746371332556, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.5524353734217584e-05, 0.0, -2.09808349609375e-05, -0.000118255615234375, -9.5367431640625e-06, -1.1920838005607948e-07, -1.9073486328125e-06, -8.225440979003906e-06, -3.3378546504536644e-06, -0.0045549869537353516, -3.3378546504536644e-06]}, {"score": -4.731255990976791, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(3), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -1.3553003072738647, 0.0, -0.0011386871337890625, -3.01577091217041, -1.9073486328125e-06, -0.14602184295654297, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-06, 0.0, -0.000377655029296875, 0.0, -0.05646836757659912, -1.9073486328125e-06, -2.47955322265625e-05, -0.00138092041015625, 0.0, -0.00066375732421875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0003037452697753906, -1.9073486328125e-06, -2.288818359375e-05, -0.0002002716064453125, -1.1444091796875e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0021439790725708008, -1.9907914975192398e-05, -1.52587890625e-05, -0.0016880035400390625, -0.1278066635131836, -1.9073486328125e-06, -0.004687547218054533, -0.0025745630264282227, 0.0, -6.854534149169922e-05, -5.7220458984375e-06, -4.43455355707556e-05, 0.0, -4.76837158203125e-05, -9.1552734375e-05, -1.1444091796875e-05, -1.192074705613777e-07, -1.9073486328125e-06, -6.318092346191406e-06, -3.6954811548639555e-06, -0.007377743721008301, -1.0013530300057027e-05]}, {"score": -5.258998614476553, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -4.744214057922363, 0.0, -0.000255584716796875, -0.012409210205078125, -1.9073486328125e-06, -0.03476715087890625, -1.9073486328125e-06, -0.00018310546875, -3.814697265625e-06, -2.288818359375e-05, -3.814697265625e-06, -0.00034630298614501953, 0.0, -3.0517578125e-05, -0.0004100799560546875, -1.1444091796875e-05, -5.7220458984375e-06, -0.000152587890625, -0.0038918256759643555, -2.646428401931189e-05, -1.71661376953125e-05, -0.0064144134521484375, -0.43677425384521484, -1.9073486328125e-06, -0.0027549259830266237, -0.0020182132720947266, 0.0, -9.810923802433535e-05, -5.7220458984375e-06, -5.853105540154502e-05, 0.0, -4.9591064453125e-05, -8.96453857421875e-05, -1.1444091796875e-05, -1.1920838005607948e-07, -1.9073486328125e-06, -6.198883056640625e-06, -4.172316494077677e-06, -0.007198452949523926, -1.1324817933200393e-05]}, {"score": -5.373508078033268, "choice_history": [59, 124, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fire", " ", "Elemental", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 52, 172, 154, "combo", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, combo=Battlecry(Damage(3), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "FireElemental", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -0.004971523303538561, -0.00010692501382436603, -1.8715856640483253e-05, -3.575551090762019e-07, -2.6702880859375e-05, -4.768370445162873e-07, -3.814697265625e-06, -4.57763671875e-05, -5.14984130859375e-05, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, -1.3589840818895027e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -4.5508379116654396e-05, -1.6689286894688848e-06, -0.000988006591796875, -0.000152587890625, -1.52587890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -1.3553003072738647, 0.0, -0.0011386871337890625, -0.05102062225341797, 0.0, -3.5701217651367188, 0.0, -0.000125885009765625, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.000603795051574707, 0.0, -2.47955322265625e-05, -0.0006275177001953125, -1.33514404296875e-05, -5.7220458984375e-06, -0.0001544952392578125, -0.003658890724182129, -2.527221295167692e-05, -1.71661376953125e-05, -0.0054759979248046875, -0.3661670684814453, -1.9073486328125e-06, -0.0027084345929324627, -0.0020771026611328125, 0.0, -9.40561294555664e-05, -5.7220458984375e-06, -5.900787436985411e-05, 0.0, -4.76837158203125e-05, -8.96453857421875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -6.198883056640625e-06, -4.172316494077677e-06, -0.007125973701477051, -1.1205610462639015e-05]}], "gold_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}
{"beams": [{"score": -0.49745469652196306, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Gnomish", " ", "Inventor", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Gnomish Inventor", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -0.49005794525146484, -2.09808349609375e-05, -0.0002574920654296875, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.2755313036905136e-05, -7.843971252441406e-05, -1.311301275563892e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.789497739286162e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, 0.0, -2.622604142743512e-06, -1.3470649719238281e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.0001373291015625, -0.0001964569091796875, -1.9073486328125e-06, -0.000423431396484375, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -5.1021124818362296e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.002704620361328125, -1.9073486328125e-06, -0.0017836252227425575, -5.125993993715383e-06, -0.00014495849609375, -1.9073486328125e-06, -4.0650345908943564e-05, -0.0002536773681640625, 0.0, -3.898143404512666e-05, -1.9073486328125e-06, -0.00041691644582897425, 0.0, -1.52587890625e-05, -4.9591064453125e-05, -4.00543212890625e-05, -1.1919473763555288e-07, -1.1444091796875e-05, -1.5497195136049413e-06, -5.960462772236497e-07, -1.1920928244535389e-07, 0.0]}, {"score": -1.5370054598638276, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -0.04708874225616455, 0.0, -0.0007839202880859375, -1.71661376953125e-05, -0.0026493072509765625, -2.288818359375e-05, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -0.0009816884994506836, -0.00016295909881591797, -0.043778419494628906, -0.07233047485351562, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.06905388832092285, -0.0015611648559570312, -2.300739288330078e-05, 0.0, -0.1216268539428711, -0.04768943786621094, -9.5367431640625e-06, -0.04262876138091087, -3.0517578125e-05, 0.0]}, {"score": -4.681619921735042, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.6229496002197266, 0.0, -1.9073486328125e-05, -2.2649765014648438e-06, -2.3841855067985307e-07, -1.1920926823449918e-07, 0.0]}, {"score": -4.742502457785555, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Minion", "Summoned", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(MinionSummoned(IsType(MINION_TYPE.\n            MURLOC)), PlayerSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSummoned"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -0.04708874225616455, 0.0, -0.0007839202880859375, -1.71661376953125e-05, -0.0026493072509765625, -2.288818359375e-05, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -0.0009816884994506836, -0.00016295909881591797, -0.043778419494628906, -0.07233047485351562, -0.00011444091796875, -1.9073486328125e-06, 0.0, -2.7311620712280273, -0.5098371505737305, -0.0009400838753208518, -2.288818359375e-05, -0.008053779602050781, -0.0014133453369140625, -1.9073486328125e-06, 0.0, -0.008056847378611565, -0.0031217336654663086, -9.775161743164062e-06, -3.814697265625e-05, -9.1552734375e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0015412569046020508, 0.0, -0.13385212421417236, -1.9073486328125e-06, -0.001834869384765625, -1.1444091796875e-05, -0.08803391456604004, -6.67572021484375e-05, 0.0]}, {"score": -4.988426895560657, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(Draw(), ActionTag(Draw(),\n            PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -0.04708874225616455, 0.0, -0.0007839202880859375, -1.71661376953125e-05, -0.0026493072509765625, -2.288818359375e-05, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -0.0009816884994506836, -0.00016295909881591797, -0.043778419494628906, -2.662886619567871, -1.9073486328125e-06, -0.15308904647827148, -0.006128549575805664, -0.3500709533691406, -0.0005588531494140625, -5.7220458984375e-06, -7.62939453125e-06, -0.3888685703277588, -0.025495529174804688, -2.110004425048828e-05, -0.04590415954589844, -0.08857250213623047, -1.9073486328125e-06, -0.0842018648982048, -3.075577114941552e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.000535130500793457, -7.43865966796875e-05, 0.0]}, {"score": -5.456988135326789, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -4.368905067443848, 0.0, -0.0005588531494140625, -5.7220458984375e-06, -0.0011157989501953125, 0.0]}, {"score": -5.457843442305126, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 48, 117, "4", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Spell", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(ChangeAttack(4), GreaterThan(Count\n            (CardSelector(condition=IsSpell())), picker=RandomPicker()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsSpell"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -0.04708874225616455, 0.0, -0.0007839202880859375, -1.71661376953125e-05, -0.0026493072509765625, -2.288818359375e-05, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -0.0009816884994506836, -0.00016295909881591797, -0.043778419494628906, -0.07233047485351562, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.06905388832092285, -0.0015611648559570312, -2.300739288330078e-05, 0.0, -2.251951217651367, -7.62939453125e-06, -0.11884737014770508, 0.0, -0.08566093444824219, -0.014437675476074219, -9.5367431640625e-05, 0.0, -0.04315304756164551, -0.0017606019973754883, -9.5367431640625e-06, -5.7220458984375e-06, -0.05679798126220703, -9.5367431640625e-05, 0.0, 0.0, -0.005213255062699318, -3.814697265625e-06, -1.9073486328125e-06, -0.08935356140136719, -0.02233600616455078, -3.814697265625e-06, 0.0, -0.00530437845736742, -0.0017833709716796875, 0.0, -0.0006103515625, -1.71661376953125e-05, -0.3090333938598633, 0.0, -0.0002231597900390625, 0.0, -0.1280619204044342, -0.013422897085547447, -0.000217437744140625, -0.0003643035888671875, -3.814697265625e-06, -0.07758426666259766, 0.0, -0.0001392364501953125, 0.0, -0.9051394462585449, -0.0011812279699370265, -1.9073486328125e-06]}, {"score": -5.609210429454357, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Draw", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            Draw()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -0.04708874225616455, 0.0, -0.0007839202880859375, -1.71661376953125e-05, -0.0026493072509765625, -2.288818359375e-05, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -0.0009816884994506836, -0.00016295909881591797, -0.043778419494628906, -0.07233047485351562, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.06905388832092285, -0.0015611648559570312, -2.300739288330078e-05, 0.0, -0.1216268539428711, -3.066957473754883, -0.031711578369140625, -7.62939453125e-06, 0.0, -0.008175093680620193, -4.1961669921875e-05, -3.814697265625e-06, -0.0018367767333984375, -0.7217369079589844, -3.24249267578125e-05, -0.33179420232772827, -0.0002653596457093954]}, {"score": -5.780540598529548, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -0.04708874225616455, 0.0, -0.0007839202880859375, -1.71661376953125e-05, -0.0026493072509765625, -2.288818359375e-05, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -0.0009816884994506836, -0.00016295909881591797, -0.043778419494628906, -0.07233047485351562, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.06905388832092285, -0.0015611648559570312, -2.300739288330078e-05, 0.0, -0.1216268539428711, -3.066957473754883, -0.031711578369140625, -7.62939453125e-06, 0.0, -0.008175093680620193, -4.1961669921875e-05, -3.814697265625e-06, -0.0018367767333984375, -0.8378763198852539, -0.0001621246337890625, -1.9073486328125e-06, 0.0, -0.036430735141038895, -0.01616775617003441, -1.4662741705251392e-05, -1.52587890625e-05, -3.0517578125e-05, -1.52587890625e-05, -2.86102294921875e-05, 0.0, -0.0018695592880249023, 0.0, -0.3325444459915161, -1.9073486328125e-06]}, {"score": -5.792632022846625, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, spell_targetable=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -4.638423919677734, 0.0, -0.0016012191772460938, -4.76837158203125e-05, -0.06615650653839111, 0.0]}, {"score": -6.303529063213752, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, spell_damage=1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -5.213847637176514, -1.9073486328125e-06, -0.003276824951171875]}, {"score": -6.514183334281803, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 166, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Spell", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(ChangeAttack(1), SelfSelector(),\n            GreaterThan(Count(CardSelector(condition=IsSpell())), picker=\n            RandomPicker()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsSpell"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -0.04708874225616455, 0.0, -0.0007839202880859375, -1.71661376953125e-05, -0.0026493072509765625, -2.288818359375e-05, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -0.0009816884994506836, -0.00016295909881591797, -3.2238540649414062, -0.002445220947265625, -0.000232696533203125, -3.814697265625e-06, -3.814697265625e-06, -0.010482607409358025, -0.0015236139297485352, -2.09808349609375e-05, 0.0, -0.09853744506835938, -0.00034332275390625, -2.6702880859375e-05, -0.009326777420938015, -5.340576171875e-05, 0.0, -0.000164031982421875, -0.0952920913696289, -5.53131103515625e-05, 0.0, -0.012634515762329102, -0.003290534019470215, 0.0, -7.62939453125e-06, -0.19768333435058594, -0.000461578369140625, 0.0, 0.0, -0.0014233586844056845, 0.0, -7.62939453125e-06, -0.19771385192871094, -0.0023946762084960938, -7.62939453125e-06, 0.0, -0.007214789278805256, -0.0013980865478515625, 0.0, -0.0006313323974609375, -1.33514404296875e-05, -0.40668582916259766, -1.9073486328125e-06, -0.0003337860107421875, 0.0, -0.10959017276763916, -0.011578364297747612, -0.0002689361572265625, -0.0003662109375, -5.7220458984375e-06, -0.07795906066894531, 0.0, -0.0001678466796875, 0.0, -0.9008129835128784, -0.001005356665700674, -1.9073486328125e-06]}, {"score": -6.8949918020257215, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, battlecry=Deathrattle(Draw(), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -5.6842265129089355, 0.0, -0.018357276916503906, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0027920007705688477, 0.0, -0.0040225982666015625, -0.08699989318847656, -9.5367431640625e-06, -0.004586942493915558, -4.0531158447265625e-06, -0.00656890869140625, -1.9073486328125e-06, -0.0006704330444335938, -0.000335693359375, 0.0]}, {"score": -8.152106085766242, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -1.0557785034179688, -5.7220458984375e-06, -8.583032467868179e-06, -1.9788742065429688e-05, -4.172325134277344e-06, -1.52587890625e-05, -0.0013071805005893111, -3.814697265625e-06, -0.0002117156982421875, -1.9073486328125e-05, -0.0007351594395004213, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -0.0001065694450517185, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.027418136596679688, 0.0, -1.1920928244535389e-07, -9.655952453613281e-06, -1.1920928244535389e-07, -1.668868208071217e-06, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -7.064587593078613, 0.0, -0.000186920166015625, -7.62939453125e-06, -0.0009212493896484375, 0.0]}, {"score": -8.162290421479582, "choice_history": [59, 124, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 20, 92, 34, 139, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 161, 13, 164, 48, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON) < 0\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Gnomish Inventor", "hole3": "COMMON"}, "ops": [{"_type": "Lt"}]}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "GnomishInventor", "hole3": "create_minion"}, "score_history": [-9.5367431640625e-06, -0.00014495849609375, -3.087478398811072e-05, -7.784063927829266e-05, -1.549711487314198e-05, 0.0, -7.748603820800781e-06, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -6.237196445465088, -0.9027299880981445, -0.35823631286621094, -0.0005168914794921875, -4.494097447604872e-05, -2.7418136596679688e-05, -7.748603820800781e-06, -5.7220458984375e-06, -0.0015637599863111973, 0.0, -0.00010764598846435547, -1.33514404296875e-05, -0.0003012414090335369, -1.9073486328125e-06, -0.1382150650024414, -0.46433258056640625, -0.012673377990722656, -0.02080535888671875, 0.0, -0.02045464515686035, 0.0, -8.58306884765625e-05, 0.0, -1.573560803080909e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.0046024322509765625, -1.192074705613777e-07, -3.814697265625e-06, -2.0265579223632812e-06, -2.3841855067985307e-07, 0.0, 0.0]}], "gold_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}
{"beams": [{"score": -1.2733284597611316, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -0.2361621856689453, 0.0, -0.01375877857208252, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.0001163482666015625, -1.6808508007670753e-05, -0.0005418062210083008, -0.4081916809082031, -2.86102294921875e-05, -3.4332275390625e-05, -0.0003261566162109375, -1.33514404296875e-05, -2.0623123418772593e-05, -0.0002765655517578125, -7.474422454833984e-05, 0.0, -0.0009860992431640625, -4.57763671875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.0004405975341796875, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.02515697479248047, -3.814697265625e-06, -0.0001220703125, -2.6702880859375e-05, -7.2479248046875e-05, 0.0, -0.0047550201416015625, 0.0, -0.0082169771194458, 0.0, -0.0031970739364624023, -0.00027370452880859375, -5.7220458984375e-06, -0.09414863586425781, -7.43865966796875e-05, -5.7220458984375e-06, -0.0007457733154296875, -0.0001239776611328125, -7.62939453125e-06, -1.9073486328125e-06, -0.0002460479736328125, 0.0, -0.03252601623535156, -1.9073486328125e-06, -0.39353954792022705, -0.0020895004272460938, -1.33514404296875e-05, -0.04362297058105469]}, {"score": -1.8450460795115475, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -0.2361621856689453, 0.0, -0.01375877857208252, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.0001163482666015625, -1.6808508007670753e-05, -0.0005418062210083008, -1.1033210754394531, -1.33514404296875e-05, -5.14984130859375e-05, -0.0001087188720703125, -1.1444091796875e-05, -3.147105235257186e-05, -0.0001926422119140625, -2.1576881408691406e-05, 0.0, -0.001255035400390625, -4.76837158203125e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.000274658203125, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -0.2856712341308594, -4.57763671875e-05, -3.814697265625e-06, 0.0, -0.002586960792541504, -0.00012338158558122814, -0.017098426818847656, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.003922462463378906, 0.0, -0.0001220703125, -0.014301300048828125, -0.0148162841796875, -7.62939453125e-06, 0.0, -5.817413330078125e-05, -1.7523765563964844e-05, -0.007386207580566406, -9.5367431640625e-06, -5.7220458984375e-06, -0.13929080963134766]}, {"score": -2.0738226537918933, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_armor", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -0.2361621856689453, 0.0, -0.01375877857208252, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.0001163482666015625, -1.6808508007670753e-05, -0.0005418062210083008, -0.4081916809082031, -2.86102294921875e-05, -3.4332275390625e-05, -0.0003261566162109375, -1.33514404296875e-05, -2.0623123418772593e-05, -0.0002765655517578125, -7.474422454833984e-05, 0.0, -0.0009860992431640625, -4.57763671875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.0004405975341796875, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.02515697479248047, -3.814697265625e-06, -0.0001220703125, -2.6702880859375e-05, -7.2479248046875e-05, 0.0, -0.0047550201416015625, 0.0, -0.0082169771194458, 0.0, -0.0031970739364624023, -0.00027370452880859375, -5.7220458984375e-06, -0.09414863586425781, -7.43865966796875e-05, -5.7220458984375e-06, -0.0007457733154296875, -0.0001239776611328125, -7.62939453125e-06, -1.9073486328125e-06, -0.0002460479736328125, 0.0, -0.03252601623535156, -1.9073486328125e-06, -1.1757670640945435, -0.0043697357177734375, -3.24249267578125e-05, -0.05959033966064453]}, {"score": -3.011380231762331, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -2.053457260131836, 0.0, -0.07723140716552734, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0006256103515625, -1.9073486328125e-05, -0.000110626220703125, -1.859664735093247e-05, -0.0005246400833129883, -0.3913908004760742, -1.1444091796875e-05, -5.14984130859375e-05, -0.0001983642578125, -1.1444091796875e-05, -2.992136069224216e-05, -0.000209808349609375, -2.1457672119140625e-05, 0.0, -0.0010223388671875, -4.76837158203125e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.000278472900390625, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -0.28110504150390625, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -0.002960801124572754, -0.00011777874897234142, -0.017312049865722656, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.000247955322265625, 0.0, -0.0038623809814453125, 0.0, -0.0001201629638671875, -0.0142822265625, -0.014719963073730469, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.7523765563964844e-05, -0.00749969482421875, -9.5367431640625e-06, -5.7220458984375e-06, -0.14081192016601562]}, {"score": -3.5742166404938587, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 57, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -0.2361621856689453, 0.0, -0.01375877857208252, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.0001163482666015625, -1.6808508007670753e-05, -0.0005418062210083008, -0.4081916809082031, -2.86102294921875e-05, -3.4332275390625e-05, -0.0003261566162109375, -1.33514404296875e-05, -2.0623123418772593e-05, -0.0002765655517578125, -7.474422454833984e-05, 0.0, -0.0009860992431640625, -4.57763671875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.0004405975341796875, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.02515697479248047, -3.814697265625e-06, -0.0001220703125, -2.6702880859375e-05, -7.2479248046875e-05, 0.0, -0.0047550201416015625, 0.0, -0.0082169771194458, 0.0, -0.0031970739364624023, -0.00027370452880859375, -5.7220458984375e-06, -2.697871208190918, -0.010211944580078125, -7.62939453125e-06, -0.0013523101806640625, -2.288818359375e-05, -1.52587890625e-05, 0.0, -0.0001926422119140625, 0.0, -0.02584362030029297, -1.9073486328125e-06, -0.09362530708312988, -0.009061813354492188, -1.33514404296875e-05, -0.029815673828125]}, {"score": -3.594109094524782, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -0.2361621856689453, 0.0, -0.01375877857208252, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.0001163482666015625, -1.6808508007670753e-05, -0.0005418062210083008, -1.1033210754394531, -1.33514404296875e-05, -5.14984130859375e-05, -0.0001087188720703125, -1.1444091796875e-05, -3.147105235257186e-05, -0.0001926422119140625, -2.1576881408691406e-05, 0.0, -0.001255035400390625, -4.76837158203125e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.000274658203125, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -2.0744447708129883, -7.62939453125e-06, -0.00016021728515625, -2.6702880859375e-05, -0.0001087188720703125, 0.0, -0.01171875, 0.0, -0.008004307746887207, 0.0, -0.005324125289916992, -0.001468658447265625, -5.7220458984375e-06, -0.13357162475585938]}, {"score": -3.874671137853028, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -2.053457260131836, 0.0, -0.07723140716552734, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0006256103515625, -1.9073486328125e-05, -0.000110626220703125, -1.859664735093247e-05, -0.0005246400833129883, -1.1366329193115234, -1.71661376953125e-05, -3.4332275390625e-05, -0.0004711151123046875, -1.52587890625e-05, -1.6927657270571217e-05, -0.0002880096435546875, -7.271766662597656e-05, 0.0, -0.0008373260498046875, -4.57763671875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.0004425048828125, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.01748943328857422, -3.814697265625e-06, -0.000118255615234375, -2.47955322265625e-05, -7.43865966796875e-05, 0.0, -0.0038614273071289062, 0.0, -0.00801098346710205, 0.0, -0.0031626224517822266, -0.000263214111328125, -5.7220458984375e-06, -0.09362983703613281, -7.62939453125e-05, -5.7220458984375e-06, -0.0007534027099609375, -0.0001239776611328125, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003032684326171875, 0.0, -0.03304576873779297, -3.814697265625e-06, -0.3950749635696411, -0.00199127197265625, -1.33514404296875e-05, -0.04293251037597656]}, {"score": -4.296057737226391, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 164, 57], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template19"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -0.2361621856689453, 0.0, -0.01375877857208252, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.0001163482666015625, -1.6808508007670753e-05, -0.0005418062210083008, -1.1033210754394531, -1.33514404296875e-05, -5.14984130859375e-05, -0.0001087188720703125, -1.1444091796875e-05, -3.147105235257186e-05, -0.0001926422119140625, -2.1576881408691406e-05, 0.0, -0.001255035400390625, -4.76837158203125e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.000274658203125, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -0.2856712341308594, -4.57763671875e-05, -3.814697265625e-06, 0.0, -0.002586960792541504, -0.00012338158558122814, -0.017098426818847656, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.003922462463378906, 0.0, -0.0001220703125, -0.014301300048828125, -0.0148162841796875, -7.62939453125e-06, 0.0, -5.817413330078125e-05, -1.7523765563964844e-05, -0.007386207580566406, -9.5367431640625e-06, -5.7220458984375e-06, -2.5903024673461914]}, {"score": -4.67017093948877, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_armor", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -2.053457260131836, 0.0, -0.07723140716552734, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0006256103515625, -1.9073486328125e-05, -0.000110626220703125, -1.859664735093247e-05, -0.0005246400833129883, -1.1366329193115234, -1.71661376953125e-05, -3.4332275390625e-05, -0.0004711151123046875, -1.52587890625e-05, -1.6927657270571217e-05, -0.0002880096435546875, -7.271766662597656e-05, 0.0, -0.0008373260498046875, -4.57763671875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.0004425048828125, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.01748943328857422, -3.814697265625e-06, -0.000118255615234375, -2.47955322265625e-05, -7.43865966796875e-05, 0.0, -0.0038614273071289062, 0.0, -0.00801098346710205, 0.0, -0.0031626224517822266, -0.000263214111328125, -5.7220458984375e-06, -0.09362983703613281, -7.62939453125e-05, -5.7220458984375e-06, -0.0007534027099609375, -0.0001239776611328125, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003032684326171875, 0.0, -0.03304576873779297, -3.814697265625e-06, -1.1722384691238403, -0.004451751708984375, -3.24249267578125e-05, -0.05878925323486328]}, {"score": -4.675061738960238, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -0.2361621856689453, 0.0, -0.01375877857208252, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.0001163482666015625, -1.6808508007670753e-05, -0.0005418062210083008, -0.4081916809082031, -2.86102294921875e-05, -3.4332275390625e-05, -0.0003261566162109375, -1.33514404296875e-05, -2.0623123418772593e-05, -0.0002765655517578125, -7.474422454833984e-05, 0.0, -0.0009860992431640625, -4.57763671875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.0004405975341796875, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -3.7647628784179688, -0.0001964569091796875, -3.814697265625e-06, 0.0, -0.0011914968490600586, -0.000304937333567068, -0.038776397705078125, 0.0, -8.20159912109375e-05, 0.0, -0.0001926422119140625, 0.0, -0.0016918182373046875, 0.0, -0.0001277923583984375, -0.006328582763671875, -0.01643085479736328, -1.9073486328125e-05, 0.0, -6.306171417236328e-05, -4.0650367736816406e-05, -0.005855202674865723, -2.09808349609375e-05, -7.62939453125e-06, -0.13157081604003906, -3.62396240234375e-05, -1.9073486328125e-06, -0.0007915496826171875, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.00014495849609375, 0.0, -0.011859893798828125, 0.0, -0.013735771179199219, -0.00214385986328125, -1.33514404296875e-05, -0.0142974853515625]}, {"score": -4.822768485957084, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -2.053457260131836, 0.0, -0.07723140716552734, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0006256103515625, -1.9073486328125e-05, -0.000110626220703125, -1.859664735093247e-05, -0.0005246400833129883, -0.3913908004760742, -1.1444091796875e-05, -5.14984130859375e-05, -0.0001983642578125, -1.1444091796875e-05, -2.992136069224216e-05, -0.000209808349609375, -2.1457672119140625e-05, 0.0, -0.0010223388671875, -4.76837158203125e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.000278472900390625, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -2.1340808868408203, -7.62939453125e-06, -0.0001583099365234375, -2.47955322265625e-05, -0.000125885009765625, 0.0, -0.011755943298339844, 0.0, -0.007791638374328613, 0.0, -0.005362153053283691, -0.0014820098876953125, -5.7220458984375e-06, -0.13385868072509766]}, {"score": -4.875148928548214, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 164, 55], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -3.8821239471435547, 0.0, -0.029976963996887207, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000713348388671875, -1.9073486328125e-05, -0.0001506805419921875, -1.4781950994802173e-05, -0.0006200075149536133, -0.4513063430786133, -1.1444091796875e-05, -5.340576171875e-05, -0.000171661376953125, -9.5367431640625e-06, -2.992136069224216e-05, -0.000232696533203125, -2.1457672119140625e-05, 0.0, -0.00112152099609375, -4.76837158203125e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.000270843505859375, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -0.30286693572998047, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -0.0029560327529907227, -0.00011777874897234142, -0.01720714569091797, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.0038576126098632812, 0.0, -0.0001201629638671875, -0.014402389526367188, -0.014575958251953125, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.7523765563964844e-05, -0.007487297058105469, -9.5367431640625e-06, -5.7220458984375e-06, -0.1413421630859375]}, {"score": -5.043224091435576, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 164, 48, 117, "4", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Num", "n": 4}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -0.2361621856689453, 0.0, -0.01375877857208252, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.0001163482666015625, -1.6808508007670753e-05, -0.0005418062210083008, -1.1033210754394531, -1.33514404296875e-05, -5.14984130859375e-05, -0.0001087188720703125, -1.1444091796875e-05, -3.147105235257186e-05, -0.0001926422119140625, -2.1576881408691406e-05, 0.0, -0.001255035400390625, -4.76837158203125e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.000274658203125, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -0.2856712341308594, -4.57763671875e-05, -3.814697265625e-06, 0.0, -0.002586960792541504, -0.00012338158558122814, -0.017098426818847656, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.003922462463378906, 0.0, -0.0001220703125, -0.014301300048828125, -0.0148162841796875, -7.62939453125e-06, 0.0, -5.817413330078125e-05, -1.7523765563964844e-05, -0.007386207580566406, -9.5367431640625e-06, -5.7220458984375e-06, -3.279510498046875, -3.24249267578125e-05, -0.05791826918721199, -7.62939453125e-06]}, {"score": -5.119507825872887, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 48, 117, "4", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -0.2361621856689453, 0.0, -0.01375877857208252, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.0001163482666015625, -1.6808508007670753e-05, -0.0005418062210083008, -0.4081916809082031, -2.86102294921875e-05, -3.4332275390625e-05, -0.0003261566162109375, -1.33514404296875e-05, -2.0623123418772593e-05, -0.0002765655517578125, -7.474422454833984e-05, 0.0, -0.0009860992431640625, -4.57763671875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.0004405975341796875, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.02515697479248047, -3.814697265625e-06, -0.0001220703125, -2.6702880859375e-05, -7.2479248046875e-05, 0.0, -0.0047550201416015625, 0.0, -0.0082169771194458, 0.0, -0.0031970739364624023, -0.00027370452880859375, -5.7220458984375e-06, -0.09414863586425781, -7.43865966796875e-05, -5.7220458984375e-06, -0.0007457733154296875, -0.0001239776611328125, -7.62939453125e-06, -1.9073486328125e-06, -0.0002460479736328125, 0.0, -0.03252601623535156, -1.9073486328125e-06, -0.39353954792022705, -0.0020895004272460938, -1.33514404296875e-05, -3.327241897583008, -7.62939453125e-06, -0.5625413656234741, -1.1444091796875e-05]}, {"score": -5.433367884657372, "choice_history": [59, 126, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 48, 117, "2", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Num", "n": 2}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 2, "_type": "Template3", "hole0": "Heroic Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HeroicStrike", "hole3": "use"}, "score_history": [-3.62396240234375e-05, -7.05718994140625e-05, -7.152531907195225e-06, -0.0005448763840831816, -0.000792374718002975, -1.8554506823420525e-05, -4.768371127283899e-06, -1.0371208190917969e-05, -3.814697265625e-06, -4.57763671875e-05, -9.34600830078125e-05, -0.000598907470703125, -5.91278076171875e-05, -5.638440416078083e-05, -0.00022792816162109375, -2.3841855067985307e-07, -0.00010693073272705078, -2.8132995794294402e-05, -1.1444091796875e-05, -0.2361621856689453, 0.0, -0.01375877857208252, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.0001163482666015625, -1.6808508007670753e-05, -0.0005418062210083008, -0.4081916809082031, -2.86102294921875e-05, -3.4332275390625e-05, -0.0003261566162109375, -1.33514404296875e-05, -2.0623123418772593e-05, -0.0002765655517578125, -7.474422454833984e-05, 0.0, -0.0009860992431640625, -4.57763671875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.0004405975341796875, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.02515697479248047, -3.814697265625e-06, -0.0001220703125, -2.6702880859375e-05, -7.2479248046875e-05, 0.0, -0.0047550201416015625, 0.0, -0.0082169771194458, 0.0, -0.0031970739364624023, -0.00027370452880859375, -5.7220458984375e-06, -0.09414863586425781, -7.43865966796875e-05, -5.7220458984375e-06, -0.0007457733154296875, -0.0001239776611328125, -7.62939453125e-06, -1.9073486328125e-06, -0.0002460479736328125, 0.0, -0.03252601623535156, -1.9073486328125e-06, -0.39353954792022705, -0.0020895004272460938, -1.33514404296875e-05, -3.327241897583008, -7.62939453125e-06, -0.8763036727905273, -0.00010919570922851562]}], "gold_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n"}
{"beams": [{"score": -0.691315546859613, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -0.6861177682876587, -1.9073486328125e-06, -0.0002727508544921875, 0.0, -5.841255187988281e-06, 0.0, -0.0006078471196815372, 0.0, 0.0, -1.33514404296875e-05, -0.0019006729125976562, 0.0, -9.536738616588991e-07, -2.2649765014648438e-06, 0.0, -7.247873145388439e-05, 0.0, -0.00016021728515625, -5.7220458984375e-06, -0.0008736848831176758, -1.71661376953125e-05, -8.58306884765625e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -1.8628249328271238, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -1.855737328529358, -1.9073486328125e-06, -0.0006465911865234375, 0.0, -5.7220458984375e-06, 0.0, -0.001138567109592259, 0.0, 0.0, -1.1444091796875e-05, -0.002872467041015625, 0.0, -9.536738616588991e-07, -2.2649765014648438e-06, 0.0, -6.890307849971578e-05, 0.0, -0.0001888275146484375, -5.7220458984375e-06, -0.0008641481399536133, -1.71661376953125e-05, -8.58306884765625e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -2.3883980671621146, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -2.3825531005859375, 0.0, -0.0003185272216796875, 0.0, -5.7220458984375e-06, 0.0, -0.0007715219398960471, 0.0, 0.0, -1.33514404296875e-05, -0.0022134780883789062, 0.0, -9.536738616588991e-07, -2.2649765014648438e-06, 0.0, -7.164457201724872e-05, 0.0, -0.0002536773681640625, -5.7220458984375e-06, -0.0009118318557739258, -1.71661376953125e-05, -8.20159912109375e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -2.406247154578722, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "WARLOCK", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -2.4005913734436035, -1.71661376953125e-05, -0.0002956390380859375, 0.0, -3.814697265625e-06, 0.0, -0.0010098213097080588, 0.0, 0.0, -1.52587890625e-05, -0.0017852783203125, 0.0, -9.536738616588991e-07, -2.3841855636419496e-06, 0.0, -7.224032015074044e-05, 0.0, -0.00022125244140625, -7.62939453125e-06, -0.0009461641311645508, -1.71661376953125e-05, -8.392333984375e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -2.579612747739219, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -2.57371187210083, -1.9073486328125e-06, -0.00019073486328125, 0.0, -5.841255187988281e-06, 0.0, -0.0007895224844105542, 0.0, 0.0, -1.1444091796875e-05, -0.00241851806640625, 0.0, -9.536738616588991e-07, -2.2649765014648438e-06, 0.0, -7.224058208521456e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0008984804153442383, -1.71661376953125e-05, -8.20159912109375e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -3.536025301460853, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -3.5299558639526367, -4.00543212890625e-05, -9.918212890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0011097185779362917, 0.0, 0.0, -1.33514404296875e-05, -0.0023374557495117188, 0.0, -1.0728830375228426e-06, -2.2649765014648438e-06, 0.0, -7.033322617644444e-05, 0.0, -0.0002079010009765625, -7.62939453125e-06, -0.0008965730667114258, -1.71661376953125e-05, -8.392333984375e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -4.171894446570349, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -4.165458679199219, 0.0, -0.001178741455078125, 0.0, -5.7220458984375e-06, 0.0, -0.0010040993802249432, 0.0, 0.0, -1.33514404296875e-05, -0.0017185211181640625, 0.0, -9.536738616588991e-07, -2.3841855636419496e-06, 0.0, -7.593554619234055e-05, 0.0, -0.0002307891845703125, -7.62939453125e-06, -0.0009213685989379883, -1.71661376953125e-05, -8.20159912109375e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -5.126052872454437, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -5.1201019287109375, 0.0, -0.000118255615234375, 0.0, -3.814697265625e-06, 0.0, -0.0010998245561495423, 0.0, 0.0, -1.33514404296875e-05, -0.0022220611572265625, 0.0, -9.536738616588991e-07, -2.3841855636419496e-06, 0.0, -7.331337837968022e-05, 0.0, -0.0002231597900390625, -5.7220458984375e-06, -0.0009118318557739258, -1.71661376953125e-05, -8.20159912109375e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -5.400195614058447, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -5.394408702850342, 0.0, -0.000179290771484375, 0.0, -5.7220458984375e-06, 0.0, -0.000873684068210423, 0.0, 0.0, -1.33514404296875e-05, -0.0022735595703125, 0.0, -9.536738616588991e-07, -2.3841855636419496e-06, 0.0, -7.438617467414588e-05, 0.0, -0.000209808349609375, -5.7220458984375e-06, -0.0008679628372192383, -1.71661376953125e-05, -8.58306884765625e-05, -3.24249267578125e-05, -3.0517578125e-05, -5.7220458984375e-06]}, {"score": -6.626903550017545, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "weapon", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.weapon,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "weapon", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -6.620238780975342, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0011129372287541628, 0.0, 0.0, -1.1444091796875e-05, -0.0030164718627929688, 0.0, -1.0728830375228426e-06, -2.2649765014648438e-06, 0.0, -6.544598727487028e-05, 0.0, -0.0002193450927734375, -5.7220458984375e-06, -0.0008507966995239258, -1.71661376953125e-05, -8.392333984375e-05, -3.0517578125e-05, -3.0517578125e-05, -5.7220458984375e-06]}, {"score": -6.750258104477638, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "Summon", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.Summon,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "Summon", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -6.741907596588135, 0.0, -0.0024890899658203125, 0.0, -3.814697265625e-06, 0.0, -0.0007236001547425985, 0.0, 0.0, -1.1444091796875e-05, -0.002704620361328125, 0.0, -1.0728830375228426e-06, -2.2649765014648438e-06, 0.0, -7.200231630122289e-05, 0.0, -0.000194549560546875, -5.7220458984375e-06, -0.0008698701858520508, -1.52587890625e-05, -8.0108642578125e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -6.787719385707959, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.1,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "1", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -6.780229568481445, 0.0, -0.00057220458984375, 0.0, -3.814697265625e-06, 0.0, -0.0014867782592773438, 0.0, 0.0, -1.33514404296875e-05, -0.0029277801513671875, 0.0, -9.536738616588991e-07, -2.2649765014648438e-06, 0.0, -7.331379310926422e-05, 0.0, -0.0002593994140625, -5.7220458984375e-06, -0.0008641481399536133, -1.71661376953125e-05, -8.392333984375e-05, -3.24249267578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -7.018106357655114, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "Kill", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.Kill,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "Kill", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -7.011495113372803, 0.0, -0.0006694793701171875, 0.0, -3.814697265625e-06, 0.0, -0.0006932016694918275, 0.0, 0.0, -1.1444091796875e-05, -0.0027837753295898438, 0.0, -9.536738616588991e-07, -2.2649765014648438e-06, 0.0, -7.319445285247639e-05, 0.0, -0.00022125244140625, -5.7220458984375e-06, -0.0008698701858520508, -1.71661376953125e-05, -8.20159912109375e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -7.182368532378256, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -7.176374912261963, 0.0, -0.0004012584686279297, 0.0, -5.7220458984375e-06, 0.0, -0.0008046618895605206, 0.0, 0.0, -1.33514404296875e-05, -0.002285003662109375, -1.1920928244535389e-07, -1.0728830375228426e-06, -2.2649765014648438e-06, 0.0, -7.271724462043494e-05, 0.0, -0.000244140625, -5.7220458984375e-06, -0.0008832216262817383, -1.71661376953125e-05, -8.0108642578125e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}, {"score": -7.197594776998898, "choice_history": [59, 124, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "Mind", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.Mind,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "Mind", "hole1": 8, "_type": "Template3", "hole0": "Ironbark Protector", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 8, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "IronbarkProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.00023651123046875, -0.0004068977141287178, -8.582700684200972e-05, -3.4570680327306036e-06, -3.5762059269472957e-07, -2.3841855067985307e-07, -1.1801719665527344e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, -6.67572021484375e-05, -0.00012969970703125, -4.529942543740617e-06, -1.728534698486328e-05, -2.2649765014648438e-06, -7.05718994140625e-05, -1.118965883506462e-05, 0.0, -7.191911220550537, -2.47955322265625e-05, -0.0004749298095703125, 0.0, -3.814697265625e-06, 0.0, -0.0009393685031682253, 0.0, 0.0, -1.52587890625e-05, -0.0017137527465820312, 0.0, -1.0728830375228426e-06, -2.3841855636419496e-06, 0.0, -7.688914774917066e-05, 0.0, -0.0002307891845703125, -5.7220458984375e-06, -0.0009185075759887695, -1.71661376953125e-05, -8.20159912109375e-05, -3.0517578125e-05, -3.24249267578125e-05, -5.7220458984375e-06]}], "gold_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n"}
{"beams": [{"score": -3.4096434800737825, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n        self.target.increase_health(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -0.3555259704589844, -0.000270843505859375, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -3.457069396972656e-05, -0.020113825798034668, -0.18651306629180908, -1.9073486328125e-06, -0.07280349731445312, 0.0, -2.6702880859375e-05, -0.004010558128356934, -1.9073486328125e-06, -0.0050678253173828125, -1.52587890625e-05, -0.0024682283401489258, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.001049041748046875, -5.91278076171875e-05, -0.0003719329833984375, 0.0, -0.0023540258407592773, 0.0, -5.173683166503906e-05, 0.0, -0.0001474618911743164, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -9.655952453613281e-06, -0.0003414154052734375, -0.5771865844726562, -0.0005016326904296875, -1.1444091796875e-05, -1.52587890625e-05, -9.5367431640625e-06, -0.000892964075319469, -0.0003681182861328125, -9.512901306152344e-05, 0.0, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.02743244171142578, -1.1444091796875e-05, -0.0002689361572265625, 0.0, -1.1444091796875e-05, 0.0, -0.00014984607696533203, -2.09808349609375e-05, -0.0003871917724609375, 0.0, -0.3049309253692627, 0.0, -1.9073486328125e-06, -0.17191123962402344, -0.006786346435546875, -7.62939453125e-06, -0.27885913848876953, 0.0, -3.814697265625e-06, 0.0, -0.000331878662109375, -3.24249267578125e-05, -0.0003681182861328125, 0.0, -0.2163400650024414, 0.0, -3.814697265625e-06, -0.2432727813720703, 0.0, -0.005872869864106178, 0.0, -0.003940582275390625, -1.1444091796875e-05, -0.0035877227783203125, 0.0, 0.0, 0.0, -0.0016309022903442383, -6.29425048828125e-05, -0.00046539306640625, 0.0, -0.23012495040893555, 0.0, -1.9073486328125e-06, -0.5910234451293945]}, {"score": -3.646296169943298, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -0.3555259704589844, -0.000270843505859375, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -3.457069396972656e-05, -0.020113825798034668, -0.18651306629180908, -1.9073486328125e-06, -0.07280349731445312, 0.0, -2.6702880859375e-05, -0.004010558128356934, -1.9073486328125e-06, -0.0050678253173828125, -1.52587890625e-05, -0.0024682283401489258, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.001049041748046875, -5.91278076171875e-05, -0.0003719329833984375, 0.0, -0.0023540258407592773, 0.0, -5.173683166503906e-05, 0.0, -0.0001474618911743164, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -9.655952453613281e-06, -0.0003414154052734375, -0.5771865844726562, -0.0005016326904296875, -1.1444091796875e-05, -1.52587890625e-05, -9.5367431640625e-06, -0.000892964075319469, -0.0003681182861328125, -9.512901306152344e-05, 0.0, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.02743244171142578, -1.1444091796875e-05, -0.0002689361572265625, 0.0, -1.1444091796875e-05, 0.0, -0.00014984607696533203, -2.09808349609375e-05, -0.0003871917724609375, 0.0, -0.3049309253692627, 0.0, -1.9073486328125e-06, -0.17191123962402344, -0.006786346435546875, -7.62939453125e-06, -0.27885913848876953, 0.0, -3.814697265625e-06, 0.0, -0.000331878662109375, -3.24249267578125e-05, -0.0003681182861328125, 0.0, -0.2163400650024414, 0.0, -3.814697265625e-06, -0.2432727813720703, 0.0, -0.005872869864106178, 0.0, -0.003940582275390625, -1.1444091796875e-05, -0.0035877227783203125, 0.0, 0.0, 0.0, -0.0016309022903442383, -6.29425048828125e-05, -0.00046539306640625, 0.0, -0.23012495040893555, 0.0, -1.9073486328125e-06, -0.8259258270263672, 0.0, -0.001748400623910129, -1.9073486328125e-06]}, {"score": -4.110252726575482, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n        self.target.increase_health(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -1.3367242813110352, -0.0001392364501953125, 0.0, -8.58306884765625e-05, -1.33514404296875e-05, -4.017353057861328e-05, -0.009379624389111996, -0.09982061386108398, 0.0, -0.019779205322265625, 0.0, -4.76837158203125e-05, -0.0039049386978149414, -1.9073486328125e-06, -0.0022182464599609375, -1.33514404296875e-05, -0.0021554231643676758, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00098419189453125, -3.24249267578125e-05, -0.00030517578125, 0.0, -0.002392411231994629, 0.0, -4.792213439941406e-05, 0.0, -0.0001417398452758789, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.482147216796875, -0.00058746337890625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0008253107080236077, -0.0002899169921875, -8.928775787353516e-05, 0.0, -3.24249267578125e-05, -3.62396240234375e-05, 0.0, -0.0002765655517578125, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.0236663818359375, -1.33514404296875e-05, -0.000247955322265625, 0.0, -1.1444091796875e-05, 0.0, -0.00013458728790283203, -1.71661376953125e-05, -0.00037670135498046875, 0.0, -0.3230506181716919, 0.0, -1.9073486328125e-06, -0.1615896224975586, -0.008368492126464844, -7.62939453125e-06, -0.23915958404541016, 0.0, -3.814697265625e-06, 0.0, -0.00033092498779296875, -2.09808349609375e-05, -0.0002727508544921875, 0.0, -0.2241532802581787, 0.0, -3.814697265625e-06, -0.2448139190673828, 0.0, -0.0057646105997264385, 0.0, -0.0030889511108398438, -1.1444091796875e-05, -0.0032901763916015625, 0.0, 0.0, 0.0, -0.001599431037902832, -6.29425048828125e-05, -0.00045680999755859375, 0.0, -0.22844457626342773, 0.0, -1.9073486328125e-06, -0.5876121520996094]}, {"score": -4.129669710280496, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -0.3555259704589844, -0.000270843505859375, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -3.457069396972656e-05, -0.020113825798034668, -0.18651306629180908, -1.9073486328125e-06, -0.07280349731445312, 0.0, -2.6702880859375e-05, -0.004010558128356934, -1.9073486328125e-06, -0.0050678253173828125, -1.52587890625e-05, -0.0024682283401489258, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.001049041748046875, -5.91278076171875e-05, -0.0003719329833984375, 0.0, -0.0023540258407592773, 0.0, -5.173683166503906e-05, 0.0, -0.0001474618911743164, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -9.655952453613281e-06, -0.0003414154052734375, -0.5771865844726562, -0.0005016326904296875, -1.1444091796875e-05, -1.52587890625e-05, -9.5367431640625e-06, -0.000892964075319469, -0.0003681182861328125, -9.512901306152344e-05, 0.0, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.02743244171142578, -1.1444091796875e-05, -0.0002689361572265625, 0.0, -1.1444091796875e-05, 0.0, -0.00014984607696533203, -2.09808349609375e-05, -0.0003871917724609375, 0.0, -0.3049309253692627, 0.0, -1.9073486328125e-06, -0.17191123962402344, -0.006786346435546875, -7.62939453125e-06, -1.7231826782226562, 0.0, -0.00239312625490129, -0.0001373291015625, -0.024025321006774902, 0.0, -0.000141143798828125, -9.5367431640625e-06, 0.0, -0.00018978118896484375, 0.0, -0.0001087188720703125, 0.0, -3.933906555175781e-06, -1.9073486328125e-06, -0.023439407348632812, -3.62396240234375e-05, -0.003387451171875, 0.0, -3.814697265625e-06, 0.0, -0.0001468658447265625, -1.1444091796875e-05, -0.0004520416259765625, 0.0, -0.2877694368362427, 0.0, -1.9073486328125e-06, -0.23051834106445312]}, {"score": -4.3547342629024115, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -1.3367242813110352, -0.0001392364501953125, 0.0, -8.58306884765625e-05, -1.33514404296875e-05, -4.017353057861328e-05, -0.009379624389111996, -0.09982061386108398, 0.0, -0.019779205322265625, 0.0, -4.76837158203125e-05, -0.0039049386978149414, -1.9073486328125e-06, -0.0022182464599609375, -1.33514404296875e-05, -0.0021554231643676758, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00098419189453125, -3.24249267578125e-05, -0.00030517578125, 0.0, -0.002392411231994629, 0.0, -4.792213439941406e-05, 0.0, -0.0001417398452758789, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.482147216796875, -0.00058746337890625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0008253107080236077, -0.0002899169921875, -8.928775787353516e-05, 0.0, -3.24249267578125e-05, -3.62396240234375e-05, 0.0, -0.0002765655517578125, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.0236663818359375, -1.33514404296875e-05, -0.000247955322265625, 0.0, -1.1444091796875e-05, 0.0, -0.00013458728790283203, -1.71661376953125e-05, -0.00037670135498046875, 0.0, -0.3230506181716919, 0.0, -1.9073486328125e-06, -0.1615896224975586, -0.008368492126464844, -7.62939453125e-06, -0.23915958404541016, 0.0, -3.814697265625e-06, 0.0, -0.00033092498779296875, -2.09808349609375e-05, -0.0002727508544921875, 0.0, -0.2241532802581787, 0.0, -3.814697265625e-06, -0.2448139190673828, 0.0, -0.0057646105997264385, 0.0, -0.0030889511108398438, -1.1444091796875e-05, -0.0032901763916015625, 0.0, 0.0, 0.0, -0.001599431037902832, -6.29425048828125e-05, -0.00045680999755859375, 0.0, -0.22844457626342773, 0.0, -1.9073486328125e-06, -0.8303594589233398, 0.0, -0.0017323221545666456, -1.9073486328125e-06]}, {"score": -4.3556675905599604, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(2)))\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -0.3555259704589844, -0.000270843505859375, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -3.457069396972656e-05, -0.020113825798034668, -0.18651306629180908, -1.9073486328125e-06, -0.07280349731445312, 0.0, -2.6702880859375e-05, -0.004010558128356934, -1.9073486328125e-06, -0.0050678253173828125, -1.52587890625e-05, -0.0024682283401489258, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.001049041748046875, -5.91278076171875e-05, -0.0003719329833984375, 0.0, -0.0023540258407592773, 0.0, -5.173683166503906e-05, 0.0, -0.0001474618911743164, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -9.655952453613281e-06, -0.0003414154052734375, -0.5771865844726562, -0.0005016326904296875, -1.1444091796875e-05, -1.52587890625e-05, -9.5367431640625e-06, -0.000892964075319469, -0.0003681182861328125, -9.512901306152344e-05, 0.0, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.02743244171142578, -1.1444091796875e-05, -0.0002689361572265625, 0.0, -1.1444091796875e-05, 0.0, -0.00014984607696533203, -2.09808349609375e-05, -0.0003871917724609375, 0.0, -1.684978723526001, -0.00010573672625469044, -1.9073486328125e-06, -0.0001468658447265625, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -0.019298672676086426, -0.003950715065002441, -5.91278076171875e-05, -0.5094470977783203, -6.29425048828125e-05, -9.5367431640625e-06, 0.0, -0.01842726208269596, -0.13066637516021729, -2.741813295870088e-05, -3.814697265625e-06, -6.103515625e-05, -0.00185394287109375, -1.9073486328125e-06, -0.030874252319335938, 0.0, -0.11963994055986404, -0.00015282630920410156, -0.010141491889953613, 0.0, -0.0002880096435546875, -4.38690185546875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001430511474609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -0.019092559814453125, -2.288818359375e-05, -0.04749298095703125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.00014591217041015625, -1.1444091796875e-05, -0.00031375885009765625, 0.0, -0.20229196548461914, 0.0, -1.9073486328125e-06, -0.20576763153076172]}, {"score": -4.6441281749710015, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(ChangeAttack(2)))\n        super().use(player, game)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -0.3555259704589844, -0.000270843505859375, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -3.457069396972656e-05, -0.020113825798034668, -0.18651306629180908, -1.9073486328125e-06, -0.07280349731445312, 0.0, -2.6702880859375e-05, -0.004010558128356934, -1.9073486328125e-06, -0.0050678253173828125, -1.52587890625e-05, -0.0024682283401489258, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.001049041748046875, -5.91278076171875e-05, -0.0003719329833984375, 0.0, -0.0023540258407592773, 0.0, -5.173683166503906e-05, 0.0, -0.0001474618911743164, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -9.655952453613281e-06, -0.0003414154052734375, -0.5771865844726562, -0.0005016326904296875, -1.1444091796875e-05, -1.52587890625e-05, -9.5367431640625e-06, -0.000892964075319469, -0.0003681182861328125, -9.512901306152344e-05, 0.0, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.02743244171142578, -1.1444091796875e-05, -0.0002689361572265625, 0.0, -1.1444091796875e-05, 0.0, -0.00014984607696533203, -2.09808349609375e-05, -0.0003871917724609375, 0.0, -0.3049309253692627, 0.0, -1.9073486328125e-06, -0.17191123962402344, -0.006786346435546875, -7.62939453125e-06, -0.27885913848876953, 0.0, -3.814697265625e-06, 0.0, -0.000331878662109375, -3.24249267578125e-05, -0.0003681182861328125, 0.0, -1.705794334411621, -9.775161743164062e-06, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.015721678733825684, -0.0060242414474487305, -4.00543212890625e-05, -0.4685173034667969, -4.38690185546875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.02319956384599209, -0.050311800092458725, -1.2993811651540454e-05, -3.814697265625e-06, -8.20159912109375e-05, -0.0012187957763671875, -3.814697265625e-06, -0.1405324935913086, 0.0, -0.10558323562145233, -0.00015079975128173828, -0.012895703315734863, 0.0, -0.000347137451171875, -5.340576171875e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001468658447265625, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06]}, {"score": -4.769101978728713, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n        self.target.add_buff(Buff(ChangeAttack(2)))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -0.3555259704589844, -0.000270843505859375, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -3.457069396972656e-05, -0.020113825798034668, -0.18651306629180908, -1.9073486328125e-06, -0.07280349731445312, 0.0, -2.6702880859375e-05, -0.004010558128356934, -1.9073486328125e-06, -0.0050678253173828125, -1.52587890625e-05, -0.0024682283401489258, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.001049041748046875, -5.91278076171875e-05, -0.0003719329833984375, 0.0, -0.0023540258407592773, 0.0, -5.173683166503906e-05, 0.0, -0.0001474618911743164, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -9.655952453613281e-06, -0.0003414154052734375, -0.5771865844726562, -0.0005016326904296875, -1.1444091796875e-05, -1.52587890625e-05, -9.5367431640625e-06, -0.000892964075319469, -0.0003681182861328125, -9.512901306152344e-05, 0.0, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.02743244171142578, -1.1444091796875e-05, -0.0002689361572265625, 0.0, -1.1444091796875e-05, 0.0, -0.00014984607696533203, -2.09808349609375e-05, -0.0003871917724609375, 0.0, -0.3049309253692627, 0.0, -1.9073486328125e-06, -0.17191123962402344, -0.006786346435546875, -7.62939453125e-06, -0.27885913848876953, 0.0, -3.814697265625e-06, 0.0, -0.000331878662109375, -3.24249267578125e-05, -0.0003681182861328125, 0.0, -0.2163400650024414, 0.0, -3.814697265625e-06, -0.2432727813720703, 0.0, -0.005872869864106178, 0.0, -0.003940582275390625, -1.1444091796875e-05, -0.0035877227783203125, 0.0, 0.0, 0.0, -0.0016309022903442383, -6.29425048828125e-05, -0.00046539306640625, 0.0, -1.656618595123291, -5.841255187988281e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -0.025849103927612305, -0.022987008094787598, -3.62396240234375e-05, -0.3459053039550781, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.07752054929733276, -0.05133115500211716, -1.931190308823716e-05, -3.814697265625e-06, -0.000202178955078125]}, {"score": -4.872045779120299, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(2)\n        self.target.increase_health(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -0.3555259704589844, -0.000270843505859375, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -3.457069396972656e-05, -0.020113825798034668, -0.18651306629180908, -1.9073486328125e-06, -0.07280349731445312, 0.0, -2.6702880859375e-05, -0.004010558128356934, -1.9073486328125e-06, -0.0050678253173828125, -1.52587890625e-05, -0.0024682283401489258, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.001049041748046875, -5.91278076171875e-05, -0.0003719329833984375, 0.0, -0.0023540258407592773, 0.0, -5.173683166503906e-05, 0.0, -0.0001474618911743164, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -9.655952453613281e-06, -0.0003414154052734375, -0.5771865844726562, -0.0005016326904296875, -1.1444091796875e-05, -1.52587890625e-05, -9.5367431640625e-06, -0.000892964075319469, -0.0003681182861328125, -9.512901306152344e-05, 0.0, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.02743244171142578, -1.1444091796875e-05, -0.0002689361572265625, 0.0, -1.1444091796875e-05, 0.0, -0.00014984607696533203, -2.09808349609375e-05, -0.0003871917724609375, 0.0, -0.3049309253692627, 0.0, -1.9073486328125e-06, -2.004937171936035, -1.9073486328125e-06, -0.004935005679726601, -3.814697265625e-06, -0.000308990478515625, -3.814697265625e-06, -0.009189605712890625, 0.0, 0.0, 0.0, -0.0008563995361328125, -0.0001373291015625, -0.0004892349243164062, 0.0, -0.39287054538726807, 0.0, -1.9073486328125e-06, -0.25580883026123047, -0.0039825439453125, -4.1961669921875e-05, -0.009894371032714844, 0.0, -7.62939453125e-06, 0.0, -0.0013227462768554688, -1.52587890625e-05, -0.0006046295166015625, 0.0, -0.1739276647567749, 0.0, -1.9073486328125e-06, -0.3576984405517578]}, {"score": -4.88355378758547, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.increase_health(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -0.3555259704589844, -0.000270843505859375, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -3.457069396972656e-05, -0.020113825798034668, -0.18651306629180908, -1.9073486328125e-06, -0.07280349731445312, 0.0, -2.6702880859375e-05, -0.004010558128356934, -1.9073486328125e-06, -0.0050678253173828125, -1.52587890625e-05, -0.0024682283401489258, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.001049041748046875, -5.91278076171875e-05, -0.0003719329833984375, 0.0, -0.0023540258407592773, 0.0, -5.173683166503906e-05, 0.0, -0.0001474618911743164, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -9.655952453613281e-06, -0.0003414154052734375, -0.5771865844726562, -0.0005016326904296875, -1.1444091796875e-05, -1.52587890625e-05, -9.5367431640625e-06, -0.000892964075319469, -0.0003681182861328125, -9.512901306152344e-05, 0.0, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.02743244171142578, -1.1444091796875e-05, -0.0002689361572265625, 0.0, -1.1444091796875e-05, 0.0, -0.00014984607696533203, -2.09808349609375e-05, -0.0003871917724609375, 0.0, -0.3049309253692627, 0.0, -1.9073486328125e-06, -0.17191123962402344, -0.006786346435546875, -7.62939453125e-06, -0.27885913848876953, 0.0, -3.814697265625e-06, 0.0, -0.000331878662109375, -3.24249267578125e-05, -0.0003681182861328125, 0.0, -0.2163400650024414, 0.0, -3.814697265625e-06, -1.5795364379882812, -0.26117992401123047, -0.0002117156982421875, -0.015672683715820312, 0.0, -1.1444091796875e-05, 0.0, -0.00157928466796875, -9.5367431640625e-06, -0.00048732757568359375, 0.0, -0.1392676830291748, 0.0, -5.7220458984375e-06, -0.555943489074707]}, {"score": -4.966254003778658, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(2)))\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -1.3367242813110352, -0.0001392364501953125, 0.0, -8.58306884765625e-05, -1.33514404296875e-05, -4.017353057861328e-05, -0.009379624389111996, -0.09982061386108398, 0.0, -0.019779205322265625, 0.0, -4.76837158203125e-05, -0.0039049386978149414, -1.9073486328125e-06, -0.0022182464599609375, -1.33514404296875e-05, -0.0021554231643676758, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00098419189453125, -3.24249267578125e-05, -0.00030517578125, 0.0, -0.002392411231994629, 0.0, -4.792213439941406e-05, 0.0, -0.0001417398452758789, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.482147216796875, -0.00058746337890625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0008253107080236077, -0.0002899169921875, -8.928775787353516e-05, 0.0, -3.24249267578125e-05, -3.62396240234375e-05, 0.0, -0.0002765655517578125, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.0236663818359375, -1.33514404296875e-05, -0.000247955322265625, 0.0, -1.1444091796875e-05, 0.0, -0.00013458728790283203, -1.71661376953125e-05, -0.00037670135498046875, 0.0, -1.6177302598953247, -9.929969382937998e-05, -1.9073486328125e-06, -0.0001239776611328125, -2.47955322265625e-05, -2.86102294921875e-05, 0.0, -0.019443392753601074, -0.003559589385986328, -6.103515625e-05, -0.46728515625, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -0.015531545504927635, -0.12971186637878418, -2.53915750363376e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0019254684448242188, -1.9073486328125e-06, -0.034282684326171875, 0.0, -0.12057068198919296, -0.00015664100646972656, -0.010038495063781738, 0.0, -0.0002899169921875, -4.38690185546875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001430511474609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -0.01709747314453125, -2.288818359375e-05, -0.044986724853515625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.00014495849609375, -1.1444091796875e-05, -0.0003204345703125, 0.0, -0.20083189010620117, 0.0, -1.9073486328125e-06, -0.2034616470336914]}, {"score": -5.0196189936102655, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -1.3367242813110352, -0.0001392364501953125, 0.0, -8.58306884765625e-05, -1.33514404296875e-05, -4.017353057861328e-05, -0.009379624389111996, -0.09982061386108398, 0.0, -0.019779205322265625, 0.0, -4.76837158203125e-05, -0.0039049386978149414, -1.9073486328125e-06, -0.0022182464599609375, -1.33514404296875e-05, -0.0021554231643676758, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00098419189453125, -3.24249267578125e-05, -0.00030517578125, 0.0, -0.002392411231994629, 0.0, -4.792213439941406e-05, 0.0, -0.0001417398452758789, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.482147216796875, -0.00058746337890625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0008253107080236077, -0.0002899169921875, -8.928775787353516e-05, 0.0, -3.24249267578125e-05, -3.62396240234375e-05, 0.0, -0.0002765655517578125, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.0236663818359375, -1.33514404296875e-05, -0.000247955322265625, 0.0, -1.1444091796875e-05, 0.0, -0.00013458728790283203, -1.71661376953125e-05, -0.00037670135498046875, 0.0, -0.3230506181716919, 0.0, -1.9073486328125e-06, -0.1615896224975586, -0.008368492126464844, -7.62939453125e-06, -1.8737125396728516, 0.0, -0.0025285722222179174, -6.4849853515625e-05, -0.016979575157165527, 0.0, -0.0001354217529296875, -9.5367431640625e-06, 0.0, -9.5367431640625e-05, 0.0, -0.000133514404296875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.019983291625976562, -3.814697265625e-05, -0.0025606155395507812, 0.0, -1.9073486328125e-06, 0.0, -0.00014972686767578125, -1.1444091796875e-05, -0.0004558563232421875, 0.0, -0.3020514249801636, 0.0, -1.9073486328125e-06, -0.2295389175415039]}, {"score": -5.280949733670923, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.increase_health(4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -0.3555259704589844, -0.000270843505859375, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -3.457069396972656e-05, -0.020113825798034668, -0.18651306629180908, -1.9073486328125e-06, -0.07280349731445312, 0.0, -2.6702880859375e-05, -0.004010558128356934, -1.9073486328125e-06, -0.0050678253173828125, -1.52587890625e-05, -0.0024682283401489258, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.001049041748046875, -5.91278076171875e-05, -0.0003719329833984375, 0.0, -0.0023540258407592773, 0.0, -5.173683166503906e-05, 0.0, -0.0001474618911743164, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -9.655952453613281e-06, -0.0003414154052734375, -0.5771865844726562, -0.0005016326904296875, -1.1444091796875e-05, -1.52587890625e-05, -9.5367431640625e-06, -0.000892964075319469, -0.0003681182861328125, -9.512901306152344e-05, 0.0, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.02743244171142578, -1.1444091796875e-05, -0.0002689361572265625, 0.0, -1.1444091796875e-05, 0.0, -0.00014984607696533203, -2.09808349609375e-05, -0.0003871917724609375, 0.0, -0.3049309253692627, 0.0, -1.9073486328125e-06, -0.17191123962402344, -0.006786346435546875, -7.62939453125e-06, -0.27885913848876953, 0.0, -3.814697265625e-06, 0.0, -0.000331878662109375, -3.24249267578125e-05, -0.0003681182861328125, 0.0, -0.2163400650024414, 0.0, -3.814697265625e-06, -1.5795364379882812, -0.26117992401123047, -0.0002117156982421875, -0.015672683715820312, 0.0, -1.1444091796875e-05, 0.0, -0.00157928466796875, -9.5367431640625e-06, -0.00048732757568359375, 0.0, -0.1392676830291748, 0.0, -5.7220458984375e-06, -0.9421329498291016, 0.0, -0.011206485331058502, 0.0]}, {"score": -5.372146528431358, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(ChangeAttack(2)))\n        super().use(player, game)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -1.3367242813110352, -0.0001392364501953125, 0.0, -8.58306884765625e-05, -1.33514404296875e-05, -4.017353057861328e-05, -0.009379624389111996, -0.09982061386108398, 0.0, -0.019779205322265625, 0.0, -4.76837158203125e-05, -0.0039049386978149414, -1.9073486328125e-06, -0.0022182464599609375, -1.33514404296875e-05, -0.0021554231643676758, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00098419189453125, -3.24249267578125e-05, -0.00030517578125, 0.0, -0.002392411231994629, 0.0, -4.792213439941406e-05, 0.0, -0.0001417398452758789, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.482147216796875, -0.00058746337890625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0008253107080236077, -0.0002899169921875, -8.928775787353516e-05, 0.0, -3.24249267578125e-05, -3.62396240234375e-05, 0.0, -0.0002765655517578125, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.0236663818359375, -1.33514404296875e-05, -0.000247955322265625, 0.0, -1.1444091796875e-05, 0.0, -0.00013458728790283203, -1.71661376953125e-05, -0.00037670135498046875, 0.0, -0.3230506181716919, 0.0, -1.9073486328125e-06, -0.1615896224975586, -0.008368492126464844, -7.62939453125e-06, -0.23915958404541016, 0.0, -3.814697265625e-06, 0.0, -0.00033092498779296875, -2.09808349609375e-05, -0.0002727508544921875, 0.0, -1.6719605922698975, -7.867813110351562e-06, -1.9073486328125e-05, -4.38690185546875e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -0.017302870750427246, -0.0017116069793701172, -4.38690185546875e-05, -0.519317626953125, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.023591268807649612, -0.051151033490896225, -1.2993811651540454e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.001239776611328125, -3.814697265625e-06, -0.15704727172851562, 0.0, -0.10486169159412384, -0.00015842914581298828, -0.011982083320617676, 0.0, -0.0003490447998046875, -5.340576171875e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001430511474609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06]}, {"score": -5.482654835779385, "choice_history": [59, 126, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n        self.target.add_buff(Buff(ChangeAttack(2)))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Mark of the Wild", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "MarkOfTheWild", "hole3": "use"}, "score_history": [-0.00011444091796875, -0.0012760162353515625, -0.0007506189867854118, -0.0036063131410628557, -0.001134075690060854, -0.0071913860738277435, -8.130060450639576e-05, -0.001004837453365326, -1.9431114196777344e-05, -2.622604142743512e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00011444091796875, -2.6702880859375e-05, -0.00014495849609375, 0.0, -1.1444091796875e-05, -0.0001012035645544529, -8.058547973632812e-05, -0.0006174726877361536, -0.0005745887756347656, -0.0011174639221280813, -0.004234907682985067, -0.06794442981481552, -0.0005284547805786133, -1.3367242813110352, -0.0001392364501953125, 0.0, -8.58306884765625e-05, -1.33514404296875e-05, -4.017353057861328e-05, -0.009379624389111996, -0.09982061386108398, 0.0, -0.019779205322265625, 0.0, -4.76837158203125e-05, -0.0039049386978149414, -1.9073486328125e-06, -0.0022182464599609375, -1.33514404296875e-05, -0.0021554231643676758, -2.288818359375e-05, -6.67572021484375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00098419189453125, -3.24249267578125e-05, -0.00030517578125, 0.0, -0.002392411231994629, 0.0, -4.792213439941406e-05, 0.0, -0.0001417398452758789, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.482147216796875, -0.00058746337890625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0008253107080236077, -0.0002899169921875, -8.928775787353516e-05, 0.0, -3.24249267578125e-05, -3.62396240234375e-05, 0.0, -0.0002765655517578125, 0.0, -5.53131103515625e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -0.0236663818359375, -1.33514404296875e-05, -0.000247955322265625, 0.0, -1.1444091796875e-05, 0.0, -0.00013458728790283203, -1.71661376953125e-05, -0.00037670135498046875, 0.0, -0.3230506181716919, 0.0, -1.9073486328125e-06, -0.1615896224975586, -0.008368492126464844, -7.62939453125e-06, -0.23915958404541016, 0.0, -3.814697265625e-06, 0.0, -0.00033092498779296875, -2.09808349609375e-05, -0.0002727508544921875, 0.0, -0.2241532802581787, 0.0, -3.814697265625e-06, -0.2448139190673828, 0.0, -0.0057646105997264385, 0.0, -0.0030889511108398438, -1.1444091796875e-05, -0.0032901763916015625, 0.0, 0.0, 0.0, -0.001599431037902832, -6.29425048828125e-05, -0.00045680999755859375, 0.0, -1.6637606620788574, -5.841255187988281e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -0.026410698890686035, -0.022387146949768066, -3.62396240234375e-05, -0.3486061096191406, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.07567958533763885, -0.05124055594205856, -1.5377996533061378e-05, -3.814697265625e-06, -0.0001850128173828125]}], "gold_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.taunt = True\n"}
{"beams": [{"score": -2.9458567034598673, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9647872447967529, -1.9073486328125e-06, -0.08308422565460205, 0.0, -0.000240325927734375, 0.0, -0.0001983642578125, 0.0, -3.4332275390625e-05, -2.6702880859375e-05, -0.000148773193359375, -1.5497189451707527e-05, -4.8041343688964844e-05, -0.7565231323242188, -0.0020618438720703125, -1.1444091796875e-05, -0.0015125274658203125, -1.9073486328125e-06, -2.7179718017578125e-05, 0.0, -6.186960672494024e-05, 0.0, -4.1961669921875e-05, -0.000225067138671875, 0.0, -6.866455078125e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.11530494689941406, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.02047586441040039, -1.52587890625e-05, -0.0007038116455078125, 0.0, -2.6702880859375e-05, 0.0, -0.0025697944220155478, -0.000316619873046875, -0.000133514404296875, -0.0001621246337890625, -1.9073486328125e-05, -0.00052600575145334, -2.384185791015625e-06, -0.014097213745117188, -0.08142662048339844, -0.030857086181640625, -0.000244140625, -5.53131103515625e-05, -3.4332275390625e-05, -0.0002918243408203125, -0.0519334077835083, -1.0132738680113107e-05, -0.0025196075439453125, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.000690460205078125, 0.0, -3.325939178466797e-05, -9.1552734375e-05, -0.0040891170501708984, -8.785724639892578e-05, -0.0041713714599609375, -0.0010166168212890625, -0.000492095947265625, -0.2981823682785034, -3.814697265625e-06, -0.0037631988525390625, -0.0006723403930664062, -3.62396240234375e-05, 0.0, -0.024295687675476074, -7.62939453125e-06, -0.08748959004878998, -4.768367489305092e-06, -0.000186920166015625, -0.0031280517578125, -7.62939453125e-06, -0.16612517833709717, -0.0002215855201939121, -0.002140045166015625, -0.00019073486328125, -7.82012939453125e-05, 0.0, -0.008397340774536133, -0.00033659100881777704, -5.3285304602468386e-05, -3.397406908334233e-05, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.002681732177734375, 0.0, -0.0032958984375, 0.0, -0.0009747743606567383, 0.0, -2.6702880859375e-05, -0.01767444610595703, -0.0007381439208984375, -3.814697265625e-06, -0.00413823127746582, -2.4437820684397593e-05, -0.00051116943359375, -0.0007076263427734375, -7.05718994140625e-05, -0.016292929649353027, -1.9073486328125e-06, -5.91278076171875e-05, -3.62396240234375e-05, -0.00104522705078125, -0.00060272216796875, -5.340576171875e-05, -0.0001201629638671875, -0.00024294696049764752, 0.0, -1.9073486328125e-05, -0.0001468658447265625, -0.0013498096959665418, -6.079673767089844e-06, -2.288818359375e-05, -0.000308990478515625, -0.000560760498046875, -0.0003719329833984375, -0.0001373291015625, -0.002552032470703125, -0.000133514404296875, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007190704345703125, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.33514404296875e-05, -3.814697265625e-06, -0.007076263427734375, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.001636505126953125, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.0005515813827514648, -0.0002803802490234375, -0.0003833770751953125, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0001983642578125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.0002079010009765625, -0.0003261566162109375, -0.012696266174316406, -0.0004749298095703125, -0.05174446105957031]}, {"score": -3.052765732525586, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9635646343231201, 0.0, -0.22243690490722656, 0.0, -0.0003604888916015625, 0.0, -0.000286102294921875, 0.0, -4.1961669921875e-05, -2.6702880859375e-05, -0.00014495849609375, -1.3470642443280667e-05, -4.410743713378906e-05, -0.7290410995483398, -0.002208709716796875, -1.1444091796875e-05, -0.0016002655029296875, -1.9073486328125e-06, -2.9087066650390625e-05, 0.0, -6.21080253040418e-05, 0.0, -4.38690185546875e-05, -0.000225067138671875, 0.0, -6.866455078125e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.11288833618164062, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.020732402801513672, -1.52587890625e-05, -0.000705718994140625, 0.0, -2.6702880859375e-05, 0.0, -0.0025650260504335165, -0.000316619873046875, -0.000133514404296875, -0.0001621246337890625, -1.9073486328125e-05, -0.0005257674492895603, -2.384185791015625e-06, -0.014090538024902344, -0.08109760284423828, -0.030914306640625, -0.000244140625, -5.340576171875e-05, -3.4332275390625e-05, -0.000293731689453125, -0.0519181489944458, -1.0132738680113107e-05, -0.0025205612182617188, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006885528564453125, 0.0, -3.325939178466797e-05, -9.1552734375e-05, -0.004090070724487305, -8.785724639892578e-05, -0.004169464111328125, -0.0010023117065429688, -0.0005016326904296875, -0.2969127893447876, -3.814697265625e-06, -0.0037708282470703125, -0.0006685256958007812, -3.62396240234375e-05, 0.0, -0.024321436882019043, -7.62939453125e-06, -0.08740589767694473, -4.768367489305092e-06, -0.000186920166015625, -0.0031280517578125, -7.62939453125e-06, -0.16571366786956787, -0.0002213471452705562, -0.0021419525146484375, -0.00019073486328125, -7.82012939453125e-05, 0.0, -0.008393526077270508, -0.0003368293691892177, -5.3285304602468386e-05, -3.397406908334233e-05, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.002685546875, 0.0, -0.0032939910888671875, 0.0, -0.0009747743606567383, 0.0, -2.6702880859375e-05, -0.017678260803222656, -0.0007381439208984375, -3.814697265625e-06, -0.00413823127746582, -2.4437820684397593e-05, -0.00051116943359375, -0.0007076263427734375, -7.05718994140625e-05, -0.016295790672302246, -1.9073486328125e-06, -5.91278076171875e-05, -3.62396240234375e-05, -0.00104522705078125, -0.00060272216796875, -5.340576171875e-05, -0.0001201629638671875, -0.00024294696049764752, 0.0, -1.9073486328125e-05, -0.0001468658447265625, -0.001349928672425449, -6.079673767089844e-06, -2.288818359375e-05, -0.000308990478515625, -0.000560760498046875, -0.00037384033203125, -0.0001373291015625, -0.002552032470703125, -0.000133514404296875, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007190704345703125, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.33514404296875e-05, -3.814697265625e-06, -0.0070743560791015625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016384124755859375, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.0005515813827514648, -0.0002803802490234375, -0.0003833770751953125, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0001983642578125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.0002079010009765625, -0.0003261566162109375, -0.012697219848632812, -0.0004749298095703125, -0.05175209045410156]}, {"score": -3.42439748661036, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "minions", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9647872447967529, -1.9073486328125e-06, -0.08308422565460205, 0.0, -0.000240325927734375, 0.0, -0.0001983642578125, 0.0, -3.4332275390625e-05, -2.6702880859375e-05, -0.000148773193359375, -1.5497189451707527e-05, -4.8041343688964844e-05, -1.1879043579101562, -4.57763671875e-05, -1.9073486328125e-06, -0.000530242919921875, -1.9073486328125e-06, -6.079673767089844e-06, 0.0, -5.1021277613472193e-05, 0.0, -9.72747802734375e-05, -6.866455078125e-05, 0.0, -2.47955322265625e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0006103515625, -0.000522613525390625, -3.62396240234375e-05, -0.00012969970703125, -9.5367431640625e-06, -0.24669373035430908, -1.9073486328125e-06, -0.000274658203125, -2.6702880859375e-05, -0.000179290771484375, 0.0, -0.0004825592041015625, 0.0, -0.01190948486328125, -1.1444091796875e-05, -0.0022683143615722656, -4.780292510986328e-05, -4.1961669921875e-05, -0.0005512237548828125, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0001373291015625, 0.0, -5.53131103515625e-05, -4.57763671875e-05, -0.0012328624725341797, -1.9073486328125e-06, -6.616101745748892e-05, -0.0001888275146484375, -0.07757568359375, -9.5367431640625e-06, 0.0, 0.0, -0.005688905715942383, -3.933906555175781e-06, -0.004822731018066406, 0.0, -1.9073486328125e-05, 0.0, -0.00345456600189209, -8.392333984375e-05, -0.0001201629638671875, -0.0002269744873046875, -1.71661376953125e-05, -0.0005202654283493757, -5.125998541188892e-06, -0.0092315673828125, -0.006267547607421875, -0.01622486114501953, -7.82012939453125e-05, -2.47955322265625e-05, -1.33514404296875e-05, -0.0007190704345703125, -0.031981587409973145, -1.2397689715726301e-05, -0.0013980865478515625, -3.0517578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0010204315185546875, 0.0, -2.753734588623047e-05, -7.450580596923828e-05, -0.00440216064453125, -8.022785186767578e-05, -0.0040798187255859375, -0.000667572021484375, -0.000885009765625, -0.26045382022857666, -3.814697265625e-06, -0.0040721893310546875, -0.0002613067626953125, -3.814697265625e-05, 0.0, -0.021346330642700195, -7.62939453125e-06, -0.08726523071527481, -4.768367489305092e-06, -0.000247955322265625, -0.0035190582275390625, -5.7220458984375e-06, -0.15274322032928467, -0.00019524575327523053, -0.004675865173339844, -0.0002460479736328125, -7.43865966796875e-05, 0.0, -0.007373452186584473, -0.00034374051028862596, -5.173566751182079e-05, -3.635817120084539e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026397705078125, 0.0, -0.0030002593994140625, 0.0, -0.0009537935256958008, 0.0, -2.86102294921875e-05, -0.01769542694091797, -0.0007801055908203125, -3.814697265625e-06, -0.004176497459411621, -2.4557026335969567e-05, -0.0005130767822265625, -0.0007305145263671875, -7.05718994140625e-05, -0.01604282855987549, -1.9073486328125e-06, -5.91278076171875e-05, -3.62396240234375e-05, -0.0010318756103515625, -0.0005950927734375, -5.340576171875e-05, -0.0001277923583984375, -0.00023531766782980412, 0.0, -1.9073486328125e-05, -0.000148773193359375, -0.0013181284302845597, -6.079673767089844e-06, -2.288818359375e-05, -0.0003147125244140625, -0.0005588531494140625, -0.0003833770751953125, -0.0001373291015625, -0.002532958984375, -0.000125885009765625, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007343292236328125, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.52587890625e-05, -3.814697265625e-06, -0.0068187713623046875, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016565322875976562, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005534887313842773, -0.0002803802490234375, -0.0003814697265625, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.012728691101074219, -0.000476837158203125, -0.05225849151611328]}, {"score": -3.5597961353987557, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "minions", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9635646343231201, 0.0, -0.22243690490722656, 0.0, -0.0003604888916015625, 0.0, -0.000286102294921875, 0.0, -4.1961669921875e-05, -2.6702880859375e-05, -0.00014495849609375, -1.3470642443280667e-05, -4.410743713378906e-05, -1.1844291687011719, -4.76837158203125e-05, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -7.987022399902344e-06, 0.0, -5.376307308324613e-05, 0.0, -0.0001010894775390625, -6.67572021484375e-05, 0.0, -2.47955322265625e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0006122589111328125, -0.000522613525390625, -3.62396240234375e-05, -0.0001316070556640625, -9.5367431640625e-06, -0.2451564073562622, -1.9073486328125e-06, -0.0002765655517578125, -2.6702880859375e-05, -0.0001811981201171875, 0.0, -0.00048065185546875, 0.0, -0.011921882629394531, -1.1444091796875e-05, -0.0022683143615722656, -4.971027374267578e-05, -4.1961669921875e-05, -0.0005512237548828125, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0001373291015625, 0.0, -5.53131103515625e-05, -4.57763671875e-05, -0.0012347698211669922, -1.9073486328125e-06, -6.616101745748892e-05, -0.0001888275146484375, -0.07967281341552734, -9.5367431640625e-06, 0.0, 0.0, -0.005695462226867676, -3.933906555175781e-06, -0.0048065185546875, 0.0, -1.9073486328125e-05, 0.0, -0.003445863723754883, -8.392333984375e-05, -0.0001220703125, -0.0002269744873046875, -1.71661376953125e-05, -0.000520027126185596, -5.125998541188892e-06, -0.009214401245117188, -0.006244659423828125, -0.01626110076904297, -7.82012939453125e-05, -2.47955322265625e-05, -1.33514404296875e-05, -0.0007171630859375, -0.03198349475860596, -1.2397689715726301e-05, -0.0013980865478515625, -3.0517578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0010223388671875, 0.0, -2.753734588623047e-05, -7.450580596923828e-05, -0.00440216064453125, -8.022785186767578e-05, -0.00408172607421875, -0.000667572021484375, -0.000885009765625, -0.26038801670074463, -3.814697265625e-06, -0.004070281982421875, -0.0002613067626953125, -3.814697265625e-05, 0.0, -0.021346330642700195, -7.62939453125e-06, -0.08725929260253906, -4.768367489305092e-06, -0.000247955322265625, -0.0035190582275390625, -5.7220458984375e-06, -0.1527489423751831, -0.00019524575327523053, -0.004672050476074219, -0.000247955322265625, -7.43865966796875e-05, 0.0, -0.007370591163635254, -0.00034374051028862596, -5.173566751182079e-05, -3.635817120084539e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026397705078125, 0.0, -0.00299835205078125, 0.0, -0.0009537935256958008, 0.0, -2.86102294921875e-05, -0.017694473266601562, -0.0007801055908203125, -3.814697265625e-06, -0.004176497459411621, -2.4557026335969567e-05, -0.0005130767822265625, -0.000728607177734375, -7.05718994140625e-05, -0.0160447359085083, -1.9073486328125e-06, -5.91278076171875e-05, -3.62396240234375e-05, -0.0010318756103515625, -0.0005950927734375, -5.340576171875e-05, -0.0001277923583984375, -0.00023531766782980412, 0.0, -1.9073486328125e-05, -0.000148773193359375, -0.0013181284302845597, -6.079673767089844e-06, -2.288818359375e-05, -0.0003147125244140625, -0.0005588531494140625, -0.0003833770751953125, -0.0001373291015625, -0.002532958984375, -0.000125885009765625, -1.33514404296875e-05, -1.1444091796875e-05, -0.000736236572265625, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.52587890625e-05, -3.814697265625e-06, -0.006816864013671875, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016574859619140625, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005534887313842773, -0.0002803802490234375, -0.0003814697265625, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.012728691101074219, -0.000476837158203125, -0.05226325988769531]}, {"score": -4.1306881812834035, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -1.8650872707366943, 0.0, -0.46296226978302, 0.0, -0.000324249267578125, 0.0, -0.000213623046875, 0.0, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001506805419921875, -1.5258772691595368e-05, -4.6133995056152344e-05, -0.6662712097167969, -0.0020732879638671875, -1.1444091796875e-05, -0.0014934539794921875, -1.9073486328125e-06, -2.7179718017578125e-05, 0.0, -6.008147101965733e-05, 0.0, -4.1961669921875e-05, -0.000225067138671875, 0.0, -6.67572021484375e-05, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.1094045639038086, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.02061319351196289, -1.52587890625e-05, -0.000705718994140625, 0.0, -2.6702880859375e-05, 0.0, -0.002563118701800704, -0.000316619873046875, -0.000133514404296875, -0.0001621246337890625, -1.9073486328125e-05, -0.0005255290889181197, -2.384185791015625e-06, -0.014061927795410156, -0.08114337921142578, -0.030859947204589844, -0.000244140625, -5.340576171875e-05, -3.4332275390625e-05, -0.0002918243408203125, -0.05197250843048096, -1.0132738680113107e-05, -0.0025224685668945312, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006885528564453125, 0.0, -3.325939178466797e-05, -9.1552734375e-05, -0.004088163375854492, -8.785724639892578e-05, -0.0041713714599609375, -0.0010242462158203125, -0.0004863739013671875, -0.298747181892395, -3.814697265625e-06, -0.0037593841552734375, -0.0006742477416992188, -3.62396240234375e-05, 0.0, -0.024272799491882324, -7.62939453125e-06, -0.08753248304128647, -4.768367489305092e-06, -0.000186920166015625, -0.0031299591064453125, -7.62939453125e-06, -0.16639602184295654, -0.00022182388056535274, -0.0021419525146484375, -0.00019073486328125, -7.62939453125e-05, 0.0, -0.008404016494750977, -0.00033659100881777704, -5.3285304602468386e-05, -3.397406908334233e-05, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.0026798248291015625, 0.0, -0.0032958984375, 0.0, -0.0009747743606567383, 0.0, -2.6702880859375e-05, -0.01767253875732422, -0.0007381439208984375, -3.814697265625e-06, -0.00413823127746582, -2.4437820684397593e-05, -0.00051116943359375, -0.0007076263427734375, -7.05718994140625e-05, -0.016292929649353027, -1.9073486328125e-06, -5.91278076171875e-05, -3.62396240234375e-05, -0.00104522705078125, -0.00060272216796875, -5.340576171875e-05, -0.0001201629638671875, -0.00024294696049764752, 0.0, -1.9073486328125e-05, -0.0001468658447265625, -0.0013498096959665418, -6.079673767089844e-06, -2.288818359375e-05, -0.000308990478515625, -0.000560760498046875, -0.00037384033203125, -0.0001373291015625, -0.002552032470703125, -0.000133514404296875, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007190704345703125, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.33514404296875e-05, -3.814697265625e-06, -0.007076263427734375, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016384124755859375, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.0005515813827514648, -0.0002803802490234375, -0.0003833770751953125, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0001983642578125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.0002079010009765625, -0.0003261566162109375, -0.012696266174316406, -0.0004749298095703125, -0.05174827575683594]}, {"score": -4.5217403665760685, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "targets", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(targets)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "targets"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9647872447967529, -1.9073486328125e-06, -0.08308422565460205, 0.0, -0.000240325927734375, 0.0, -0.0001983642578125, 0.0, -3.4332275390625e-05, -2.6702880859375e-05, -0.000148773193359375, -1.5497189451707527e-05, -4.8041343688964844e-05, -0.7565231323242188, -0.0020618438720703125, -1.1444091796875e-05, -0.0015125274658203125, -1.9073486328125e-06, -2.7179718017578125e-05, 0.0, -6.186960672494024e-05, 0.0, -4.1961669921875e-05, -0.000225067138671875, 0.0, -6.866455078125e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.11530494689941406, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.02047586441040039, -1.52587890625e-05, -0.0007038116455078125, 0.0, -2.6702880859375e-05, 0.0, -0.0025697944220155478, -0.000316619873046875, -0.000133514404296875, -0.0001621246337890625, -1.9073486328125e-05, -0.00052600575145334, -2.384185791015625e-06, -0.014097213745117188, -0.08142662048339844, -0.030857086181640625, -0.000244140625, -5.53131103515625e-05, -3.4332275390625e-05, -0.0002918243408203125, -0.0519334077835083, -1.0132738680113107e-05, -0.0025196075439453125, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.000690460205078125, 0.0, -3.325939178466797e-05, -9.1552734375e-05, -0.0040891170501708984, -8.785724639892578e-05, -0.0041713714599609375, -0.0010166168212890625, -0.000492095947265625, -1.4045456647872925, -1.9073486328125e-06, -0.0004024505615234375, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -0.052277565002441406, -3.814697265625e-06, -0.5979377031326294, -3.981518239015713e-05, -0.0002765655517578125, -0.007252693176269531, -0.000186920166015625, -0.08793032169342041, -0.00017438798386137933, -0.0009441375732421875, -8.96453857421875e-05, -6.4849853515625e-05, 0.0, -0.01812565326690674, -0.0003998679749201983, -5.9126250562258065e-05, -2.4676019165781327e-05, -2.09808349609375e-05, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.001873016357421875, 0.0, -0.005878448486328125, 0.0, -0.0009423494338989258, 0.0, -2.288818359375e-05, -0.01715850830078125, -0.0006008148193359375, -3.814697265625e-06, -0.003933310508728027, -2.4557026335969567e-05, -0.00051116943359375, -0.0006866455078125, -6.866455078125e-05, -0.01645028591156006, -1.9073486328125e-06, -5.7220458984375e-05, -3.62396240234375e-05, -0.0010833740234375, -0.0006008148193359375, -5.340576171875e-05, -0.0001316070556640625, -0.00023710582172498107, 0.0, -1.9073486328125e-05, -0.0001430511474609375, -0.0013118176721036434, -6.198883056640625e-06, -2.288818359375e-05, -0.00031280517578125, -0.000560760498046875, -0.0003719329833984375, -0.0001373291015625, -0.0025482177734375, -0.0001316070556640625, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007762908935546875, -9.5367431640625e-06, -0.0001239776611328125, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005340576171875, -1.33514404296875e-05, -3.814697265625e-06, -0.00678253173828125, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.00164031982421875, -5.7220458984375e-05, -0.0008611679077148438, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.0005515813827514648, -0.000278472900390625, -0.0003814697265625, -0.000244140625, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.0126953125, -0.0004730224609375, -0.05137157440185547]}, {"score": -4.6336504713167415, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "targets", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(targets)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "targets"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9635646343231201, 0.0, -0.22243690490722656, 0.0, -0.0003604888916015625, 0.0, -0.000286102294921875, 0.0, -4.1961669921875e-05, -2.6702880859375e-05, -0.00014495849609375, -1.3470642443280667e-05, -4.410743713378906e-05, -0.7290410995483398, -0.002208709716796875, -1.1444091796875e-05, -0.0016002655029296875, -1.9073486328125e-06, -2.9087066650390625e-05, 0.0, -6.21080253040418e-05, 0.0, -4.38690185546875e-05, -0.000225067138671875, 0.0, -6.866455078125e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.11288833618164062, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.020732402801513672, -1.52587890625e-05, -0.000705718994140625, 0.0, -2.6702880859375e-05, 0.0, -0.0025650260504335165, -0.000316619873046875, -0.000133514404296875, -0.0001621246337890625, -1.9073486328125e-05, -0.0005257674492895603, -2.384185791015625e-06, -0.014090538024902344, -0.08109760284423828, -0.030914306640625, -0.000244140625, -5.340576171875e-05, -3.4332275390625e-05, -0.000293731689453125, -0.0519181489944458, -1.0132738680113107e-05, -0.0025205612182617188, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006885528564453125, 0.0, -3.325939178466797e-05, -9.1552734375e-05, -0.004090070724487305, -8.785724639892578e-05, -0.004169464111328125, -0.0010023117065429688, -0.0005016326904296875, -1.4083954095840454, -1.9073486328125e-06, -0.0004024505615234375, -5.7220458984375e-05, -4.38690185546875e-05, 0.0, -0.05214118957519531, -3.814697265625e-06, -0.5978966951370239, -3.9695980376563966e-05, -0.0002765655517578125, -0.0072269439697265625, -0.0001850128173828125, -0.08758890628814697, -0.0001740304142003879, -0.000946044921875, -8.96453857421875e-05, -6.4849853515625e-05, 0.0, -0.018091320991516113, -0.0004001063061878085, -5.9126250562258065e-05, -2.4676019165781327e-05, -2.09808349609375e-05, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0018768310546875, 0.0, -0.0058727264404296875, 0.0, -0.0009423494338989258, 0.0, -2.288818359375e-05, -0.017167091369628906, -0.0006008148193359375, -3.814697265625e-06, -0.003932356834411621, -2.4557026335969567e-05, -0.00051116943359375, -0.0006866455078125, -6.866455078125e-05, -0.016454100608825684, -1.9073486328125e-06, -5.7220458984375e-05, -3.62396240234375e-05, -0.0010833740234375, -0.0006008148193359375, -5.340576171875e-05, -0.0001316070556640625, -0.00023710582172498107, 0.0, -1.9073486328125e-05, -0.0001430511474609375, -0.0013119367649778724, -6.198883056640625e-06, -2.288818359375e-05, -0.00031280517578125, -0.000560760498046875, -0.0003719329833984375, -0.0001373291015625, -0.0025463104248046875, -0.0001316070556640625, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007781982421875, -9.5367431640625e-06, -0.0001239776611328125, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005340576171875, -1.33514404296875e-05, -3.814697265625e-06, -0.0067806243896484375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016412734985351562, -5.7220458984375e-05, -0.0008611679077148438, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.0005515813827514648, -0.000278472900390625, -0.0003814697265625, -0.000244140625, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.012696266174316406, -0.0004730224609375, -0.05137825012207031]}, {"score": -4.699961168837035, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9635646343231201, 0.0, -1.7761144638061523, 0.0, -0.029119491577148438, 0.0, -0.0006475448608398438, 0.0, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001239776611328125, -1.20401346066501e-05, -4.410743713378906e-05, -0.7839803695678711, -0.002323150634765625, -1.1444091796875e-05, -0.00183868408203125, -1.9073486328125e-06, -2.9087066650390625e-05, 0.0, -6.0319885960780084e-05, 0.0, -4.57763671875e-05, -0.00022125244140625, 0.0, -6.67572021484375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.11907768249511719, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.021296977996826172, -1.52587890625e-05, -0.000701904296875, 0.0, -2.6702880859375e-05, 0.0, -0.002558231120929122, -0.000316619873046875, -0.000133514404296875, -0.0001621246337890625, -1.9073486328125e-05, -0.0005255290889181197, -2.384185791015625e-06, -0.0140533447265625, -0.08131599426269531, -0.030872344970703125, -0.0002460479736328125, -5.53131103515625e-05, -3.4332275390625e-05, -0.0002918243408203125, -0.05196106433868408, -1.0132738680113107e-05, -0.0025157928466796875, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006885528564453125, 0.0, -3.325939178466797e-05, -9.1552734375e-05, -0.0040891170501708984, -8.785724639892578e-05, -0.0041713714599609375, -0.0010204315185546875, -0.00048828125, -0.2985095977783203, -3.814697265625e-06, -0.0037631988525390625, -0.0006742477416992188, -3.62396240234375e-05, 0.0, -0.024282336235046387, -7.62939453125e-06, -0.08750636875629425, -4.768367489305092e-06, -0.000186920166015625, -0.0031280517578125, -7.62939453125e-06, -0.16625487804412842, -0.0002217047003796324, -0.0021419525146484375, -0.00019073486328125, -7.62939453125e-05, 0.0, -0.008400201797485352, -0.00033671018900349736, -5.3285304602468386e-05, -3.397406908334233e-05, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.002681732177734375, 0.0, -0.0032978057861328125, 0.0, -0.0009747743606567383, 0.0, -2.6702880859375e-05, -0.017673492431640625, -0.0007381439208984375, -3.814697265625e-06, -0.00413823127746582, -2.4437820684397593e-05, -0.00051116943359375, -0.0007076263427734375, -7.05718994140625e-05, -0.01629483699798584, -1.9073486328125e-06, -5.91278076171875e-05, -3.62396240234375e-05, -0.00104522705078125, -0.00060272216796875, -5.340576171875e-05, -0.0001201629638671875, -0.00024294696049764752, 0.0, -1.9073486328125e-05, -0.0001468658447265625, -0.0013498096959665418, -6.079673767089844e-06, -2.288818359375e-05, -0.000308990478515625, -0.000560760498046875, -0.00037384033203125, -0.0001373291015625, -0.002552032470703125, -0.000133514404296875, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007190704345703125, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.33514404296875e-05, -3.814697265625e-06, -0.007076263427734375, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016384124755859375, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.0005515813827514648, -0.0002803802490234375, -0.0003833770751953125, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0001983642578125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.0002079010009765625, -0.0003261566162109375, -0.012697219848632812, -0.0004749298095703125, -0.051751136779785156]}, {"score": -4.767315055892141, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "minions", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -1.8650872707366943, 0.0, -0.46296226978302, 0.0, -0.000324249267578125, 0.0, -0.000213623046875, 0.0, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001506805419921875, -1.5258772691595368e-05, -4.6133995056152344e-05, -1.2507009506225586, -4.9591064453125e-05, -1.9073486328125e-06, -0.0005321502685546875, -1.9073486328125e-06, -7.987022399902344e-06, 0.0, -5.0902075599879026e-05, 0.0, -9.72747802734375e-05, -6.866455078125e-05, 0.0, -2.47955322265625e-05, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.000614166259765625, -0.000518798828125, -3.62396240234375e-05, -0.00012969970703125, -9.5367431640625e-06, -0.24656212329864502, -1.9073486328125e-06, -0.000274658203125, -2.6702880859375e-05, -0.000179290771484375, 0.0, -0.000484466552734375, 0.0, -0.011870384216308594, -1.1444091796875e-05, -0.002266407012939453, -4.780292510986328e-05, -4.1961669921875e-05, -0.0005512237548828125, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0001373291015625, 0.0, -5.53131103515625e-05, -4.57763671875e-05, -0.0012328624725341797, -1.9073486328125e-06, -6.616101745748892e-05, -0.0001888275146484375, -0.07770156860351562, -9.5367431640625e-06, 0.0, 0.0, -0.005692601203918457, -3.933906555175781e-06, -0.0048198699951171875, 0.0, -1.9073486328125e-05, 0.0, -0.0034487247467041016, -8.392333984375e-05, -0.0001220703125, -0.0002269744873046875, -1.71661376953125e-05, -0.0005197887658141553, -5.125998541188892e-06, -0.00922393798828125, -0.006258964538574219, -0.01622295379638672, -7.82012939453125e-05, -2.47955322265625e-05, -1.33514404296875e-05, -0.0007171630859375, -0.03204452991485596, -1.2397689715726301e-05, -0.0013971328735351562, -3.0517578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0010204315185546875, 0.0, -2.753734588623047e-05, -7.450580596923828e-05, -0.004401206970214844, -8.022785186767578e-05, -0.00408172607421875, -0.000667572021484375, -0.000885009765625, -0.26029646396636963, -3.814697265625e-06, -0.004070281982421875, -0.0002613067626953125, -3.814697265625e-05, 0.0, -0.021344423294067383, -7.62939453125e-06, -0.08726178109645844, -4.768367489305092e-06, -0.000247955322265625, -0.0035190582275390625, -5.7220458984375e-06, -0.15275180339813232, -0.00019524575327523053, -0.004673004150390625, -0.000247955322265625, -7.43865966796875e-05, 0.0, -0.007372498512268066, -0.00034374051028862596, -5.173566751182079e-05, -3.635817120084539e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026397705078125, 0.0, -0.0030002593994140625, 0.0, -0.0009537935256958008, 0.0, -2.86102294921875e-05, -0.017694473266601562, -0.0007801055908203125, -3.814697265625e-06, -0.004176497459411621, -2.4557026335969567e-05, -0.0005130767822265625, -0.0007305145263671875, -7.05718994140625e-05, -0.016043782234191895, -1.9073486328125e-06, -5.91278076171875e-05, -3.62396240234375e-05, -0.0010318756103515625, -0.0005950927734375, -5.340576171875e-05, -0.0001277923583984375, -0.00023531766782980412, 0.0, -1.9073486328125e-05, -0.000148773193359375, -0.0013180093374103308, -6.079673767089844e-06, -2.288818359375e-05, -0.0003147125244140625, -0.0005588531494140625, -0.0003833770751953125, -0.0001373291015625, -0.002532958984375, -0.000125885009765625, -1.33514404296875e-05, -1.1444091796875e-05, -0.000736236572265625, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.52587890625e-05, -3.814697265625e-06, -0.006816864013671875, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016574859619140625, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005534887313842773, -0.0002803802490234375, -0.0003814697265625, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.012728691101074219, -0.000476837158203125, -0.0522613525390625]}, {"score": -4.795753476195387, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9647872447967529, -1.9073486328125e-06, -0.08308422565460205, 0.0, -0.000240325927734375, 0.0, -0.0001983642578125, 0.0, -3.4332275390625e-05, -2.6702880859375e-05, -0.000148773193359375, -1.5497189451707527e-05, -4.8041343688964844e-05, -1.1879043579101562, -4.57763671875e-05, -1.9073486328125e-06, -0.000530242919921875, -1.9073486328125e-06, -6.079673767089844e-06, 0.0, -5.1021277613472193e-05, 0.0, -9.72747802734375e-05, -6.866455078125e-05, 0.0, -2.47955322265625e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0006103515625, -0.000522613525390625, -3.62396240234375e-05, -0.00012969970703125, -9.5367431640625e-06, -1.6242314577102661, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.008522987365722656, 0.0, -0.011741399765014648, -3.814697265625e-06, -0.0021022558212280273, -5.7220458984375e-06, -7.82012939453125e-05, -9.918212890625e-05, -7.62939453125e-06, -6.103515625e-05, 0.0, -8.0108642578125e-05, 0.0, -6.29425048828125e-05, -2.6702880859375e-05, -0.0011774301528930664, -1.9073486328125e-06, -6.484967161668465e-05, -0.0002040863037109375, -0.07989311218261719, -9.5367431640625e-06, 0.0, 0.0, -0.005486607551574707, -3.933906555175781e-06, -0.004796028137207031, 0.0, -2.288818359375e-05, 0.0, -0.003448963165283203, -6.4849853515625e-05, -0.000110626220703125, -0.0002193450927734375, -1.71661376953125e-05, -0.0005321837961673737, -5.125998541188892e-06, -0.010072708129882812, -0.00606536865234375, -0.01666545867919922, -7.82012939453125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -0.0006866455078125, -0.024774670600891113, -1.2874520507466514e-05, -0.0012664794921875, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -2.753734588623047e-05, -7.450580596923828e-05, -0.004405975341796875, -8.022785186767578e-05, -0.004230499267578125, -0.0006742477416992188, -0.00087738037109375, -0.25132715702056885, -3.814697265625e-06, -0.0040454864501953125, -0.0002613067626953125, -3.814697265625e-05, 0.0, -0.021109819412231445, -7.62939453125e-06, -0.08779735863208771, -4.768367489305092e-06, -0.000247955322265625, -0.0035152435302734375, -5.7220458984375e-06, -0.15274322032928467, -0.00019476900342851877, -0.0047664642333984375, -0.000247955322265625, -7.43865966796875e-05, 0.0, -0.00740206241607666, -0.000341476290486753, -5.197407153900713e-05, -3.6238969187252223e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0026416778564453125, 0.0, -0.0029964447021484375, 0.0, -0.0009537935256958008, 0.0, -2.86102294921875e-05, -0.01769542694091797, -0.00078582763671875, -3.814697265625e-06, -0.004174590110778809, -2.4557026335969567e-05, -0.0005130767822265625, -0.0007305145263671875, -7.05718994140625e-05, -0.016033291816711426, -1.9073486328125e-06, -5.91278076171875e-05, -3.62396240234375e-05, -0.00102996826171875, -0.0005931854248046875, -5.340576171875e-05, -0.0001277923583984375, -0.0002350792638026178, 0.0, -1.71661376953125e-05, -0.000148773193359375, -0.0013152706669643521, -6.079673767089844e-06, -2.288818359375e-05, -0.0003147125244140625, -0.0005588531494140625, -0.0003833770751953125, -0.0001373291015625, -0.002532958984375, -0.000125885009765625, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007343292236328125, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.52587890625e-05, -3.814697265625e-06, -0.0068187713623046875, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016565322875976562, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005534887313842773, -0.0002803802490234375, -0.0003814697265625, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.012727737426757812, -0.000476837158203125, -0.052245140075683594]}, {"score": -4.940817532398796, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9635646343231201, 0.0, -0.22243690490722656, 0.0, -0.0003604888916015625, 0.0, -0.000286102294921875, 0.0, -4.1961669921875e-05, -2.6702880859375e-05, -0.00014495849609375, -1.3470642443280667e-05, -4.410743713378906e-05, -1.1844291687011719, -4.76837158203125e-05, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -7.987022399902344e-06, 0.0, -5.376307308324613e-05, 0.0, -0.0001010894775390625, -6.67572021484375e-05, 0.0, -2.47955322265625e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0006122589111328125, -0.000522613525390625, -3.62396240234375e-05, -0.0001316070556640625, -9.5367431640625e-06, -1.6323729753494263, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.008481025695800781, 0.0, -0.01176142692565918, -3.814697265625e-06, -0.0021022558212280273, -5.7220458984375e-06, -7.82012939453125e-05, -9.918212890625e-05, -7.62939453125e-06, -6.103515625e-05, 0.0, -8.0108642578125e-05, 0.0, -6.29425048828125e-05, -2.6702880859375e-05, -0.0011774301528930664, -1.9073486328125e-06, -6.484967161668465e-05, -0.0002040863037109375, -0.08204078674316406, -9.5367431640625e-06, 0.0, 0.0, -0.0054923295974731445, -3.933906555175781e-06, -0.004779815673828125, 0.0, -2.288818359375e-05, 0.0, -0.003440380096435547, -6.4849853515625e-05, -0.000110626220703125, -0.0002193450927734375, -1.71661376953125e-05, -0.0005320646450854838, -5.125998541188892e-06, -0.010058403015136719, -0.00604248046875, -0.016704559326171875, -7.82012939453125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -0.0006847381591796875, -0.02475273609161377, -1.2874520507466514e-05, -0.0012664794921875, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0009860992431640625, 0.0, -2.753734588623047e-05, -7.450580596923828e-05, -0.004405975341796875, -8.022785186767578e-05, -0.00423431396484375, -0.0006742477416992188, -0.00087738037109375, -0.2512565851211548, -3.814697265625e-06, -0.0040435791015625, -0.0002613067626953125, -3.814697265625e-05, 0.0, -0.02110886573791504, -7.62939453125e-06, -0.0877925306558609, -4.768367489305092e-06, -0.000247955322265625, -0.0035152435302734375, -5.7220458984375e-06, -0.1527475118637085, -0.00019476900342851877, -0.0047626495361328125, -0.000247955322265625, -7.43865966796875e-05, 0.0, -0.007399201393127441, -0.000341476290486753, -5.197407153900713e-05, -3.6238969187252223e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0026416778564453125, 0.0, -0.0029964447021484375, 0.0, -0.0009537935256958008, 0.0, -2.86102294921875e-05, -0.017694473266601562, -0.00078582763671875, -3.814697265625e-06, -0.004174590110778809, -2.4557026335969567e-05, -0.0005130767822265625, -0.0007305145263671875, -7.05718994140625e-05, -0.016034245491027832, -1.9073486328125e-06, -5.91278076171875e-05, -3.62396240234375e-05, -0.00102996826171875, -0.0005931854248046875, -5.340576171875e-05, -0.0001277923583984375, -0.0002350792638026178, 0.0, -1.71661376953125e-05, -0.000148773193359375, -0.001315151690505445, -6.079673767089844e-06, -2.288818359375e-05, -0.0003147125244140625, -0.0005588531494140625, -0.0003833770751953125, -0.0001373291015625, -0.002532958984375, -0.000125885009765625, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007343292236328125, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.52587890625e-05, -3.814697265625e-06, -0.0068187713623046875, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016565322875976562, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005534887313842773, -0.0002803802490234375, -0.0003814697265625, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.012728691101074219, -0.000476837158203125, -0.052249908447265625]}, {"score": -5.128979866323334, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "minions", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "targets", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(targets)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "targets"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9647872447967529, -1.9073486328125e-06, -0.08308422565460205, 0.0, -0.000240325927734375, 0.0, -0.0001983642578125, 0.0, -3.4332275390625e-05, -2.6702880859375e-05, -0.000148773193359375, -1.5497189451707527e-05, -4.8041343688964844e-05, -1.1879043579101562, -4.57763671875e-05, -1.9073486328125e-06, -0.000530242919921875, -1.9073486328125e-06, -6.079673767089844e-06, 0.0, -5.1021277613472193e-05, 0.0, -9.72747802734375e-05, -6.866455078125e-05, 0.0, -2.47955322265625e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0006103515625, -0.000522613525390625, -3.62396240234375e-05, -0.00012969970703125, -9.5367431640625e-06, -0.24669373035430908, -1.9073486328125e-06, -0.000274658203125, -2.6702880859375e-05, -0.000179290771484375, 0.0, -0.0004825592041015625, 0.0, -0.01190948486328125, -1.1444091796875e-05, -0.0022683143615722656, -4.780292510986328e-05, -4.1961669921875e-05, -0.0005512237548828125, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0001373291015625, 0.0, -5.53131103515625e-05, -4.57763671875e-05, -0.0012328624725341797, -1.9073486328125e-06, -6.616101745748892e-05, -0.0001888275146484375, -0.07757568359375, -9.5367431640625e-06, 0.0, 0.0, -0.005688905715942383, -3.933906555175781e-06, -0.004822731018066406, 0.0, -1.9073486328125e-05, 0.0, -0.00345456600189209, -8.392333984375e-05, -0.0001201629638671875, -0.0002269744873046875, -1.71661376953125e-05, -0.0005202654283493757, -5.125998541188892e-06, -0.0092315673828125, -0.006267547607421875, -0.01622486114501953, -7.82012939453125e-05, -2.47955322265625e-05, -1.33514404296875e-05, -0.0007190704345703125, -0.031981587409973145, -1.2397689715726301e-05, -0.0013980865478515625, -3.0517578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0010204315185546875, 0.0, -2.753734588623047e-05, -7.450580596923828e-05, -0.00440216064453125, -8.022785186767578e-05, -0.0040798187255859375, -0.000667572021484375, -0.000885009765625, -1.5277715921401978, -1.9073486328125e-06, -0.000431060791015625, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -0.045558810234069824, -3.814697265625e-06, -0.5861444473266602, -3.3616517612244934e-05, -0.0002288818359375, -0.0053863525390625, -0.0001163482666015625, -0.06448984146118164, -0.0001436368766007945, -0.001956939697265625, -0.0001125335693359375, -6.67572021484375e-05, 0.0, -0.014375567436218262, -0.00038342276820912957, -5.7695819123182446e-05, -2.7179348762729205e-05, -1.52587890625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.0018672943115234375, 0.0, -0.005207061767578125, 0.0, -0.0009175539016723633, 0.0, -2.288818359375e-05, -0.01734638214111328, -0.0006351470947265625, -3.814697265625e-06, -0.003917098045349121, -2.4795443096081726e-05, -0.0005092620849609375, -0.0007114410400390625, -6.866455078125e-05, -0.016265869140625, -1.9073486328125e-06, -5.7220458984375e-05, -3.814697265625e-05, -0.0010700225830078125, -0.0005970001220703125, -5.53131103515625e-05, -0.0001373291015625, -0.00023186068574432284, 0.0, -1.9073486328125e-05, -0.00014495849609375, -0.0012865678872913122, -6.198883056640625e-06, -2.288818359375e-05, -0.000316619873046875, -0.000560760498046875, -0.0003814697265625, -0.0001373291015625, -0.0025272369384765625, -0.0001239776611328125, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007991790771484375, -9.5367431640625e-06, -0.0001239776611328125, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005340576171875, -1.52587890625e-05, -3.814697265625e-06, -0.0064792633056640625, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016613006591796875, -5.7220458984375e-05, -0.00086212158203125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005534887313842773, -0.000278472900390625, -0.0003795623779296875, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.012727737426757812, -0.0004730224609375, -0.05186939239501953]}, {"score": -5.206737568483504, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "minions", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9647872447967529, -1.9073486328125e-06, -0.08308422565460205, 0.0, -0.000240325927734375, 0.0, -0.0001983642578125, 0.0, -3.4332275390625e-05, -2.6702880859375e-05, -0.000148773193359375, -1.5497189451707527e-05, -4.8041343688964844e-05, -1.5945615768432617, -0.0030498504638671875, -5.7220458984375e-06, -0.0004291534423828125, -1.9073486328125e-06, -2.7060508728027344e-05, 0.0, -8.249273378169164e-05, 0.0, -3.4332275390625e-05, -0.0001163482666015625, 0.0, -4.76837158203125e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.000171661376953125, -0.0003662109375, -3.814697265625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.5219346284866333, 0.0, -0.0002307891845703125, -2.09808349609375e-05, -0.000514984130859375, 0.0, -0.000720977783203125, 0.0, -0.027643203735351562, -7.62939453125e-06, -0.002605915069580078, -5.161762237548828e-05, -0.000347137451171875, -0.0012722015380859375, -7.62939453125e-06, -0.00011444091796875, 0.0, -0.000133514404296875, 0.0, -5.53131103515625e-05, -4.76837158203125e-05, -0.0012631416320800781, -1.9073486328125e-06, -6.532656698254868e-05, -0.00019073486328125, -0.0089111328125, -0.000209808349609375, -3.814697265625e-06, 0.0, -0.004327893257141113, -3.814697265625e-06, -0.05029604583978653, -3.814697265625e-06, -0.005886077880859375, -0.0003509521484375, -0.000118255615234375, -0.6662540435791016, 0.0, -0.00043976306915283203, 0.0, -0.0014019012451171875, -2.86102294921875e-05, -0.03510570526123047, -7.82012939453125e-05, 0.0, 0.0, -0.3264181613922119, -3.814697265625e-06, -0.005924224853515625, 0.0, -1.9073486328125e-06, 0.0, -0.0034824609756469727, -0.00016021728515625, -0.00014495849609375, -0.000110626220703125, -2.6702880859375e-05, -0.0004294565296731889, -2.622604142743512e-06, -0.009623527526855469, -0.007706642150878906, -0.022899627685546875, -0.0001163482666015625, -4.1961669921875e-05, -1.52587890625e-05, -0.000385284423828125, -0.060233235359191895, -8.702239938429557e-06, -0.0013055801391601562, -2.86102294921875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006656646728515625, 0.0, -2.574920654296875e-05, -8.20159912109375e-05, -0.004506826400756836, -7.832050323486328e-05, -0.0035152435302734375, -0.00069427490234375, -0.0008602142333984375, -0.28289544582366943, -3.814697265625e-06, -0.00376129150390625, -0.0003337860107421875, -3.62396240234375e-05, 0.0, -0.023453831672668457, -7.62939453125e-06, -0.08458457887172699, -4.768367489305092e-06, -0.0002346038818359375, -0.0033626556396484375, -5.7220458984375e-06, -0.15952610969543457, -0.00019524575327523053, -0.0036907196044921875, -0.000194549560546875, -7.62939453125e-05, 0.0, -0.007076740264892578, -0.0003250309091527015, -5.411972961155698e-05, -3.2305197237292305e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0027065277099609375, 0.0, -0.0028228759765625, 0.0, -0.0009671449661254883, 0.0, -2.86102294921875e-05, -0.017679214477539062, -0.0007953643798828125, -3.814697265625e-06, -0.00417935848236084, -2.4557026335969567e-05, -0.000514984130859375, -0.000720977783203125, -6.866455078125e-05, -0.01641702651977539, -1.9073486328125e-06, -5.7220458984375e-05, -3.62396240234375e-05, -0.0010395050048828125, -0.000591278076171875, -5.340576171875e-05, -0.0001316070556640625, -0.00023460245574824512, 0.0, -1.71661376953125e-05, -0.000148773193359375, -0.0013059809571132064, -6.079673767089844e-06, -2.288818359375e-05, -0.00031280517578125, -0.0005588531494140625, -0.000385284423828125, -0.0001373291015625, -0.0025310516357421875, -0.0001239776611328125, -1.33514404296875e-05, -1.1444091796875e-05, -0.00074005126953125, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.52587890625e-05, -3.814697265625e-06, -0.0068817138671875, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016660690307617188, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005534887313842773, -0.0002803802490234375, -0.0003814697265625, -0.000240325927734375, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.012732505798339844, -0.000476837158203125, -0.052428245544433594]}, {"score": -5.264664475787413, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "minions", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "targets", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(targets)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "targets"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9635646343231201, 0.0, -0.22243690490722656, 0.0, -0.0003604888916015625, 0.0, -0.000286102294921875, 0.0, -4.1961669921875e-05, -2.6702880859375e-05, -0.00014495849609375, -1.3470642443280667e-05, -4.410743713378906e-05, -1.1844291687011719, -4.76837158203125e-05, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -7.987022399902344e-06, 0.0, -5.376307308324613e-05, 0.0, -0.0001010894775390625, -6.67572021484375e-05, 0.0, -2.47955322265625e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0006122589111328125, -0.000522613525390625, -3.62396240234375e-05, -0.0001316070556640625, -9.5367431640625e-06, -0.2451564073562622, -1.9073486328125e-06, -0.0002765655517578125, -2.6702880859375e-05, -0.0001811981201171875, 0.0, -0.00048065185546875, 0.0, -0.011921882629394531, -1.1444091796875e-05, -0.0022683143615722656, -4.971027374267578e-05, -4.1961669921875e-05, -0.0005512237548828125, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0001373291015625, 0.0, -5.53131103515625e-05, -4.57763671875e-05, -0.0012347698211669922, -1.9073486328125e-06, -6.616101745748892e-05, -0.0001888275146484375, -0.07967281341552734, -9.5367431640625e-06, 0.0, 0.0, -0.005695462226867676, -3.933906555175781e-06, -0.0048065185546875, 0.0, -1.9073486328125e-05, 0.0, -0.003445863723754883, -8.392333984375e-05, -0.0001220703125, -0.0002269744873046875, -1.71661376953125e-05, -0.000520027126185596, -5.125998541188892e-06, -0.009214401245117188, -0.006244659423828125, -0.01626110076904297, -7.82012939453125e-05, -2.47955322265625e-05, -1.33514404296875e-05, -0.0007171630859375, -0.03198349475860596, -1.2397689715726301e-05, -0.0013980865478515625, -3.0517578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0010223388671875, 0.0, -2.753734588623047e-05, -7.450580596923828e-05, -0.00440216064453125, -8.022785186767578e-05, -0.00408172607421875, -0.000667572021484375, -0.000885009765625, -1.5280004739761353, -1.9073486328125e-06, -0.000431060791015625, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -0.045558810234069824, -3.814697265625e-06, -0.5861401557922363, -3.3616517612244934e-05, -0.0002288818359375, -0.0053863525390625, -0.0001163482666015625, -0.06448602676391602, -0.0001436368766007945, -0.0019550323486328125, -0.0001125335693359375, -6.67572021484375e-05, 0.0, -0.014368891716003418, -0.00038354191929101944, -5.7695819123182446e-05, -2.7179348762729205e-05, -1.52587890625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.0018672943115234375, 0.0, -0.0052051544189453125, 0.0, -0.0009175539016723633, 0.0, -2.288818359375e-05, -0.017345428466796875, -0.0006351470947265625, -3.814697265625e-06, -0.003917098045349121, -2.4795443096081726e-05, -0.0005092620849609375, -0.0007114410400390625, -6.866455078125e-05, -0.016267776489257812, -1.9073486328125e-06, -5.7220458984375e-05, -3.814697265625e-05, -0.0010700225830078125, -0.0005970001220703125, -5.53131103515625e-05, -0.0001373291015625, -0.00023186068574432284, 0.0, -1.9073486328125e-05, -0.00014495849609375, -0.0012865678872913122, -6.198883056640625e-06, -2.288818359375e-05, -0.000316619873046875, -0.000560760498046875, -0.0003814697265625, -0.0001373291015625, -0.0025272369384765625, -0.0001239776611328125, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007991790771484375, -9.5367431640625e-06, -0.0001239776611328125, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005340576171875, -1.52587890625e-05, -3.814697265625e-06, -0.0064792633056640625, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016613006591796875, -5.7220458984375e-05, -0.00086212158203125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005534887313842773, -0.000278472900390625, -0.0003795623779296875, -0.0002422332763671875, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.012727737426757812, -0.0004730224609375, -0.05187416076660156]}, {"score": -5.427175631764612, "choice_history": [59, 127, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "minions", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Name", "id": "minion"}], "hole1": "remove", "_type": "Template9", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 4, "_type": "Template3", "hole0": "Multi-Shot", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Multi-Shot", "hole3": "use"}, "score_history": [-0.0016183853149414062, -0.06723785400390625, -0.00023029703879728913, -5.364416665543104e-06, -0.003191661322489381, -1.1086458471254446e-05, -0.0005627870559692383, -1.1444091796875e-05, -6.67572021484375e-05, -4.1961669921875e-05, -0.0011310577392578125, -0.0001392364501953125, -0.00036311126314103603, -1.7165990357170813e-05, -2.169585604860913e-05, 0.0, -0.9635646343231201, 0.0, -0.22243690490722656, 0.0, -0.0003604888916015625, 0.0, -0.000286102294921875, 0.0, -4.1961669921875e-05, -2.6702880859375e-05, -0.00014495849609375, -1.3470642443280667e-05, -4.410743713378906e-05, -1.6602039337158203, -0.0032806396484375, -5.7220458984375e-06, -0.000438690185546875, -1.9073486328125e-06, -2.7060508728027344e-05, 0.0, -8.428087312495336e-05, 0.0, -3.62396240234375e-05, -0.00011444091796875, 0.0, -4.76837158203125e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001697540283203125, -0.0003604888916015625, -3.814697265625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.5195866823196411, 0.0, -0.0002307891845703125, -2.09808349609375e-05, -0.000553131103515625, 0.0, -0.0007305145263671875, 0.0, -0.038683414459228516, -7.62939453125e-06, -0.0028079748153686523, -5.733966827392578e-05, -0.0009288787841796875, -0.0016689300537109375, -7.62939453125e-06, -0.0001201629638671875, 0.0, -0.0001316070556640625, 0.0, -5.53131103515625e-05, -4.76837158203125e-05, -0.0012611150741577148, -1.9073486328125e-06, -6.496894638985395e-05, -0.00019073486328125, -0.009281158447265625, -0.0002155303955078125, -3.814697265625e-06, 0.0, -0.004312634468078613, -3.814697265625e-06, -0.0510849729180336, -3.814697265625e-06, -0.005953788757324219, -0.0003490447998046875, -0.0001163482666015625, -0.6684179306030273, 0.0, -0.0004407167434692383, 0.0, -0.0014190673828125, -2.86102294921875e-05, -0.035286903381347656, -7.82012939453125e-05, 0.0, 0.0, -0.3290541172027588, -3.814697265625e-06, -0.0059452056884765625, 0.0, -1.9073486328125e-06, 0.0, -0.00348818302154541, -0.0001621246337890625, -0.00014495849609375, -0.000110626220703125, -2.6702880859375e-05, -0.0004294565296731889, -2.622604142743512e-06, -0.009608268737792969, -0.007702827453613281, -0.02296733856201172, -0.0001163482666015625, -4.1961669921875e-05, -1.52587890625e-05, -0.000385284423828125, -0.06032669544219971, -8.583032467868179e-06, -0.0013055801391601562, -2.86102294921875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00066375732421875, 0.0, -2.574920654296875e-05, -8.20159912109375e-05, -0.00450587272644043, -7.832050323486328e-05, -0.0035152435302734375, -0.00069427490234375, -0.0008602142333984375, -0.28282296657562256, -3.814697265625e-06, -0.00376129150390625, -0.0003337860107421875, -3.62396240234375e-05, 0.0, -0.023451924324035645, -7.62939453125e-06, -0.08458475768566132, -4.768367489305092e-06, -0.0002346038818359375, -0.00336456298828125, -5.7220458984375e-06, -0.1595160961151123, -0.00019524575327523053, -0.003688812255859375, -0.000194549560546875, -7.62939453125e-05, 0.0, -0.007074832916259766, -0.0003250309091527015, -5.411972961155698e-05, -3.2305197237292305e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0027065277099609375, 0.0, -0.0028228759765625, 0.0, -0.0009671449661254883, 0.0, -2.86102294921875e-05, -0.017679214477539062, -0.0007953643798828125, -3.814697265625e-06, -0.004180312156677246, -2.4557026335969567e-05, -0.000514984130859375, -0.000720977783203125, -6.866455078125e-05, -0.016417980194091797, -1.9073486328125e-06, -5.7220458984375e-05, -3.62396240234375e-05, -0.0010395050048828125, -0.000591278076171875, -5.340576171875e-05, -0.0001316070556640625, -0.00023460245574824512, 0.0, -1.71661376953125e-05, -0.000148773193359375, -0.0013058618642389774, -6.079673767089844e-06, -2.288818359375e-05, -0.00031280517578125, -0.0005588531494140625, -0.000385284423828125, -0.0001373291015625, -0.0025310516357421875, -0.0001239776611328125, -1.33514404296875e-05, -1.1444091796875e-05, -0.00074005126953125, -9.5367431640625e-06, -0.000125885009765625, 0.0, -7.867813110351562e-06, -1.52587890625e-05, -0.0005397796630859375, -1.52587890625e-05, -3.814697265625e-06, -0.0068817138671875, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0016660690307617188, -5.7220458984375e-05, -0.0008554458618164062, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005534887313842773, -0.0002803802490234375, -0.0003814697265625, -0.000240325927734375, -3.814697265625e-06, -0.0001544952392578125, 0.0, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.0002002716064453125, -0.0005308389663696289, -3.814697265625e-06, -7.796284626238048e-05, -0.000209808349609375, -0.000324249267578125, -0.012732505798339844, -0.000476837158203125, -0.05243206024169922]}], "gold_code": "class MultiShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            targets.remove(target)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}
{"beams": [{"score": -2.006983524478123, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "<UNK>", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -0.45853614807128906, -1.1920928244535389e-07, -0.0028858184814453125, 0.0, -0.0006809234619140625, -0.0003935098648071289, 0.0, -0.016275405883789062, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.000621795654296875, -6.866455078125e-05, -0.0027980804443359375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004405975341796875, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -0.15874946117401123, 0.0, -3.3140171581180766e-05, 0.0, -8.428037108387798e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -0.23095226287841797, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.67572021484375e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -8.7738037109375e-05, -0.009335517883300781, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00010013580322265625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0058502512983977795, 0.0, -1.9073486328125e-06, -0.0076351165771484375, -3.24249267578125e-05, -0.0061931610107421875, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004444122314453125, 0.0, -0.48159146308898926, -2.1457672119140625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -0.0002346038818359375, -1.9073486328125e-06, 0.0, -0.06378042697906494, -0.0007865428924560547, -0.000133514404296875, -0.008710861206054688, -1.33514404296875e-05, -0.2496190369129181, -0.20176422595977783]}, {"score": -2.3988247498041844, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -0.45853614807128906, -1.1920928244535389e-07, -0.0028858184814453125, 0.0, -0.0006809234619140625, -0.0003935098648071289, 0.0, -0.016275405883789062, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.000621795654296875, -6.866455078125e-05, -0.0027980804443359375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004405975341796875, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -0.15874946117401123, 0.0, -3.3140171581180766e-05, 0.0, -8.428037108387798e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -0.23095226287841797, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.67572021484375e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -8.7738037109375e-05, -0.009335517883300781, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00010013580322265625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0058502512983977795, 0.0, -1.9073486328125e-06, -0.0076351165771484375, -3.24249267578125e-05, -0.0061931610107421875, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004444122314453125, 0.0, -1.0434000492095947, 0.0, -3.814697265625e-06, -0.34798240661621094, 0.0, -0.0071388110518455505, 0.0]}, {"score": -2.465741776674399, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -0.45853614807128906, -1.1920928244535389e-07, -0.0028858184814453125, 0.0, -0.0006809234619140625, -0.0003935098648071289, 0.0, -0.016275405883789062, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.000621795654296875, -6.866455078125e-05, -0.0027980804443359375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004405975341796875, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -0.15874946117401123, 0.0, -3.3140171581180766e-05, 0.0, -8.428037108387798e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -1.6611652374267578, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00017832379671745002, -7.2479248046875e-05, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -5.14984130859375e-05, 0.0, 0.0, -5.7220458984375e-05, -0.00762176513671875, -4.38690185546875e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.04823422059416771, 0.0, -1.9073486328125e-06, -0.009105682373046875]}, {"score": -3.2274062394267773, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Frozen", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Frozen"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -0.45853614807128906, -1.1920928244535389e-07, -0.0028858184814453125, 0.0, -0.0006809234619140625, -0.0003935098648071289, 0.0, -0.016275405883789062, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.000621795654296875, -6.866455078125e-05, -0.0027980804443359375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004405975341796875, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -0.15874946117401123, 0.0, -3.3140171581180766e-05, 0.0, -8.428037108387798e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -0.23095226287841797, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.67572021484375e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -8.7738037109375e-05, -0.009335517883300781, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00010013580322265625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0058502512983977795, 0.0, -1.9073486328125e-06, -0.0076351165771484375, -3.24249267578125e-05, -0.0061931610107421875, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004444122314453125, 0.0, -0.48159146308898926, -2.1457672119140625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -0.0002346038818359375, -1.9073486328125e-06, 0.0, -0.06378042697906494, -0.0007865428924560547, -0.000133514404296875, -0.008710861206054688, -1.33514404296875e-05, -1.6718039512634277, -2.0265579223632812e-06]}, {"score": -3.327666407817162, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "<UNK>", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -1.7505531311035156, 0.0, -0.00267791748046875, 0.0, -0.00019073486328125, -0.00012671946024056524, 0.0, -0.023903846740722656, 0.0, -0.00035858154296875, 0.0, -0.000522613525390625, -7.43865966796875e-05, -0.00384521484375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004100799560546875, -7.62939453125e-06, -6.29425048828125e-05, 0.0, -0.17845892906188965, 0.0, -3.063678013859317e-05, 0.0, -8.14194354461506e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -0.23332691192626953, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.67572021484375e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, -0.009311676025390625, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00010013580322265625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.005849059205502272, 0.0, -1.9073486328125e-06, -0.0076313018798828125, -3.24249267578125e-05, -0.0062427520751953125, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004425048828125, 0.0, -0.4806206226348877, -2.1457672119140625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -0.000232696533203125, -1.9073486328125e-06, 0.0, -0.06375753879547119, -0.0007846355438232422, -0.000133514404296875, -0.00870513916015625, -1.33514404296875e-05, -0.24921169877052307, -0.2020115852355957]}, {"score": -3.7226332355226646, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -1.7505531311035156, 0.0, -0.00267791748046875, 0.0, -0.00019073486328125, -0.00012671946024056524, 0.0, -0.023903846740722656, 0.0, -0.00035858154296875, 0.0, -0.000522613525390625, -7.43865966796875e-05, -0.00384521484375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004100799560546875, -7.62939453125e-06, -6.29425048828125e-05, 0.0, -0.17845892906188965, 0.0, -3.063678013859317e-05, 0.0, -8.14194354461506e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -0.23332691192626953, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.67572021484375e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, -0.009311676025390625, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00010013580322265625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.005849059205502272, 0.0, -1.9073486328125e-06, -0.0076313018798828125, -3.24249267578125e-05, -0.0062427520751953125, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004425048828125, 0.0, -1.0451204776763916, 0.0, -3.814697265625e-06, -0.34821510314941406, 0.0, -0.007148044183850288, 0.0]}, {"score": -3.7761874429912154, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -1.7505531311035156, 0.0, -0.00267791748046875, 0.0, -0.00019073486328125, -0.00012671946024056524, 0.0, -0.023903846740722656, 0.0, -0.00035858154296875, 0.0, -0.000522613525390625, -7.43865966796875e-05, -0.00384521484375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004100799560546875, -7.62939453125e-06, -6.29425048828125e-05, 0.0, -0.17845892906188965, 0.0, -3.063678013859317e-05, 0.0, -8.14194354461506e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -1.6521034240722656, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000178800561116077, -7.2479248046875e-05, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -5.14984130859375e-05, 0.0, 0.0, -5.91278076171875e-05, -0.007587432861328125, -4.38690185546875e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.0483238659799099, 0.0, -1.9073486328125e-06, -0.009100914001464844]}, {"score": -3.919413065827534, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -0.45853614807128906, -1.1920928244535389e-07, -0.0028858184814453125, 0.0, -0.0006809234619140625, -0.0003935098648071289, 0.0, -0.016275405883789062, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.000621795654296875, -6.866455078125e-05, -0.0027980804443359375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004405975341796875, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -0.15874946117401123, 0.0, -3.3140171581180766e-05, 0.0, -8.428037108387798e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -0.23095226287841797, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.67572021484375e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -8.7738037109375e-05, -0.009335517883300781, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00010013580322265625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0058502512983977795, 0.0, -1.9073486328125e-06, -0.0076351165771484375, -3.24249267578125e-05, -0.0061931610107421875, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004444122314453125, 0.0, -1.0434000492095947, 0.0, -3.814697265625e-06, -1.8757095336914062]}, {"score": -4.011127439617262, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "<UNK>", "<UNK>", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK><UNK>()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK><UNK>"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -0.45853614807128906, -1.1920928244535389e-07, -0.0028858184814453125, 0.0, -0.0006809234619140625, -0.0003935098648071289, 0.0, -0.016275405883789062, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.000621795654296875, -6.866455078125e-05, -0.0027980804443359375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004405975341796875, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -0.15874946117401123, 0.0, -3.3140171581180766e-05, 0.0, -8.428037108387798e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -0.23095226287841797, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.67572021484375e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -8.7738037109375e-05, -0.009335517883300781, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00010013580322265625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0058502512983977795, 0.0, -1.9073486328125e-06, -0.0076351165771484375, -3.24249267578125e-05, -0.0061931610107421875, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004444122314453125, 0.0, -0.48159146308898926, -2.1457672119140625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -0.0002346038818359375, -1.9073486328125e-06, 0.0, -0.06378042697906494, -0.0007865428924560547, -0.000133514404296875, -0.008710861206054688, -1.33514404296875e-05, -0.2496190369129181, -2.19351863861084, -0.012389502488076687]}, {"score": -4.056947834060843, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "<UNK>", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_friendly_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -0.45853614807128906, -1.1920928244535389e-07, -0.0028858184814453125, 0.0, -0.0006809234619140625, -0.0003935098648071289, 0.0, -0.016275405883789062, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.000621795654296875, -6.866455078125e-05, -0.0027980804443359375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004405975341796875, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -2.2090251445770264, -1.71661376953125e-05, -2.396105628577061e-05, 0.0, -0.0001028773986035958, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.288818359375e-05, -0.2307138442993164, -2.6702880859375e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.866455078125e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, -0.009265899658203125, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.005889352411031723, 0.0, -1.9073486328125e-06, -0.007632255554199219, -3.24249267578125e-05, -0.0063648223876953125, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004444122314453125, 0.0, -0.480877161026001, -2.1457672119140625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -0.0002346038818359375, -1.9073486328125e-06, 0.0, -0.06393492221832275, -0.0007846355438232422, -0.000133514404296875, -0.0087127685546875, -1.33514404296875e-05, -0.2503766119480133, -0.20132768154144287]}, {"score": -4.119389986909077, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 56], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template18"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -0.45853614807128906, -1.1920928244535389e-07, -0.0028858184814453125, 0.0, -0.0006809234619140625, -0.0003935098648071289, 0.0, -0.016275405883789062, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.000621795654296875, -6.866455078125e-05, -0.0027980804443359375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004405975341796875, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -0.15874946117401123, 0.0, -3.3140171581180766e-05, 0.0, -8.428037108387798e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -0.23095226287841797, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.67572021484375e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -8.7738037109375e-05, -0.009335517883300781, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00010013580322265625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0058502512983977795, 0.0, -1.9073486328125e-06, -0.0076351165771484375, -3.24249267578125e-05, -0.0061931610107421875, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004444122314453125, 0.0, -1.0434000492095947, 0.0, -3.814697265625e-06, -2.075686454772949]}, {"score": -4.49771941673913, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "<UNK>", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -2.919282913208008, 0.0, -0.0248870849609375, -3.814697265625e-06, -6.103515625e-05, -0.00040161609649658203, 0.0, -0.012933731079101562, 0.0, -0.0003299713134765625, 0.0, -0.0005645751953125, -7.43865966796875e-05, -0.002902984619140625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004177093505859375, -7.62939453125e-06, -6.103515625e-05, 0.0, -0.1686410903930664, 0.0, -3.468989598331973e-05, 0.0, -8.261149196187034e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -0.23406982421875, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.67572021484375e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -8.96453857421875e-05, -0.009227752685546875, -3.0517578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00010013580322265625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.00579410744830966, 0.0, -1.9073486328125e-06, -0.007657051086425781, -3.24249267578125e-05, -0.0062103271484375, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004444122314453125, 0.0, -0.4807140827178955, -2.1457672119140625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -0.0002346038818359375, -1.9073486328125e-06, 0.0, -0.06375563144683838, -0.0007865428924560547, -0.000133514404296875, -0.008707046508789062, -1.33514404296875e-05, -0.24926438927650452, -0.20193135738372803]}, {"score": -4.513748787665968, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_friendly_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -0.45853614807128906, -1.1920928244535389e-07, -0.0028858184814453125, 0.0, -0.0006809234619140625, -0.0003935098648071289, 0.0, -0.016275405883789062, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.000621795654296875, -6.866455078125e-05, -0.0027980804443359375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004405975341796875, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -2.2090251445770264, -1.71661376953125e-05, -2.396105628577061e-05, 0.0, -0.0001028773986035958, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.288818359375e-05, -1.658583641052246, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000185117925866507, -7.43865966796875e-05, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -4.9591064453125e-05, 0.0, 0.0, -5.7220458984375e-05, -0.0074329376220703125, -4.38690185546875e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.048700686544179916, 0.0, -1.9073486328125e-06, -0.009107589721679688]}, {"score": -4.549754834168709, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Frozen", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Frozen"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -1.7505531311035156, 0.0, -0.00267791748046875, 0.0, -0.00019073486328125, -0.00012671946024056524, 0.0, -0.023903846740722656, 0.0, -0.00035858154296875, 0.0, -0.000522613525390625, -7.43865966796875e-05, -0.00384521484375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004100799560546875, -7.62939453125e-06, -6.29425048828125e-05, 0.0, -0.17845892906188965, 0.0, -3.063678013859317e-05, 0.0, -8.14194354461506e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -0.23332691192626953, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.9577233110321686e-05, -6.67572021484375e-05, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, -0.009311676025390625, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00010013580322265625, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.005849059205502272, 0.0, -1.9073486328125e-06, -0.0076313018798828125, -3.24249267578125e-05, -0.0062427520751953125, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.1444091796875e-05, -0.0004425048828125, 0.0, -0.4806206226348877, -2.1457672119140625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -0.000232696533203125, -1.9073486328125e-06, 0.0, -0.06375753879547119, -0.0007846355438232422, -0.000133514404296875, -0.00870513916015625, -1.33514404296875e-05, -1.6733096837997437, -2.0265579223632812e-06]}, {"score": -4.94125916893114, "choice_history": [59, 126, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Power", " ", "Word", " ", "Shield", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "PowerWordShield", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.000171661376953125, -6.5565000113565475e-06, -0.004193343687802553, -0.07051244378089905, -6.914134246471804e-06, -0.0003572385758161545, -1.9073486328125e-06, -3.576278118089249e-07, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0011844635009765625, -4.76837158203125e-05, -0.00020599365234375, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0035567341838032007, -7.641315460205078e-05, -0.0066494932398200035, -0.007649779319763184, -0.0018059015274047852, -1.9073486328125e-06, -0.0002841949462890625, -0.000171661376953125, 0.0, -7.62939453125e-06, 0.0, -5.841255187988281e-06, -8.344646857949556e-07, -2.919282913208008, 0.0, -0.0248870849609375, -3.814697265625e-06, -6.103515625e-05, -0.00040161609649658203, 0.0, -0.012933731079101562, 0.0, -0.0003299713134765625, 0.0, -0.0005645751953125, -7.43865966796875e-05, -0.002902984619140625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004177093505859375, -7.62939453125e-06, -6.103515625e-05, 0.0, -0.1686410903930664, 0.0, -3.468989598331973e-05, 0.0, -8.261149196187034e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.291534423828125e-06, -2.47955322265625e-05, -1.648691177368164, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00017808542179409415, -7.2479248046875e-05, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -5.14984130859375e-05, 0.0, 0.0, -5.91278076171875e-05, -0.007610321044921875, -4.38690185546875e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.04738545045256615, 0.0, -1.9073486328125e-06, -0.009119033813476562]}], "gold_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word: Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n        player.draw()\n"}
{"beams": [{"score": -0.41749192648910594, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -0.41086483001708984, 0.0, -3.814697265625e-06, 0.0, -0.0004886388778686523, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -0.0007343292236328125, 0.0, -2.145764938177308e-06, -0.0009084939956665039, -2.145764938177308e-06, -0.0006539454916492105, -8.344646857949556e-07, -0.00037384033203125, -7.62939453125e-06, -0.0018302202224731445, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -6.4849853515625e-05, -1.9073486328125e-06]}, {"score": -1.1051547748771782, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -1.0982427597045898, 0.0, -1.1444091796875e-05, 0.0, -0.0003229379653930664, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.001277923583984375, 0.0, -2.0265558760002023e-06, -0.0008511543273925781, -2.145764938177308e-06, -0.000580282649025321, -8.344646857949556e-07, -0.0004253387451171875, -7.62939453125e-06, -0.001832127571105957, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-05, -6.29425048828125e-05, -1.9073486328125e-06]}, {"score": -6.30095519163126, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -6.294046401977539, 0.0, -3.814697265625e-06, 0.0, -0.0003889799118041992, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -0.000782012939453125, 0.0, -1.5497195136049413e-06, -0.001225113868713379, -2.264974000354414e-06, -0.0006665833061560988, -9.536738616588991e-07, -0.0003528594970703125, -7.62939453125e-06, -0.0018883943557739258, 0.0, -2.47955322265625e-05, -1.9073486328125e-05, -6.29425048828125e-05, -1.9073486328125e-06]}, {"score": -7.504693796653669, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "Minion", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 5, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -0.41086483001708984, 0.0, -3.814697265625e-06, 0.0, -0.0004886388778686523, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -0.0007343292236328125, 0.0, -2.145764938177308e-06, -7.084412097930908, -9.536738616588991e-07, -0.002944588428363204, -1.0728830375228426e-06, -0.0012769699096679688, -3.814697265625e-06, -0.0023032426834106445, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.0001049041748046875, -1.9073486328125e-06]}, {"score": -7.5964564221479804, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "divine_shield", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 5, divine_shield=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -0.41086483001708984, 0.0, -3.814697265625e-06, 0.0, -0.0004886388778686523, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -0.0007343292236328125, 0.0, -2.145764938177308e-06, -0.0009084939956665039, -2.145764938177308e-06, -0.0006539454916492105, -8.344646857949556e-07, -0.00037384033203125, -7.62939453125e-06, -7.1804399490356445, -1.9073486328125e-06, -0.0003814697265625, -4.76837158203125e-05, -3.24249267578125e-05, -1.9073486328125e-06]}, {"score": -7.948477178022586, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -7.941099166870117, 0.0, -5.7220458984375e-06, 0.0, -0.0005090236663818359, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -0.0017414093017578125, 0.0, -2.264974000354414e-06, -0.0007119178771972656, -2.622600959512056e-06, -0.0005286718951538205, -7.152555099310121e-07, -0.0004634857177734375, -5.7220458984375e-06, -0.0018063783645629883, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -6.4849853515625e-05, -1.9073486328125e-06]}, {"score": -8.266297271270787, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "Minion", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -1.0982427597045898, 0.0, -1.1444091796875e-05, 0.0, -0.0003229379653930664, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.001277923583984375, 0.0, -2.0265558760002023e-06, -7.157834529876709, -1.0728830375228426e-06, -0.0034213063772767782, -1.0728830375228426e-06, -0.0012826919555664062, -3.814697265625e-06, -0.0022612810134887695, -1.9073486328125e-06, -1.9073486328125e-05, -2.09808349609375e-05, -0.000102996826171875, -1.9073486328125e-06]}, {"score": -8.284399917374913, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -0.41086483001708984, 0.0, -3.814697265625e-06, 0.0, -0.0004886388778686523, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -0.0007343292236328125, 0.0, -2.145764938177308e-06, -0.0009084939956665039, -2.145764938177308e-06, -7.867570400238037, -1.6689286894688848e-06, -4.9591064453125e-05, -1.1444091796875e-05, -0.0021146535873413086, -1.9073486328125e-06, -3.4332275390625e-05, -5.340576171875e-05, -4.57763671875e-05, -1.9073486328125e-06]}, {"score": -8.294868133756268, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "divine_shield", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, divine_shield=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -1.0982427597045898, 0.0, -1.1444091796875e-05, 0.0, -0.0003229379653930664, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.001277923583984375, 0.0, -2.0265558760002023e-06, -0.0008511543273925781, -2.145764938177308e-06, -0.000580282649025321, -8.344646857949556e-07, -0.0004253387451171875, -7.62939453125e-06, -7.191190719604492, -1.9073486328125e-06, -0.0003833770751953125, -4.57763671875e-05, -3.24249267578125e-05, -1.9073486328125e-06]}, {"score": -8.432223524682286, "choice_history": [59, 124, "Sen'jin", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jin(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jin", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -7.996481895446777, -5.533779039978981e-05, -1.9550199795048684e-05, -2.6106828954652883e-05, -1.9073486328125e-06, -8.0108642578125e-05, -1.9073486328125e-05, -0.0007305145263671875, -2.6702880859375e-05, -3.6954811548639555e-06, -4.029273986816406e-05, -7.152555099310121e-07, -1.9073486328125e-06, -5.59079744562041e-05, 0.0, -5.352497100830078e-05, 0.0, -0.42940425872802734, 0.0, -3.814697265625e-06, 0.0, -0.00040984153747558594, 0.0, -1.9073486328125e-06, -8.20159912109375e-05, -0.000759124755859375, 0.0, -1.7881377516459906e-06, -0.0008227825164794922, -1.7881377516459906e-06, -0.0006629944546148181, -7.152555099310121e-07, -0.00032806396484375, -7.62939453125e-06, -0.0018129348754882812, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-05, -6.29425048828125e-05, -1.9073486328125e-06]}, {"score": -8.640875008100352, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.WARRIOR)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "WARRIOR"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -8.6336669921875, -3.814697265625e-05, -1.728534698486328e-05, 0.0, -0.0005037784576416016, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -0.001064300537109375, 0.0, -1.9073468138230965e-06, -0.0011048316955566406, -2.3841830625315197e-06, -0.000587320071645081, -8.344646857949556e-07, -0.0004520416259765625, -5.7220458984375e-06, -0.0018045902252197266, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -6.4849853515625e-05, -1.9073486328125e-06]}, {"score": -8.676371505511014, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "4", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 4, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -0.41086483001708984, 0.0, -3.814697265625e-06, 0.0, -0.0004886388778686523, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -0.0007343292236328125, 0.0, -2.145764938177308e-06, -0.0009084939956665039, -2.145764938177308e-06, -8.259805679321289, -2.3841855067985307e-07, -0.00020599365234375, -1.9073486328125e-06, -0.0016978979110717773, -1.9073486328125e-06, -1.71661376953125e-05, -6.67572021484375e-05, -5.7220458984375e-05, -1.9073486328125e-06]}, {"score": -8.741530790952424, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "find_minion_spell_target", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.find_minion_spell_target)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "find_minion_spell_target"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -8.734685897827148, 0.0, -5.7220458984375e-06, 0.0, -0.0004190206527709961, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -0.000667572021484375, 0.0, -1.7881377516459906e-06, -0.0011202096939086914, -2.145764938177308e-06, -0.0006699208170175552, -8.344646857949556e-07, -0.00038909912109375, -7.62939453125e-06, -0.0019398927688598633, 0.0, -2.47955322265625e-05, -1.9073486328125e-05, -6.29425048828125e-05, -1.9073486328125e-06]}, {"score": -8.842885020858773, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "create_weapon", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, create_weapon):\n        return Minion(3, 5, taunt=True)\n", "model_output": {"hole4": "create_weapon", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Sen'jin Shieldmasta", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -0.0005359649658203125, -3.62396240234375e-05, -3.933898824470816e-06, -2.491474151611328e-05, -7.152555099310121e-07, -3.814697265625e-06, -5.161663284525275e-05, 0.0, -5.161762237548828e-05, -1.9073486328125e-06, -0.41086483001708984, 0.0, -3.814697265625e-06, 0.0, -8.425415992736816, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0016841888427734375, 0.0, -1.6689286894688848e-06, -0.0007444620132446289, -1.0728830375228426e-06, -0.0008089073817245662, -5.960462772236497e-07, -0.0002307891845703125, -5.7220458984375e-06, -0.0015610456466674805, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -6.103515625e-05, -1.9073486328125e-06]}, {"score": -9.203475600788003, "choice_history": [59, 124, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sen'jin", " ", "Shieldmasta", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}], "args": [{"s": "Sen'jin Shieldmasta", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Sen'jinShieldmasta", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.38690185546875e-05, -0.00013779645087197423, -0.00034171465085819364, -5.006777428206988e-06, -1.1920838005607948e-07, -5.483625955093885e-06, -2.34842264035251e-05, -1.9073486328125e-06, -0.0001220703125, -1.71661376953125e-05, -7.8863677978515625, -0.17448902130126953, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.1709168979432434e-05, -0.00020062923431396484, -2.9802276912960224e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.386743967188522e-05, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -4.9591064453125e-05, 0.0, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, -0.004354000091552734, -3.814697265625e-06, -2.47955322265625e-05, -5.340576171875e-05, -0.0001983642578125, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.728534698486328e-05, -1.71661376953125e-05, -1.0139799118041992, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -0.10754191875457764, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -0.000476837158203125, 0.0, -3.218649908376392e-06, -0.011005640029907227, -6.198873961693607e-06, -0.0008781718788668513, -8.344646857949556e-07, -4.9591064453125e-05, -1.71661376953125e-05, -0.002421259880065918, -1.1920928244535389e-07, -5.53131103515625e-05, -9.5367431640625e-06, -0.0001506805419921875, -1.9073486328125e-06]}], "gold_code": "class SenjinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}
{"beams": [{"score": -0.45742018375147353, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -0.3019150495529175, -1.1920928244535389e-07, -0.010908006690442562, 0.0, -0.0004578828811645508, -1.9073486328125e-06, -9.286402928410098e-05, -3.814697265625e-06, -5.14984130859375e-05, -0.000148773193359375, -3.814697265625e-06, -3.266334533691406e-05, -0.0005588531494140625, -0.007288932800292969, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00010728300549089909, -9.5367431640625e-06, -0.0001377988955937326, 0.0, -5.7220458984375e-06, -0.0004062652587890625, -1.9073486328125e-06, -0.000202178955078125, 0.0, -5.91278076171875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.017675399780273438, -3.814697265625e-06, -0.0001506805419921875, -0.008148193359375, -0.02209758758544922, -1.33514404296875e-05, -0.00037384033203125, 0.0, -0.0032558441162109375, -7.62939453125e-06, -0.004452705383300781, 0.0, -0.0036716251634061337, -1.0490406566532329e-05, -9.214517194777727e-05, -6.997340824455023e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -0.006420135498046875, 0.0, -0.007600903511047363, -1.9073486328125e-06, -0.0005124807357788086, -2.741813204920618e-06, -4.57763671875e-05, -0.008923530578613281, -5.7220458984375e-05, -3.4332275390625e-05, -0.0002321004867553711, -5.4597850976279005e-05]}, {"score": -2.3184319484695948, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -2.1554200649261475, -9.536738616588991e-07, -0.015281438827514648, 0.0, -0.0004235506057739258, -1.9073486328125e-06, -8.916854130802676e-05, -3.814697265625e-06, -4.76837158203125e-05, -0.000171661376953125, -1.9073486328125e-06, -2.3245811462402344e-05, -0.0005168914794921875, -0.010201454162597656, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00010287271288689226, -9.5367431640625e-06, -0.00014149393246043473, 0.0, -5.7220458984375e-06, -0.0004253387451171875, -1.9073486328125e-06, -0.00020599365234375, 0.0, -5.7220458984375e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.018240928649902344, -3.814697265625e-06, -0.00016021728515625, -0.008129119873046875, -0.021587371826171875, -1.52587890625e-05, -0.000396728515625, 0.0, -0.0032596588134765625, -7.62939453125e-06, -0.004433631896972656, 0.0, -0.0036257498431950808, -1.0490406566532329e-05, -9.190676792059094e-05, -7.033100700937212e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -0.006493568420410156, 0.0, -0.007774472236633301, -1.9073486328125e-06, -0.0005145072937011719, -2.741813204920618e-06, -4.57763671875e-05, -0.008934974670410156, -5.7220458984375e-05, -3.4332275390625e-05, -0.0002321004867553711, -5.4597850976279005e-05]}, {"score": -3.22384856928403, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -3.0054843425750732, -1.5497195136049413e-06, -0.07138550281524658, 0.0, -0.0005990266799926758, -1.9073486328125e-06, -9.393692016601562e-05, -3.814697265625e-06, -4.1961669921875e-05, -0.00018310546875, -3.814697265625e-06, -2.5153160095214844e-05, -0.0004901885986328125, -0.008891105651855469, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00010239591938443482, -9.5367431640625e-06, -0.00014065956929698586, 0.0, -5.7220458984375e-06, -0.0004177093505859375, -1.9073486328125e-06, -0.00020599365234375, 0.0, -5.7220458984375e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.018819808959960938, -3.814697265625e-06, -0.0001659393310546875, -0.00811004638671875, -0.0213470458984375, -1.52587890625e-05, -0.00040435791015625, 0.0, -0.003253936767578125, -7.62939453125e-06, -0.004433631896972656, 0.0, -0.00362242478877306, -1.0490406566532329e-05, -9.190676792059094e-05, -7.033100700937212e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -0.006497383117675781, 0.0, -0.007848858833312988, -1.9073486328125e-06, -0.0005145072937011719, -2.741813204920618e-06, -4.57763671875e-05, -0.008936882019042969, -5.7220458984375e-05, -3.4332275390625e-05, -0.0002321004867553711, -5.4597850976279005e-05]}, {"score": -3.2796309554889262, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -3.126394033432007, 0.0, -0.010285139083862305, 0.0, -0.0002651214599609375, -1.9073486328125e-06, -9.822845458984375e-05, -5.7220458984375e-06, -3.814697265625e-05, -0.0001983642578125, -1.9073486328125e-06, -3.457069396972656e-05, -0.000518798828125, -0.007050514221191406, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -9.274087642552331e-05, -9.5367431640625e-06, -0.00012730967137031257, 0.0, -7.62939453125e-06, -0.0004119873046875, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -5.91278076171875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.016819000244140625, -3.814697265625e-06, -0.0001583099365234375, -0.008129119873046875, -0.021559715270996094, -1.52587890625e-05, -0.000392913818359375, 0.0, -0.003269195556640625, -7.62939453125e-06, -0.004445075988769531, 0.0, -0.0036391797475516796, -1.0490406566532329e-05, -9.214517194777727e-05, -7.045020902296528e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -0.006458282470703125, 0.0, -0.007763028144836426, -1.9073486328125e-06, -0.0005145072937011719, -2.741813204920618e-06, -4.57763671875e-05, -0.008930206298828125, -5.7220458984375e-05, -3.4332275390625e-05, -0.0002321004867553711, -5.4597850976279005e-05]}, {"score": -3.722899617257383, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sinister", " ", "Strike", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "args": [{"s": "Sinister Strike", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -3.041598320007324, -4.1961669921875e-05, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.000133514404296875, -1.5616295058862306e-05, -0.00013184547424316406, -8.344646857949556e-07, -3.814697265625e-06, -3.4332275390625e-05, -0.0004253387451171875, -8.58306884765625e-05, -5.340576171875e-05, 0.0, -9.536741345073096e-06, -5.960462772236497e-07, -0.40277647972106934, 0.0, -0.0009670257568359375, -1.9073486328125e-06, -0.0002536773681640625, -0.00022232085757423192, -1.6689286894688848e-06, -0.000980377197265625, -3.814697265625e-06, -7.62939453125e-05, 0.0, -0.0002593994140625, -0.0006313323974609375, -0.000213623046875, -2.09808349609375e-05, -0.0001201629638671875, 0.0, -0.000942230224609375, -1.9073486328125e-06, -5.161762237548828e-05, 0.0, -0.1880856454372406, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0006624460220336914, -1.9073486328125e-06, -4.00543212890625e-05, -6.103515625e-05, -3.814697265625e-06, -3.743171691894531e-05, -0.00026345252990722656, -0.012228965759277344, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.286040585720912e-05, -3.933906555175781e-06, -0.0004047573893330991, 0.0, -3.814697265625e-06, -0.0001544952392578125, -3.814697265625e-06, -0.0001773834228515625, 0.0, -7.43865966796875e-05, 0.0, -3.62396240234375e-05, -1.33514404296875e-05, -0.0006961822509765625, -5.7220458984375e-06, -8.58306884765625e-05, -0.0085296630859375, -0.02627086639404297, -1.1444091796875e-05, -0.0001888275146484375, 0.0, -0.004215240478515625, -7.62939453125e-06, -0.004454374313354492, 0.0, -0.0038076150231063366, -8.344639354618266e-06, -9.417155524715781e-05, -8.308542601298541e-05, -9.5367431640625e-06, -2.86102294921875e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -0.004933357238769531, 0.0, -0.006635785102844238, -1.9073486328125e-06, -0.0005105733871459961, -2.741813204920618e-06, -4.57763671875e-05, -0.0087738037109375, -5.7220458984375e-05, -3.4332275390625e-05, -0.0002301931381225586, -5.6505199609091505e-05]}, {"score": -3.90853852935669, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -3.7284176349639893, -1.537799835205078e-05, -0.03529202938079834, 0.0, -0.0002155303955078125, -1.9073486328125e-06, -8.785724639892578e-05, -3.814697265625e-06, -4.38690185546875e-05, -0.0001888275146484375, -1.9073486328125e-06, -3.266334533691406e-05, -0.0004863739013671875, -0.007477760314941406, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -9.5367431640625e-06, -9.262167441193014e-05, -9.5367431640625e-06, -0.00013183911505620927, 0.0, -5.7220458984375e-06, -0.000415802001953125, -1.9073486328125e-06, -0.0002079010009765625, 0.0, -5.53131103515625e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.01882457733154297, -3.814697265625e-06, -0.000179290771484375, -0.00806427001953125, -0.020854949951171875, -1.71661376953125e-05, -0.0004215240478515625, 0.0, -0.0032749176025390625, -7.62939453125e-06, -0.004435539245605469, 0.0, -0.0035980655811727047, -1.0490406566532329e-05, -9.190676792059094e-05, -7.021180499577895e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -0.0065460205078125, 0.0, -0.0079423189163208, -1.9073486328125e-06, -0.0005145072937011719, -2.741813204920618e-06, -4.57763671875e-05, -0.008947372436523438, -5.7220458984375e-05, -3.4332275390625e-05, -0.0002321004867553711, -5.4597850976279005e-05]}, {"score": -4.577574468052852, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -0.3019150495529175, -1.1920928244535389e-07, -0.010908006690442562, 0.0, -0.0004578828811645508, -1.9073486328125e-06, -9.286402928410098e-05, -3.814697265625e-06, -5.14984130859375e-05, -0.000148773193359375, -3.814697265625e-06, -3.266334533691406e-05, -0.0005588531494140625, -0.007288932800292969, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00010728300549089909, -9.5367431640625e-06, -0.0001377988955937326, 0.0, -5.7220458984375e-06, -0.0004062652587890625, -1.9073486328125e-06, -0.000202178955078125, 0.0, -5.91278076171875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.017675399780273438, -3.814697265625e-06, -0.0001506805419921875, -0.008148193359375, -3.838088035583496, 0.0, -0.3194007873535156, 0.0, -0.00016450881958007812, -3.933906555175781e-06, -9.202546789310873e-05, -1.966933996300213e-05, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-05, -1.9073486328125e-05, 0.0, -0.0099639892578125, 0.0, -0.0004826784133911133, 0.0, -0.00032842159271240234, -2.3841855067985307e-07, -3.814697265625e-05, -0.009050369262695312, -2.6702880859375e-05, -5.7220458984375e-06, -0.00037610530853271484, -4.386900400277227e-05]}, {"score": -4.737559034867502, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sinister", " ", "Strike", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "args": [{"s": "Sinister Strike", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -3.041598320007324, -4.1961669921875e-05, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.000133514404296875, -1.5616295058862306e-05, -0.00013184547424316406, -8.344646857949556e-07, -3.814697265625e-06, -3.4332275390625e-05, -0.0004253387451171875, -8.58306884765625e-05, -5.340576171875e-05, 0.0, -9.536741345073096e-06, -5.960462772236497e-07, -1.418358564376831, 0.0, -0.0047245025634765625, -1.9073486328125e-06, -0.000270843505859375, -0.0002616608398966491, -2.264974000354414e-06, -0.00054168701171875, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -0.0002574920654296875, -0.000461578369140625, -0.0002079010009765625, -1.33514404296875e-05, -0.0001277923583984375, 0.0, -0.0009593963623046875, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.18489952385425568, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.0006643533706665039, -1.9073486328125e-06, -4.00543212890625e-05, -5.91278076171875e-05, -3.814697265625e-06, -4.1365623474121094e-05, -0.00025582313537597656, -0.011382102966308594, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.536375000607222e-05, -3.933906555175781e-06, -0.0003875978582073003, 0.0, -3.814697265625e-06, -0.000156402587890625, -3.814697265625e-06, -0.0001773834228515625, 0.0, -7.2479248046875e-05, 0.0, -3.62396240234375e-05, -1.33514404296875e-05, -0.0007038116455078125, -5.7220458984375e-06, -8.7738037109375e-05, -0.008543014526367188, -0.026212692260742188, -1.1444091796875e-05, -0.0001888275146484375, 0.0, -0.00420379638671875, -7.62939453125e-06, -0.004454374313354492, 0.0, -0.003800244303420186, -8.344639354618266e-06, -9.429074998479337e-05, -8.248942322097719e-05, -9.5367431640625e-06, -2.86102294921875e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -0.0049285888671875, 0.0, -0.006631970405578613, -1.9073486328125e-06, -0.0005105733871459961, -2.741813204920618e-06, -4.57763671875e-05, -0.008770942687988281, -5.7220458984375e-05, -3.4332275390625e-05, -0.0002301931381225586, -5.6505199609091505e-05]}, {"score": -5.010511290134836, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -4.83952522277832, -1.1920928244535389e-07, -0.02592170052230358, 0.0, -0.0007534027099609375, -1.9073486328125e-06, -9.393692016601562e-05, -3.814697265625e-06, -4.76837158203125e-05, -0.000156402587890625, -1.9073486328125e-06, -2.6941299438476562e-05, -0.0005207061767578125, -0.0076236724853515625, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -9.5367431640625e-06, -9.250247239833698e-05, -9.5367431640625e-06, -0.0001351765968138352, 0.0, -7.62939453125e-06, -0.0004253387451171875, -1.9073486328125e-06, -0.00020599365234375, 0.0, -5.91278076171875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.017813682556152344, -3.814697265625e-06, -0.000164031982421875, -0.0080718994140625, -0.021698951721191406, -1.52587890625e-05, -0.000392913818359375, 0.0, -0.0032405853271484375, -7.62939453125e-06, -0.004431724548339844, 0.0, -0.003654157742857933, -1.0490406566532329e-05, -9.178757318295538e-05, -6.97350042173639e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -0.006453514099121094, 0.0, -0.007774472236633301, -1.9073486328125e-06, -0.0005145072937011719, -2.741813204920618e-06, -4.57763671875e-05, -0.008941650390625, -5.7220458984375e-05, -3.4332275390625e-05, -0.0002321004867553711, -5.2690502343466505e-05]}, {"score": -5.384922225281279, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -0.3019150495529175, -1.1920928244535389e-07, -4.93876838684082, 0.0, -5.555152893066406e-05, -1.9073486328125e-06, -0.00010526179539738223, -3.814697265625e-06, -4.9591064453125e-05, -0.00018310546875, -3.814697265625e-06, -2.7060508728027344e-05, -0.000637054443359375, -0.0072498321533203125, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00011586515029193833, -9.5367431640625e-06, -0.00013946762192063034, 0.0, -5.7220458984375e-06, -0.0004138946533203125, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.29425048828125e-05, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -0.01772022247314453, -3.814697265625e-06, -0.0001277923583984375, -0.008348464965820312, -0.02197551727294922, -1.33514404296875e-05, -0.0003643035888671875, 0.0, -0.0033359527587890625, -7.62939453125e-06, -0.0045021772384643555, 0.0, -0.0036276427563279867, -1.0490406566532329e-05, -9.29795642150566e-05, -7.152301259338856e-05, -9.5367431640625e-06, -3.24249267578125e-05, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -0.006440162658691406, 0.0, -0.007419705390930176, -1.9073486328125e-06, -0.0005086660385131836, -2.741813204920618e-06, -4.38690185546875e-05, -0.008868217468261719, -5.7220458984375e-05, -3.4332275390625e-05, -0.00023114681243896484, -5.4597850976279005e-05]}, {"score": -5.509203268621313, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(game.other_player(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -0.3019150495529175, -1.1920928244535389e-07, -0.010908006690442562, 0.0, -0.0004578828811645508, -1.9073486328125e-06, -9.286402928410098e-05, -3.814697265625e-06, -5.14984130859375e-05, -0.000148773193359375, -3.814697265625e-06, -3.266334533691406e-05, -0.0005588531494140625, -0.007288932800292969, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00010728300549089909, -9.5367431640625e-06, -0.0001377988955937326, 0.0, -5.7220458984375e-06, -0.0004062652587890625, -1.9073486328125e-06, -0.000202178955078125, 0.0, -5.91278076171875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.017675399780273438, -3.814697265625e-06, -0.0001506805419921875, -0.008148193359375, -0.02209758758544922, -1.33514404296875e-05, -0.00037384033203125, 0.0, -0.0032558441162109375, -7.62939453125e-06, -0.004452705383300781, 0.0, -0.0036716251634061337, -1.0490406566532329e-05, -9.214517194777727e-05, -6.997340824455023e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -0.006420135498046875, 0.0, -4.93546199798584, -3.4332275390625e-05, -0.08864986896514893, 0.0, -0.03710365295410156, -0.007618904113769531, -4.76837158203125e-05, -9.5367431640625e-06, -0.00029098987579345703, -3.1709667382529005e-05]}, {"score": -5.665724844098179, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sinister", " ", "Strike", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Sinister Strike", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -3.041598320007324, -4.1961669921875e-05, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.000133514404296875, -1.5616295058862306e-05, -0.00013184547424316406, -8.344646857949556e-07, -3.814697265625e-06, -3.4332275390625e-05, -0.0004253387451171875, -8.58306884765625e-05, -5.340576171875e-05, 0.0, -9.536741345073096e-06, -5.960462772236497e-07, -0.40277647972106934, 0.0, -0.0009670257568359375, -1.9073486328125e-06, -0.0002536773681640625, -0.00022232085757423192, -1.6689286894688848e-06, -0.000980377197265625, -3.814697265625e-06, -7.62939453125e-05, 0.0, -0.0002593994140625, -0.0006313323974609375, -0.000213623046875, -2.09808349609375e-05, -0.0001201629638671875, 0.0, -0.000942230224609375, -1.9073486328125e-06, -5.161762237548828e-05, 0.0, -2.131031036376953, 0.0, -4.589557647705078e-05, 0.0, -0.0007406473159790039, -1.9073486328125e-06, -2.86102294921875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -4.315376281738281e-05, -0.0002690553665161133, -0.011925697326660156, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.760280277580023e-05, -3.933906555175781e-06, -0.0003414801321923733, 0.0, -3.814697265625e-06, -0.0001583099365234375, -3.814697265625e-06, -0.0001773834228515625, 0.0, -7.05718994140625e-05, 0.0, -3.62396240234375e-05, -1.33514404296875e-05, -0.0007114410400390625, -5.7220458984375e-06, -8.7738037109375e-05, -0.008518218994140625, -0.026526451110839844, -1.1444091796875e-05, -0.000186920166015625, 0.0, -0.004215240478515625, -7.62939453125e-06, -0.004448652267456055, 0.0, -0.003776953089982271, -8.344639354618266e-06, -9.536353900330141e-05, -8.237022848334163e-05, -9.5367431640625e-06, -2.86102294921875e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -0.0049152374267578125, 0.0, -0.006631970405578613, -1.9073486328125e-06, -0.0005105733871459961, -2.741813204920618e-06, -4.57763671875e-05, -0.008782386779785156, -5.7220458984375e-05, -3.4332275390625e-05, -0.0002301931381225586, -5.6505199609091505e-05]}, {"score": -5.72878634537318, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "target", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.target,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "target", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -5.475147247314453, 0.0, -0.11159586161375046, 0.0, -0.0003072023391723633, -1.9073486328125e-06, -0.00011730191909009591, -3.814697265625e-06, -4.76837158203125e-05, -0.000102996826171875, -1.9073486328125e-06, -1.3709068298339844e-05, -0.00063323974609375, -0.007721900939941406, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -8.88073118403554e-05, -9.5367431640625e-06, -0.00014137473772279918, 0.0, -5.7220458984375e-06, -0.00042724609375, -1.9073486328125e-06, -0.00020599365234375, 0.0, -6.103515625e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.014052391052246094, -3.814697265625e-06, -0.000141143798828125, -0.008348464965820312, -0.02278423309326172, -1.33514404296875e-05, -0.0003509521484375, 0.0, -0.0032901763916015625, -7.62939453125e-06, -0.004433631896972656, 0.0, -0.0036921766586601734, -1.0490406566532329e-05, -9.178757318295538e-05, -7.080780778778717e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -0.006378173828125, 0.0, -0.007501721382141113, -1.9073486328125e-06, -0.0005143880844116211, -2.741813204920618e-06, -4.57763671875e-05, -0.008916854858398438, -5.7220458984375e-05, -3.4332275390625e-05, -0.0002321004867553711, -5.4597850976279005e-05]}, {"score": -5.752515313509704, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 46, 112, "player", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player):\n            minion.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Name", "id": "player"}], "func": {"_type": "Name", "id": "range"}}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -0.3019150495529175, -1.1920928244535389e-07, -0.010908006690442562, 0.0, -0.0004578828811645508, -1.9073486328125e-06, -9.286402928410098e-05, -3.814697265625e-06, -5.14984130859375e-05, -0.000148773193359375, -3.814697265625e-06, -3.266334533691406e-05, -0.0005588531494140625, -0.007288932800292969, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00010728300549089909, -9.5367431640625e-06, -0.0001377988955937326, 0.0, -5.7220458984375e-06, -0.0004062652587890625, -1.9073486328125e-06, -0.000202178955078125, 0.0, -5.91278076171875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -4.1439104080200195, -3.0517578125e-05, -2.6702880859375e-05, 0.0, -0.12583112716674805, -5.841255187988281e-06, -0.0022382736206054688, -3.814697265625e-06, -0.0001354217529296875, 0.0, -0.003832816146314144, -0.0003509521484375, -0.0015659332275390625, -8.58306884765625e-05, -4.38690185546875e-05, -0.0008127339533530176, -5.960446742392378e-06, -0.07410717010498047, -7.62939453125e-06, -0.79395592212677, 0.0, -0.14846324920654297, -5.7220458984375e-06, -0.00251007080078125, -0.0004119873046875, 0.0, -0.004548549652099609, -0.00014006136916577816, -0.0010182288242504, -3.2186455882765586e-06, -2.09808349609375e-05, -6.103515625e-05, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -0.06339263916015625, 0.0, -1.9073486328125e-05, 0.0, -0.0003554821014404297, -1.1920928244535389e-07, -3.62396240234375e-05, -0.010202407836914062, -3.4332275390625e-05, -1.9073486328125e-06, -0.0008480548858642578, -2.9444532628986053e-05]}, {"score": -5.752804113801339, "choice_history": [59, 126, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Sinister Strike", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "SinisterStrike", "hole3": "use"}, "score_history": [-4.1961669921875e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.00010656742961145937, -1.2040087312925607e-05, -1.430495103704743e-06, -1.2040087312925607e-05, -3.4570680327306036e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.67572021484375e-05, -0.05020618438720703, -7.62939453125e-06, -2.9802276912960224e-06, -0.00018513202667236328, 0.0, -5.7220458984375e-06, -7.748603820800781e-06, -5.960462772236497e-07, -0.3019150495529175, -1.1920928244535389e-07, -0.010908006690442562, 0.0, -0.0004578828811645508, -1.9073486328125e-06, -9.286402928410098e-05, -3.814697265625e-06, -5.14984130859375e-05, -0.000148773193359375, -3.814697265625e-06, -3.266334533691406e-05, -0.0005588531494140625, -0.007288932800292969, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00010728300549089909, -9.5367431640625e-06, -0.0001377988955937326, 0.0, -5.7220458984375e-06, -0.0004062652587890625, -1.9073486328125e-06, -0.000202178955078125, 0.0, -5.91278076171875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.017675399780273438, -3.814697265625e-06, -0.0001506805419921875, -0.008148193359375, -0.02209758758544922, -1.33514404296875e-05, -0.00037384033203125, 0.0, -0.0032558441162109375, -7.62939453125e-06, -0.004452705383300781, 0.0, -0.0036716251634061337, -1.0490406566532329e-05, -9.214517194777727e-05, -6.997340824455023e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -0.006420135498046875, 0.0, -0.007600903511047363, -1.9073486328125e-06, -0.0005124807357788086, -2.741813204920618e-06, -4.57763671875e-05, -5.303576469421387, -9.5367431640625e-06, -3.62396240234375e-05, -0.0009125469950959086, -0.00015091891691554338]}], "gold_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}
{"beams": [{"score": -2.0322956691095158, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.<UNK>, battlecry=Battlecry(\n            Discard(), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.6113109588623047, 0.0, -0.001094818115234375, -3.814697265625e-05, -3.4332275390625e-05, -0.0016176700592041016, -1.9073486328125e-06, -0.0029201507568359375, -0.0004901885986328125, -0.004458427429199219, 0.0, -8.392333984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.5569812059402466, -1.9073486328125e-06, -1.9073486328125e-06, -0.00038421154022216797, 0.0, -0.022751808166503906, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -8.273124694824219e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007944107055664062, -3.814697265625e-06, -0.25854426622390747, -0.11320975422859192, -0.11020088195800781, -0.22630691528320312, -1.9073486328125e-06, -1.33514404296875e-05, -0.10758679360151291, -6.127357482910156e-05, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.0002835988998413086, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.003938794136047363, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.094668500125408e-06, -3.814697265625e-06, -3.790724804275669e-05, 0.0, -0.0003558900789357722, 0.0]}, {"score": -2.4832611529679696, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(\n            Discard(), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.6113109588623047, 0.0, -0.001094818115234375, -3.814697265625e-05, -3.4332275390625e-05, -0.0016176700592041016, -1.9073486328125e-06, -0.0029201507568359375, -0.0004901885986328125, -0.004458427429199219, 0.0, -8.392333984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.9527150392532349, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012409687042236328, 0.0, -0.04652976989746094, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0058135986328125, -3.814697265625e-06, -0.24841758608818054, -0.11624763160943985, -0.1036825180053711, -0.24447059631347656, -1.9073486328125e-06, -1.52587890625e-05, -0.13696923851966858, -5.3763389587402344e-05, 0.0, -7.62939453125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00027430057525634766, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.003905057907104492, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.73797195404768e-06, -3.814697265625e-06, -3.0397510272450745e-05, 0.0, -0.0003470720548648387, 0.0]}, {"score": -2.6342767724533758, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Discard(), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -1.1417007446289062, -1.9073486328125e-06, -0.013629913330078125, -3.0517578125e-05, -5.14984130859375e-05, -0.001749873161315918, -1.9073486328125e-06, -0.0024509429931640625, -0.0005321502685546875, -0.0047626495361328125, 0.0, -7.62939453125e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.5913335084915161, -1.9073486328125e-06, -1.9073486328125e-06, -0.00038802623748779297, 0.0, -0.02022838592529297, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -8.273124694824219e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.008356094360351562, -3.814697265625e-06, -0.28510281443595886, -0.11325793713331223, -0.1074676513671875, -0.22902202606201172, -1.9073486328125e-06, -1.33514404296875e-05, -0.1077989935874939, -6.127357482910156e-05, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.0002855062484741211, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.003934979438781738, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.975692041218281e-06, -3.814697265625e-06, -3.8980055251158774e-05, 0.0, -0.00035648589255288243, 0.0]}, {"score": -2.995675861570561, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -1.1417007446289062, -1.9073486328125e-06, -0.013629913330078125, -3.0517578125e-05, -5.14984130859375e-05, -0.001749873161315918, -1.9073486328125e-06, -0.0024509429931640625, -0.0005321502685546875, -0.0047626495361328125, 0.0, -7.62939453125e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.906438946723938, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.04380607604980469, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.005965232849121094, -3.814697265625e-06, -0.2640618681907654, -0.11604934185743332, -0.10223960876464844, -0.2489175796508789, -1.9073486328125e-06, -1.52587890625e-05, -0.13684511184692383, -5.3763389587402344e-05, 0.0, -7.62939453125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00027430057525634766, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.0038993358612060547, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.73797195404768e-06, -3.814697265625e-06, -3.111272235400975e-05, 0.0, -0.0003473103861324489, 0.0]}, {"score": -3.1194336696337075, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.<UNK>, battlecry=Battlecry(Draw(\n            ), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.6113109588623047, 0.0, -0.001094818115234375, -3.814697265625e-05, -3.4332275390625e-05, -0.0016176700592041016, -1.9073486328125e-06, -0.0029201507568359375, -0.0004901885986328125, -0.004458427429199219, 0.0, -8.392333984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.5569812059402466, -1.9073486328125e-06, -1.9073486328125e-06, -0.00038421154022216797, 0.0, -0.022751808166503906, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -8.273124694824219e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007944107055664062, -3.814697265625e-06, -1.9001795053482056, -0.00018012522195931524, -0.0044803619384765625, -5.7220458984375e-06, -2.9802317840221804e-06, -0.0001544952392578125, 0.0, -2.4318611394846812e-05, 0.0, -0.001992017962038517, 0.0, -5.7220458984375e-06, -0.000141143798828125, -7.43865966796875e-05, -1.1918018572032452e-07, 0.0, -1.907332261907868e-06, 0.0, -0.0005140102584846318, 0.0]}, {"score": -3.580468500384285, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -1.1417007446289062, -1.9073486328125e-06, -0.013629913330078125, -3.0517578125e-05, -5.14984130859375e-05, -0.001749873161315918, -1.9073486328125e-06, -0.0024509429931640625, -0.0005321502685546875, -0.0047626495361328125, 0.0, -7.62939453125e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.5913335084915161, -1.9073486328125e-06, -1.9073486328125e-06, -0.00038802623748779297, 0.0, -0.02022838592529297, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -8.273124694824219e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.008356094360351562, -3.814697265625e-06, -1.785954475402832, -0.00017940996622201055, -0.0046367645263671875, -5.7220458984375e-06, -2.861022494471399e-06, -0.00016021728515625, 0.0, -2.4080196453724056e-05, 0.0, -0.0019377090502530336, 0.0, -5.7220458984375e-06, -0.0001239776611328125, -7.43865966796875e-05, 0.0, 0.0, -1.907332261907868e-06, 0.0, -0.0005037636728957295, 0.0]}, {"score": -3.6961166549219513, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(Draw(\n            ), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.6113109588623047, 0.0, -0.001094818115234375, -3.814697265625e-05, -3.4332275390625e-05, -0.0016176700592041016, -1.9073486328125e-06, -0.0029201507568359375, -0.0004901885986328125, -0.004458427429199219, 0.0, -8.392333984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.9527150392532349, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012409687042236328, 0.0, -0.04652976989746094, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0058135986328125, -3.814697265625e-06, -2.0576419830322266, -0.00018656249449122697, -0.005764007568359375, -5.7220458984375e-06, -2.9802317840221804e-06, -0.0001621246337890625, 0.0, -2.872932054742705e-05, 0.0, -0.002694703871384263, 0.0, -5.7220458984375e-06, -0.000247955322265625, -8.0108642578125e-05, -1.1918018572032452e-07, 0.0, -2.0265406419639476e-06, 0.0, -0.0005252097034826875, 0.0]}, {"score": -3.8540284297102687, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.<UNK>, battlecry=Battlecry(\n            Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.6113109588623047, 0.0, -0.001094818115234375, -3.814697265625e-05, -3.4332275390625e-05, -0.0016176700592041016, -1.9073486328125e-06, -0.0029201507568359375, -0.0004901885986328125, -0.004458427429199219, 0.0, -8.392333984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.5569812059402466, -1.9073486328125e-06, -1.9073486328125e-06, -0.00038421154022216797, 0.0, -0.022751808166503906, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -8.273124694824219e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007944107055664062, -3.814697265625e-06, -0.25854426622390747, -0.11320975422859192, -2.268317222595215, -1.9073486328125e-06, -7.55786822992377e-05, -0.00026535987854003906, 0.0, -1.6689285985194147e-05, 0.0, -0.0013413862325251102, 0.0, -5.7220458984375e-06, -0.0001316070556640625, -9.1552734375e-05, -1.1918018572032452e-07, 0.0, -1.9073349903919734e-06, 0.0, -0.00034850306110456586, 0.0]}, {"score": -4.104863887753908, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -1.1417007446289062, -1.9073486328125e-06, -0.013629913330078125, -3.0517578125e-05, -5.14984130859375e-05, -0.001749873161315918, -1.9073486328125e-06, -0.0024509429931640625, -0.0005321502685546875, -0.0047626495361328125, 0.0, -7.62939453125e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.906438946723938, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.04380607604980469, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.005965232849121094, -3.814697265625e-06, -1.9722459316253662, -0.00018382069538347423, -0.005954742431640625, -5.7220458984375e-06, -2.861022494471399e-06, -0.0001697540283203125, 0.0, -2.825249066518154e-05, 0.0, -0.0025763623416423798, 0.0, -5.7220458984375e-06, -0.0002269744873046875, -8.0108642578125e-05, -1.1918018572032452e-07, 0.0, -2.0265406419639476e-06, 0.0, -0.0005192525568418205, 0.0]}, {"score": -4.194416385126459, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 41, 88, 24, 112, "Player", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.<UNK>, battlecry=Battlecry(\n            Discard(), PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.6113109588623047, 0.0, -0.001094818115234375, -3.814697265625e-05, -3.4332275390625e-05, -0.0016176700592041016, -1.9073486328125e-06, -0.0029201507568359375, -0.0004901885986328125, -0.004458427429199219, 0.0, -8.392333984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.5569812059402466, -1.9073486328125e-06, -1.9073486328125e-06, -0.00038421154022216797, 0.0, -0.022751808166503906, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -8.273124694824219e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007944107055664062, -3.814697265625e-06, -0.25854426622390747, -0.11320975422859192, -0.11020088195800781, -2.342134475708008, -1.33514404296875e-05, 0.0, -0.14013491570949554, -5.841255187988281e-06, 0.0, -0.0038661956787109375, -1.33514404296875e-05, -0.011297225952148438, 0.0, -3.814697265625e-06, 0.0, -0.0020886659622192383, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0006700753001496196, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.786684151738882e-06, -3.814697265625e-06, -4.6966291847638786e-05, 0.0, -0.0004450202686712146, 0.0]}, {"score": -4.322565526129182, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(\n            Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.6113109588623047, 0.0, -0.001094818115234375, -3.814697265625e-05, -3.4332275390625e-05, -0.0016176700592041016, -1.9073486328125e-06, -0.0029201507568359375, -0.0004901885986328125, -0.004458427429199219, 0.0, -8.392333984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.9527150392532349, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012409687042236328, 0.0, -0.04652976989746094, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0058135986328125, -3.814697265625e-06, -0.24841758608818054, -0.11624763160943985, -2.326380729675293, -1.9073486328125e-06, -8.606909977970645e-05, -0.00028443336486816406, 0.0, -1.8358206943958066e-05, 0.0, -0.0016915354644879699, 0.0, -5.7220458984375e-06, -0.0002002716064453125, -9.918212890625e-05, -1.1918018572032452e-07, 0.0, -2.026543370448053e-06, 0.0, -0.00036125347833149135, 0.0]}, {"score": -4.4891287741981785, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 41, 90, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.<UNK>, battlecry=Battlecry(\n            Discard(), PlayerSelector(EnemyPlayer(), value=0)))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.6113109588623047, 0.0, -0.001094818115234375, -3.814697265625e-05, -3.4332275390625e-05, -0.0016176700592041016, -1.9073486328125e-06, -0.0029201507568359375, -0.0004901885986328125, -0.004458427429199219, 0.0, -8.392333984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.5569812059402466, -1.9073486328125e-06, -1.9073486328125e-06, -0.00038421154022216797, 0.0, -0.022751808166503906, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -8.273124694824219e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007944107055664062, -3.814697265625e-06, -0.25854426622390747, -0.11320975422859192, -0.11020088195800781, -2.3036508560180664, -0.0002117156982421875, -3.814697265625e-05, -0.009867184795439243, -0.002704620361328125, 0.0, -1.33514404296875e-05, -0.02754974365234375, 0.0, -0.002586841583251953, 0.0, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -0.17831134796142578, -1.9073486328125e-06, -0.26517677307128906, -5.340576171875e-05, -0.0019114016322419047, 0.0, -3.886222839355469e-05, 0.0, -0.0030723789241164923, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.532959666103125e-07, -3.814697265625e-06, -7.987016942934133e-06, 0.0, -0.00024994913837872446, 0.0]}, {"score": -4.516113403763228, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 41, 88, 24, 112, "Player", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(\n            Discard(), PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.6113109588623047, 0.0, -0.001094818115234375, -3.814697265625e-05, -3.4332275390625e-05, -0.0016176700592041016, -1.9073486328125e-06, -0.0029201507568359375, -0.0004901885986328125, -0.004458427429199219, 0.0, -8.392333984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.9527150392532349, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012409687042236328, 0.0, -0.04652976989746094, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0058135986328125, -3.814697265625e-06, -0.24841758608818054, -0.11624763160943985, -0.1036825180053711, -2.219733238220215, -1.71661376953125e-05, 0.0, -0.180482417345047, -3.933906555175781e-06, 0.0, -0.0037565231323242188, -1.33514404296875e-05, -0.011732101440429688, 0.0, -3.814697265625e-06, 0.0, -0.0020295381546020508, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0006684063700959086, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.7866259440779686e-06, -3.814697265625e-06, -4.577428990160115e-05, 0.0, -0.000445973506430164, 0.0]}, {"score": -4.57363033512658, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Discard(), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -3.0848193168640137, -1.9073486328125e-06, -0.0026950836181640625, -1.71661376953125e-05, -2.288818359375e-05, -0.0033038854598999023, -1.9073486328125e-06, -0.0024242401123046875, -0.00048828125, -0.004894256591796875, 0.0, -8.58306884765625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.5828248262405396, -1.9073486328125e-06, -1.9073486328125e-06, -0.00037848949432373047, 0.0, -0.022681236267089844, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -8.273124694824219e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.008419990539550781, -3.814697265625e-06, -0.29628920555114746, -0.11285752058029175, -0.10733222961425781, -0.23035526275634766, -1.9073486328125e-06, -1.33514404296875e-05, -0.10740530490875244, -6.127357482910156e-05, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.0002855062484741211, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.003934979438781738, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.975575625896454e-06, -3.814697265625e-06, -3.921845927834511e-05, 0.0, -0.0003567242238204926, 0.0]}, {"score": -4.883238353147789, "choice_history": [59, 124, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Succubus", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Discard", "<EOS>", 41, 90, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(\n            Discard(), PlayerSelector(EnemyPlayer(), value=0)))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Discard"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Succubus", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.000247955322265625, -0.0009675204055383801, -2.1457672119140625e-06, -1.1920883480343036e-07, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.145764938177308e-06, -3.933906555175781e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.6113109588623047, 0.0, -0.001094818115234375, -3.814697265625e-05, -3.4332275390625e-05, -0.0016176700592041016, -1.9073486328125e-06, -0.0029201507568359375, -0.0004901885986328125, -0.004458427429199219, 0.0, -8.392333984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.9527150392532349, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012409687042236328, 0.0, -0.04652976989746094, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0058135986328125, -3.814697265625e-06, -0.24841758608818054, -0.11624763160943985, -0.1036825180053711, -2.2900094985961914, -0.00022125244140625, -3.62396240234375e-05, -0.0112259266898036, -0.0026950836181640625, 0.0, -1.33514404296875e-05, -0.025098800659179688, 0.0, -0.0023305416107177734, 0.0, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -0.18992900848388672, -1.9073486328125e-06, -0.2591714859008789, -5.340576171875e-05, -0.0018945931224152446, 0.0, -3.886222839355469e-05, 0.0, -0.003094313433393836, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.533250704407692e-07, -3.814697265625e-06, -7.748599273327272e-06, 0.0, -0.0002493532083462924, 0.0]}], "gold_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}
{"beams": [{"score": -0.07967438074047095, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -0.0007251499337144196, 0.0, -3.266334533691406e-05, 0.0, -6.878376007080078e-05, 0.0, 0.0, 0.0, -0.07478046417236328, -1.5494588296860456e-06, -5.7220458984375e-06, -0.0015763724222779274, -3.814697265625e-06, -0.0002292187709826976, -1.9073486328125e-06]}, {"score": -3.780998545071256, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 166, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Thaddius", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", 41, 89, 24, 112, "In", "Graveyard", "<EOS>", 164, 51, 130, "Feugen", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Feugen())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Thaddius"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Feugen"}], "func": {"_type": "Name", "id": "InGraveyard"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -0.0007251499337144196, 0.0, -3.266334533691406e-05, 0.0, -6.878376007080078e-05, 0.0, 0.0, 0.0, -2.660651206970215, -2.8609720175154507e-06, -1.1920928244535389e-07, -6.198863047757186e-06, 0.0, -0.0010155458003282547, -1.1920928244535389e-07, -1.9073486328125e-05, -2.86102294921875e-05, -0.08978867530822754, 0.0, -0.0011739730834960938, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0004082918167114258, -7.62939453125e-06, -0.0062541961669921875, -0.00086212158203125, -3.814697265625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0031431913375854492, -1.5735626220703125e-05, -0.0059185028076171875, -0.001129150390625, -0.0003814697265625, -0.2444925755262375, -1.3589859008789062e-05, -2.47955322265625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -0.0003223419189453125, 0.0, -0.0007343292236328125, -0.012121200561523438, -9.5367431640625e-06, 0.0, -0.015128612518310547, -0.005433201789855957, -0.000331878662109375, -1.9073486328125e-05, -0.0002346038818359375, -4.38690185546875e-05, -0.726030170917511, -0.002069830894470215]}, {"score": -4.552720444580686, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 166, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Thaddius", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", 41, 89, 24, 112, "In", "Graveyard", "<EOS>", 164, 51, 130, "Stalagg", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Stalagg())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Thaddius"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Stalagg"}], "func": {"_type": "Name", "id": "InGraveyard"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -0.0007251499337144196, 0.0, -3.266334533691406e-05, 0.0, -6.878376007080078e-05, 0.0, 0.0, 0.0, -2.660651206970215, -2.8609720175154507e-06, -1.1920928244535389e-07, -6.198863047757186e-06, 0.0, -0.0010155458003282547, -1.1920928244535389e-07, -1.9073486328125e-05, -2.86102294921875e-05, -0.08978867530822754, 0.0, -0.0011739730834960938, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0004082918167114258, -7.62939453125e-06, -0.0062541961669921875, -0.00086212158203125, -3.814697265625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0031431913375854492, -1.5735626220703125e-05, -0.0059185028076171875, -0.001129150390625, -0.0003814697265625, -0.2444925755262375, -1.3589859008789062e-05, -2.47955322265625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -0.0003223419189453125, 0.0, -0.0007343292236328125, -0.012121200561523438, -9.5367431640625e-06, 0.0, -0.015128612518310547, -0.005433201789855957, -0.000331878662109375, -1.9073486328125e-05, -0.0002346038818359375, -4.38690185546875e-05, -1.4993197917938232, -0.0005021095275878906]}, {"score": -5.549767108937871, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -0.0007251499337144196, 0.0, -3.266334533691406e-05, 0.0, -6.878376007080078e-05, 0.0, 0.0, 0.0, -2.660651206970215, -2.8609720175154507e-06, -1.1920928244535389e-07, -6.198863047757186e-06, 0.0, -0.0010155458003282547, -1.1920928244535389e-07, -1.9073486328125e-05, -2.86102294921875e-05, -2.8830645084381104, 0.0, -0.0001201629638671875, -1.52587890625e-05, -0.0017681121826171875, 0.0]}, {"score": -6.629334792607551, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -0.0007251499337144196, 0.0, -3.266334533691406e-05, 0.0, -6.878376007080078e-05, 0.0, 0.0, 0.0, -0.07478046417236328, -1.5494588296860456e-06, -5.7220458984375e-06, -6.477663516998291, -1.9073486328125e-06, -0.07380439341068268, -1.9073486328125e-06]}, {"score": -7.921156772510585, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -7.869758129119873, 0.0, -1.537799835205078e-05, 0.0, -6.496906280517578e-05, 0.0, -1.9073486328125e-06, 0.0, -0.04814624786376953, -1.072752638719976e-06, -3.814697265625e-06, -0.0007968348800204694, -3.814697265625e-06, -0.00011396195623092353, -1.9073486328125e-06]}, {"score": -7.998422833155928, "choice_history": [59, 124, "<UNK>", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class <UNK>Golem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "<UNK>Golem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -7.919132232666016, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -0.0007251499337144196, 0.0, -3.266334533691406e-05, 0.0, -6.878376007080078e-05, 0.0, 0.0, 0.0, -0.07478046417236328, -1.5494588296860456e-06, -5.7220458984375e-06, -0.0015763724222779274, -3.814697265625e-06, -0.0002292187709826976, -1.9073486328125e-06]}, {"score": -8.3904895171911, "choice_history": [59, 124, "War", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class War(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "War", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -8.323957443237305, -0.0034006573259830475, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00074005126953125, -9.5367431640625e-06, -4.291525328881107e-06, -6.902217864990234e-05, -7.152555099310121e-07, -5.364416665543104e-06, -0.000113012341898866, 0.0, -0.00012838741531595588, 0.0, -0.00047647947212681174, 0.0, -2.872943878173828e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.05849456787109375, -1.7876154743134975e-06, -5.7220458984375e-06, -0.0019754909444600344, -3.814697265625e-06, -0.0002882125845644623, -1.9073486328125e-06]}, {"score": -8.456905641705816, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "4", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -0.0007251499337144196, 0.0, -3.266334533691406e-05, 0.0, -6.878376007080078e-05, 0.0, 0.0, 0.0, -0.07478046417236328, -1.5494588296860456e-06, -5.7220458984375e-06, -0.0015763724222779274, -3.814697265625e-06, -8.377462387084961, 0.0]}, {"score": -8.933809767364437, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            WARRIOR)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "WARRIOR"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -8.793325424194336, -0.00031280517578125, -1.537799835205078e-05, 0.0, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.13637065887451172, -1.191954652313143e-06, -3.814697265625e-06, -0.0013473487924784422, -3.814697265625e-06, -0.00013291247887536883, -1.9073486328125e-06]}, {"score": -8.997696770388188, "choice_history": [59, 124, "War", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class War<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "War<UNK>", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -8.890299797058105, -5.3644151194021106e-05, -1.1920201359316707e-07, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.000732421875, -1.1444091796875e-05, -2.0265558760002023e-06, -5.5909156799316406e-05, -8.344646857949556e-07, -6.914137884450611e-06, -0.00010562439274508506, 0.0, -0.00014078443928156048, 0.0, -0.0011907812440767884, 0.0, -2.8967857360839844e-05, 0.0, -6.115436553955078e-05, 0.0, 0.0, 0.0, -0.10285091400146484, -2.1454034140333533e-06, -7.62939453125e-06, -0.0012135290307924151, -3.814697265625e-06, -0.00020109265460632741, -1.9073486328125e-06]}, {"score": -9.198718160503631, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "4", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -0.0007251499337144196, 0.0, -3.266334533691406e-05, 0.0, -6.878376007080078e-05, 0.0, 0.0, 0.0, -0.07478046417236328, -1.5494588296860456e-06, -5.7220458984375e-06, -6.477663516998291, -1.9073486328125e-06, -2.6431896686553955, 0.0]}, {"score": -9.376269414933631, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -0.00016081052308436483, 0.0, -9.24360466003418, 0.0, -2.6702880859375e-05, 0.0, -4.9591064453125e-05, 0.0, 0.0, 0.0, -0.12946414947509766, -9.536197467241436e-07, -7.62939453125e-06, -0.0007002284983173013, -5.7220458984375e-06, -0.00015913578681647778, -1.9073486328125e-06]}, {"score": -9.662453796980117, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "ALL", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 0, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 0, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.58851146697998, -9.655948815634474e-05, -0.00080025166971609, 0.0, -0.001896618865430355, 0.0, -2.5153160095214844e-05, 0.0, -6.496906280517578e-05, 0.0, -1.9073486328125e-06, 0.0, -0.061031341552734375, -4.289468051865697e-06, -5.7220458984375e-06, -0.007647994440048933, -3.814697265625e-06, -0.00036400576937012374, -1.9073486328125e-06]}, {"score": -9.828364056829741, "choice_history": [59, 124, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.7, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "7", "hole1": 7, "_type": "Template3", "hole0": "War Golem", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion"}], "hole0": "WarGolem", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.0003108978271484375, -0.00038378025055862963, -0.0003953390696551651, -5.149768549017608e-05, -4.7676439862698317e-07, -1.9073486328125e-06, -2.0265579223632812e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00074005126953125, -7.62939453125e-06, -2.264974000354414e-06, -5.7697296142578125e-05, -7.152555099310121e-07, -9.179114385915454e-06, -9.012917871586978e-05, 0.0, -9.498577117919922, 0.0, -0.32005763053894043, 0.0, -1.5616416931152344e-05, 0.0, -9.775161743164062e-05, 0.0, 0.0, 0.0, -0.006725311279296875, -4.768007784150541e-07, -1.52587890625e-05, -0.0005532163777388632, -3.814697265625e-06, -0.0002280307817272842, -1.9073486328125e-06]}], "gold_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n"}
{"beams": [{"score": -1.7931801916158463, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "2", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Heal(2),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -0.24637413024902344, -0.000408172607421875, -5.7220458984375e-06, 0.0, -0.6429685354232788, -2.539145316404756e-05, -1.9073486328125e-06, -0.002048492431640625, -4.00543212890625e-05, -0.46490421891212463, -1.728529969113879e-05, -0.01041412353515625, 0.0, -0.010622620582580566, -0.00046193599700927734, 0.0]}, {"score": -2.3470615686448184, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -0.24637413024902344, -0.000408172607421875, -5.7220458984375e-06, 0.0, -0.6429685354232788, -2.539145316404756e-05, -1.9073486328125e-06, -0.002048492431640625, -4.00543212890625e-05, -1.0075596570968628, -3.576278118089249e-07, -0.022652626037597656, 0.0, -0.00970911979675293, -0.00037980079650878906, 0.0]}, {"score": -2.415455394716645, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "Damaged", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(Kill(), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -1.3195409774780273, -0.0025739669799804688, -1.71661376953125e-05, 0.0, -0.006289083976298571, -0.004865765571594238, -2.0265579223632812e-06, -0.00443267822265625, -1.9073486328125e-05, -0.05659675598144531, 0.0, -0.016805648803710938, 0.0, -0.12843450903892517, -0.06211268901824951, -0.00014972686767578125, -4.38690185546875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -0.0007152557373046875, -3.814697265625e-06, -7.62939453125e-05, -0.04155731201171875, -5.7220458984375e-06, -0.5064725875854492, -2.8848629881395027e-05, -0.03122711181640625, 0.0, -0.13547027111053467, -0.0008240938186645508, 0.0]}, {"score": -2.552087226781822, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(\n            ChangeHealth(3)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -0.24637413024902344, -0.000408172607421875, -5.7220458984375e-06, 0.0, -1.076173186302185, -7.748603820800781e-06, -5.7220458984375e-06, -0.06634330749511719, -0.0011730194091796875, -3.814697265625e-06, 0.0, -0.0880884975194931, -0.08885133266448975, 0.0, 0.0, -0.5552148818969727, -0.010965347290039062, -1.33514404296875e-05, -0.003535151481628418, -3.62396240234375e-05, 0.0]}, {"score": -3.7132072837859766, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Kill(),\n            MinionSelector(EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -1.5216808319091797, -7.62939453125e-06, -0.7021232843399048, -1.7762085917638615e-05, -0.8094301223754883, -0.0007343292236328125, -9.5367431640625e-06, 0.0, -0.13231050968170166, -3.075599670410156e-05, -2.86102294921875e-05, -0.0699310302734375, -0.02737712860107422, -3.814697265625e-05, -0.03457818925380707, -2.181529634981416e-05, 0.0]}, {"score": -3.8905267061538495, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Kill(),\n            SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -1.5216808319091797, -7.62939453125e-06, -0.7021232843399048, -1.7762085917638615e-05, -0.5890827178955078, -1.9073486328125e-06, -0.6624444723129272, -0.0002804994583129883, 0.0]}, {"score": -3.924876073274582, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(\n            ChangeHealth(5)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -0.24637413024902344, -0.000408172607421875, -5.7220458984375e-06, 0.0, -1.076173186302185, -7.748603820800781e-06, -5.7220458984375e-06, -0.06634330749511719, -0.0011730194091796875, -3.814697265625e-06, 0.0, -0.0880884975194931, -0.08885133266448975, 0.0, 0.0, -0.9149045944213867, -2.09808349609375e-05, -0.44176381826400757, -1.1920928244535389e-07, -0.15271377563476562, 0.0, -0.43311429023742676, -3.62396240234375e-05, 0.0]}, {"score": -4.246485585007775, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "2", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Damage(2),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -0.24637413024902344, -0.000408172607421875, -5.7220458984375e-06, 0.0, -2.6599514484405518, -7.152551916078664e-06, -1.9073486328125e-06, -0.3314695358276367, -0.0001125335693359375, -0.4944571852684021, -3.874278627336025e-05, -0.08403205871582031, 0.0, -0.014327168464660645, -0.00041222572326660156, 0.0]}, {"score": -4.302321845466594, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Kill(),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -1.5216808319091797, -7.62939453125e-06, -0.7021232843399048, -1.7762085917638615e-05, -0.5890827178955078, -1.9073486328125e-06, -1.0743268728256226, -0.0001932382583618164, 0.0]}, {"score": -4.363402897370378, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Draw(),\n            PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -1.5216808319091797, -7.62939453125e-06, -2.424621105194092, -8.344629350176547e-06, -0.0006313323974609375, 0.0, -0.0014497041702270508, -0.0001163482666015625, 0.0]}, {"score": -4.486823314044095, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "2", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 4, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Heal(2),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -2.7578775882720947, -3.576278118089249e-07, 0.0, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -2.3126602172851562e-05, -2.86102294921875e-05, -0.0014581680297851562, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -0.05396771430969238, 0.0, -0.00016021728515625, -1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -0.00025177001953125, -0.00125885009765625, 0.0, -1.7404556274414062e-05, 0.0, -0.0020951773039996624, 0.0, -0.00069427490234375, -1.33514404296875e-05, -0.001094818115234375, 0.0, -1.1920928244535389e-07, 0.0, -3.814689989667386e-06, -7.522106170654297e-05, -1.788126610335894e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016880035400390625, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -0.001834869384765625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00013625621795654297, -1.0013580322265625e-05, -3.24249267578125e-05, -0.2693319320678711, 0.0, -0.004650038667023182, -3.8266178307821974e-05, -0.0001049041748046875, 0.0, -1.1444091796875e-05, 0.0, -9.26238062675111e-05, -0.001556396484375, 0.0, -5.53131103515625e-05, -0.2452068328857422, -0.0004100799560546875, -5.7220458984375e-06, 0.0, -0.6432536840438843, -2.551066063460894e-05, -1.9073486328125e-06, -0.00203704833984375, -4.1961669921875e-05, -0.4654160141944885, -1.740450898068957e-05, -0.01056671142578125, 0.0, -0.010740876197814941, -0.00046384334564208984, 0.0]}, {"score": -4.493196302385712, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "Damaged", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(Draw(), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -1.3195409774780273, -0.0025739669799804688, -1.71661376953125e-05, 0.0, -0.006289083976298571, -0.004865765571594238, -2.0265579223632812e-06, -0.00443267822265625, -1.9073486328125e-05, -0.05659675598144531, 0.0, -0.016805648803710938, 0.0, -0.12843450903892517, -0.06211268901824951, -0.00014972686767578125, -4.38690185546875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -0.0007152557373046875, -3.814697265625e-06, -7.62939453125e-05, -0.04155731201171875, -5.7220458984375e-06, -2.749567985534668, -3.671644299174659e-05, -0.00011444091796875, 0.0, -0.0019664764404296875, -7.82012939453125e-05, 0.0]}, {"score": -4.687365647250061, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "Damaged", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Bounce", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(Bounce(), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Bounce"}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -1.3195409774780273, -0.0025739669799804688, -1.71661376953125e-05, 0.0, -0.006289083976298571, -0.004865765571594238, -2.0265579223632812e-06, -0.00443267822265625, -1.9073486328125e-05, -0.05659675598144531, 0.0, -0.016805648803710938, 0.0, -0.12843450903892517, -0.06211268901824951, -0.00014972686767578125, -4.38690185546875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -0.0007152557373046875, -3.814697265625e-06, -7.62939453125e-05, -0.04155731201171875, -5.7220458984375e-06, -1.967139720916748, -0.005283060017973185, -0.000213623046875, 0.0, -0.9728827476501465, -0.0004140138626098633, 0.0]}, {"score": -4.709999902362789, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            ChangeHealth(3))), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -0.24637413024902344, -0.000408172607421875, -5.7220458984375e-06, 0.0, -1.076173186302185, -7.748603820800781e-06, -5.7220458984375e-06, -0.06634330749511719, -0.0011730194091796875, -3.814697265625e-06, 0.0, -2.504302501678467, -7.271765298355604e-06, -4.57763671875e-05, -0.1836872100830078, -0.0001277923583984375, -3.814697265625e-06, 0.0, -0.0006424675812013447, -0.0599207878112793, -1.1920928244535389e-07, 0.0, -0.1437673568725586, -0.009065628051757812, -2.86102294921875e-05, -0.0029265880584716797, -9.1552734375e-05, 0.0]}, {"score": -4.8973464759921725, "choice_history": [59, 124, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidmaw", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Minion", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(\n            ChangeHealth(5)), MinionSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "MinionSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Acidmaw", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -0.000370025634765625, -0.005354349501430988, -6.878374551888555e-05, -1.8711216398514807e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00135040283203125, -4.76837158203125e-05, -0.0001277923583984375, -4.386805812828243e-05, -1.9073486328125e-06, -0.0036449432373046875, -3.24249267578125e-05, -0.06578528881072998, -5.006789251638111e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -4.398822784423828e-05, -4.00543212890625e-05, -0.002239227294921875, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -0.0091705322265625, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -0.000209808349609375, -0.0013332366943359375, 0.0, -1.7404556274414062e-05, 0.0, -0.002215927466750145, 0.0, -0.0006809234619140625, -1.33514404296875e-05, -0.001026153564453125, 0.0, -2.3841855067985307e-07, 0.0, -3.2186455882765586e-06, -7.319450378417969e-05, -1.740443622111343e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -0.0020580291748046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0001418590545654297, -1.2040138244628906e-05, -3.24249267578125e-05, -0.31133174896240234, 0.0, -0.004518321715295315, -3.8266178307821974e-05, -0.000102996826171875, 0.0, -1.1444091796875e-05, 0.0, -9.250460425391793e-05, -0.001575469970703125, 0.0, -5.53131103515625e-05, -0.24637413024902344, -0.000408172607421875, -5.7220458984375e-06, 0.0, -1.076173186302185, -7.748603820800781e-06, -5.7220458984375e-06, -0.06634330749511719, -0.0011730194091796875, -3.814697265625e-06, 0.0, -0.0880884975194931, -0.08885133266448975, 0.0, 0.0, -0.9149045944213867, -2.09808349609375e-05, -0.44176381826400757, -1.1920928244535389e-07, -0.15271377563476562, 0.0, -1.405615210533142, -5.7220458984375e-06, 0.0]}], "gold_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(\n            MinionIsNotTarget(), BothPlayer()), [ActionTag(Kill(),\n            TargetSelector())])])\n"}
{"beams": [{"score": -1.3142930103385808, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Boar", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.31392765045166016, -0.03436088562011719, -0.001544952392578125, -0.005123138427734375, -4.57763671875e-05, -9.5367431640625e-06, -3.933904736186378e-06, -3.814689989667386e-06, -0.05517387390136719, 0.0, 0.0, 0.0, 0.0, -0.00011110305786132812, -7.62939453125e-06, -0.0004730224609375, 0.0, -0.6625204086303711, -3.814697265625e-06, -5.7220458984375e-06, -9.572505950927734e-05, -7.62939453125e-06, -0.0008678436279296875, -2.09808349609375e-05, -4.208087921142578e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.38690185546875e-05, -0.0018329620361328125, -3.0517578125e-05, -2.09808349609375e-05, 0.0, -0.21421867609024048, -1.1563301086425781e-05, -0.000148773193359375, -0.0028047561645507812, -0.004096031188964844, 0.0, -4.0531158447265625e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00041322092874906957, 0.0, -3.62396240234375e-05, 0.0, -0.009118318557739258, 0.0, -3.4332275390625e-05, -1.71661376953125e-05, -0.0010585784912109375, 0.0]}, {"score": -1.588460936410911, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Boar", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -1.3156042098999023, -0.0002956390380859375, -0.00020358951587695628, -0.000147097249282524, -2.229207893833518e-05, -1.9073486328125e-06, -0.00014531612396240234, -3.814697265625e-06, -0.13980627059936523, 0.0, -1.5616416931152344e-05, 0.0, -0.10803946852684021, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -2.0265558760002023e-06, -5.7220458984375e-06, 0.0, -0.0005888441810384393, 0.0, -0.0003604888916015625, -1.9073486328125e-06, -0.016043782234191895, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.0011653900146484375, 0.0]}, {"score": -1.8247190653091678, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Boar", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.31392765045166016, -0.03436088562011719, -0.001544952392578125, -0.005123138427734375, -4.57763671875e-05, -9.5367431640625e-06, -3.933904736186378e-06, -3.814689989667386e-06, -0.05517387390136719, 0.0, 0.0, 0.0, 0.0, -0.00011110305786132812, -7.62939453125e-06, -0.0004730224609375, 0.0, -0.7331218719482422, 0.0, -2.47955322265625e-05, -0.4706984758377075, 0.0, -0.000148773193359375, -1.9073486328125e-06, -5.1021575927734375e-05, -2.0265579223632812e-06, -0.0005054473876953125, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -3.814697265625e-05, -0.0011425018310546875, -4.38690185546875e-05, -2.288818359375e-05, 0.0, -0.18800991773605347, -1.1563301086425781e-05, -0.0001850128173828125, -0.0014667510986328125, -0.0018482208251953125, 0.0, -7.867813110351562e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0003817601827904582, -1.1920928244535389e-07, -4.00543212890625e-05, 0.0, -0.00895237922668457, 0.0, -3.24249267578125e-05, -1.71661376953125e-05, -0.00107574462890625, 0.0]}, {"score": -2.3695716671099802, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Boar", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.31392765045166016, -0.03436088562011719, -0.001544952392578125, -0.005123138427734375, -4.57763671875e-05, -9.5367431640625e-06, -3.933904736186378e-06, -3.814689989667386e-06, -0.05517387390136719, 0.0, 0.0, 0.0, 0.0, -0.00011110305786132812, -7.62939453125e-06, -0.0004730224609375, 0.0, -0.7331218719482422, 0.0, -2.47955322265625e-05, -1.0283414125442505, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -5.0067901611328125e-05, -2.0265579223632812e-06, -0.0004215240478515625, -1.33514404296875e-05, -4.38690185546875e-05, 0.0, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, -6.29425048828125e-05, -3.814697265625e-05, -0.00130462646484375, -3.814697265625e-05, -2.47955322265625e-05, 0.0, -0.1750284880399704, -1.3470649719238281e-05, -0.0001811981201171875, -0.00162506103515625, -0.0019254684448242188, 0.0, -7.867813110351562e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0003754443896468729, -1.1920928244535389e-07, -4.00543212890625e-05, 0.0, -0.008939981460571289, 0.0, -3.24249267578125e-05, -1.71661376953125e-05, -0.001071929931640625, 0.0]}, {"score": -2.8310600245931354, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Boar", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.31392765045166016, -0.03436088562011719, -0.001544952392578125, -0.005123138427734375, -4.57763671875e-05, -9.5367431640625e-06, -3.933904736186378e-06, -3.814689989667386e-06, -0.05517387390136719, 0.0, 0.0, 0.0, 0.0, -0.00011110305786132812, -7.62939453125e-06, -0.0004730224609375, 0.0, -0.6625204086303711, -3.814697265625e-06, -5.7220458984375e-06, -9.572505950927734e-05, -7.62939453125e-06, -0.0008678436279296875, -2.09808349609375e-05, -4.208087921142578e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.38690185546875e-05, -0.0018329620361328125, -3.0517578125e-05, -2.09808349609375e-05, 0.0, -1.7097258567810059, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.026421546936035156, 0.0, -2.1457672119140625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -0.00025722483405843377, -1.1920928244535389e-07, -3.62396240234375e-05, 0.0, -0.011162042617797852, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -0.0010280609130859375, 0.0]}, {"score": -3.4881487763232, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Boar", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.31392765045166016, -0.03436088562011719, -0.001544952392578125, -0.005123138427734375, -4.57763671875e-05, -9.5367431640625e-06, -3.933904736186378e-06, -3.814689989667386e-06, -0.05517387390136719, 0.0, 0.0, 0.0, 0.0, -0.00011110305786132812, -7.62939453125e-06, -0.0004730224609375, 0.0, -0.7331218719482422, 0.0, -2.47955322265625e-05, -0.4706984758377075, 0.0, -0.000148773193359375, -1.9073486328125e-06, -5.1021575927734375e-05, -2.0265579223632812e-06, -0.0005054473876953125, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -3.814697265625e-05, -0.0011425018310546875, -4.38690185546875e-05, -2.288818359375e-05, 0.0, -1.8072582483291626, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -0.044907569885253906, 0.0, -4.0531158447265625e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.000278439256362617, -1.1920928244535389e-07, -3.62396240234375e-05, 0.0, -0.011820077896118164, 0.0, -3.62396240234375e-05, -1.52587890625e-05, -0.001068115234375, 0.0]}, {"score": -3.754231544477065, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Boar", "<EOS>", 48, 117, "3", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Boar", "_type": "Str"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.31392765045166016, -0.03436088562011719, -0.001544952392578125, -0.005123138427734375, -4.57763671875e-05, -9.5367431640625e-06, -3.933904736186378e-06, -3.814689989667386e-06, -2.9322681427001953, -3.814697265625e-06, -0.00015961081953719258, -2.384185791015625e-06, -0.0026187896728515625, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -5.221366882324219e-05, -1.9073486328125e-06, -0.0026264190673828125, -1.9073486328125e-06, -0.13610267639160156, -1.52587890625e-05, -1.9073486328125e-06, -6.496906280517578e-05, -9.5367431640625e-06, -0.0004138946533203125, -2.09808349609375e-05, -3.0517578125e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-05, -0.000873565673828125, -5.7220458984375e-05, -2.288818359375e-05, 0.0, -0.3045402467250824, -5.7220458984375e-06, -0.000278472900390625, -0.000438690185546875, -0.0019121170043945312, 0.0, -9.655952453613281e-06, 0.0, -1.1920928244535389e-07, -0.0004841199843212962, -1.1920928244535389e-07, -5.91278076171875e-05, 0.0, -0.008818864822387695, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.001163482666015625, 0.0]}, {"score": -4.004270009546644, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Boar", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -1.3156042098999023, -0.0002956390380859375, -0.00020358951587695628, -0.000147097249282524, -2.229207893833518e-05, -1.9073486328125e-06, -0.00014531612396240234, -3.814697265625e-06, -2.616300106048584, 0.0, -1.8477439880371094e-05, 0.0, -0.047209206968545914, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -1.1920883480343036e-07, -2.0265558760002023e-06, -3.814697265625e-06, 0.0, -0.0008362673688679934, 0.0, -0.0004253387451171875, -1.9073486328125e-06, -0.015771031379699707, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.001262664794921875, 0.0]}, {"score": -4.025293231351704, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 89, 35, 169, 49, 121, "Boar", "<EOS>", 48, 117, "3", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 47, 113, "False", "<EOS>", 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"s": "Boar", "_type": "Str"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.31392765045166016, -3.391193389892578, -0.05819129943847656, -0.049304962158203125, -0.0033721923828125, -0.00042724609375, -1.4662635294371285e-05, -0.0010455227456986904, -0.00112152099609375, -1.52587890625e-05, -0.003258568001911044, -2.503394853192731e-06, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00024831295013427734, -1.71661376953125e-05, -0.0043392181396484375, 0.0, -0.1485748291015625, -1.33514404296875e-05, -4.76837158203125e-05, -0.013533592224121094, -5.7220458984375e-06, -8.0108642578125e-05, -3.814697265625e-06, -7.677078247070312e-05, -1.1920928244535389e-07, -8.58306884765625e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0022754669189453125, -3.814697265625e-06, -0.008877754211425781, -1.71661376953125e-05, -0.0003014802932739258, 0.0, -0.00950383860617876, -3.933906555175781e-06, -0.0001392364501953125, -0.0002613067626953125, -0.0018491744995117188, -1.1920883480343036e-07, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -0.0005771737778559327, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -0.004420280456542969, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -0.0020771026611328125, 0.0]}, {"score": -4.08637705104411, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Boar", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -1.3156042098999023, -0.0002956390380859375, -0.00020358951587695628, -0.000147097249282524, -2.229207893833518e-05, -1.9073486328125e-06, -0.00014531612396240234, -3.814697265625e-06, -0.13980627059936523, 0.0, -1.5616416931152344e-05, 0.0, -2.6087355613708496, -2.1457672119140625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -4.38690185546875e-05, 0.0, -1.9073468138230965e-06, -3.814697265625e-06, 0.0, -0.0006201786454766989, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -0.013318181037902832, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.00109100341796875, 0.0]}, {"score": -4.142156449644958, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Boar", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.31392765045166016, -0.03436088562011719, -0.001544952392578125, -0.005123138427734375, -4.57763671875e-05, -9.5367431640625e-06, -3.933904736186378e-06, -3.814689989667386e-06, -0.05517387390136719, 0.0, 0.0, 0.0, 0.0, -0.00011110305786132812, -7.62939453125e-06, -0.0004730224609375, 0.0, -0.7331218719482422, 0.0, -2.47955322265625e-05, -1.0283414125442505, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -5.0067901611328125e-05, -2.0265579223632812e-06, -0.0004215240478515625, -1.33514404296875e-05, -4.38690185546875e-05, 0.0, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, -6.29425048828125e-05, -3.814697265625e-05, -0.00130462646484375, -3.814697265625e-05, -2.47955322265625e-05, 0.0, -1.8846193552017212, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -0.06391716003417969, 0.0, -4.0531158447265625e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00027820089599117637, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -0.011832475662231445, 0.0, -3.62396240234375e-05, -1.52587890625e-05, -0.0010700225830078125, 0.0]}, {"score": -5.112631904851014, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.WARRIOR)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Boar", "hole3": "WARRIOR"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -1.3156042098999023, -0.0002956390380859375, -0.00020358951587695628, -0.000147097249282524, -2.229207893833518e-05, -1.9073486328125e-06, -0.00014531612396240234, -3.814697265625e-06, -3.722403049468994, -4.76837158203125e-05, -3.838538395939395e-05, 0.0, -0.04958980903029442, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, -1.1920838005607948e-07, -2.264974000354414e-06, -7.62939453125e-06, 0.0, -0.0005762152140960097, 0.0, -0.00041961669921875, -1.9073486328125e-06, -0.015952229499816895, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.001163482666015625, 0.0]}, {"score": -5.262471432992697, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Boar", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -1.3156042098999023, -0.0002956390380859375, -0.00020358951587695628, -0.000147097249282524, -2.229207893833518e-05, -1.9073486328125e-06, -0.00014531612396240234, -3.814697265625e-06, -3.852550983428955, 0.0, -4.06503640988376e-05, 0.0, -0.0693550780415535, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -1.1920838005607948e-07, -2.145764938177308e-06, -7.62939453125e-06, 0.0, -0.0005824106046929955, 0.0, -0.00041961669921875, -1.9073486328125e-06, -0.015891194343566895, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -0.0011882781982421875, 0.0]}, {"score": -5.2863930837154385, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "Minion", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, Minion):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole4": "Minion", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Boar", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -1.3156042098999023, -0.0002956390380859375, -0.00020358951587695628, -0.000147097249282524, -2.229207893833518e-05, -1.9073486328125e-06, -0.00014531612396240234, -3.814697265625e-06, -0.13980627059936523, 0.0, -1.5616416931152344e-05, 0.0, -3.7955949306488037, -0.011127471923828125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -1.1920883480343036e-07, -1.7881377516459906e-06, -5.7220458984375e-06, 0.0, -0.0006001624278724194, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.015308499336242676, 0.0, -2.09808349609375e-05, -9.5367431640625e-06, -0.001220703125, 0.0]}, {"score": -6.0416516207294535, "choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, spell_damage=1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Boar", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}]}], "hole0": "Boar", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -4.38690185546875e-05, -0.00010775939153973013, -0.005528934299945831, -4.291401637601666e-06, -1.9073486328125e-06, -0.00016248224710579962, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -1.3156042098999023, -0.0002956390380859375, -0.00020358951587695628, -0.000147097249282524, -2.229207893833518e-05, -1.9073486328125e-06, -0.00014531612396240234, -3.814697265625e-06, -0.13980627059936523, 0.0, -1.5616416931152344e-05, 0.0, -0.10803946852684021, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -2.0265558760002023e-06, -5.7220458984375e-06, 0.0, -0.0005888441810384393, 0.0, -0.0003604888916015625, -1.9073486328125e-06, -4.410408973693848, 0.0, -0.060027122497558594]}], "gold_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}
{"beams": [{"score": -0.9432288176274923, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.3479909896850586, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00010752677917480469, -8.344646857949556e-07, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.11938679218292236, 0.0, -0.0001850128173828125, 0.0, -0.2964416742324829, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001087188720703125, 0.0, -1.0013530300057027e-05, 0.0, -1.1920922133867862e-06, -0.00021670245041605085, -9.536738616588991e-07, -0.00035858154296875, -1.9073486328125e-06, -0.003985166549682617, -1.1920928244535389e-07, -3.62396240234375e-05, -7.62939453125e-06, -0.000415802001953125, 0.0]}, {"score": -2.0810776840228016, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.3479909896850586, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00010752677917480469, -8.344646857949556e-07, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.11938679218292236, 0.0, -0.0001850128173828125, 0.0, -1.4330421686172485, -9.5367431640625e-06, -0.000102996826171875, -0.00128173828125, -5.53131103515625e-05, 0.0, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.00015305698616430163, -8.344646857949556e-07, -0.0004730224609375, -3.814697265625e-06, -0.003867626190185547, 0.0, -4.00543212890625e-05, -9.5367431640625e-06, -0.0004558563232421875, 0.0]}, {"score": -2.211767649187742, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -1.5925531387329102, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-05, -1.9073486328125e-06, -0.000164031982421875, -1.0728830375228426e-06, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -8.96453857421875e-05, -5.7220458984375e-06, -0.13746559619903564, 0.0, -0.0001811981201171875, 0.0, -0.3021812438964844, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001087188720703125, 0.0, -9.775113539944869e-06, 0.0, -1.0728830375228426e-06, -0.000222423390368931, -9.536738616588991e-07, -0.0003662109375, -1.9073486328125e-06, -0.004071831703186035, -1.1920928244535389e-07, -3.814697265625e-05, -7.62939453125e-06, -0.0004177093505859375, 0.0]}, {"score": -3.3237721801123996, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -1.5925531387329102, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-05, -1.9073486328125e-06, -0.000164031982421875, -1.0728830375228426e-06, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -8.96453857421875e-05, -5.7220458984375e-06, -0.13746559619903564, 0.0, -0.0001811981201171875, 0.0, -1.4128656387329102, -9.5367431640625e-06, -0.0001087188720703125, -0.0013790130615234375, -5.53131103515625e-05, 0.0, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.00015865880413912237, -8.344646857949556e-07, -0.000484466552734375, -3.814697265625e-06, -0.003922820091247559, 0.0, -4.00543212890625e-05, -9.5367431640625e-06, -0.000457763671875, 0.0]}, {"score": -3.699074813242042, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.3479909896850586, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00010752677917480469, -8.344646857949556e-07, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -3.1119937896728516, -1.9073486328125e-06, -3.647804260253906e-05, 0.0, -0.05902490392327309, 0.0, -0.0002880096435546875, -9.5367431640625e-06, -8.58306884765625e-05, 0.0, -9.059865078597795e-06, 0.0, -1.0728830375228426e-06, -0.0002261181070934981, -9.536738616588991e-07, -0.000431060791015625, -1.9073486328125e-06, -0.004483580589294434, -1.1920928244535389e-07, -3.814697265625e-05, -7.62939453125e-06, -0.000431060791015625, 0.0]}, {"score": -3.74614160407949, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.3479909896850586, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00010752677917480469, -8.344646857949556e-07, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -3.1697540283203125, 0.0, -5.9485435485839844e-05, 0.0, -0.04927320405840874, 0.0, -6.4849853515625e-05, -9.5367431640625e-06, -0.0001277923583984375, 0.0, -9.059865078597795e-06, 0.0, -1.1920922133867862e-06, -0.00019989750580862164, -9.536738616588991e-07, -0.000400543212890625, -1.9073486328125e-06, -0.003785252571105957, -1.1920928244535389e-07, -3.62396240234375e-05, -7.62939453125e-06, -0.0004062652587890625, 0.0]}, {"score": -3.798915599774851, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -3.195998191833496, 0.0, -1.71661376953125e-05, -7.43865966796875e-05, -1.9073486328125e-06, -0.00011515617370605469, -7.152555099310121e-07, -7.05718994140625e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.82012939453125e-05, -5.7220458984375e-06, -0.11777698993682861, 0.0, -0.0001697540283203125, 0.0, -0.30561530590057373, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001068115234375, 0.0, -9.894321920000948e-06, 0.0, -1.0728830375228426e-06, -0.00022516466560773551, -9.536738616588991e-07, -0.0003662109375, -1.9073486328125e-06, -0.004088997840881348, -1.1920928244535389e-07, -3.814697265625e-05, -7.62939453125e-06, -0.0004177093505859375, 0.0]}, {"score": -4.223190401727912, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -3.6229801177978516, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.00010323523747501895, -8.344646857949556e-07, -5.91278076171875e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -5.7220458984375e-06, -0.12965214252471924, 0.0, -0.00019073486328125, 0.0, -0.2911292314529419, 0.0, -5.91278076171875e-05, -5.7220458984375e-06, -0.000110626220703125, 0.0, -9.894321920000948e-06, 0.0, -1.1920922133867862e-06, -0.00022647572041023523, -9.536738616588991e-07, -0.0003604888916015625, -1.9073486328125e-06, -0.004048943519592285, -1.1920928244535389e-07, -3.62396240234375e-05, -7.62939453125e-06, -0.0004177093505859375, 0.0]}, {"score": -4.393113955006662, "choice_history": [59, 124, "Anodized", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Anodized<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Anodized<UNK>", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -3.5114762783050537, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.3479909896850586, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00010752677917480469, -8.344646857949556e-07, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.11938679218292236, 0.0, -0.0001850128173828125, 0.0, -0.2964416742324829, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001087188720703125, 0.0, -1.0013530300057027e-05, 0.0, -1.1920922133867862e-06, -0.00021670245041605085, -9.536738616588991e-07, -0.00035858154296875, -1.9073486328125e-06, -0.003985166549682617, -1.1920928244535389e-07, -3.62396240234375e-05, -7.62939453125e-06, -0.000415802001953125, 0.0]}, {"score": -4.393349750981393, "choice_history": [59, 124, "Anodized", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedCub", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -3.511712074279785, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.3479909896850586, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00010752677917480469, -8.344646857949556e-07, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.11938679218292236, 0.0, -0.0001850128173828125, 0.0, -0.2964416742324829, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001087188720703125, 0.0, -1.0013530300057027e-05, 0.0, -1.1920922133867862e-06, -0.00021670245041605085, -9.536738616588991e-07, -0.00035858154296875, -1.9073486328125e-06, -0.003985166549682617, -1.1920928244535389e-07, -3.62396240234375e-05, -7.62939453125e-06, -0.000415802001953125, 0.0]}, {"score": -4.558542345447549, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<UNK>", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo<UNK>', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo<UNK>", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -3.448505401611328, -0.001175758196040988, -0.000240325927734375, -0.0002269744873046875, 0.0, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -2.9802276912960224e-06, -0.5479469299316406, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00011920928227482364, -8.344646857949556e-07, -7.43865966796875e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.11941540241241455, 0.0, -0.00018310546875, 0.0, -0.2958550453186035, 0.0, -6.103515625e-05, -5.7220458984375e-06, -0.0001068115234375, 0.0, -9.894321920000948e-06, 0.0, -1.1920922133867862e-06, -0.0002139615244232118, -9.536738616588991e-07, -0.0003604888916015625, -1.9073486328125e-06, -0.003999471664428711, -1.1920928244535389e-07, -3.814697265625e-05, -7.62939453125e-06, -0.000415802001953125, 0.0]}, {"score": -4.789258074137898, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}}], "args": [{"s": "Anodized Robo", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -0.033621788024902344, -0.000293731689453125, -0.0003261566162109375, 0.0, -9.5367431640625e-06, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -1.5925531387329102, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-05, -1.9073486328125e-06, -0.000164031982421875, -1.0728830375228426e-06, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -8.96453857421875e-05, -5.7220458984375e-06, -2.9636497497558594, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -0.05280885845422745, 0.0, -0.0003204345703125, -9.5367431640625e-06, -8.58306884765625e-05, 0.0, -8.821448318485636e-06, 0.0, -1.0728830375228426e-06, -0.0002286206145072356, -9.536738616588991e-07, -0.000438690185546875, -1.9073486328125e-06, -0.004573225975036621, -1.1920928244535389e-07, -3.814697265625e-05, -7.62939453125e-06, -0.000431060791015625, 0.0]}, {"score": -4.800720185532583, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Anodized", " ", "Robo", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Anodized Robo", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.0148515701293945, -3.814697265625e-06, -0.00015223014634102583, -0.0003587007522583008, -0.09784519672393799, -0.00897979736328125, -0.00017011140880640596, 0.0, -0.5740573406219482, 0.0, -2.682209014892578e-05, 0.0, -3.063678741455078e-05, 0.0, -0.0007647274760529399, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -1.5497195136049413e-06, 0.0, -3.576278118089249e-07, -8.893467747839168e-05, -2.3841855067985307e-07, -0.0025606155395507812, -1.9073486328125e-06, -0.0031365156173706055, 0.0, -8.0108642578125e-05, -2.288818359375e-05, -0.0001583099365234375, 0.0]}, {"score": -4.908228550200633, "choice_history": [59, 124, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<UNK>", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo<UNK>', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo<UNK>", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRoboCub", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -3.358532428741455, -0.00021670102432835847, 0.0, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -3.814697265625e-06, 0.0, -0.030969619750976562, -5.340576171875e-05, -1.1444091796875e-05, -1.71661376953125e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.008031900972127914, -0.00016796588897705078, -0.0015572623815387487, -0.3526594638824463, -0.0036497090477496386, -0.0001964569091796875, -0.00040435791015625, 0.0, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -2.9802276912960224e-06, -0.6642293930053711, 0.0, -4.9591064453125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00013303756713867188, -7.152555099310121e-07, -7.05718994140625e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, -5.7220458984375e-06, -0.11475002765655518, 0.0, -0.00018310546875, 0.0, -0.3052562475204468, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001068115234375, 0.0, -1.0132738680113107e-05, 0.0, -1.1920922133867862e-06, -0.00021110106899868697, -9.536738616588991e-07, -0.000362396240234375, -1.9073486328125e-06, -0.003984212875366211, -1.1920928244535389e-07, -3.814697265625e-05, -7.62939453125e-06, -0.000415802001953125, 0.0]}, {"score": -5.112508985745748, "choice_history": [59, 124, "Anodized", "Robo", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Anodized", " ", "Robo", "<UNK>", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class AnodizedRobo(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo<UNK>', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Anodized Robo<UNK>", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AnodizedRobo", "hole3": "create_minion"}, "score_history": [0.0, -3.0517578125e-05, -8.451581379631534e-05, -0.06159114092588425, -0.03567550331354141, 0.0, -3.933906555175781e-06, -4.053113570989808e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018253326416015625, -5.14984130859375e-05, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.006731043104082346, -0.00013554096221923828, -0.01676942966878414, -3.448505401611328, -0.001175758196040988, -0.000240325927734375, -0.0002269744873046875, 0.0, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -2.9802276912960224e-06, -1.0753908157348633, -1.9073486328125e-06, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.00022411346435546875, -1.0728830375228426e-06, -0.0001049041748046875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0001068115234375, -3.814697265625e-06, -0.1369696855545044, 0.0, -0.00018310546875, 0.0, -0.30455827713012695, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001068115234375, 0.0, -9.894321920000948e-06, 0.0, -1.0728830375228426e-06, -0.00021789429592899978, -9.536738616588991e-07, -0.000370025634765625, -1.9073486328125e-06, -0.004077553749084473, -1.1920928244535389e-07, -3.814697265625e-05, -7.62939453125e-06, -0.0004177093505859375, 0.0]}], "gold_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, choices=[\n            Choice(AttackMode(), Give([Buff(ChangeAttack(1))]),\n            SelfSelector()), Choice(TankMode(), Give([Buff(ChangeHealth(1))\n            ]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}
{"beams": [{"score": -1.94593638068676, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5092196464538574, -0.0018100738525390625, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.1576808649115264e-05, -3.814697265625e-06, -1.0728823326644488e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.1574230194091797, -7.62939453125e-06, -0.02434062957763672, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.01756000518798828, -1.33514404296875e-05, -0.0005265474319458008, 0.0, -0.009662706404924393, 0.0, -4.1961669921875e-05, -0.00569915771484375, 0.0, -0.0031511783599853516, -2.8967735488549806e-05, -0.016533851623535156, -0.07230186462402344, -0.0001621246337890625, 0.0, -4.76837158203125e-05, 0.0, -0.0031862258911132812, -0.00035381317138671875, -0.0052967071533203125, -0.01845073699951172, -0.00614166259765625, 0.0, -9.918212890625e-05, 0.0, -0.0066432952880859375, -0.01056671142578125]}, {"score": -2.4145727585177426, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5998210906982422, -0.0003833770751953125, -5.7220458984375e-06, -1.1444091796875e-05, -3.0517578125e-05, -1.1324866136419587e-05, -1.71661376953125e-05, -1.5139577953959815e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.35869312286376953, -1.1444091796875e-05, -0.003612518310546875, -5.7220458984375e-06, -0.0005645751953125, 0.0, -0.04646492004394531, -1.1444091796875e-05, -0.0006799697875976562, 0.0, -0.015078607015311718, -1.1920928244535389e-07, -5.53131103515625e-05, -0.007712364196777344, 0.0, -0.0028574466705322266, -2.3603366571478546e-05, -0.0016613006591796875, -0.2911415100097656, -7.2479248046875e-05, 0.0, -4.398822784423828e-05, 0.0, -0.0077228546142578125, -0.0012969970703125]}, {"score": -4.632343564907771, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "0", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(0), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5998210906982422, -0.0003833770751953125, -5.7220458984375e-06, -1.1444091796875e-05, -3.0517578125e-05, -1.1324866136419587e-05, -1.71661376953125e-05, -1.5139577953959815e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.35869312286376953, -1.1444091796875e-05, -0.003612518310546875, -5.7220458984375e-06, -0.0005645751953125, 0.0, -0.04646492004394531, -1.1444091796875e-05, -0.0006799697875976562, 0.0, -0.015078607015311718, -1.1920928244535389e-07, -5.53131103515625e-05, -0.007712364196777344, 0.0, -0.0028574466705322266, -2.3603366571478546e-05, -0.0016613006591796875, -1.38385009765625, -5.14984130859375e-05, 0.0, -0.0001049041748046875, 0.0, -0.000247955322265625, 0.0, -0.0023145675659179688, -1.9073486328125e-06, -0.8713811635971069, -1.1920928244535389e-07, -0.0017108917236328125, -0.017009735107421875, 0.0, -0.0054073333740234375, 0.0, -7.05718994140625e-05, 0.0, -0.000335693359375, 0.0, -0.06979012489318848, -1.33514404296875e-05, -0.0002079010009765625, -0.14844322204589844, 0.0, -0.014508119784295559, -1.5616295058862306e-05, -0.001800537109375, 0.0, -0.0007662773132324219, -1.7046926586772315e-05]}, {"score": -5.115497497759343, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 164, 48, 117, "0", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.increase_armor(0)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 0}], "hole1": "increase_armor", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5998210906982422, -0.0003833770751953125, -5.7220458984375e-06, -1.1444091796875e-05, -3.0517578125e-05, -1.1324866136419587e-05, -1.71661376953125e-05, -1.5139577953959815e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.35869312286376953, -1.1444091796875e-05, -0.003612518310546875, -5.7220458984375e-06, -0.0005645751953125, 0.0, -0.04646492004394531, -1.1444091796875e-05, -0.0006799697875976562, 0.0, -0.015078607015311718, -1.1920928244535389e-07, -5.53131103515625e-05, -0.007712364196777344, 0.0, -0.0028574466705322266, -2.3603366571478546e-05, -0.0016613006591796875, -1.38385009765625, -5.14984130859375e-05, 0.0, -0.0001049041748046875, 0.0, -0.000247955322265625, 0.0, -0.0023145675659179688, -1.9073486328125e-06, -1.2913926839828491, -6.103515625e-05, -1.9073486328125e-05, -0.16800594329833984, 0.0, -0.15515290200710297, 0.0]}, {"score": -5.347093952737332, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 48, 117, "0", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.change_temp_attack(0)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 0}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5998210906982422, -0.0003833770751953125, -5.7220458984375e-06, -1.1444091796875e-05, -3.0517578125e-05, -1.1324866136419587e-05, -1.71661376953125e-05, -1.5139577953959815e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.35869312286376953, -1.1444091796875e-05, -0.003612518310546875, -5.7220458984375e-06, -0.0005645751953125, 0.0, -0.04646492004394531, -1.1444091796875e-05, -0.0006799697875976562, 0.0, -0.015078607015311718, -1.1920928244535389e-07, -5.53131103515625e-05, -0.007712364196777344, 0.0, -0.0028574466705322266, -2.3603366571478546e-05, -0.0016613006591796875, -1.38385009765625, -5.14984130859375e-05, 0.0, -0.0001049041748046875, 0.0, -0.000247955322265625, 0.0, -0.0023145675659179688, -1.9073486328125e-06, -1.3646901845932007, -1.1444091796875e-05, -3.4332275390625e-05, -0.2154998779296875, 0.0, -0.26599034667015076, -1.9073486328125e-06]}, {"score": -7.017322295053809, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "0", "<EOS>", 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(0), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5092196464538574, -0.0018100738525390625, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.1576808649115264e-05, -3.814697265625e-06, -1.0728823326644488e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.1574230194091797, -7.62939453125e-06, -0.02434062957763672, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.01756000518798828, -1.33514404296875e-05, -0.0005265474319458008, 0.0, -0.009662706404924393, 0.0, -4.1961669921875e-05, -0.00569915771484375, 0.0, -0.0031511783599853516, -2.8967735488549806e-05, -0.016533851623535156, -2.6808929443359375, -0.00061798095703125, 0.0, -4.9591064453125e-05, 0.0, -0.0028238296508789062, 0.0, -0.0013370513916015625, -2.0265579223632812e-06, -0.5709569454193115, -1.1920928244535389e-07, -0.0020198822021484375, -0.008457183837890625, 0.0, -0.0007610321044921875, 0.0, -6.67572021484375e-05, 0.0, -0.0002307891845703125, 0.0, -0.05494534969329834, -9.5367431640625e-06, -0.00032806396484375, -0.11591720581054688, 0.0, -0.017530852928757668, -1.3470558769768104e-05, -0.0020923614501953125, -1.9073486328125e-06, -0.0007262229919433594, -1.7046926586772315e-05, -1.6306800842285156, -0.1004018783569336, -9.72747802734375e-05, 0.0, -0.00018143653869628906, 0.0, -0.00275421142578125, -0.0007228851318359375]}, {"score": -8.821711412339418, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "0", "<EOS>", 46, 112, "self", "<EOS>", 64, 81, 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 24, 112, "player", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(0), self)\n        player.minions = player\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "value": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5092196464538574, -0.0018100738525390625, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.1576808649115264e-05, -3.814697265625e-06, -1.0728823326644488e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.1574230194091797, -7.62939453125e-06, -0.02434062957763672, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.01756000518798828, -1.33514404296875e-05, -0.0005265474319458008, 0.0, -0.009662706404924393, 0.0, -4.1961669921875e-05, -0.00569915771484375, 0.0, -0.0031511783599853516, -2.8967735488549806e-05, -0.016533851623535156, -2.6808929443359375, -0.00061798095703125, 0.0, -4.9591064453125e-05, 0.0, -0.0028238296508789062, 0.0, -0.0013370513916015625, -2.0265579223632812e-06, -0.5709569454193115, -1.1920928244535389e-07, -0.0020198822021484375, -0.008457183837890625, 0.0, -0.0007610321044921875, 0.0, -6.67572021484375e-05, 0.0, -0.0002307891845703125, 0.0, -0.05494534969329834, -9.5367431640625e-06, -0.00032806396484375, -0.11591720581054688, 0.0, -0.017530852928757668, -1.3470558769768104e-05, -0.0020923614501953125, -1.9073486328125e-06, -0.0007262229919433594, -1.7046926586772315e-05, -1.1651439666748047, -3.814697265625e-06, -1.9073486328125e-05, -0.4617576599121094, 0.0, -0.0059223175048828125, 0.0, -0.007976649329066277, 0.0, -1.5420352220535278, 0.0, -0.14087772369384766, 0.0, -0.215490460395813, 0.0]}, {"score": -15.57796043762658, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 182, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "chosen_card", "<EOS>", 22, 107, 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 57, 177, 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 64, 81, 164, 46, 112, "justice", "<EOS>", 28, 130, "<UNK>", "Justice", "<EOS>", 64, 81, 164, 46, 112, "option", "<EOS>", 19, 89, 16, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "random_choice", "<EOS>", "choose_option", "<EOS>", 165, 44, 108, 165, 51, 130, "<UNK>", "<EOS>", 51, 130, "<UNK>", "<EOS>", 46, 112, "player", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        chosen_card = []\n        for i in range(0, 3):\n            <UNK>.summon(player, player.game, len(player.minions))\n        justice = <UNK>Justice()\n        option = player.game.random_choice.choose_option([<UNK>(), <UNK>()],\n            player)\n        <UNK> = self.target.divine_shield\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "chosen_card"}], "value": {"_type": "List"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template19"}], "func": {"_type": "Name", "id": "range"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "justice"}], "value": {"_type": "Template10", "hole0": "<UNK>Justice"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "option"}], "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Template10", "hole0": "<UNK>"}, {"_type": "Template10", "hole0": "<UNK>"}]}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "random_choice"}, "attr": "choose_option"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "divine_shield"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.1582574844360352, -0.0022611618041992188, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.5987455956055783e-05, -5.7220458984375e-06, -9.894361937767826e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -5.53131103515625e-05, 0.0, -1.52587890625e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.04289531707763672, -1.9073486328125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9320183992385864, -1.3470647900248878e-05, -0.3007478713989258, -0.30660343170166016, -0.09466743469238281, -0.0001659393310546875, -1.71661376953125e-05, -1.9073486328125e-06, -0.7348105907440186, -0.0001556873321533203, -0.007839202880859375, -1.52587890625e-05, 0.0, -7.62939453125e-06, -0.0006505248602479696, -7.641315460205078e-05, -0.04890727996826172, -9.5367431640625e-06, -8.20159912109375e-05, -0.00017929075693245977, -0.00013530254364013672, -0.034107208251953125, -3.0517578125e-05, -0.022686004638671875, -0.0036907196044921875, -0.0006656646728515625, 0.0, -0.5363166332244873, -2.5510509658488445e-05, -0.002063149819150567, -2.288818359375e-05, -3.0517578125e-05, -7.82012939453125e-05, 0.0, -3.826618194580078e-05, 0.0, -0.4353046417236328, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0032176971435546875, -1.1444091796875e-05, -0.000217437744140625, -0.0002117156982421875, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -5.7220458984375e-06, -3.62396240234375e-05, -2.288818359375e-05, 0.0, -0.0001735687255859375, 0.0, -2.384185791015625e-06, 0.0, -0.0023136138916015625, 0.0, -0.009835243225097656, -1.33514404296875e-05, -4.1961669921875e-05, -0.001773834228515625, 0.0, -1.0440797805786133, 0.0, -0.004860877990722656, -1.9073486328125e-06, -0.019149253144860268, -1.416064739227295, -1.3589859008789062e-05, -0.02254962921142578, -3.814697265625e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.490006685256958, -1.1920928244535389e-07, -0.009305000305175781, -2.86102294921875e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.048252105712890625, 0.0, -0.3880472183227539, 0.0, -0.09107017517089844, 0.0, -0.08487427234649658, 0.0, -0.6550017595291138, -5.53131103515625e-05, -0.6203097105026245, -0.000591278076171875, -0.21595270931720734, -3.063678741455078e-05, -4.00543212890625e-05, -0.18677043914794922, -0.005864143371582031, -0.000354766845703125, -0.0014905929565429688, -7.62939453125e-06, -0.32361653447151184, -0.06359343975782394, -0.0037364959716796875, -7.62939453125e-06, -0.20230837166309357, -0.09227541089057922, -2.288818359375e-05, 0.0, -0.009221434593200684, 0.0, -0.038433074951171875, 0.0, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -0.2817727327346802, -6.675716122117592e-06, -0.8084812164306641, -1.9073486328125e-06, -0.11307716369628906, -7.62939453125e-06, -0.7676029205322266, 0.0, -0.6441088914871216, -3.516674041748047e-05, -9.72747802734375e-05, 0.0, -1.1643965244293213, -1.9073486328125e-06]}, {"score": -15.708017190761062, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "0", "<EOS>", 46, 112, "self", "<EOS>", 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "10", "<EOS>", 179, 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 165, 46, 112, "cards", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 87, 16, 82, 16, 82, 24, 112, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 46, 112, "self", "<EOS>", 64, 81, 164, 38, 82, 24, 112, "player", "<EOS>", "<UNK>", "<EOS>", 26, 117, "0", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(0), self)\n        if len(player.minions) < 10:\n            <UNK> = player.agent.choose_option(cards, player)\n            player.hero.heal(player.effective_heal_power(minion.card.\n                minion_type()), self)\n            player.<UNK> = 0\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "cards"}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "agent"}, "attr": "choose_option"}}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "attr": "minion_type"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "<UNK>"}], "value": {"_type": "Num", "n": 0}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5092196464538574, -0.0018100738525390625, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.1576808649115264e-05, -3.814697265625e-06, -1.0728823326644488e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.1574230194091797, -7.62939453125e-06, -0.02434062957763672, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.01756000518798828, -1.33514404296875e-05, -0.0005265474319458008, 0.0, -0.009662706404924393, 0.0, -4.1961669921875e-05, -0.00569915771484375, 0.0, -0.0031511783599853516, -2.8967735488549806e-05, -0.016533851623535156, -2.6808929443359375, -0.00061798095703125, 0.0, -4.9591064453125e-05, 0.0, -0.0028238296508789062, 0.0, -0.0013370513916015625, -2.0265579223632812e-06, -0.5709569454193115, -1.1920928244535389e-07, -0.0020198822021484375, -0.008457183837890625, 0.0, -0.0007610321044921875, 0.0, -6.67572021484375e-05, 0.0, -0.0002307891845703125, 0.0, -0.05494534969329834, -9.5367431640625e-06, -0.00032806396484375, -0.11591720581054688, 0.0, -0.017530852928757668, -1.3470558769768104e-05, -0.0020923614501953125, -1.9073486328125e-06, -0.0007262229919433594, -1.7046926586772315e-05, -0.7907524108886719, -0.0011196136474609375, -0.0005035400390625, -4.9591064453125e-05, -0.21832752227783203, -3.814697265625e-06, -4.00543212890625e-05, -2.86102294921875e-05, -0.005896210670471191, -1.9073486328125e-06, -0.0003070831298828125, -0.653233528137207, -1.52587890625e-05, -0.003299713134765625, 0.0, -6.318082887446508e-05, 0.0, -0.20543289184570312, 0.0, -0.00017547607421875, -0.04807853698730469, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.06264221668243408, -2.3841855067985307e-07, -0.3334226608276367, -0.031007766723632812, -2.47955322265625e-05, -7.62939453125e-05, -5.7220458984375e-06, 0.0, -0.1798800230026245, -0.005128622055053711, -0.13179492950439453, -0.10044574737548828, -7.62939453125e-06, -1.9073486328125e-06, -0.008146286010742188, 0.0, -1.2994375228881836, 0.0, -0.03336441516876221, 0.0, -0.04423856735229492, -0.0001373291015625, -0.2743254601955414, -5.340576171875e-05, -0.0003223419189453125, -0.20119667053222656, 0.0, -0.5175713300704956, 0.0, -0.00350189208984375, -1.9073486328125e-06, -0.18266355991363525, 0.0, -0.005344390869140625, -5.14984130859375e-05, -0.001850128173828125, -2.86102294921875e-05, -8.96453857421875e-05, 0.0, -0.000461578369140625, 0.0, -0.2239360809326172, -5.7220458984375e-06, -0.4393625259399414, -2.9087063012411818e-05, -0.000942230224609375, -0.45247936248779297, -8.58306884765625e-05, -0.000827789306640625, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0002994537353515625, 0.0, -0.07431983947753906, -3.814697265625e-06, -0.0004100799560546875, -0.0054340362548828125, -0.011228561401367188, -1.9073486328125e-06, 0.0, -0.0044727325439453125, -5.7220458984375e-06, -0.0001354217529296875, 0.0, -2.232513904571533, -4.768370445162873e-07, -0.2590562105178833, -4.398822784423828e-05, -0.151871919631958, -0.00023663043975830078, -0.006804466247558594, 0.0, -0.008597373962402344, -5.960462772236497e-07, -0.5591850280761719, -6.866455078125e-05, -9.34600830078125e-05, -0.00054168701171875, -3.814697265625e-06, -0.0019903182983398438, 0.0, -0.010896204970777035, 0.0, -0.6177313327789307, -7.62939453125e-06, -0.015360832214355469, -8.392333984375e-05, -0.0018260462675243616, 0.0]}, {"score": -16.290623860509065, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "0", "<EOS>", 46, 112, "self", "<EOS>", 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "10", "<EOS>", 179, 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 165, 46, 112, "cards", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 87, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "calculate_attack", "<EOS>", 46, 112, "self", "<EOS>", 64, 81, 164, 38, 82, 24, 112, "player", "<EOS>", "<UNK>", "<EOS>", 26, 117, "0", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(0), self)\n        if len(player.minions) < 10:\n            <UNK> = player.agent.choose_option(cards, player)\n            player.hero.heal(player.effective_heal_power(player.hero.\n                calculate_attack()), self)\n            player.<UNK> = 0\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "cards"}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "agent"}, "attr": "choose_option"}}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "attr": "calculate_attack"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "<UNK>"}], "value": {"_type": "Num", "n": 0}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5092196464538574, -0.0018100738525390625, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.1576808649115264e-05, -3.814697265625e-06, -1.0728823326644488e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.1574230194091797, -7.62939453125e-06, -0.02434062957763672, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.01756000518798828, -1.33514404296875e-05, -0.0005265474319458008, 0.0, -0.009662706404924393, 0.0, -4.1961669921875e-05, -0.00569915771484375, 0.0, -0.0031511783599853516, -2.8967735488549806e-05, -0.016533851623535156, -2.6808929443359375, -0.00061798095703125, 0.0, -4.9591064453125e-05, 0.0, -0.0028238296508789062, 0.0, -0.0013370513916015625, -2.0265579223632812e-06, -0.5709569454193115, -1.1920928244535389e-07, -0.0020198822021484375, -0.008457183837890625, 0.0, -0.0007610321044921875, 0.0, -6.67572021484375e-05, 0.0, -0.0002307891845703125, 0.0, -0.05494534969329834, -9.5367431640625e-06, -0.00032806396484375, -0.11591720581054688, 0.0, -0.017530852928757668, -1.3470558769768104e-05, -0.0020923614501953125, -1.9073486328125e-06, -0.0007262229919433594, -1.7046926586772315e-05, -0.7907524108886719, -0.0011196136474609375, -0.0005035400390625, -4.9591064453125e-05, -0.21832752227783203, -3.814697265625e-06, -4.00543212890625e-05, -2.86102294921875e-05, -0.005896210670471191, -1.9073486328125e-06, -0.0003070831298828125, -0.653233528137207, -1.52587890625e-05, -0.003299713134765625, 0.0, -6.318082887446508e-05, 0.0, -0.20543289184570312, 0.0, -0.00017547607421875, -0.04807853698730469, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.06264221668243408, -2.3841855067985307e-07, -0.3334226608276367, -0.031007766723632812, -2.47955322265625e-05, -7.62939453125e-05, -5.7220458984375e-06, 0.0, -0.1798800230026245, -0.005128622055053711, -0.13179492950439453, -0.10044574737548828, -7.62939453125e-06, -1.9073486328125e-06, -0.008146286010742188, 0.0, -1.2994375228881836, 0.0, -0.03336441516876221, 0.0, -0.04423856735229492, -0.0001373291015625, -0.2743254601955414, -5.340576171875e-05, -0.0003223419189453125, -0.20119667053222656, 0.0, -0.5175713300704956, 0.0, -0.00350189208984375, -1.9073486328125e-06, -0.18266355991363525, 0.0, -0.005344390869140625, -5.14984130859375e-05, -0.001850128173828125, -2.86102294921875e-05, -8.96453857421875e-05, 0.0, -0.000461578369140625, 0.0, -0.2239360809326172, -5.7220458984375e-06, -0.4393625259399414, -2.9087063012411818e-05, -0.000942230224609375, -0.45247936248779297, -8.58306884765625e-05, -0.000827789306640625, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0002994537353515625, 0.0, -0.07431983947753906, -3.814697265625e-06, -0.0004100799560546875, -0.0054340362548828125, -0.011228561401367188, -1.9073486328125e-06, 0.0, -0.0044727325439453125, -5.7220458984375e-06, -0.0001354217529296875, 0.0, -0.9592887163162231, 0.0, -0.01819729618728161, -4.88758041683468e-06, -1.9773691892623901, -0.0005960464477539062, -0.006103515625, 0.0, -0.021270751953125, -2.3841855067985307e-07, -0.9240341186523438, -0.0001068115234375, -4.57763671875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.0025167465209960938, 0.0, -0.002550360979512334, 0.0, -0.5139812231063843, -7.62939453125e-06, -0.021246910095214844, -8.7738037109375e-05, -0.0019072277937084436, -1.9073486328125e-06]}, {"score": -17.025146549179418, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "0", "<EOS>", 46, 112, "self", "<EOS>", 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "10", "<EOS>", 179, 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 89, 16, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "agent", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 165, 46, 112, "cards", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 87, 16, 82, 16, 82, 24, 112, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 46, 112, "self", "<EOS>", 64, 81, 164, 38, 82, 24, 112, "player", "<EOS>", "<UNK>", "<EOS>", 26, 117, "0", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(0), self)\n        if len(player.minions) < 10:\n            <UNK> = player.agent.agent.choose_option(cards, player)\n            player.hero.heal(player.effective_heal_power(minion.card.\n                minion_type()), self)\n            player.<UNK> = 0\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "cards"}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "agent"}, "attr": "agent"}, "attr": "choose_option"}}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "attr": "minion_type"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "<UNK>"}], "value": {"_type": "Num", "n": 0}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5092196464538574, -0.0018100738525390625, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.1576808649115264e-05, -3.814697265625e-06, -1.0728823326644488e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.1574230194091797, -7.62939453125e-06, -0.02434062957763672, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.01756000518798828, -1.33514404296875e-05, -0.0005265474319458008, 0.0, -0.009662706404924393, 0.0, -4.1961669921875e-05, -0.00569915771484375, 0.0, -0.0031511783599853516, -2.8967735488549806e-05, -0.016533851623535156, -2.6808929443359375, -0.00061798095703125, 0.0, -4.9591064453125e-05, 0.0, -0.0028238296508789062, 0.0, -0.0013370513916015625, -2.0265579223632812e-06, -0.5709569454193115, -1.1920928244535389e-07, -0.0020198822021484375, -0.008457183837890625, 0.0, -0.0007610321044921875, 0.0, -6.67572021484375e-05, 0.0, -0.0002307891845703125, 0.0, -0.05494534969329834, -9.5367431640625e-06, -0.00032806396484375, -0.11591720581054688, 0.0, -0.017530852928757668, -1.3470558769768104e-05, -0.0020923614501953125, -1.9073486328125e-06, -0.0007262229919433594, -1.7046926586772315e-05, -0.7907524108886719, -0.0011196136474609375, -0.0005035400390625, -4.9591064453125e-05, -0.21832752227783203, -3.814697265625e-06, -4.00543212890625e-05, -2.86102294921875e-05, -0.005896210670471191, -1.9073486328125e-06, -0.0003070831298828125, -0.653233528137207, -1.52587890625e-05, -0.003299713134765625, 0.0, -6.318082887446508e-05, 0.0, -0.20543289184570312, 0.0, -0.00017547607421875, -0.04807853698730469, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.06264221668243408, -2.3841855067985307e-07, -0.3334226608276367, -0.031007766723632812, -2.47955322265625e-05, -7.62939453125e-05, -5.7220458984375e-06, 0.0, -0.1798800230026245, -0.005128622055053711, -0.13179492950439453, -0.10044574737548828, -7.62939453125e-06, -1.9073486328125e-06, -0.008146286010742188, 0.0, -0.3197002410888672, 0.0, -0.03233909606933594, 0.0, -0.23456573486328125, 0.0, -0.4261057376861572, -0.00115966796875, -0.5456147193908691, -2.5033950805664062e-05, -0.3331604301929474, -3.4332275390625e-05, -0.00041961669921875, -0.5558443069458008, 0.0, -1.2967503070831299, -1.9073486328125e-06, -0.0020275115966796875, -1.9073486328125e-06, -0.1820007562637329, 0.0, -0.009505271911621094, -5.340576171875e-05, -0.0029239654541015625, -3.24249267578125e-05, -8.392333984375e-05, 0.0, -0.0005512237548828125, 0.0, -0.18005084991455078, -5.7220458984375e-06, -0.4895036220550537, -1.7285345165873878e-05, -0.00067901611328125, -0.5368185043334961, -0.0001277923583984375, -0.0006198883056640625, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000438690185546875, 0.0, -0.07661807537078857, -1.9073486328125e-06, -0.00046539306640625, -0.005331993103027344, -0.009799957275390625, -1.9073486328125e-06, 0.0, -0.0045375823974609375, -5.7220458984375e-06, -0.0001354217529296875, 0.0, -2.0423827171325684, -3.576278118089249e-07, -0.23235440254211426, -4.780292510986328e-05, -0.1832699030637741, -0.00020992755889892578, -0.008511543273925781, 0.0, -0.011536598205566406, -4.768370445162873e-07, -0.5981225967407227, -6.67572021484375e-05, -9.1552734375e-05, -0.000606536865234375, -3.814697265625e-06, -0.002002716064453125, 0.0, -0.009484528563916683, 0.0, -0.6083284616470337, -7.62939453125e-06, -0.01567554473876953, -8.58306884765625e-05, -0.00180804543197155, 0.0]}, {"score": -17.10864863691957, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "0", "<EOS>", 46, 112, "self", "<EOS>", 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "10", "<EOS>", 179, 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 165, 46, 112, "cards", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 87, 16, 82, 16, 82, 24, 112, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 46, 112, "self", "<EOS>", 64, 81, 164, 38, 82, 24, 112, "player", "<EOS>", "mana", "<EOS>", 26, 117, "0", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(0), self)\n        if len(player.minions) < 10:\n            <UNK> = player.agent.choose_option(cards, player)\n            player.hero.heal(player.effective_heal_power(minion.card.\n                minion_type()), self)\n            player.mana = 0\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "cards"}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "agent"}, "attr": "choose_option"}}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "attr": "minion_type"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "mana"}], "value": {"_type": "Num", "n": 0}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5092196464538574, -0.0018100738525390625, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.1576808649115264e-05, -3.814697265625e-06, -1.0728823326644488e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.1574230194091797, -7.62939453125e-06, -0.02434062957763672, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.01756000518798828, -1.33514404296875e-05, -0.0005265474319458008, 0.0, -0.009662706404924393, 0.0, -4.1961669921875e-05, -0.00569915771484375, 0.0, -0.0031511783599853516, -2.8967735488549806e-05, -0.016533851623535156, -2.6808929443359375, -0.00061798095703125, 0.0, -4.9591064453125e-05, 0.0, -0.0028238296508789062, 0.0, -0.0013370513916015625, -2.0265579223632812e-06, -0.5709569454193115, -1.1920928244535389e-07, -0.0020198822021484375, -0.008457183837890625, 0.0, -0.0007610321044921875, 0.0, -6.67572021484375e-05, 0.0, -0.0002307891845703125, 0.0, -0.05494534969329834, -9.5367431640625e-06, -0.00032806396484375, -0.11591720581054688, 0.0, -0.017530852928757668, -1.3470558769768104e-05, -0.0020923614501953125, -1.9073486328125e-06, -0.0007262229919433594, -1.7046926586772315e-05, -0.7907524108886719, -0.0011196136474609375, -0.0005035400390625, -4.9591064453125e-05, -0.21832752227783203, -3.814697265625e-06, -4.00543212890625e-05, -2.86102294921875e-05, -0.005896210670471191, -1.9073486328125e-06, -0.0003070831298828125, -0.653233528137207, -1.52587890625e-05, -0.003299713134765625, 0.0, -6.318082887446508e-05, 0.0, -0.20543289184570312, 0.0, -0.00017547607421875, -0.04807853698730469, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.06264221668243408, -2.3841855067985307e-07, -0.3334226608276367, -0.031007766723632812, -2.47955322265625e-05, -7.62939453125e-05, -5.7220458984375e-06, 0.0, -0.1798800230026245, -0.005128622055053711, -0.13179492950439453, -0.10044574737548828, -7.62939453125e-06, -1.9073486328125e-06, -0.008146286010742188, 0.0, -1.2994375228881836, 0.0, -0.03336441516876221, 0.0, -0.04423856735229492, -0.0001373291015625, -0.2743254601955414, -5.340576171875e-05, -0.0003223419189453125, -0.20119667053222656, 0.0, -0.5175713300704956, 0.0, -0.00350189208984375, -1.9073486328125e-06, -0.18266355991363525, 0.0, -0.005344390869140625, -5.14984130859375e-05, -0.001850128173828125, -2.86102294921875e-05, -8.96453857421875e-05, 0.0, -0.000461578369140625, 0.0, -0.2239360809326172, -5.7220458984375e-06, -0.4393625259399414, -2.9087063012411818e-05, -0.000942230224609375, -0.45247936248779297, -8.58306884765625e-05, -0.000827789306640625, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0002994537353515625, 0.0, -0.07431983947753906, -3.814697265625e-06, -0.0004100799560546875, -0.0054340362548828125, -0.011228561401367188, -1.9073486328125e-06, 0.0, -0.0044727325439453125, -5.7220458984375e-06, -0.0001354217529296875, 0.0, -2.232513904571533, -4.768370445162873e-07, -0.2590562105178833, -4.398822784423828e-05, -0.151871919631958, -0.00023663043975830078, -0.006804466247558594, 0.0, -0.008597373962402344, -5.960462772236497e-07, -0.5591850280761719, -6.866455078125e-05, -9.34600830078125e-05, -0.00054168701171875, -3.814697265625e-06, -0.0019903182983398438, 0.0, -0.010896204970777035, 0.0, -1.376293420791626, -3.814697265625e-06, -0.6570777893066406, -0.0001049041748046875, -0.0021611619740724564, -1.1920928244535389e-07]}, {"score": -17.391125760582405, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "0", "<EOS>", 46, 112, "self", "<EOS>", 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "10", "<EOS>", 179, 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 165, 46, 112, "cards", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 87, 16, 82, 16, 82, 24, 112, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 46, 112, "self", "<EOS>", 64, 81, 164, 38, 82, 24, 112, "player", "<EOS>", "mana", "<EOS>", 24, 112, "player", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(0), self)\n        if len(player.minions) < 10:\n            <UNK> = player.agent.choose_option(cards, player)\n            player.hero.heal(player.effective_heal_power(minion.card.\n                minion_type()), self)\n            player.mana = player\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "cards"}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "agent"}, "attr": "choose_option"}}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "attr": "minion_type"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "mana"}], "value": {"_type": "Name", "id": "player"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5092196464538574, -0.0018100738525390625, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.1576808649115264e-05, -3.814697265625e-06, -1.0728823326644488e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.1574230194091797, -7.62939453125e-06, -0.02434062957763672, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.01756000518798828, -1.33514404296875e-05, -0.0005265474319458008, 0.0, -0.009662706404924393, 0.0, -4.1961669921875e-05, -0.00569915771484375, 0.0, -0.0031511783599853516, -2.8967735488549806e-05, -0.016533851623535156, -2.6808929443359375, -0.00061798095703125, 0.0, -4.9591064453125e-05, 0.0, -0.0028238296508789062, 0.0, -0.0013370513916015625, -2.0265579223632812e-06, -0.5709569454193115, -1.1920928244535389e-07, -0.0020198822021484375, -0.008457183837890625, 0.0, -0.0007610321044921875, 0.0, -6.67572021484375e-05, 0.0, -0.0002307891845703125, 0.0, -0.05494534969329834, -9.5367431640625e-06, -0.00032806396484375, -0.11591720581054688, 0.0, -0.017530852928757668, -1.3470558769768104e-05, -0.0020923614501953125, -1.9073486328125e-06, -0.0007262229919433594, -1.7046926586772315e-05, -0.7907524108886719, -0.0011196136474609375, -0.0005035400390625, -4.9591064453125e-05, -0.21832752227783203, -3.814697265625e-06, -4.00543212890625e-05, -2.86102294921875e-05, -0.005896210670471191, -1.9073486328125e-06, -0.0003070831298828125, -0.653233528137207, -1.52587890625e-05, -0.003299713134765625, 0.0, -6.318082887446508e-05, 0.0, -0.20543289184570312, 0.0, -0.00017547607421875, -0.04807853698730469, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.06264221668243408, -2.3841855067985307e-07, -0.3334226608276367, -0.031007766723632812, -2.47955322265625e-05, -7.62939453125e-05, -5.7220458984375e-06, 0.0, -0.1798800230026245, -0.005128622055053711, -0.13179492950439453, -0.10044574737548828, -7.62939453125e-06, -1.9073486328125e-06, -0.008146286010742188, 0.0, -1.2994375228881836, 0.0, -0.03336441516876221, 0.0, -0.04423856735229492, -0.0001373291015625, -0.2743254601955414, -5.340576171875e-05, -0.0003223419189453125, -0.20119667053222656, 0.0, -0.5175713300704956, 0.0, -0.00350189208984375, -1.9073486328125e-06, -0.18266355991363525, 0.0, -0.005344390869140625, -5.14984130859375e-05, -0.001850128173828125, -2.86102294921875e-05, -8.96453857421875e-05, 0.0, -0.000461578369140625, 0.0, -0.2239360809326172, -5.7220458984375e-06, -0.4393625259399414, -2.9087063012411818e-05, -0.000942230224609375, -0.45247936248779297, -8.58306884765625e-05, -0.000827789306640625, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0002994537353515625, 0.0, -0.07431983947753906, -3.814697265625e-06, -0.0004100799560546875, -0.0054340362548828125, -0.011228561401367188, -1.9073486328125e-06, 0.0, -0.0044727325439453125, -5.7220458984375e-06, -0.0001354217529296875, 0.0, -2.232513904571533, -4.768370445162873e-07, -0.2590562105178833, -4.398822784423828e-05, -0.151871919631958, -0.00023663043975830078, -0.006804466247558594, 0.0, -0.008597373962402344, -5.960462772236497e-07, -0.5591850280761719, -6.866455078125e-05, -9.34600830078125e-05, -0.00054168701171875, -3.814697265625e-06, -0.0019903182983398438, 0.0, -0.010896204970777035, 0.0, -1.376293420791626, -3.814697265625e-06, -0.8476533889770508, 0.0, -0.09416770935058594, 0.0]}, {"score": -17.913396791168303, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "0", "<EOS>", 46, 112, "self", "<EOS>", 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "10", "<EOS>", 179, 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 89, 16, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "agent", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 165, 44, 108, 165, 51, 130, "<UNK>", "<EOS>", 51, 130, "<UNK>", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 87, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "calculate_attack", "<EOS>", 46, 112, "self", "<EOS>", 64, 81, 164, 38, 82, 24, 112, "player", "<EOS>", "<UNK>", "<EOS>", 26, 117, "0", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(0), self)\n        if len(player.minions) < 10:\n            <UNK> = player.agent.agent.choose_option([<UNK>(), <UNK>()], player\n                )\n            player.hero.heal(player.effective_heal_power(player.hero.\n                calculate_attack()), self)\n            player.<UNK> = 0\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Template10", "hole0": "<UNK>"}, {"_type": "Template10", "hole0": "<UNK>"}]}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "agent"}, "attr": "agent"}, "attr": "choose_option"}}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "attr": "calculate_attack"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "<UNK>"}], "value": {"_type": "Num", "n": 0}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5092196464538574, -0.0018100738525390625, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.1576808649115264e-05, -3.814697265625e-06, -1.0728823326644488e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.1574230194091797, -7.62939453125e-06, -0.02434062957763672, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.01756000518798828, -1.33514404296875e-05, -0.0005265474319458008, 0.0, -0.009662706404924393, 0.0, -4.1961669921875e-05, -0.00569915771484375, 0.0, -0.0031511783599853516, -2.8967735488549806e-05, -0.016533851623535156, -2.6808929443359375, -0.00061798095703125, 0.0, -4.9591064453125e-05, 0.0, -0.0028238296508789062, 0.0, -0.0013370513916015625, -2.0265579223632812e-06, -0.5709569454193115, -1.1920928244535389e-07, -0.0020198822021484375, -0.008457183837890625, 0.0, -0.0007610321044921875, 0.0, -6.67572021484375e-05, 0.0, -0.0002307891845703125, 0.0, -0.05494534969329834, -9.5367431640625e-06, -0.00032806396484375, -0.11591720581054688, 0.0, -0.017530852928757668, -1.3470558769768104e-05, -0.0020923614501953125, -1.9073486328125e-06, -0.0007262229919433594, -1.7046926586772315e-05, -0.7907524108886719, -0.0011196136474609375, -0.0005035400390625, -4.9591064453125e-05, -0.21832752227783203, -3.814697265625e-06, -4.00543212890625e-05, -2.86102294921875e-05, -0.005896210670471191, -1.9073486328125e-06, -0.0003070831298828125, -0.653233528137207, -1.52587890625e-05, -0.003299713134765625, 0.0, -6.318082887446508e-05, 0.0, -0.20543289184570312, 0.0, -0.00017547607421875, -0.04807853698730469, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.06264221668243408, -2.3841855067985307e-07, -0.3334226608276367, -0.031007766723632812, -2.47955322265625e-05, -7.62939453125e-05, -5.7220458984375e-06, 0.0, -0.1798800230026245, -0.005128622055053711, -0.13179492950439453, -0.10044574737548828, -7.62939453125e-06, -1.9073486328125e-06, -0.008146286010742188, 0.0, -0.3197002410888672, 0.0, -0.03233909606933594, 0.0, -0.23456573486328125, 0.0, -0.4261057376861572, -0.00115966796875, -0.5456147193908691, -2.5033950805664062e-05, -0.3331604301929474, -3.4332275390625e-05, -0.00041961669921875, -0.9842157363891602, -0.0025997161865234375, -0.0001373291015625, -0.0017862319946289062, -2.47955322265625e-05, -0.34739959239959717, -0.212673619389534, -0.0008411407470703125, -5.7220458984375e-06, -0.26024100184440613, -0.14092709124088287, -4.76837158203125e-05, 0.0, -0.022983074188232422, 0.0, -0.009573936462402344, -8.58306884765625e-05, -0.013423919677734375, -5.91278076171875e-05, -7.05718994140625e-05, 0.0, -0.012987136840820312, 0.0, -0.17912006378173828, -3.814697265625e-06, -1.314488172531128, -4.565715789794922e-05, -0.001312255859375, -0.46970558166503906, -3.4332275390625e-05, -0.000640869140625, 0.0, -6.67572021484375e-05, 0.0, -0.0003566741943359375, 0.0, -0.12774193286895752, -3.814697265625e-06, -0.0004978179931640625, -0.02117919921875, -0.030649185180664062, -1.9073486328125e-06, 0.0, -0.002285003662109375, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.7418042421340942, 0.0, -0.021251438185572624, -4.768371127283899e-06, -1.6588904857635498, -0.00087738037109375, -0.0047092437744140625, 0.0, -0.0075092315673828125, -3.576278118089249e-07, -0.7607746124267578, -7.62939453125e-05, -3.814697265625e-05, -0.0002079010009765625, 0.0, -0.0031023025512695312, 0.0, -0.0018455937970429659, 0.0, -0.5748898983001709, -7.62939453125e-06, -0.021352767944335938, -8.20159912109375e-05, -0.00198340299539268, -1.9073486328125e-06]}, {"score": -19.526693901586007, "choice_history": [59, 126, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "0", "<EOS>", 46, 112, "self", "<EOS>", 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "10", "<EOS>", 179, 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 165, 46, 112, "cards", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 87, 16, 82, 16, 82, 24, 112, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 87, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "calculate_attack", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(0), self)\n        if len(player.minions) < 10:\n            <UNK> = player.agent.choose_option(cards, player)\n            player.hero.heal(player.effective_heal_power(minion.card.\n                minion_type()), self)\n            player.hero.heal(player.effective_heal_power(player.hero.\n                calculate_attack()), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "cards"}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "agent"}, "attr": "choose_option"}}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "attr": "minion_type"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "attr": "calculate_attack"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Burrowing Mine", "hole3": "FREE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BurrowingMine", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -0.0003299713134765625, -3.6954811548639555e-06, -0.0004808938247151673, -0.00022887132945470512, -5.959271220490336e-06, -3.576278118089249e-07, -8.583047019783407e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0046100616455078125, -7.62939453125e-06, -1.07287787614041e-05, -9.584426879882812e-05, 0.0, -0.01592254638671875, -3.695486157084815e-06, -1.9073486328125e-06, -0.03507767990231514, 0.0, -0.019533157348632812, 0.0, -1.5854835510253906e-05, 0.0, -3.600119089242071e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9430992324487306e-05, -2.1457672119140625e-06, -1.5092196464538574, -0.0018100738525390625, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.1576808649115264e-05, -3.814697265625e-06, -1.0728823326644488e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.1574230194091797, -7.62939453125e-06, -0.02434062957763672, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.01756000518798828, -1.33514404296875e-05, -0.0005265474319458008, 0.0, -0.009662706404924393, 0.0, -4.1961669921875e-05, -0.00569915771484375, 0.0, -0.0031511783599853516, -2.8967735488549806e-05, -0.016533851623535156, -2.6808929443359375, -0.00061798095703125, 0.0, -4.9591064453125e-05, 0.0, -0.0028238296508789062, 0.0, -0.0013370513916015625, -2.0265579223632812e-06, -0.5709569454193115, -1.1920928244535389e-07, -0.0020198822021484375, -0.008457183837890625, 0.0, -0.0007610321044921875, 0.0, -6.67572021484375e-05, 0.0, -0.0002307891845703125, 0.0, -0.05494534969329834, -9.5367431640625e-06, -0.00032806396484375, -0.11591720581054688, 0.0, -0.017530852928757668, -1.3470558769768104e-05, -0.0020923614501953125, -1.9073486328125e-06, -0.0007262229919433594, -1.7046926586772315e-05, -0.7907524108886719, -0.0011196136474609375, -0.0005035400390625, -4.9591064453125e-05, -0.21832752227783203, -3.814697265625e-06, -4.00543212890625e-05, -2.86102294921875e-05, -0.005896210670471191, -1.9073486328125e-06, -0.0003070831298828125, -0.653233528137207, -1.52587890625e-05, -0.003299713134765625, 0.0, -6.318082887446508e-05, 0.0, -0.20543289184570312, 0.0, -0.00017547607421875, -0.04807853698730469, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.06264221668243408, -2.3841855067985307e-07, -0.3334226608276367, -0.031007766723632812, -2.47955322265625e-05, -7.62939453125e-05, -5.7220458984375e-06, 0.0, -0.1798800230026245, -0.005128622055053711, -0.13179492950439453, -0.10044574737548828, -7.62939453125e-06, -1.9073486328125e-06, -0.008146286010742188, 0.0, -1.2994375228881836, 0.0, -0.03336441516876221, 0.0, -0.04423856735229492, -0.0001373291015625, -0.2743254601955414, -5.340576171875e-05, -0.0003223419189453125, -0.20119667053222656, 0.0, -0.5175713300704956, 0.0, -0.00350189208984375, -1.9073486328125e-06, -0.18266355991363525, 0.0, -0.005344390869140625, -5.14984130859375e-05, -0.001850128173828125, -2.86102294921875e-05, -8.96453857421875e-05, 0.0, -0.000461578369140625, 0.0, -0.2239360809326172, -5.7220458984375e-06, -0.4393625259399414, -2.9087063012411818e-05, -0.000942230224609375, -0.45247936248779297, -8.58306884765625e-05, -0.000827789306640625, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0002994537353515625, 0.0, -0.07431983947753906, -3.814697265625e-06, -0.0004100799560546875, -0.0054340362548828125, -0.011228561401367188, -1.9073486328125e-06, 0.0, -0.0044727325439453125, -5.7220458984375e-06, -0.0001354217529296875, 0.0, -2.232513904571533, -4.768370445162873e-07, -0.2590562105178833, -4.398822784423828e-05, -0.151871919631958, -0.00023663043975830078, -0.006804466247558594, 0.0, -0.008597373962402344, -5.960462772236497e-07, -1.4363517761230469, -0.000171661376953125, -0.002101898193359375, 0.0, -0.0001468658447265625, 0.0, -0.0090484619140625, 0.0, -0.016427040100097656, -2.0265579223632812e-06, -0.7504855394363403, -7.748602001811378e-06, -0.001506805419921875, -0.07007694244384766, -2.6702880859375e-05, -9.1552734375e-05, 0.0, -5.53131103515625e-05, 0.0, -0.0004949569702148438, 0.0, -0.07507765293121338, -5.7220458984375e-06, -0.0005245208740234375, -0.00586700439453125, -0.026815414428710938, -1.9073486328125e-06, 0.0, -0.0034427642822265625, -3.814697265625e-06, -0.0001392364501953125, 0.0, -0.8316870927810669, 0.0, -0.014639375731348991, -4.88758041683468e-06, -1.7726327180862427, -0.0009775161743164062, -0.0036449432373046875, 0.0, -0.00400543212890625, -3.576278118089249e-07]}], "gold_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False, effects=[Effect(Drawn(), ActionTag(\n            Damage(10), HeroSelector())), Effect(Drawn(), ActionTag(Discard\n            (query=CardQuery(source=CARD_SOURCE.LAST_DRAWN)),\n            PlayerSelector())), Effect(Drawn(), ActionTag(Draw(),\n            PlayerSelector()))])\n\n    def use(self, player, game):\n        super().use(player, game)\n"}
{"beams": [{"score": -0.2874209279751767, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 154, "overload", "<EOS>", 32, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"_type": "keyword", "arg": "overload", "value": {"_type": "Template18"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -0.002674102783203125, 0.0, -0.000514984130859375, -2.86102294921875e-05, -9.34600830078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00113677978515625, 0.0, -0.000194549560546875, 0.0, -0.0003172020660713315, -4.76837158203125e-05, -9.72747802734375e-05, -0.019107818603515625, -0.0023174285888671875, -0.008826255798339844, -0.00015842914581298828, -1.9073486328125e-06, -0.0004734991816803813, 0.0, -7.82012939453125e-05, -7.05718994140625e-05, -1.1444091796875e-05, -2.384185791015625e-06, -7.557868957519531e-05, -0.006608009338378906, -3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -1.1801687833212782e-05, -1.1444091796875e-05, -0.00012421581777743995, 0.0, -1.9073486328125e-06, -0.00029754638671875, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001506805419921875, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -2.288818359375e-05, -0.0003921985626220703, -5.7220458984375e-06, -0.00013708103506360203, -1.2159273865108844e-05, -5.7220458984375e-06, -0.0001125335693359375, -0.0003509521484375, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.00044739246368408203, -2.3841855067985307e-07, -9.918212890625e-05, -0.21381282806396484, -5.7220458984375e-06, -0.0013823187910020351, -0.00019108926062472165, -3.62396240234375e-05, -1.9073486328125e-06, -0.00017380712961312383, -2.515315827622544e-05]}, {"score": -1.8699862681468176, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 154, "overload", "<EOS>", 32, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"_type": "keyword", "arg": "overload", "value": {"_type": "Template18"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -0.002674102783203125, 0.0, -0.000514984130859375, -2.86102294921875e-05, -9.34600830078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00113677978515625, 0.0, -0.000194549560546875, 0.0, -0.0003172020660713315, -4.76837158203125e-05, -9.72747802734375e-05, -0.019107818603515625, -0.0023174285888671875, -0.008826255798339844, -0.00015842914581298828, -1.9073486328125e-06, -0.0004734991816803813, 0.0, -7.82012939453125e-05, -7.05718994140625e-05, -1.1444091796875e-05, -2.384185791015625e-06, -7.557868957519531e-05, -0.006608009338378906, -3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -1.1801687833212782e-05, -1.1444091796875e-05, -0.00012421581777743995, 0.0, -1.9073486328125e-06, -0.00029754638671875, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001506805419921875, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -2.288818359375e-05, -0.0003921985626220703, -5.7220458984375e-06, -0.00013708103506360203, -1.2159273865108844e-05, -5.7220458984375e-06, -0.0001125335693359375, -0.0003509521484375, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.00044739246368408203, -2.3841855067985307e-07, -9.918212890625e-05, -1.7956428527832031, -7.62939453125e-06, -1.1444091796875e-05, -0.002072213916108012, -0.00046026540803723037]}, {"score": -3.724377130559219, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 154, "overload", "<EOS>", 32, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"_type": "keyword", "arg": "overload", "value": {"_type": "Template18"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -0.002674102783203125, 0.0, -0.000514984130859375, -2.86102294921875e-05, -9.34600830078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00113677978515625, 0.0, -0.000194549560546875, 0.0, -0.0003172020660713315, -4.76837158203125e-05, -9.72747802734375e-05, -0.019107818603515625, -0.0023174285888671875, -0.008826255798339844, -0.00015842914581298828, -1.9073486328125e-06, -0.0004734991816803813, 0.0, -7.82012939453125e-05, -7.05718994140625e-05, -1.1444091796875e-05, -2.384185791015625e-06, -7.557868957519531e-05, -0.006608009338378906, -3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -1.1801687833212782e-05, -1.1444091796875e-05, -0.00012421581777743995, 0.0, -1.9073486328125e-06, -0.00029754638671875, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001506805419921875, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -2.288818359375e-05, -0.0003921985626220703, -5.7220458984375e-06, -0.00013708103506360203, -1.2159273865108844e-05, -5.7220458984375e-06, -0.0001125335693359375, -0.0003509521484375, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.00044739246368408203, -2.3841855067985307e-07, -9.918212890625e-05, -3.652276039123535, -3.4332275390625e-05, -7.62939453125e-06, -0.0001531839370727539, -0.00011408327554818243]}, {"score": -4.491699767815476, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "overload", "<EOS>", 31, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -4.051318168640137, 0.0, -0.1069173812866211, -1.52587890625e-05, -0.10405254364013672, -0.000171661376953125, 0.0, -0.0008590209763497114, 0.0, -3.62396240234375e-05, -7.82012939453125e-05, -5.7220458984375e-06, -9.298322765971534e-06, -5.6862831115722656e-05, -0.0023250579833984375, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.7762085917638615e-05, -1.1563301086425781e-05, -0.00011658627045108005, 0.0, -1.9073486328125e-06, -0.0004425048828125, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001544952392578125, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -2.288818359375e-05, -0.00037789344787597656, -5.7220458984375e-06, -0.00013445879449136555, -1.1801649634435307e-05, -3.814697265625e-06, -0.000118255615234375, -0.0003490447998046875, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.00044357776641845703, -2.3841855067985307e-07, -9.918212890625e-05, -0.2134552001953125, -5.7220458984375e-06, -0.0013755240943282843, -0.00019168524886481464, -3.62396240234375e-05, -1.9073486328125e-06, -0.00017380712961312383, -2.515315827622544e-05]}, {"score": -5.7074072953388395, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 154, "overload", "<EOS>", 31, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -0.002674102783203125, 0.0, -0.000514984130859375, -2.86102294921875e-05, -9.34600830078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00113677978515625, 0.0, -0.000194549560546875, 0.0, -0.0003172020660713315, -4.76837158203125e-05, -9.72747802734375e-05, -0.019107818603515625, -0.0023174285888671875, -5.429505348205566, -0.00037384033203125, -5.7220458984375e-06, -0.0005277394666336477, 0.0, -9.918212890625e-05, -0.00011444091796875, -1.1444091796875e-05, -2.503394853192731e-06, -7.784366607666016e-05, -0.0055484771728515625, -5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -1.1920896213268861e-05, -1.1444091796875e-05, -0.00011920904944417998, 0.0, -1.9073486328125e-06, -0.0002956390380859375, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001544952392578125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -2.288818359375e-05, -0.00038933753967285156, -5.7220458984375e-06, -0.00013660427066497505, -1.2040065485052764e-05, -3.814697265625e-06, -0.00011444091796875, -0.0003509521484375, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.00044548511505126953, -2.3841855067985307e-07, -9.72747802734375e-05, -0.21384716033935547, -5.7220458984375e-06, -0.0013823187910020351, -0.0001912084553623572, -3.62396240234375e-05, -1.9073486328125e-06, -0.00017380712961312383, -2.515315827622544e-05]}, {"score": -6.0756294579276755, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "overload", "<EOS>", 31, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -4.051318168640137, 0.0, -0.1069173812866211, -1.52587890625e-05, -0.10405254364013672, -0.000171661376953125, 0.0, -0.0008590209763497114, 0.0, -3.62396240234375e-05, -7.82012939453125e-05, -5.7220458984375e-06, -9.298322765971534e-06, -5.6862831115722656e-05, -0.0023250579833984375, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.7762085917638615e-05, -1.1563301086425781e-05, -0.00011658627045108005, 0.0, -1.9073486328125e-06, -0.0004425048828125, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001544952392578125, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -2.288818359375e-05, -0.00037789344787597656, -5.7220458984375e-06, -0.00013445879449136555, -1.1801649634435307e-05, -3.814697265625e-06, -0.000118255615234375, -0.0003490447998046875, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.00044357776641845703, -2.3841855067985307e-07, -9.918212890625e-05, -1.7966632843017578, -7.62939453125e-06, -1.1444091796875e-05, -0.0020585046149790287, -0.0004540665540844202]}, {"score": -6.334191015808642, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 165, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Dead", "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 58, 149, 78, 32, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            buffs=[Buff(ManaChange(Count(DeadMinionSelector(players=\n            BothPlayer())), -1))])\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "DeadMinionSelector"}}], "func": {"_type": "Name", "id": "Count"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}], "func": {"_type": "Name", "id": "Buff"}}]}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -0.002674102783203125, 0.0, -0.000514984130859375, -2.86102294921875e-05, -9.34600830078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00113677978515625, 0.0, -0.000194549560546875, 0.0, -0.0003172020660713315, -4.76837158203125e-05, -9.72747802734375e-05, -4.572305679321289, -1.52587890625e-05, -0.045868873596191406, -5.340576171875e-05, -0.005814552307128906, -0.00023651123046875, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.2625685930252075, -1.9073486328125e-06, -0.004497528076171875, -0.0061550140380859375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -0.0014606714248657227, -0.013154967688024044, -0.0002238750457763672, -0.003040313720703125, -0.0011491775512695312, -3.814697265625e-05, 0.0, -1.71661376953125e-05, -0.3146289587020874, -3.063678741455078e-05, -0.0008068084716796875, -0.0691690444946289, -0.5270967483520508, -1.71661376953125e-05, -0.0001354217529296875, -0.07748924940824509, -0.00517236115410924, -0.000141143798828125, 0.0, -0.06929588317871094, -5.14984130859375e-05, -0.0035649538040161133, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0050629377365112305, -2.300739288330078e-05, -1.9073486328125e-06, -0.007113456726074219, -0.001155853271484375, -0.0054798126220703125, -6.67572021484375e-05, -0.06142306327819824, -1.71661376953125e-05, -0.005747256334871054, -2.6702880859375e-05, -0.0006465911865234375, -0.0001220703125, -1.9073486328125e-06, -1.6570011212024838e-05, -0.00028955936431884766, -0.006500244140625, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -2.4199236577260308e-05, -5.7220458984375e-06, -0.000381439458578825, 0.0, 0.0, -0.00066375732421875, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00020599365234375, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, 0.0, -1.52587890625e-05, -2.47955322265625e-05, -0.00038933753967285156, -7.62939453125e-06, -0.00014184872270561755, -1.168244216387393e-05, -5.7220458984375e-06, -8.392333984375e-05, -0.00034332275390625, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.000133514404296875, 0.0, -0.00045692920684814453, -2.3841855067985307e-07, -0.0001049041748046875, -0.21965980529785156, -5.7220458984375e-06, -0.0013990076258778572, -0.00018846671446226537, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016617773508187383, -2.7179714379599318e-05]}, {"score": -6.479725036531704, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "overload", "<EOS>", 32, 154, "overload", "<EOS>", 32, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, overload=1, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template18"}}, {"_type": "keyword", "arg": "overload", "value": {"_type": "Template18"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -6.013516426086426, -6.29425048828125e-05, -0.04866981506347656, -0.0003604888916015625, -0.1647634506225586, -5.53131103515625e-05, -0.0034580230712890625, -0.00028824806213378906, 0.0, -0.0016171523602679372, 0.0, -3.4332275390625e-05, -7.43865966796875e-05, -5.7220458984375e-06, -1.1801716937043238e-05, -4.38690185546875e-05, -0.00191497802734375, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.6450801922474056e-05, -1.1563301086425781e-05, -0.00010645359725458547, 0.0, -1.9073486328125e-06, -0.0004291534423828125, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.00016021728515625, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -2.47955322265625e-05, -0.00038743019104003906, -5.7220458984375e-06, -0.0001310021907556802, -1.1920858014491387e-05, -3.814697265625e-06, -0.00011444091796875, -0.0003509521484375, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001373291015625, 0.0, -0.00044739246368408203, -2.3841855067985307e-07, -9.918212890625e-05, -0.2140026092529297, -5.7220458984375e-06, -0.0013768355129286647, -0.0001912084553623572, -3.62396240234375e-05, -1.9073486328125e-06, -0.00017380712961312383, -2.515315827622544e-05]}, {"score": -6.737833212883629, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "overload", "<EOS>", 32, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template18"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -4.051318168640137, 0.0, -0.1069173812866211, -1.52587890625e-05, -2.349137306213379, -0.00014925003051757812, 0.0, -0.00114345271140337, 0.0, -3.0517578125e-05, -4.57763671875e-05, -3.814697265625e-06, -9.059905096364673e-06, -5.8531761169433594e-05, -0.0023288726806640625, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.6927631804719567e-05, -1.1563301086425781e-05, -0.0001196856755996123, 0.0, -1.9073486328125e-06, -0.000492095947265625, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -2.288818359375e-05, -0.00037598609924316406, -5.7220458984375e-06, -0.00013517394836526364, -1.1801649634435307e-05, -3.814697265625e-06, -0.000118255615234375, -0.0003490447998046875, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.00044548511505126953, -2.3841855067985307e-07, -9.918212890625e-05, -0.21422481536865234, -5.7220458984375e-06, -0.0013749281642958522, -0.00019156605412717909, -3.62396240234375e-05, -1.9073486328125e-06, -0.00017380712961312383, -2.515315827622544e-05]}, {"score": -6.845240740987606, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 165, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 47, 114, "Null", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 58, 149, 78, 32, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            buffs=[Buff(ManaChange(Count(MinionSelector(Null, BothPlayer())\n            ), -1))])\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Count"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}], "func": {"_type": "Name", "id": "Buff"}}]}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -0.002674102783203125, 0.0, -0.000514984130859375, -2.86102294921875e-05, -9.34600830078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00113677978515625, 0.0, -0.000194549560546875, 0.0, -0.0003172020660713315, -4.76837158203125e-05, -9.72747802734375e-05, -4.572305679321289, -1.52587890625e-05, -0.045868873596191406, -5.340576171875e-05, -0.005814552307128906, -0.00023651123046875, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.2625685930252075, -1.9073486328125e-06, -0.004497528076171875, -0.0061550140380859375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -0.0014606714248657227, -0.013154967688024044, -0.0002238750457763672, -0.003040313720703125, -0.0011491775512695312, -3.814697265625e-05, 0.0, -1.71661376953125e-05, -0.3146289587020874, -3.063678741455078e-05, -0.0008068084716796875, -0.0691690444946289, -0.9015464782714844, 0.0, -7.82012939453125e-05, -0.22463759779930115, -2.7418136596679688e-05, -9.5367431640625e-06, -0.06167888641357422, -0.014704704284667969, -5.14984130859375e-05, -0.009444446302950382, -0.006600020918995142, -0.0013408660888671875, 0.0, -0.011133670806884766, -4.565709241433069e-05, -5.7220458984375e-06, -0.03593730926513672, -0.0005321502685546875, -0.002086639404296875, -0.0002994537353515625, -0.00885474681854248, -7.62939453125e-06, -0.0013685193844139576, -7.62939453125e-06, -0.0002880096435546875, -8.96453857421875e-05, -1.9073486328125e-06, -1.966940726561006e-05, -0.00017535686492919922, -0.011297225952148438, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -3.86233878089115e-05, -4.589557647705078e-05, -0.0005051413318142295, 0.0, 0.0, -0.0005321502685546875, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001850128173828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -0.00039505958557128906, -7.62939453125e-06, -0.00014339819608721882, -1.1801649634435307e-05, -5.7220458984375e-06, -8.392333984375e-05, -0.0003376007080078125, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00012969970703125, 0.0, -0.00045502185821533203, -2.3841855067985307e-07, -0.0001068115234375, -0.2150897979736328, -5.7220458984375e-06, -0.0014031787868589163, -0.00018822831043507904, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016808508371468633, -2.7179714379599318e-05]}, {"score": -7.068754464847075, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 154, "overload", "<EOS>", 32, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "Overload", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"_type": "keyword", "arg": "overload", "value": {"_type": "Template18"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -0.002674102783203125, 0.0, -0.000514984130859375, -2.86102294921875e-05, -9.34600830078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00113677978515625, 0.0, -0.000194549560546875, 0.0, -0.0003172020660713315, -4.76837158203125e-05, -9.72747802734375e-05, -0.019107818603515625, -0.0023174285888671875, -0.008826255798339844, -0.00015842914581298828, -1.9073486328125e-06, -0.0004734991816803813, 0.0, -7.82012939453125e-05, -7.05718994140625e-05, -1.1444091796875e-05, -2.384185791015625e-06, -7.557868957519531e-05, -0.006608009338378906, -3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -1.1801687833212782e-05, -1.1444091796875e-05, -0.00012421581777743995, 0.0, -1.9073486328125e-06, -0.00029754638671875, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001506805419921875, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -2.288818359375e-05, -0.0003921985626220703, -5.7220458984375e-06, -0.00013708103506360203, -1.2159273865108844e-05, -5.7220458984375e-06, -0.0001125335693359375, -0.0003509521484375, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.00044739246368408203, -2.3841855067985307e-07, -9.918212890625e-05, -0.21381282806396484, -5.7220458984375e-06, -6.7815399169921875, -0.0012780979741364717, -1.52587890625e-05, 0.0, -0.0001424551010131836, -0.00016832332767080516]}, {"score": -7.170285046980013, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 154, "overload", "<EOS>", 32, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"_type": "keyword", "arg": "overload", "value": {"_type": "Template18"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -0.002674102783203125, 0.0, -0.000514984130859375, -2.86102294921875e-05, -9.34600830078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00113677978515625, 0.0, -0.000194549560546875, 0.0, -0.0003172020660713315, -4.76837158203125e-05, -9.72747802734375e-05, -0.019107818603515625, -0.0023174285888671875, -0.008826255798339844, -0.00015842914581298828, -1.9073486328125e-06, -0.0004734991816803813, 0.0, -7.82012939453125e-05, -7.05718994140625e-05, -1.1444091796875e-05, -2.384185791015625e-06, -7.557868957519531e-05, -6.319640636444092, -1.9073486328125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.8834954971680418e-05, -1.1444091796875e-05, -0.00020050966122653335, 0.0, -1.9073486328125e-06, -0.0004596710205078125, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.07511138916015625, -1.33514404296875e-05, -0.000263214111328125, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -0.0002548694610595703, -3.814697265625e-06, -4.5656099246116355e-05, -3.0397906812140718e-05, -1.9073486328125e-06, -0.0005340576171875, -0.0003814697265625, -3.814697265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.00039780139923095703, -2.1457672119140625e-06, -8.392333984375e-05, -0.21234512329101562, -5.7220458984375e-06, -0.001383155002258718, -0.00022089065168984234, -3.62396240234375e-05, -1.9073486328125e-06, -0.00018513201212044805, -2.515315827622544e-05, -0.0008983612060546875, -0.4669370651245117, -5.7220458984375e-06, -1.9073486328125e-06, -0.016178131103515625, 0.0, -0.011566035449504852, -5.066394805908203e-05]}, {"score": -7.262931413712863, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -4.051318168640137, 0.0, -2.377157211303711, 0.0, -0.000530242919921875, -2.6702880859375e-05, -0.0002231597900390625, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.00090789794921875, 0.0, -7.43865966796875e-05, 0.0, -0.0002084943698719144, -6.67572021484375e-05, -0.004978299140930176, 0.0, -0.000161647709319368, 0.0, -3.4332275390625e-05, -3.814697265625e-05, -3.814697265625e-06, -2.2649765014648438e-06, -7.855892181396484e-05, -0.6053600311279297, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -1.5020326827652752e-05, -1.33514404296875e-05, -0.00015723677643109113, 0.0, 0.0, -0.0001811981201171875, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.0001373291015625, -1.33514404296875e-05, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -2.288818359375e-05, -0.00041604042053222656, -5.7220458984375e-06, -0.00015424462617374957, -1.1920858014491387e-05, -5.7220458984375e-06, -0.0001049041748046875, -0.0003452301025390625, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.00044929981231689453, -2.3841855067985307e-07, -9.918212890625e-05, -0.20952796936035156, -5.7220458984375e-06, -0.0013836291618645191, -0.0001908508565975353, -3.62396240234375e-05, -1.9073486328125e-06, -0.00017571447824593633, -2.706050690903794e-05]}, {"score": -7.289751025455757, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 154, "overload", "<EOS>", 31, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -0.002674102783203125, 0.0, -0.000514984130859375, -2.86102294921875e-05, -9.34600830078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00113677978515625, 0.0, -0.000194549560546875, 0.0, -0.0003172020660713315, -4.76837158203125e-05, -9.72747802734375e-05, -0.019107818603515625, -0.0023174285888671875, -5.429505348205566, -0.00037384033203125, -5.7220458984375e-06, -0.0005277394666336477, 0.0, -9.918212890625e-05, -0.00011444091796875, -1.1444091796875e-05, -2.503394853192731e-06, -7.784366607666016e-05, -0.0055484771728515625, -5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -1.1920896213268861e-05, -1.1444091796875e-05, -0.00011920904944417998, 0.0, -1.9073486328125e-06, -0.0002956390380859375, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001544952392578125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -2.288818359375e-05, -0.00038933753967285156, -5.7220458984375e-06, -0.00013660427066497505, -1.2040065485052764e-05, -3.814697265625e-06, -0.00011444091796875, -0.0003509521484375, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.00044548511505126953, -2.3841855067985307e-07, -9.72747802734375e-05, -1.7954607009887695, -7.62939453125e-06, -1.1444091796875e-05, -0.0020693528931587934, -0.0004581196408253163]}, {"score": -7.883785331701688, "choice_history": [59, 126, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Crackle", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 165, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Dead", "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 58, 149, 78, 32, "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            buffs=[Buff(ManaChange(Count(DeadMinionSelector(players=\n            BothPlayer())), -1))])\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "DeadMinionSelector"}}], "func": {"_type": "Name", "id": "Count"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}], "func": {"_type": "Name", "id": "Buff"}}]}}], "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Crackle", "hole3": "use"}, "score_history": [-1.9073486328125e-06, -0.0042705535888671875, -7.390948667307384e-06, -4.29153169534402e-06, -2.38411648751935e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -5.14984130859375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -6.198863957251888e-06, -1.621246337890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.0439109802246094e-05, -2.3841855067985307e-07, -0.0028859376907348633, -0.00032639503479003906, -0.00018310546875, -0.018448829650878906, -3.814697265625e-06, -0.002674102783203125, 0.0, -0.000514984130859375, -2.86102294921875e-05, -9.34600830078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00113677978515625, 0.0, -0.000194549560546875, 0.0, -0.0003172020660713315, -4.76837158203125e-05, -9.72747802734375e-05, -4.572305679321289, -1.52587890625e-05, -0.045868873596191406, -5.340576171875e-05, -0.005814552307128906, -0.00023651123046875, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.2625685930252075, -1.9073486328125e-06, -0.004497528076171875, -0.0061550140380859375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -0.0014606714248657227, -0.013154967688024044, -0.0002238750457763672, -0.003040313720703125, -0.0011491775512695312, -3.814697265625e-05, 0.0, -1.71661376953125e-05, -0.3146289587020874, -3.063678741455078e-05, -0.0008068084716796875, -0.0691690444946289, -0.5270967483520508, -1.71661376953125e-05, -0.0001354217529296875, -0.07748924940824509, -0.00517236115410924, -0.000141143798828125, 0.0, -0.06929588317871094, -5.14984130859375e-05, -0.0035649538040161133, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0050629377365112305, -2.300739288330078e-05, -1.9073486328125e-06, -0.007113456726074219, -0.001155853271484375, -0.0054798126220703125, -6.67572021484375e-05, -0.06142306327819824, -1.71661376953125e-05, -0.005747256334871054, -2.6702880859375e-05, -0.0006465911865234375, -0.0001220703125, -1.9073486328125e-06, -1.6570011212024838e-05, -0.00028955936431884766, -0.006500244140625, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -2.4199236577260308e-05, -5.7220458984375e-06, -0.000381439458578825, 0.0, 0.0, -0.00066375732421875, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00020599365234375, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, 0.0, -1.52587890625e-05, -2.47955322265625e-05, -0.00038933753967285156, -7.62939453125e-06, -0.00014184872270561755, -1.168244216387393e-05, -5.7220458984375e-06, -8.392333984375e-05, -0.00034332275390625, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.000133514404296875, 0.0, -0.00045692920684814453, -2.3841855067985307e-07, -0.0001049041748046875, -1.7686119079589844, -7.62939453125e-06, -1.1444091796875e-05, -0.002017377642914653, -0.0004304629110265523]}], "gold_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(game.random_amount\n            (3, 6)), self)\n"}
{"beams": [{"score": -0.7600012949794532, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -0.5001277923583984, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.340576171875e-05, -0.00015163421630859375, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0008907318115234375, -1.9073486328125e-05, -5.7220458984375e-06, -0.0004119873046875, -4.00543212890625e-05, 0.0, -4.38690185546875e-05, -4.00543212890625e-05, -0.00025844573974609375, 0.0, -0.04397129639983177, 0.0, -1.52587890625e-05, -0.00597381591796875, -1.9073486328125e-06, -0.0047026872634887695, -3.814697265625e-06]}, {"score": -2.7401971749138525, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_enemy_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -2.154963731765747, 0.0, -7.62939453125e-06, 0.0, -0.00014829635620117188, 0.0, -5.7220458984375e-06, 0.0, 0.0, -2.2888167222845368e-05, -2.300739288330078e-05, -0.48717594146728516, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-05, -0.00015735626220703125, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0008754730224609375, -1.9073486328125e-05, -5.7220458984375e-06, -0.000431060791015625, -3.814697265625e-05, 0.0, -4.1961669921875e-05, -4.00543212890625e-05, -0.000263214111328125, 0.0, -0.04309248551726341, 0.0, -1.52587890625e-05, -0.00594329833984375, -1.9073486328125e-06, -0.004665493965148926, -3.814697265625e-06]}, {"score": -4.299119942547556, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_friendly_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -3.746927499771118, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -0.0001329183578491211, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.7656533347908407e-05, -2.110004425048828e-05, -0.45477962493896484, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-05, -0.00015735626220703125, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0008983612060546875, -1.9073486328125e-05, -5.7220458984375e-06, -0.000431060791015625, -3.814697265625e-05, 0.0, -4.1961669921875e-05, -4.1961669921875e-05, -0.000270843505859375, 0.0, -0.042448874562978745, 0.0, -1.52587890625e-05, -0.005927085876464844, -1.9073486328125e-06, -0.0046416521072387695, -3.814697265625e-06]}, {"score": -4.787858959951997, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 56], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -0.5001277923583984, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.340576171875e-05, -0.00015163421630859375, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0008907318115234375, -1.9073486328125e-05, -5.7220458984375e-06, -0.0004119873046875, -4.00543212890625e-05, 0.0, -4.38690185546875e-05, -4.00543212890625e-05, -0.00025844573974609375, 0.0, -3.778188943862915, -1.9073486328125e-06, -1.9073486328125e-05, -0.30431652069091797]}, {"score": -4.837417439290881, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 145, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 76, 145, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n        game.other_player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -1.3298225402832031, -0.0003509521484375, -3.62396240234375e-05, -1.52587890625e-05, -4.00543212890625e-05, -0.00026738643646240234, -1.33514404296875e-05, -2.0265579223632812e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.568521499633789, -2.86102294921875e-05, -5.14984130859375e-05, -3.24249267578125e-05, -6.29425048828125e-05, 0.0, -2.6702880859375e-05, -8.0108642578125e-05, -0.00027751922607421875, 0.0, -0.03498728945851326, 0.0, -1.33514404296875e-05, -0.0026702880859375, 0.0, -0.003285527229309082, -3.814697265625e-06, -0.006711006164550781, -0.0063838958740234375, -0.03064727783203125, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0025731325149536133, 0.0, -0.04863095283508301, 0.0, -0.14893341064453125, -5.7220458984375e-06, -0.000926971435546875, -0.0027742385864257812, -0.25121498107910156, -0.000293731689453125, -1.9073486328125e-06, 0.0, -0.0024127960205078125, 0.0, -0.0702507495880127, 0.0, -0.12182140350341797, -5.7220458984375e-06]}, {"score": -5.329095787300254, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 71, 100, 20, 92, 24, 112, "<UNK>", "<EOS>", 161, 7, 164, 48, 117, "0", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 47, 114, "Null", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 46, 112, "temp_attack", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if <UNK> == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(temp_attack)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "temp_attack"}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "NameConstant", "value": "Null"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Name", "id": "<UNK>"}, "ops": [{"_type": "Eq"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -1.3298225402832031, -0.0003509521484375, -3.62396240234375e-05, -1.52587890625e-05, -4.00543212890625e-05, -0.00026738643646240234, -1.33514404296875e-05, -2.0265579223632812e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.08135414123535156, -0.0001201629638671875, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.6717690229415894, -1.9073486328125e-06, -0.06557750701904297, -0.008525848388671875, -1.9073486328125e-06, -4.57763671875e-05, -0.000377655029296875, -1.33514404296875e-05, -0.0059223175048828125, -3.814697265625e-06, -0.0066267140209674835, -1.2874597814516164e-05, -0.001909017562866211, 0.0, -0.0037728240713477135, -5.7220458984375e-06, -0.0087127685546875, -2.09808349609375e-05, -4.1961669921875e-05, -3.62396240234375e-05, 0.0, -0.003655076026916504, -1.9073486328125e-06, -0.00165557861328125, 0.0, -0.0034275054931640625, 0.0, -4.9591064453125e-05, 0.0, -0.15237998962402344, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.09260725975036621, -5.841255187988281e-06, -0.008808135986328125, -0.0031452178955078125, -0.0007343292236328125, -0.0018100738525390625, -0.0005779266357421875, -1.9073486328125e-06, -0.5770578384399414, -1.9073486328125e-06, -0.00023651123046875, -0.12722301483154297, -9.5367431640625e-06, -0.19910526275634766, -0.00011444091796875, -0.00048314774176105857, -1.52587890625e-05, -0.000698089599609375, -0.009959220886230469, -9.5367431640625e-06, -0.001186370849609375, -1.71661376953125e-05, -8.392333984375e-05, 0.0, -0.001384735107421875, 0.0, -0.0001010894775390625, 0.0, -0.012416481971740723, 0.0, -1.9073486328125e-06, -0.009512901306152344, -0.001659393310546875, -0.00037789277848787606, -1.9073486328125e-06, -0.016582489013671875, -0.0001678466796875, -0.003192901611328125, -7.82012939453125e-05, -0.0001773834228515625, -5.7220458984375e-06, 0.0, -0.0008535385131835938, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.1345653533935547, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008640289306640625, -7.62939453125e-06, -0.0447239875793457, -3.635883331298828e-05, -0.0032062530517578125, -0.000148773193359375, -0.0008182525634765625, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.0001373291015625, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.13747119903564453, 0.0, -3.814697265625e-06, -0.07168388366699219, 0.0, -1.314668893814087, -9.918212890625e-05]}, {"score": -5.509215824994371, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -4.1472930908203125, -2.288818359375e-05, -0.000148773193359375, -1.156323378381785e-05, -7.462501525878906e-05, -4.768370445162873e-07, -3.814697265625e-06, -6.67572021484375e-05, -0.0009822845458984375, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -6.127357482910156e-05, 0.0, -0.31208062171936035, 0.0, -0.5066356658935547, 0.0, -9.5367431640625e-06, -0.0002371072769165039, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0005626678466796875, -0.000179290771484375, -0.0001163482666015625, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.00034332275390625, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.20502328872680664, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.00019979476928710938, 0.0, -5.7220458984375e-06, 0.0, 0.0, -2.455709909554571e-05, -2.110004425048828e-05, -0.2569246292114258, -1.9073486328125e-06, -1.33514404296875e-05, -1.33514404296875e-05, -5.7220458984375e-05, -0.00013256072998046875, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000911712646484375, -1.9073486328125e-05, -5.7220458984375e-06, -0.000392913818359375, -4.1961669921875e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-05, -0.00024509429931640625, 0.0, -0.04387998208403587, 0.0, -1.52587890625e-05, -0.0060272216796875, -1.9073486328125e-06, -0.004792332649230957, -3.814697265625e-06]}, {"score": -5.602382857812451, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "temp_attack", "<EOS>", 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 71, 100, 20, 92, 24, 112, "<UNK>", "<EOS>", 161, 7, 164, 48, 117, "0", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 47, 114, "Null", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 46, 112, "temp_attack", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if <UNK> == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(temp_attack)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "temp_attack"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "temp_attack"}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "NameConstant", "value": "Null"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Name", "id": "<UNK>"}, "ops": [{"_type": "Eq"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -1.3298225402832031, -0.0003509521484375, -3.62396240234375e-05, -1.52587890625e-05, -4.00543212890625e-05, -0.00026738643646240234, -1.33514404296875e-05, -2.0265579223632812e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.08135414123535156, -0.0001201629638671875, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.92552649974823, -5.7220458984375e-06, -0.04072380065917969, -0.00031280517578125, -1.9073486328125e-06, -3.814697265625e-05, -0.00012969970703125, -2.86102294921875e-05, -0.0016880035400390625, -3.814697265625e-06, -0.002144566969946027, -1.1086463018727954e-05, -0.0011990070343017578, 0.0, -0.004012564197182655, -5.7220458984375e-06, -0.0047435760498046875, -2.09808349609375e-05, -7.62939453125e-05, -3.62396240234375e-05, 0.0, -0.003970146179199219, -1.9073486328125e-06, -0.0017309188842773438, 0.0, -0.002750396728515625, 0.0, -5.14984130859375e-05, 0.0, -0.2014141082763672, -5.7220458984375e-06, -3.814697265625e-05, 0.0, -0.11000716686248779, -5.841255187988281e-06, -0.008922576904296875, -0.0027751922607421875, -0.0006809234619140625, -0.0018672943115234375, -0.0005779266357421875, -1.9073486328125e-06, -0.5809855461120605, -1.9073486328125e-06, -0.0002346038818359375, -0.12743282318115234, -9.5367431640625e-06, -0.19550037384033203, -0.0001125335693359375, -0.0004922070074826479, -1.52587890625e-05, -0.0007228851318359375, -0.0096893310546875, -7.62939453125e-06, -0.0012149810791015625, -1.71661376953125e-05, -8.7738037109375e-05, 0.0, -0.0016126632690429688, 0.0, -9.72747802734375e-05, 0.0, -0.012545228004455566, 0.0, -1.9073486328125e-06, -0.009457588195800781, -0.0016841888427734375, -0.00037801198777742684, -1.9073486328125e-06, -0.016719818115234375, -0.0001678466796875, -0.0031290054321289062, -7.82012939453125e-05, -0.000179290771484375, -5.7220458984375e-06, 0.0, -0.0008535385131835938, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.13453388214111328, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008640289306640625, -7.62939453125e-06, -0.04479646682739258, -3.635883331298828e-05, -0.003204345703125, -0.000148773193359375, -0.000820159912109375, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.00013828277587890625, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.13759231567382812, 0.0, -3.814697265625e-06, -0.07106304168701172, 0.0, -1.3144605159759521, -0.0001010894775390625]}, {"score": -5.901428771573343, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 71, 100, 20, 92, 24, 112, "temp_attack", "<EOS>", 161, 7, 164, 48, 117, "0", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 47, 114, "Null", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 46, 112, "temp_attack", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(temp_attack)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "temp_attack"}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "NameConstant", "value": "Null"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Name", "id": "temp_attack"}, "ops": [{"_type": "Eq"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -1.3298225402832031, -0.0003509521484375, -3.62396240234375e-05, -1.52587890625e-05, -4.00543212890625e-05, -0.00026738643646240234, -1.33514404296875e-05, -2.0265579223632812e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.08135414123535156, -0.0001201629638671875, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.6717690229415894, -1.9073486328125e-06, -0.06557750701904297, -0.008525848388671875, -1.9073486328125e-06, -4.57763671875e-05, -0.000377655029296875, -1.33514404296875e-05, -0.0059223175048828125, -3.814697265625e-06, -0.0066267140209674835, -1.2874597814516164e-05, -0.001909017562866211, 0.0, -0.0037728240713477135, -5.7220458984375e-06, -0.0087127685546875, -2.09808349609375e-05, -4.1961669921875e-05, -3.62396240234375e-05, 0.0, -0.003655076026916504, -1.9073486328125e-06, -0.00165557861328125, 0.0, -0.0034275054931640625, 0.0, -4.9591064453125e-05, 0.0, -0.15237998962402344, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.09260725975036621, -5.841255187988281e-06, -0.008808135986328125, -0.0031452178955078125, -0.0007343292236328125, -0.0018100738525390625, -0.0005779266357421875, -1.9073486328125e-06, -1.1419906616210938, -1.9073486328125e-06, -0.0001068115234375, -0.010308265686035156, -5.7220458984375e-06, -0.31543540954589844, -3.814697265625e-05, -0.0003672822203952819, -3.62396240234375e-05, -0.0004863739013671875, -0.01699542999267578, -9.5367431640625e-06, -0.000934600830078125, -1.9073486328125e-05, -0.0001430511474609375, 0.0, -0.0028247833251953125, 0.0, -0.00011456012725830078, 0.0, -0.01211702823638916, 0.0, -1.9073486328125e-06, -0.008839607238769531, -0.0017795562744140625, -0.00037312452332116663, -1.9073486328125e-06, -0.016115188598632812, -0.000164031982421875, -0.003143310546875, -8.0108642578125e-05, -0.00017547607421875, -5.7220458984375e-06, 0.0, -0.0008592605590820312, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.1367483139038086, -1.9073486328125e-06, -9.5367431640625e-06, -0.000858306884765625, -7.62939453125e-06, -0.044901371002197266, -3.635883331298828e-05, -0.003154754638671875, -0.0001506805419921875, -0.000812530517578125, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.00013828277587890625, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.13789081573486328, 0.0, -3.814697265625e-06, -0.0708761215209961, 0.0, -1.3143293857574463, -0.0001010894775390625]}, {"score": -5.943109220756675, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 71, 100, 20, 92, 24, 112, "<UNK>", "<EOS>", 161, 7, 164, 48, 117, "0", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 47, 114, "Null", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 46, 112, "targets", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if <UNK> == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(targets)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "targets"}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "NameConstant", "value": "Null"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Name", "id": "<UNK>"}, "ops": [{"_type": "Eq"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -1.3298225402832031, -0.0003509521484375, -3.62396240234375e-05, -1.52587890625e-05, -4.00543212890625e-05, -0.00026738643646240234, -1.33514404296875e-05, -2.0265579223632812e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.08135414123535156, -0.0001201629638671875, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.6717690229415894, -1.9073486328125e-06, -0.06557750701904297, -0.008525848388671875, -1.9073486328125e-06, -4.57763671875e-05, -0.000377655029296875, -1.33514404296875e-05, -0.0059223175048828125, -3.814697265625e-06, -0.0066267140209674835, -1.2874597814516164e-05, -0.001909017562866211, 0.0, -0.0037728240713477135, -5.7220458984375e-06, -0.0087127685546875, -2.09808349609375e-05, -4.1961669921875e-05, -3.62396240234375e-05, 0.0, -0.003655076026916504, -1.9073486328125e-06, -0.00165557861328125, 0.0, -0.0034275054931640625, 0.0, -4.9591064453125e-05, 0.0, -0.15237998962402344, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.09260725975036621, -5.841255187988281e-06, -0.008808135986328125, -0.0031452178955078125, -0.0007343292236328125, -0.0018100738525390625, -0.0005779266357421875, -1.9073486328125e-06, -0.5770578384399414, -1.9073486328125e-06, -0.00023651123046875, -0.12722301483154297, -9.5367431640625e-06, -0.19910526275634766, -0.00011444091796875, -0.00048314774176105857, -1.52587890625e-05, -0.000698089599609375, -0.009959220886230469, -9.5367431640625e-06, -0.001186370849609375, -1.71661376953125e-05, -8.392333984375e-05, 0.0, -0.001384735107421875, 0.0, -0.0001010894775390625, 0.0, -0.012416481971740723, 0.0, -1.9073486328125e-06, -0.009512901306152344, -0.001659393310546875, -0.00037789277848787606, -1.9073486328125e-06, -0.016582489013671875, -0.0001678466796875, -0.003192901611328125, -7.82012939453125e-05, -0.0001773834228515625, -5.7220458984375e-06, 0.0, -0.0008535385131835938, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.1345653533935547, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008640289306640625, -7.62939453125e-06, -0.0447239875793457, -3.635883331298828e-05, -0.0032062530517578125, -0.000148773193359375, -0.0008182525634765625, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.0001373291015625, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.13747119903564453, 0.0, -3.814697265625e-06, -0.07168388366699219, 0.0, -1.928781509399414, 0.0]}, {"score": -6.101513809456016, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 71, 100, 20, 92, 24, 112, "<UNK>", "<EOS>", 161, 7, 164, 48, 117, "0", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 47, 114, "Null", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 46, 112, "Change", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if <UNK> == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(Change)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "Change"}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "NameConstant", "value": "Null"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Name", "id": "<UNK>"}, "ops": [{"_type": "Eq"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -1.3298225402832031, -0.0003509521484375, -3.62396240234375e-05, -1.52587890625e-05, -4.00543212890625e-05, -0.00026738643646240234, -1.33514404296875e-05, -2.0265579223632812e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.08135414123535156, -0.0001201629638671875, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.6717690229415894, -1.9073486328125e-06, -0.06557750701904297, -0.008525848388671875, -1.9073486328125e-06, -4.57763671875e-05, -0.000377655029296875, -1.33514404296875e-05, -0.0059223175048828125, -3.814697265625e-06, -0.0066267140209674835, -1.2874597814516164e-05, -0.001909017562866211, 0.0, -0.0037728240713477135, -5.7220458984375e-06, -0.0087127685546875, -2.09808349609375e-05, -4.1961669921875e-05, -3.62396240234375e-05, 0.0, -0.003655076026916504, -1.9073486328125e-06, -0.00165557861328125, 0.0, -0.0034275054931640625, 0.0, -4.9591064453125e-05, 0.0, -0.15237998962402344, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.09260725975036621, -5.841255187988281e-06, -0.008808135986328125, -0.0031452178955078125, -0.0007343292236328125, -0.0018100738525390625, -0.0005779266357421875, -1.9073486328125e-06, -0.5770578384399414, -1.9073486328125e-06, -0.00023651123046875, -0.12722301483154297, -9.5367431640625e-06, -0.19910526275634766, -0.00011444091796875, -0.00048314774176105857, -1.52587890625e-05, -0.000698089599609375, -0.009959220886230469, -9.5367431640625e-06, -0.001186370849609375, -1.71661376953125e-05, -8.392333984375e-05, 0.0, -0.001384735107421875, 0.0, -0.0001010894775390625, 0.0, -0.012416481971740723, 0.0, -1.9073486328125e-06, -0.009512901306152344, -0.001659393310546875, -0.00037789277848787606, -1.9073486328125e-06, -0.016582489013671875, -0.0001678466796875, -0.003192901611328125, -7.82012939453125e-05, -0.0001773834228515625, -5.7220458984375e-06, 0.0, -0.0008535385131835938, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.1345653533935547, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008640289306640625, -7.62939453125e-06, -0.0447239875793457, -3.635883331298828e-05, -0.0032062530517578125, -0.000148773193359375, -0.0008182525634765625, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.0001373291015625, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.13747119903564453, 0.0, -3.814697265625e-06, -0.07168388366699219, 0.0, -2.082127809524536, -0.00505828857421875]}, {"score": -6.155556763953179, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "temp_attack", "<EOS>", 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 71, 100, 20, 92, 24, 112, "temp_attack", "<EOS>", 161, 7, 164, 48, 117, "0", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 47, 114, "Null", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 46, 112, "temp_attack", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(temp_attack)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "temp_attack"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "temp_attack"}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "NameConstant", "value": "Null"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Name", "id": "temp_attack"}, "ops": [{"_type": "Eq"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -1.3298225402832031, -0.0003509521484375, -3.62396240234375e-05, -1.52587890625e-05, -4.00543212890625e-05, -0.00026738643646240234, -1.33514404296875e-05, -2.0265579223632812e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.08135414123535156, -0.0001201629638671875, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.92552649974823, -5.7220458984375e-06, -0.04072380065917969, -0.00031280517578125, -1.9073486328125e-06, -3.814697265625e-05, -0.00012969970703125, -2.86102294921875e-05, -0.0016880035400390625, -3.814697265625e-06, -0.002144566969946027, -1.1086463018727954e-05, -0.0011990070343017578, 0.0, -0.004012564197182655, -5.7220458984375e-06, -0.0047435760498046875, -2.09808349609375e-05, -7.62939453125e-05, -3.62396240234375e-05, 0.0, -0.003970146179199219, -1.9073486328125e-06, -0.0017309188842773438, 0.0, -0.002750396728515625, 0.0, -5.14984130859375e-05, 0.0, -0.2014141082763672, -5.7220458984375e-06, -3.814697265625e-05, 0.0, -0.11000716686248779, -5.841255187988281e-06, -0.008922576904296875, -0.0027751922607421875, -0.0006809234619140625, -0.0018672943115234375, -0.0005779266357421875, -1.9073486328125e-06, -1.1420116424560547, -1.9073486328125e-06, -0.0001087188720703125, -0.010271072387695312, -5.7220458984375e-06, -0.2972707748413086, -4.00543212890625e-05, -0.0003737193765118718, -3.814697265625e-05, -0.0004940032958984375, -0.016565322875976562, -9.5367431640625e-06, -0.0009746551513671875, -1.9073486328125e-05, -0.000148773193359375, 0.0, -0.0032682418823242188, 0.0, -0.00011074542999267578, 0.0, -0.012240052223205566, 0.0, -1.9073486328125e-06, -0.008807182312011719, -0.0017948150634765625, -0.00037324370350688696, -1.9073486328125e-06, -0.016229629516601562, -0.0001659393310546875, -0.0030794143676757812, -8.0108642578125e-05, -0.0001773834228515625, -5.7220458984375e-06, 0.0, -0.000858306884765625, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.13672351837158203, -1.9073486328125e-06, -9.5367431640625e-06, -0.000858306884765625, -7.62939453125e-06, -0.04497861862182617, -3.635883331298828e-05, -0.003154754638671875, -0.000148773193359375, -0.00081634521484375, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.00013828277587890625, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.13805103302001953, 0.0, -3.814697265625e-06, -0.06992053985595703, 0.0, -1.3139145374298096, -0.0001010894775390625]}, {"score": -6.215793807519482, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "temp_attack", "<EOS>", 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 71, 100, 20, 92, 24, 112, "<UNK>", "<EOS>", 161, 7, 164, 48, 117, "0", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 47, 114, "Null", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 46, 112, "targets", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if <UNK> == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(targets)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "temp_attack"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "targets"}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "NameConstant", "value": "Null"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Name", "id": "<UNK>"}, "ops": [{"_type": "Eq"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -1.3298225402832031, -0.0003509521484375, -3.62396240234375e-05, -1.52587890625e-05, -4.00543212890625e-05, -0.00026738643646240234, -1.33514404296875e-05, -2.0265579223632812e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.08135414123535156, -0.0001201629638671875, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.92552649974823, -5.7220458984375e-06, -0.04072380065917969, -0.00031280517578125, -1.9073486328125e-06, -3.814697265625e-05, -0.00012969970703125, -2.86102294921875e-05, -0.0016880035400390625, -3.814697265625e-06, -0.002144566969946027, -1.1086463018727954e-05, -0.0011990070343017578, 0.0, -0.004012564197182655, -5.7220458984375e-06, -0.0047435760498046875, -2.09808349609375e-05, -7.62939453125e-05, -3.62396240234375e-05, 0.0, -0.003970146179199219, -1.9073486328125e-06, -0.0017309188842773438, 0.0, -0.002750396728515625, 0.0, -5.14984130859375e-05, 0.0, -0.2014141082763672, -5.7220458984375e-06, -3.814697265625e-05, 0.0, -0.11000716686248779, -5.841255187988281e-06, -0.008922576904296875, -0.0027751922607421875, -0.0006809234619140625, -0.0018672943115234375, -0.0005779266357421875, -1.9073486328125e-06, -0.5809855461120605, -1.9073486328125e-06, -0.0002346038818359375, -0.12743282318115234, -9.5367431640625e-06, -0.19550037384033203, -0.0001125335693359375, -0.0004922070074826479, -1.52587890625e-05, -0.0007228851318359375, -0.0096893310546875, -7.62939453125e-06, -0.0012149810791015625, -1.71661376953125e-05, -8.7738037109375e-05, 0.0, -0.0016126632690429688, 0.0, -9.72747802734375e-05, 0.0, -0.012545228004455566, 0.0, -1.9073486328125e-06, -0.009457588195800781, -0.0016841888427734375, -0.00037801198777742684, -1.9073486328125e-06, -0.016719818115234375, -0.0001678466796875, -0.0031290054321289062, -7.82012939453125e-05, -0.000179290771484375, -5.7220458984375e-06, 0.0, -0.0008535385131835938, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.13453388214111328, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008640289306640625, -7.62939453125e-06, -0.04479646682739258, -3.635883331298828e-05, -0.003204345703125, -0.000148773193359375, -0.000820159912109375, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.00013828277587890625, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.13759231567382812, 0.0, -3.814697265625e-06, -0.07106304168701172, 0.0, -1.9279725551605225, 0.0]}, {"score": -6.374027688516186, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "temp_attack", "<EOS>", 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 71, 100, 20, 92, 24, 112, "<UNK>", "<EOS>", 161, 7, 164, 48, 117, "0", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 47, 114, "Null", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 46, 112, "Change", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if <UNK> == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(Change)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "temp_attack"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Name", "id": "Change"}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "NameConstant", "value": "Null"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Name", "id": "<UNK>"}, "ops": [{"_type": "Eq"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -1.3298225402832031, -0.0003509521484375, -3.62396240234375e-05, -1.52587890625e-05, -4.00543212890625e-05, -0.00026738643646240234, -1.33514404296875e-05, -2.0265579223632812e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.08135414123535156, -0.0001201629638671875, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.92552649974823, -5.7220458984375e-06, -0.04072380065917969, -0.00031280517578125, -1.9073486328125e-06, -3.814697265625e-05, -0.00012969970703125, -2.86102294921875e-05, -0.0016880035400390625, -3.814697265625e-06, -0.002144566969946027, -1.1086463018727954e-05, -0.0011990070343017578, 0.0, -0.004012564197182655, -5.7220458984375e-06, -0.0047435760498046875, -2.09808349609375e-05, -7.62939453125e-05, -3.62396240234375e-05, 0.0, -0.003970146179199219, -1.9073486328125e-06, -0.0017309188842773438, 0.0, -0.002750396728515625, 0.0, -5.14984130859375e-05, 0.0, -0.2014141082763672, -5.7220458984375e-06, -3.814697265625e-05, 0.0, -0.11000716686248779, -5.841255187988281e-06, -0.008922576904296875, -0.0027751922607421875, -0.0006809234619140625, -0.0018672943115234375, -0.0005779266357421875, -1.9073486328125e-06, -0.5809855461120605, -1.9073486328125e-06, -0.0002346038818359375, -0.12743282318115234, -9.5367431640625e-06, -0.19550037384033203, -0.0001125335693359375, -0.0004922070074826479, -1.52587890625e-05, -0.0007228851318359375, -0.0096893310546875, -7.62939453125e-06, -0.0012149810791015625, -1.71661376953125e-05, -8.7738037109375e-05, 0.0, -0.0016126632690429688, 0.0, -9.72747802734375e-05, 0.0, -0.012545228004455566, 0.0, -1.9073486328125e-06, -0.009457588195800781, -0.0016841888427734375, -0.00037801198777742684, -1.9073486328125e-06, -0.016719818115234375, -0.0001678466796875, -0.0031290054321289062, -7.82012939453125e-05, -0.000179290771484375, -5.7220458984375e-06, 0.0, -0.0008535385131835938, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.13453388214111328, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008640289306640625, -7.62939453125e-06, -0.04479646682739258, -3.635883331298828e-05, -0.003204345703125, -0.000148773193359375, -0.000820159912109375, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.00013828277587890625, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.13759231567382812, 0.0, -3.814697265625e-06, -0.07106304168701172, 0.0, -2.0811424255371094, -0.0050640106201171875]}, {"score": -7.399857105626076, "choice_history": [59, 126, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Emergency", " ", "Coolant", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 71, 100, 20, 92, 24, 112, "temp_attack", "<EOS>", 161, 7, 164, 47, 114, "Null", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Frozen", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == Null:\n            self.target.die(self)\n        else:\n            self.target.set_health_to(Buff(Frozen()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Frozen"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "left": {"_type": "Name", "id": "temp_attack"}, "ops": [{"_type": "Eq"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EmergencyCoolant", "hole3": "use"}, "score_history": [-0.0004730224609375, -0.0001697540283203125, -1.1920928244535389e-07, -4.8993817472364753e-05, -5.9126061387360096e-05, 0.0, -1.1920928244535389e-07, -4.0531076592742465e-06, -1.1444091796875e-05, -8.96453857421875e-05, 0.0, -0.016469955444335938, -0.00388336181640625, -7.62939453125e-06, -0.01660919189453125, -0.0001678466796875, -1.9073486328125e-06, -1.1086402082582936e-05, -0.00020575523376464844, -7.152555099310121e-07, -5.7220458984375e-06, -3.24249267578125e-05, -0.000179290771484375, -5.340576171875e-05, -0.000102996826171875, 0.0, -0.00022745132446289062, -1.1920928244535389e-07, -0.001764535903930664, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.24249267578125e-05, -0.00035607811878435314, 0.0, -0.0001010894775390625, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.16089844703674316, 0.0, -5.841255187988281e-06, 0.0, -0.00013399124145507812, 0.0, -7.62939453125e-06, 0.0, 0.0, -2.2411331883631647e-05, -2.110004425048828e-05, -1.3298225402832031, -0.0003509521484375, -3.62396240234375e-05, -1.52587890625e-05, -4.00543212890625e-05, -0.00026738643646240234, -1.33514404296875e-05, -2.0265579223632812e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.08135414123535156, -0.0001201629638671875, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.6717690229415894, -1.9073486328125e-06, -0.06557750701904297, -0.008525848388671875, -1.9073486328125e-06, -4.57763671875e-05, -0.000377655029296875, -1.33514404296875e-05, -0.0059223175048828125, -3.814697265625e-06, -0.0066267140209674835, -1.2874597814516164e-05, -0.001909017562866211, 0.0, -0.0037728240713477135, -5.7220458984375e-06, -0.0087127685546875, -2.09808349609375e-05, -4.1961669921875e-05, -3.62396240234375e-05, 0.0, -0.003655076026916504, -1.9073486328125e-06, -0.00165557861328125, 0.0, -0.0034275054931640625, 0.0, -4.9591064453125e-05, 0.0, -0.15237998962402344, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.09260725975036621, -5.841255187988281e-06, -0.008808135986328125, -0.0031452178955078125, -0.0007343292236328125, -0.0018100738525390625, -0.0005779266357421875, -1.9073486328125e-06, -1.1419906616210938, -1.9073486328125e-06, -0.0001068115234375, -0.010308265686035156, -5.7220458984375e-06, -1.395249366760254, -0.006888389587402344, -0.0032069759909063578, -7.307527266675606e-05, -0.019012451171875, -3.814697265625e-05, -0.00070953369140625, -0.004344940185546875, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.00024712085723876953, -1.9073486328125e-06, -0.0003930330276489258, 0.0, -0.4414224624633789, 0.0, -3.814697265625e-06, -0.28197574615478516, -1.9073486328125e-06, -0.32785582542419434, -7.748603820800781e-06, -0.0048828125, -0.0010852813720703125, -3.24249267578125e-05, -0.00029754638671875, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -0.0011314153671264648, -1.9073486328125e-06, -0.0001430511474609375, 0.0, -0.05982017517089844, 0.0, 0.0, -0.22487449645996094, -0.02504730224609375, -2.47955322265625e-05, 0.0, -0.6119771003723145, -2.09808349609375e-05, -4.76837158203125e-05, -0.16538143157958984, -1.71661376953125e-05, -0.013126710429787636, -0.0004475116729736328]}], "gold_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n"}
{"beams": [{"score": -0.3160314859553566, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004185318946838379, 0.0, -3.814697265625e-05, 0.0, -0.27158987522125244, -0.000110626220703125, -2.288818359375e-05, -0.000461578369140625, -0.00011444091796875, 0.0, -3.3378546504536644e-06, -2.0265579223632812e-06, -8.344646857949556e-07, -1.7404556274414062e-05, -2.7418097943154862e-06, -0.0023365020751953125, -3.4332275390625e-05, -0.020108461380004883, 0.0, -0.0001010894775390625, -2.09808349609375e-05, -0.00038909912109375, 0.0]}, {"score": -1.5454805196688923, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004185318946838379, 0.0, -3.814697265625e-05, 0.0, -1.50247061252594, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001544952392578125, 0.0, -6.556489552167477e-06, -2.0265579223632812e-06, -1.0728830375228426e-06, -1.9311904907226562e-05, -4.768360213347478e-06, -0.0034275054931640625, -2.86102294921875e-05, -0.018146753311157227, 0.0, -0.0001068115234375, -2.47955322265625e-05, -0.000362396240234375, 0.0]}, {"score": -4.751438886086582, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004185318946838379, 0.0, -3.814697265625e-05, 0.0, -0.27158987522125244, -0.000110626220703125, -2.288818359375e-05, -0.000461578369140625, -0.00011444091796875, 0.0, -3.3378546504536644e-06, -2.0265579223632812e-06, -8.344646857949556e-07, -1.7404556274414062e-05, -2.7418097943154862e-06, -0.0023365020751953125, -3.4332275390625e-05, -4.45572566986084, 0.0, -0.000141143798828125, -7.62939453125e-06, -0.000152587890625, 0.0]}, {"score": -4.979978233720594, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 48, 117, "3", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -4.359490394592285, -1.9073486328125e-06, -6.592272984562442e-05, -3.8027756090741605e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -5.841255187988281e-06, -7.510185241699219e-05, -5.161762237548828e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -7.62939453125e-06, -7.641315460205078e-05, -3.576278118089249e-07, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.000213623046875, -9.5367431640625e-06, -0.0030423402786254883, 0.0, -2.47955322265625e-05, 0.0, -0.5877876281738281, -9.1552734375e-05, -2.288818359375e-05, -0.00012969970703125, -0.0001354217529296875, 0.0, -3.4570634852570947e-06, -2.0265579223632812e-06, -9.536738616588991e-07, -1.728534698486328e-05, -3.2186455882765586e-06, -0.004299163818359375, -4.00543212890625e-05, -0.020720601081848145, 0.0, -0.0001087188720703125, -1.9073486328125e-05, -0.000392913818359375, 0.0]}, {"score": -4.98035028593187, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "Minion", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, Minion):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "Minion", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004185318946838379, 0.0, -3.814697265625e-05, 0.0, -4.915261268615723, -0.02111053466796875, -6.103515625e-05, -0.0001678466796875, -5.14984130859375e-05, 0.0, -2.622600959512056e-06, -2.0265579223632812e-06, -7.152555099310121e-07, -1.7404556274414062e-05, -2.0265558760002023e-06, -0.0023632049560546875, -3.24249267578125e-05, -0.020016908645629883, 0.0, -0.000102996826171875, -2.09808349609375e-05, -0.0004215240478515625, 0.0]}, {"score": -5.226360231749531, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 48, 117, "3", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -4.359490394592285, -1.9073486328125e-06, -6.592272984562442e-05, -3.8027756090741605e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -5.841255187988281e-06, -7.510185241699219e-05, -5.161762237548828e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -7.62939453125e-06, -7.641315460205078e-05, -3.576278118089249e-07, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.000213623046875, -9.5367431640625e-06, -0.0030423402786254883, 0.0, -2.47955322265625e-05, 0.0, -0.8362674713134766, 0.0, -9.5367431640625e-06, 0.0, -0.000156402587890625, 0.0, -7.629365427419543e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -1.9311904907226562e-05, -5.483612312673358e-06, -0.0058803558349609375, -3.24249267578125e-05, -0.01728081703186035, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0003604888916015625, 0.0]}, {"score": -6.076944857971505, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004185318946838379, 0.0, -3.814697265625e-05, 0.0, -1.50247061252594, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001544952392578125, 0.0, -6.556489552167477e-06, -2.0265579223632812e-06, -1.0728830375228426e-06, -1.9311904907226562e-05, -4.768360213347478e-06, -0.0034275054931640625, -2.86102294921875e-05, -4.549826622009277, 0.0, -0.0001220703125, -7.62939453125e-06, -0.000148773193359375, 0.0]}, {"score": -6.4463980497327995, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.802525997161865, 0.0, -2.6702880859375e-05, 0.0, -0.6052277088165283, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -5.602820692729438e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -2.110004425048828e-05, -5.006777428206988e-06, -0.0030231475830078125, -2.6702880859375e-05, -0.018320322036743164, 0.0, -0.0001068115234375, -2.47955322265625e-05, -0.0003681182861328125, 0.0]}, {"score": -6.537130624210128, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "create_weapon", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, create_weapon):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "create_weapon", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004185318946838379, 0.0, -3.814697265625e-05, 0.0, -6.4927659034729, -3.4332275390625e-05, -2.288818359375e-05, -0.000213623046875, -6.103515625e-05, 0.0, -3.933898824470816e-06, -1.9073486328125e-06, -7.152555099310121e-07, -1.7404556274414062e-05, -3.6954811548639555e-06, -0.0030059814453125, -3.62396240234375e-05, -0.019726991653442383, 0.0, -0.0001087188720703125, -1.9073486328125e-05, -0.000392913818359375, 0.0]}, {"score": -6.653525978485952, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.802525997161865, 0.0, -2.6702880859375e-05, 0.0, -0.810034990310669, -0.00012969970703125, -2.86102294921875e-05, -0.0004634857177734375, -0.0001506805419921875, 0.0, -3.2186455882765586e-06, -2.0265579223632812e-06, -1.0728830375228426e-06, -1.919269561767578e-05, -2.861018856492592e-06, -0.0023345947265625, -3.4332275390625e-05, -0.0207521915435791, 0.0, -0.000102996826171875, -2.288818359375e-05, -0.0003986358642578125, 0.0]}, {"score": -6.960030943310578, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, _):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "_", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004185318946838379, 0.0, -3.814697265625e-05, 0.0, -6.915692329406738, -0.0004367828369140625, -1.52587890625e-05, -0.0003757476806640625, -0.0001697540283203125, 0.0, -4.172316494077677e-06, -2.0265579223632812e-06, -8.344646857949556e-07, -1.919269561767578e-05, -3.099436753473128e-06, -0.0021877288818359375, -3.4332275390625e-05, -0.019861340522766113, 0.0, -0.000102996826171875, -1.9073486328125e-05, -0.0003910064697265625, 0.0]}, {"score": -6.960918575684666, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, spell_targetable=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004185318946838379, 0.0, -3.814697265625e-05, 0.0, -0.27158987522125244, -0.000110626220703125, -2.288818359375e-05, -0.000461578369140625, -0.00011444091796875, 0.0, -3.3378546504536644e-06, -2.0265579223632812e-06, -8.344646857949556e-07, -1.7404556274414062e-05, -2.7418097943154862e-06, -0.0023365020751953125, -3.4332275390625e-05, -6.15106201171875, -3.933906555175781e-06, -0.00323486328125, -1.71661376953125e-05, -0.5111887454986572, 0.0]}, {"score": -7.163465172211765, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 173, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>", 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True, spell_targetable=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004185318946838379, 0.0, -3.814697265625e-05, 0.0, -0.27158987522125244, -0.000110626220703125, -2.288818359375e-05, -0.000461578369140625, -0.00011444091796875, 0.0, -3.3378546504536644e-06, -2.0265579223632812e-06, -8.344646857949556e-07, -1.7404556274414062e-05, -2.7418097943154862e-06, -6.086773872375488, -2.86102294921875e-05, -0.3627164363861084, 0.0, -7.05718994140625e-05, -8.20159912109375e-05, -8.58306884765625e-05, 0.0, -9.5367431640625e-06, -0.4195585250854492, 0.0, -0.0005321502685546875, -9.5367431640625e-06, -0.0005570650100708008, 0.0]}, {"score": -7.266115456942423, "choice_history": [59, 124, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "The", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, Theplayer):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "Theplayer", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "FlyingMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -0.0023088008165359497, -0.00029297350556589663, -1.3708998267247807e-05, 0.0, 0.0, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.531158240046352e-05, -2.5033950805664062e-05, -3.576272320060525e-06, -7.62939453125e-05, -0.013048171997070312, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -9.655950634623878e-06, -2.5272369384765625e-05, 0.0, -4.9591064453125e-05, -7.05718994140625e-05, -7.62939453125e-06, -7.152557373046875e-05, -4.768370445162873e-07, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004185318946838379, 0.0, -3.814697265625e-05, 0.0, -7.169495582580566, -0.05441856384277344, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00012969970703125, 0.0, -7.033323527139146e-06, -1.9073486328125e-06, -1.1920922133867862e-06, -1.919269561767578e-05, -6.437280717364047e-06, -0.002964019775390625, -3.24249267578125e-05, -0.01781296730041504, 0.0, -0.00011444091796875, -2.288818359375e-05, -0.0003414154052734375, 0.0]}, {"score": -7.297481058130408, "choice_history": [59, 124, "Force", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flying", " ", "Machine", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class ForceMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "ForceMachine", "hole3": "create_minion"}, "score_history": [-3.24249267578125e-05, -4.38690185546875e-05, -6.827041149139404, -0.161810040473938, -6.484871846623719e-05, -2.3841312213335186e-07, 0.0, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.000194549560546875, 0.0, -1.9073486328125e-06, -4.04112070100382e-05, -2.3245811462402344e-05, -1.7881377516459906e-06, -5.340576171875e-05, -0.0074748992919921875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -1.01327859738376e-05, -2.5391578674316406e-05, 0.0, -4.57763671875e-05, -8.0108642578125e-05, -5.7220458984375e-06, -6.759166717529297e-05, -4.768370445162873e-07, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.004183411598205566, 0.0, -4.00543212890625e-05, 0.0, -0.27225351333618164, -0.0001125335693359375, -2.288818359375e-05, -0.000461578369140625, -0.00011444091796875, 0.0, -3.3378546504536644e-06, -2.0265579223632812e-06, -8.344646857949556e-07, -1.7404556274414062e-05, -2.7418097943154862e-06, -0.00232696533203125, -3.4332275390625e-05, -0.02009892463684082, 0.0, -0.0001010894775390625, -2.09808349609375e-05, -0.00038909912109375, 0.0]}], "gold_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n"}
{"beams": [{"score": -1.3126900734209386, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -0.5343828201293945, 0.0, -2.47955322265625e-05, -0.02720928192138672, -0.0001506805419921875, -0.0002741813659667969, -4.768370445162873e-07, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -9.918212890625e-05, 0.0, -0.00431513786315918, 0.0, -8.20159912109375e-05, -0.009769201278686523, 0.0, -0.001651763916015625, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -2.8729431505780667e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.04038810729980469, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.00244259275496006, -0.001015782356262207, -3.62396240234375e-05, -0.0018863677978515625, -0.0005807876586914062, -1.9073486328125e-06, -1.9073486328125e-06, -0.010680148378014565, -0.0016242259880527854, -0.0002351997682126239, -5.7220458984375e-06, -0.0088348388671875, -8.0108642578125e-05, -0.3133840560913086, -1.9073486328125e-06, -1.9073486328125e-06, -0.04553225636482239, -1.454353241570061e-05, -4.1723224057932384e-06, -4.00543212890625e-05, -0.2223033905029297, -0.0003185272216796875, -1.71661376953125e-05, -1.9073486328125e-06, -0.022426126524806023, -0.0021971436217427254, -6.055753692635335e-05, -3.814697265625e-06, -0.00286102294921875, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.009553909301757812, -1.1920928244535389e-07, -0.008968353271484375, 0.0, -0.001689910888671875, -1.9073486328125e-06, -0.026121973991394043, 0.0, -1.71661376953125e-05, -0.008831024169921875, -1.52587890625e-05, -1.1918018572032452e-07, -5.7220458984375e-06, -0.00026535766664892435, -1.1920928244535389e-07, -7.081031799316406e-05, 0.0]}, {"score": -2.351984780457272, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -1.5589179992675781, 0.0, -3.62396240234375e-05, -0.020470619201660156, -0.000110626220703125, -0.0003199577331542969, -4.768370445162873e-07, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0001087188720703125, 0.0, -0.0028982162475585938, 0.0, -0.00014495849609375, -0.025540709495544434, 0.0, -0.000823974609375, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -2.8252587071619928e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.043137550354003906, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.002555118640884757, -0.0009975432185456157, -3.814697265625e-05, -0.0019235610961914062, -0.0005893707275390625, -1.9073486328125e-06, -1.9073486328125e-06, -0.010511939413845539, -0.0016773933311924338, -0.00023496136418543756, -5.7220458984375e-06, -0.008643150329589844, -8.0108642578125e-05, -0.3132152557373047, -1.9073486328125e-06, -1.9073486328125e-06, -0.043316155672073364, -1.454353241570061e-05, -4.053113570989808e-06, -4.1961669921875e-05, -0.230560302734375, -0.0003147125244140625, -1.71661376953125e-05, -1.9073486328125e-06, -0.021857498213648796, -0.0021952360402792692, -5.9961512306472287e-05, -3.814697265625e-06, -0.0028324127197265625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.009550094604492188, -1.1920928244535389e-07, -0.008966445922851562, 0.0, -0.0016918182373046875, -1.9073486328125e-06, -0.02613818645477295, 0.0, -1.71661376953125e-05, -0.008840560913085938, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -0.0002653576375450939, -1.1920928244535389e-07, -7.081031799316406e-05, 0.0]}, {"score": -2.8225076182538373, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "your", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(yourPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "yourPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -0.5343828201293945, 0.0, -2.47955322265625e-05, -0.02720928192138672, -0.0001506805419921875, -0.0002741813659667969, -4.768370445162873e-07, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -9.918212890625e-05, 0.0, -0.00431513786315918, 0.0, -8.20159912109375e-05, -0.009769201278686523, 0.0, -0.001651763916015625, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -2.8729431505780667e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.04038810729980469, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.00244259275496006, -0.001015782356262207, -3.62396240234375e-05, -0.0018863677978515625, -0.0005807876586914062, -1.9073486328125e-06, -1.9073486328125e-06, -0.010680148378014565, -0.0016242259880527854, -0.0002351997682126239, -5.7220458984375e-06, -0.0088348388671875, -8.0108642578125e-05, -0.3133840560913086, -1.9073486328125e-06, -1.9073486328125e-06, -0.04553225636482239, -1.454353241570061e-05, -4.1723224057932384e-06, -4.00543212890625e-05, -1.6472597122192383, 0.0, -0.01338772289454937, -0.15377238392829895, 0.0, -5.7220458984375e-06, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, -9.34600830078125e-05, -1.1444091796875e-05, -1.7820857465267181e-06, -7.62939453125e-06, -0.0008672371041029692, -2.3841855067985307e-07, -9.584426879882812e-05, 0.0]}, {"score": -3.2585623724289263, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -2.46060848236084, -5.9604644775390625e-06, -4.76837158203125e-05, -0.02829456329345703, -0.0001430511474609375, -0.00046181678771972656, -4.768370445162873e-07, -2.47955322265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0001201629638671875, 0.0, -0.0028200149536132812, 0.0, -0.000152587890625, -0.02210712432861328, 0.0, -0.000820159912109375, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.0517561754095368e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.04471778869628906, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0025472547858953476, -0.0009953974513337016, -3.814697265625e-05, -0.0019121170043945312, -0.0005893707275390625, -1.9073486328125e-06, -1.9073486328125e-06, -0.010620182380080223, -0.0016552204033359885, -0.0002293585130246356, -5.7220458984375e-06, -0.008649826049804688, -8.0108642578125e-05, -0.3110332489013672, -1.9073486328125e-06, -1.9073486328125e-06, -0.04316487908363342, -1.454353241570061e-05, -4.053113570989808e-06, -4.1961669921875e-05, -0.231597900390625, -0.00031280517578125, -1.71661376953125e-05, -1.9073486328125e-06, -0.021865246817469597, -0.0021951168309897184, -5.9961512306472287e-05, -3.814697265625e-06, -0.0028295516967773438, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.009552001953125, -1.1920928244535389e-07, -0.008966445922851562, 0.0, -0.0016918182373046875, -1.9073486328125e-06, -0.026139140129089355, 0.0, -1.71661376953125e-05, -0.008852005004882812, -1.52587890625e-05, -1.1918018572032452e-07, -5.7220458984375e-06, -0.0002654768468346447, -1.1920928244535389e-07, -7.081031799316406e-05, 0.0]}, {"score": -3.5608087059849396, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -2.7942981719970703, 0.0, -2.288818359375e-05, -0.010067939758300781, -0.0001201629638671875, -0.0002924203872680664, -4.768370445162873e-07, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -8.58306884765625e-05, 0.0, -0.0038689374923706055, 0.0, -8.392333984375e-05, -0.011075615882873535, 0.0, -0.0017681121826171875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.8729431505780667e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.039722442626953125, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.002449024934321642, -0.0010216236114501953, -3.62396240234375e-05, -0.0019063949584960938, -0.0005807876586914062, -1.9073486328125e-06, -1.9073486328125e-06, -0.010616370476782322, -0.0016587965656071901, -0.0002427099534543231, -5.7220458984375e-06, -0.008818626403808594, -8.0108642578125e-05, -0.3160057067871094, -1.9073486328125e-06, -1.9073486328125e-06, -0.04455748200416565, -1.454353241570061e-05, -4.1723224057932384e-06, -4.1961669921875e-05, -0.22594833374023438, -0.000316619873046875, -1.71661376953125e-05, -1.9073486328125e-06, -0.022195814177393913, -0.002195832086727023, -6.0438331274781376e-05, -3.814697265625e-06, -0.0028533935546875, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.009555816650390625, -1.1920928244535389e-07, -0.008963584899902344, 0.0, -0.001689910888671875, -1.9073486328125e-06, -0.026129603385925293, 0.0, -1.71661376953125e-05, -0.008832931518554688, -1.52587890625e-05, -1.1918018572032452e-07, -5.7220458984375e-06, -0.0002654768468346447, -1.1920928244535389e-07, -7.081031799316406e-05, 0.0]}, {"score": -3.81697822912696, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "your", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(yourPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "yourPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -1.5589179992675781, 0.0, -3.62396240234375e-05, -0.020470619201660156, -0.000110626220703125, -0.0003199577331542969, -4.768370445162873e-07, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0001087188720703125, 0.0, -0.0028982162475585938, 0.0, -0.00014495849609375, -0.025540709495544434, 0.0, -0.000823974609375, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -2.8252587071619928e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.043137550354003906, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.002555118640884757, -0.0009975432185456157, -3.814697265625e-05, -0.0019235610961914062, -0.0005893707275390625, -1.9073486328125e-06, -1.9073486328125e-06, -0.010511939413845539, -0.0016773933311924338, -0.00023496136418543756, -5.7220458984375e-06, -0.008643150329589844, -8.0108642578125e-05, -0.3132152557373047, -1.9073486328125e-06, -1.9073486328125e-06, -0.043316155672073364, -1.454353241570061e-05, -4.053113570989808e-06, -4.1961669921875e-05, -1.6114006042480469, 0.0, -0.01329947542399168, -0.1525709331035614, 0.0, -5.7220458984375e-06, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, -9.34600830078125e-05, -1.1444091796875e-05, -1.7820857465267181e-06, -7.62939453125e-06, -0.0008671178948134184, -2.3841855067985307e-07, -9.584426879882812e-05, 0.0]}, {"score": -4.3374387385009925, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -0.5343828201293945, 0.0, -2.47955322265625e-05, -3.6876707077026367, -1.71661376953125e-05, -0.0025502440985292196, -5.960462772236497e-07, -9.918212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -0.003912210464477539, 0.0, -0.00015854835510253906, -1.9073486328125e-06, -0.09092385321855545, 0.0, -0.011693954467773438, -0.0004787445068359375, -0.003246307373046875, -1.1920565157197416e-07, -7.62939453125e-06, -0.00012004374002572149, -9.536738616588991e-07, -2.86102294921875e-05, 0.0]}, {"score": -4.341223886607182, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -3.559791088104248, -3.576277322281385e-06, -2.6702880859375e-05, -0.008627891540527344, -9.34600830078125e-05, -0.0003895759582519531, -3.576278118089249e-07, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.0027610063552856445, 0.0, -0.00016021728515625, -0.02589118480682373, 0.0, -0.0008678436279296875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.1232812034431845e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.04569244384765625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00256466306746006, -0.0009899138240143657, -3.814697265625e-05, -0.0019426345825195312, -0.0005884170532226562, -1.9073486328125e-06, -1.9073486328125e-06, -0.010691232047975063, -0.0016614192863926291, -0.00023305401555262506, -5.7220458984375e-06, -0.008655548095703125, -8.0108642578125e-05, -0.3085336685180664, -1.9073486328125e-06, -1.9073486328125e-06, -0.04333236813545227, -1.454353241570061e-05, -4.053113570989808e-06, -4.00543212890625e-05, -0.23226261138916016, -0.0003147125244140625, -1.71661376953125e-05, -1.9073486328125e-06, -0.021975038573145866, -0.0021940439473837614, -5.9961512306472287e-05, -3.814697265625e-06, -0.0028276443481445312, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.009552001953125, -1.1920928244535389e-07, -0.008970260620117188, 0.0, -0.0016918182373046875, -1.9073486328125e-06, -0.026139140129089355, 0.0, -1.71661376953125e-05, -0.008852005004882812, -1.52587890625e-05, -1.1918018572032452e-07, -5.7220458984375e-06, -0.0002654768468346447, -1.1920928244535389e-07, -7.081031799316406e-05, 0.0]}, {"score": -4.493934062474594, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 90, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(IsType(\n            MINION_TYPE.MECH), value=0)))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -0.5343828201293945, 0.0, -2.47955322265625e-05, -0.02720928192138672, -0.0001506805419921875, -0.0002741813659667969, -4.768370445162873e-07, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -9.918212890625e-05, 0.0, -0.00431513786315918, 0.0, -8.20159912109375e-05, -0.009769201278686523, 0.0, -0.001651763916015625, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -2.8729431505780667e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.04038810729980469, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.00244259275496006, -0.001015782356262207, -3.62396240234375e-05, -0.0018863677978515625, -0.0005807876586914062, -1.9073486328125e-06, -1.9073486328125e-06, -0.010680148378014565, -0.0016242259880527854, -0.0002351997682126239, -5.7220458984375e-06, -0.0088348388671875, -8.0108642578125e-05, -1.5947036743164062, -0.0011281967163085938, 0.0, -0.1470097303390503, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -0.2627897262573242, -0.00260162353515625, 0.0, 0.0, -0.010904192924499512, -0.001288771629333496, -1.4185851796355564e-05, -1.9073486328125e-06, -0.0004978179931640625, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -0.008388519287109375, -1.1920928244535389e-07, -0.009237289428710938, 0.0, -0.08353137969970703, -2.6702880859375e-05, -0.9029378890991211, -3.814697265625e-06, -0.561091423034668, -0.2573404312133789, -0.0001255257666343823, 0.0, -0.0005612373352050781, 0.0, -0.0007103672251105309, 0.0, -1.33514404296875e-05, -0.0008411407470703125, -9.5367431640625e-06, -2.383312676101923e-07, -3.814697265625e-06, -0.00011300857295282185, -1.1920928244535389e-07, -5.1856040954589844e-05, 0.0]}, {"score": -4.616544155244327, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 90, 24, 112, "Minion", "Selector", "<EOS>", 164, 47, 114, "Null", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(Null, picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -0.5343828201293945, 0.0, -2.47955322265625e-05, -0.02720928192138672, -0.0001506805419921875, -0.0002741813659667969, -4.768370445162873e-07, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -9.918212890625e-05, 0.0, -0.00431513786315918, 0.0, -8.20159912109375e-05, -0.009769201278686523, 0.0, -0.001651763916015625, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -2.8729431505780667e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.04038810729980469, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.00244259275496006, -0.001015782356262207, -3.62396240234375e-05, -0.0018863677978515625, -0.0005807876586914062, -1.9073486328125e-06, -1.9073486328125e-06, -0.010680148378014565, -0.0016242259880527854, -0.0002351997682126239, -5.7220458984375e-06, -0.0088348388671875, -8.0108642578125e-05, -1.5947036743164062, -0.0011281967163085938, 0.0, -0.1470097303390503, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.4783992767333984, -0.0004673004150390625, -0.00014257413567975163, -5.841255187988281e-06, -0.00052642822265625, 0.0, -0.5385932922363281, 0.0, -0.0005283355712890625, -3.4332275390625e-05, -0.1925269365310669, -0.001229187473654747, -1.9073486328125e-06, -6.4373016357421875e-06, 0.0, -0.0010131356539204717, 0.0, -7.62939453125e-06, -0.0119781494140625, -5.7220458984375e-06, -1.1918018572032452e-07, -4.00543212890625e-05, -0.00018322457617614418, -2.0265579223632812e-06, -2.1338462829589844e-05, 0.0]}, {"score": -4.63315424141679, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 90, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -0.5343828201293945, 0.0, -2.47955322265625e-05, -0.02720928192138672, -0.0001506805419921875, -0.0002741813659667969, -4.768370445162873e-07, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -9.918212890625e-05, 0.0, -0.00431513786315918, 0.0, -8.20159912109375e-05, -0.009769201278686523, 0.0, -0.001651763916015625, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -2.8729431505780667e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.04038810729980469, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.00244259275496006, -0.001015782356262207, -3.62396240234375e-05, -0.0018863677978515625, -0.0005807876586914062, -1.9073486328125e-06, -1.9073486328125e-06, -0.010680148378014565, -0.0016242259880527854, -0.0002351997682126239, -5.7220458984375e-06, -0.0088348388671875, -8.0108642578125e-05, -1.5947036743164062, -0.0011281967163085938, 0.0, -0.1470097303390503, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -0.2627897262573242, -0.00260162353515625, 0.0, 0.0, -0.010904192924499512, -0.001288771629333496, -1.4185851796355564e-05, -1.9073486328125e-06, -0.0004978179931640625, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -0.008388519287109375, -1.1920928244535389e-07, -0.009237289428710938, 0.0, -0.08353137969970703, -2.6702880859375e-05, -1.1928868293762207, 0.0, -0.00074005126953125, 0.0, -0.6521181464195251, -0.0022623538970947266, 0.0, -1.9550323486328125e-05, 0.0, -0.0006159509066492319, 0.0, -2.6702880859375e-05, -0.014118194580078125, -5.7220458984375e-06, -1.1918018572032452e-07, -5.14984130859375e-05, -0.0001630781771382317, -1.1920928244535389e-07, -1.5616416931152344e-05, 0.0]}, {"score": -4.645864380174743, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), CharacterSelector(players=\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -0.5343828201293945, 0.0, -2.47955322265625e-05, -0.02720928192138672, -0.0001506805419921875, -0.0002741813659667969, -4.768370445162873e-07, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -9.918212890625e-05, 0.0, -0.00431513786315918, 0.0, -8.20159912109375e-05, -0.009769201278686523, 0.0, -0.001651763916015625, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -2.8729431505780667e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.04038810729980469, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.00244259275496006, -0.001015782356262207, -3.62396240234375e-05, -0.0018863677978515625, -0.0005807876586914062, -1.9073486328125e-06, -1.9073486328125e-06, -0.010680148378014565, -0.0016242259880527854, -0.0002351997682126239, -5.7220458984375e-06, -0.0088348388671875, -8.0108642578125e-05, -3.0083322525024414, -1.9073486328125e-06, 0.0, -0.28394508361816406, -5.2809715270996094e-05, 0.0, -0.6529064178466797, -3.814697265625e-05, -0.025987625122070312, 0.0, -3.814697265625e-06, 0.0, -0.02560911700129509, -0.0004558563232421875, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.00017309188842773438, 0.0, -1.1444091796875e-05, -0.0001506805419921875, -5.7220458984375e-06, -2.383312676101923e-07, -1.52587890625e-05, -0.00016021699411794543, -2.0265579223632812e-06, -3.2901763916015625e-05, 0.0]}, {"score": -4.718301831936458, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "your", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(yourPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "yourPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -2.46060848236084, -5.9604644775390625e-06, -4.76837158203125e-05, -0.02829456329345703, -0.0001430511474609375, -0.00046181678771972656, -4.768370445162873e-07, -2.47955322265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0001201629638671875, 0.0, -0.0028200149536132812, 0.0, -0.000152587890625, -0.02210712432861328, 0.0, -0.000820159912109375, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.0517561754095368e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.04471778869628906, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0025472547858953476, -0.0009953974513337016, -3.814697265625e-05, -0.0019121170043945312, -0.0005893707275390625, -1.9073486328125e-06, -1.9073486328125e-06, -0.010620182380080223, -0.0016552204033359885, -0.0002293585130246356, -5.7220458984375e-06, -0.008649826049804688, -8.0108642578125e-05, -0.3110332489013672, -1.9073486328125e-06, -1.9073486328125e-06, -0.04316487908363342, -1.454353241570061e-05, -4.053113570989808e-06, -4.1961669921875e-05, -1.6071996688842773, 0.0, -0.013308308087289333, -0.1525663137435913, 0.0, -5.7220458984375e-06, 0.0, -4.756450653076172e-05, 0.0, -5.7220458984375e-06, -9.34600830078125e-05, -1.1444091796875e-05, -1.7820857465267181e-06, -7.62939453125e-06, -0.0008668795344419777, -2.3841855067985307e-07, -9.584426879882812e-05, 0.0]}, {"score": -4.724248201227468, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 90, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "your", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=yourPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "yourPlayer"}}], "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -0.5343828201293945, 0.0, -2.47955322265625e-05, -0.02720928192138672, -0.0001506805419921875, -0.0002741813659667969, -4.768370445162873e-07, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -9.918212890625e-05, 0.0, -0.00431513786315918, 0.0, -8.20159912109375e-05, -0.009769201278686523, 0.0, -0.001651763916015625, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -2.8729431505780667e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.04038810729980469, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.00244259275496006, -0.001015782356262207, -3.62396240234375e-05, -0.0018863677978515625, -0.0005807876586914062, -1.9073486328125e-06, -1.9073486328125e-06, -0.010680148378014565, -0.0016242259880527854, -0.0002351997682126239, -5.7220458984375e-06, -0.0088348388671875, -8.0108642578125e-05, -1.5947036743164062, -0.0011281967163085938, 0.0, -0.1470097303390503, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -0.2627897262573242, -0.00260162353515625, 0.0, 0.0, -0.010904192924499512, -0.001288771629333496, -1.4185851796355564e-05, -1.9073486328125e-06, -0.0004978179931640625, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -0.008388519287109375, -1.1920928244535389e-07, -0.009237289428710938, 0.0, -0.08353137969970703, -2.6702880859375e-05, -1.1928868293762207, 0.0, -0.00074005126953125, 0.0, -0.7390264272689819, -0.019520998001098633, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001538989454274997, 0.0, -9.5367431640625e-06, -0.0012493133544921875, -7.62939453125e-06, -1.1915108188986778e-07, -5.91278076171875e-05, -0.00042128466884605587, -1.1920928244535389e-07, -1.7762184143066406e-05, 0.0]}, {"score": -5.658672242025119, "choice_history": [59, 124, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Goblin", " ", "Auto-Barber", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "GoblinAuto-Barber", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0003528594970703125, -0.0005146132898516953, -0.0004366874636616558, -7.6293927122605965e-06, -2.384149411227554e-07, -3.814697265625e-06, -1.5497195136049413e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -0.00013279033009894192, -7.069110870361328e-05, -0.00025567124248482287, -5.352497100830078e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.0265579223632812e-06, -2.3841855067985307e-07, -1.5589179992675781, 0.0, -3.62396240234375e-05, -3.9786863327026367, -2.09808349609375e-05, -0.002612113719806075, -5.960462772236497e-07, -0.0001544952392578125, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.002497076988220215, 0.0, -0.00021028518676757812, -1.9073486328125e-06, -0.09824401140213013, 0.0, -0.011016845703125, -0.0005035400390625, -0.0034770965576171875, 0.0, -7.62939453125e-06, -0.0001275539252674207, -9.536738616588991e-07, -2.86102294921875e-05, 0.0]}], "gold_code": "class GoblinAutoBarber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(IncreaseWeaponAttack(1), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}
{"beams": [{"score": -1.9208854303657716, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeHealth(1)), MinionSelector(picker=RandomPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnEnded"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -0.25597333908081055, -4.768370445162873e-07, -9.5367431640625e-06, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -9.906289051286876e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.05058181285858154, -0.00029730796813964844, -3.814697265625e-06, -0.00144195556640625, -0.001209259033203125, -4.9591064453125e-05, -3.814697265625e-06, -0.007457533851265907, -0.3907679319381714, -3.3378546504536644e-06, -5.7220458984375e-06, -0.6585416793823242, -0.0010967254638671875, -0.03754901885986328, -3.814697265625e-06, 0.0, -0.004711546003818512, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002422332763671875, -9.5367431640625e-06, -0.08728218078613281, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.040173888206481934, -0.00035068398574367166, -1.9073486328125e-06]}, {"score": -2.583284511920894, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeAttack(2)), MinionSelector(IsType(MINION_TYPE.MECH))))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnEnded"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -0.25597333908081055, -4.768370445162873e-07, -9.5367431640625e-06, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -9.906289051286876e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.05058181285858154, -0.00029730796813964844, -3.814697265625e-06, -0.00144195556640625, -0.001209259033203125, -4.9591064453125e-05, -3.814697265625e-06, -0.007457533851265907, -1.133585810661316, 0.0, -1.9073486328125e-06, -0.013072967529296875, -0.4571399688720703, -0.13053226470947266, -1.71661376953125e-05, -1.9073486328125e-06, -0.00012543797492980957, -7.62939453125e-06, -1.1444091796875e-05, -0.1094522476196289, -3.814697265625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0020188195630908012, -0.0004115104675292969, -0.00010311147343600169, -0.030513763427734375, -3.814697265625e-06, 0.0, -2.288818359375e-05, 0.0, -0.0003612041473388672, 0.0, -0.005715370178222656, 0.0]}, {"score": -2.6127215366001764, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeHealth(2)), MinionSelector(IsType(MINION_TYPE.MECH))))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnEnded"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -0.25597333908081055, -4.768370445162873e-07, -9.5367431640625e-06, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -9.906289051286876e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.05058181285858154, -0.00029730796813964844, -3.814697265625e-06, -0.00144195556640625, -0.001209259033203125, -4.9591064453125e-05, -3.814697265625e-06, -0.007457533851265907, -0.3907679319381714, -3.3378546504536644e-06, -5.7220458984375e-06, -0.734440803527832, -0.2150707244873047, -0.32627296447753906, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001468658447265625, -7.748603820800781e-06, -1.9073486328125e-05, -0.19987201690673828, -4.38690185546875e-05, -2.288818359375e-05, -1.52587890625e-05, -3.814697265625e-06, -0.002047063084319234, -0.0004194974899291992, -0.00011824949615402147, -0.03693580627441406, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0003612041473388672, 0.0, -0.005991935729980469, 0.0]}, {"score": -2.849896529353529, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeAttack(2)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnEnded"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -0.25597333908081055, -4.768370445162873e-07, -9.5367431640625e-06, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -9.906289051286876e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.05058181285858154, -0.00029730796813964844, -3.814697265625e-06, -0.00144195556640625, -0.001209259033203125, -4.9591064453125e-05, -3.814697265625e-06, -0.007457533851265907, -1.133585810661316, 0.0, -1.9073486328125e-06, -0.013072967529296875, -1.0027847290039062, -9.5367431640625e-06, -7.677078247070312e-05, -0.00025010108947753906, 0.0]}, {"score": -3.3907591215932342, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Give(\n            ChangeHealth(1)), MinionSelector(picker=RandomPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -1.521864414215088, 0.0, -7.2479248046875e-05, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -3.981588815804571e-05, -4.57763671875e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0005168914794921875, -1.52587890625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.08336520195007324, -0.0005298852920532227, -1.9073486328125e-06, -0.0039501190185546875, -0.002094268798828125, -4.1961669921875e-05, -3.814697265625e-06, -0.008731990121304989, -0.36194634437561035, -2.50339189733495e-06, -3.814697265625e-06, -0.7947139739990234, -0.0012683868408203125, -0.027551651000976562, -3.814697265625e-06, 0.0, -0.006580822169780731, -5.7220458984375e-06, -1.9073486328125e-05, -0.0006847381591796875, -1.1444091796875e-05, -0.13895034790039062, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0544741153717041, -0.00047784048365429044, -1.9073486328125e-06]}, {"score": -3.4333048669147246, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeHealth(1)), MinionSelector(picker=RandomPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnEnded"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -1.8006868362426758, -5.7220458984375e-05, -0.0001201629638671875, 0.0, -1.33514404296875e-05, -0.00020110607147216797, -5.7220458984375e-05, -0.0004138946533203125, -1.9073486328125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004154324531555176, 0.0, -0.0002689361572265625, 0.0, -0.0007077455520629883, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.461165321525186e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00015532970428466797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07809829711914062, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.004222869873046875, 0.0, -0.001225590123794973, -0.2548213005065918, -4.768370445162873e-07, -9.5367431640625e-06, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -9.906289051286876e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.05056273937225342, -0.00029730796813964844, -3.814697265625e-06, -0.0014400482177734375, -0.001209259033203125, -4.9591064453125e-05, -3.814697265625e-06, -0.007458953652530909, -0.39080703258514404, -3.3378546504536644e-06, -5.7220458984375e-06, -0.6586217880249023, -0.001094818115234375, -0.037570953369140625, -3.814697265625e-06, 0.0, -0.004707954823970795, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002422332763671875, -9.5367431640625e-06, -0.08708381652832031, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.040473341941833496, -0.000350445625372231, -1.9073486328125e-06]}, {"score": -3.4669563350695825, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeHealth(2)), MinionSelector(picker=RandomPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnEnded"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -0.25597333908081055, -4.768370445162873e-07, -9.5367431640625e-06, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -9.906289051286876e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.05058181285858154, -0.00029730796813964844, -3.814697265625e-06, -0.00144195556640625, -0.001209259033203125, -4.9591064453125e-05, -3.814697265625e-06, -0.007457533851265907, -0.3907679319381714, -3.3378546504536644e-06, -5.7220458984375e-06, -0.734440803527832, -0.2150707244873047, -1.2913236618041992, -1.9073486328125e-06, 0.0, -0.04468654841184616, -1.33514404296875e-05, 0.0, -0.0004863739013671875, -1.1444091796875e-05, -0.035205841064453125, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.054540276527404785, -0.0002550942008383572, -1.9073486328125e-06]}, {"score": -3.468621948392567, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeHealth(2)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnEnded"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -0.25597333908081055, -4.768370445162873e-07, -9.5367431640625e-06, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -9.906289051286876e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.05058181285858154, -0.00029730796813964844, -3.814697265625e-06, -0.00144195556640625, -0.001209259033203125, -4.9591064453125e-05, -3.814697265625e-06, -0.007457533851265907, -0.3907679319381714, -3.3378546504536644e-06, -5.7220458984375e-06, -0.734440803527832, -1.6428747177124023, -9.5367431640625e-06, -0.00013780593872070312, -0.00026738643646240234, 0.0]}, {"score": -3.9228924202314346, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Give(\n            ChangeAttack(2)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -1.521864414215088, 0.0, -7.2479248046875e-05, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -3.981588815804571e-05, -4.57763671875e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0005168914794921875, -1.52587890625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.08336520195007324, -0.0005298852920532227, -1.9073486328125e-06, -0.0039501190185546875, -0.002094268798828125, -4.1961669921875e-05, -3.814697265625e-06, -0.008731990121304989, -1.1966898441314697, 0.0, -1.9073486328125e-06, -0.010152816772460938, -0.7116546630859375, -9.5367431640625e-06, -7.092952728271484e-05, -0.00026154518127441406, 0.0]}, {"score": -3.9955558989270656, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Give(\n            ChangeHealth(2)), MinionSelector(IsType(MINION_TYPE.MECH))))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -1.521864414215088, 0.0, -7.2479248046875e-05, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -3.981588815804571e-05, -4.57763671875e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0005168914794921875, -1.52587890625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.08336520195007324, -0.0005298852920532227, -1.9073486328125e-06, -0.0039501190185546875, -0.002094268798828125, -4.1961669921875e-05, -3.814697265625e-06, -0.008731990121304989, -0.36194634437561035, -2.50339189733495e-06, -3.814697265625e-06, -0.6049356460571289, -0.3516674041748047, -0.4778146743774414, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002987980842590332, -1.1444091796875e-05, -0.0001659393310546875, -0.18013763427734375, -0.0004329681396484375, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000519626191817224, -0.00030672550201416016, -4.5060907723382115e-05, -0.00873565673828125, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -0.00014507770538330078, -1.9073486328125e-06, -0.0042629241943359375, 0.0]}, {"score": -4.0947871390732615, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeAttack(2)), MinionSelector(IsType(MINION_TYPE.MECH))))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnEnded"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -1.8006868362426758, -5.7220458984375e-05, -0.0001201629638671875, 0.0, -1.33514404296875e-05, -0.00020110607147216797, -5.7220458984375e-05, -0.0004138946533203125, -1.9073486328125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004154324531555176, 0.0, -0.0002689361572265625, 0.0, -0.0007077455520629883, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.461165321525186e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00015532970428466797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07809829711914062, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.004222869873046875, 0.0, -0.001225590123794973, -0.2548213005065918, -4.768370445162873e-07, -9.5367431640625e-06, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -9.906289051286876e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.05056273937225342, -0.00029730796813964844, -3.814697265625e-06, -0.0014400482177734375, -0.001209259033203125, -4.9591064453125e-05, -3.814697265625e-06, -0.007458953652530909, -1.1335018873214722, 0.0, -1.9073486328125e-06, -0.013071060180664062, -0.45656394958496094, -0.13051223754882812, -1.71661376953125e-05, -1.9073486328125e-06, -0.00012533366680145264, -7.62939453125e-06, -1.1444091796875e-05, -0.10943603515625, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0020191767252981663, -0.0004115104675292969, -0.00010346907220082358, -0.030521392822265625, -3.814697265625e-06, 0.0, -2.288818359375e-05, 0.0, -0.0003612041473388672, 0.0, -0.005722999572753906, 0.0]}, {"score": -4.124496989338397, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeHealth(2)), MinionSelector(IsType(MINION_TYPE.MECH))))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnEnded"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -1.8006868362426758, -5.7220458984375e-05, -0.0001201629638671875, 0.0, -1.33514404296875e-05, -0.00020110607147216797, -5.7220458984375e-05, -0.0004138946533203125, -1.9073486328125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004154324531555176, 0.0, -0.0002689361572265625, 0.0, -0.0007077455520629883, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.461165321525186e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00015532970428466797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07809829711914062, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.004222869873046875, 0.0, -0.001225590123794973, -0.2548213005065918, -4.768370445162873e-07, -9.5367431640625e-06, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -9.906289051286876e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.05056273937225342, -0.00029730796813964844, -3.814697265625e-06, -0.0014400482177734375, -0.001209259033203125, -4.9591064453125e-05, -3.814697265625e-06, -0.007458953652530909, -0.39080703258514404, -3.3378546504536644e-06, -5.7220458984375e-06, -0.7343530654907227, -0.21474456787109375, -0.32622623443603516, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014695525169372559, -7.748603820800781e-06, -1.9073486328125e-05, -0.19986820220947266, -4.38690185546875e-05, -2.288818359375e-05, -1.52587890625e-05, -3.814697265625e-06, -0.002047301270067692, -0.0004194974899291992, -0.00011860708764288574, -0.0369415283203125, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0003612041473388672, 0.0, -0.006003379821777344, 0.0]}, {"score": -4.187508194382914, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Give(\n            ChangeHealth(2)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -1.521864414215088, 0.0, -7.2479248046875e-05, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -3.981588815804571e-05, -4.57763671875e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0005168914794921875, -1.52587890625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.08336520195007324, -0.0005298852920532227, -1.9073486328125e-06, -0.0039501190185546875, -0.002094268798828125, -4.1961669921875e-05, -3.814697265625e-06, -0.008731990121304989, -0.36194634437561035, -2.50339189733495e-06, -3.814697265625e-06, -0.6049356460571289, -1.2161579132080078, -9.5367431640625e-06, -0.00012624263763427734, -0.00027501583099365234, 0.0]}, {"score": -4.212239346302155, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Give(\n            ChangeAttack(2)), MinionSelector(IsType(MINION_TYPE.MECH))))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -1.521864414215088, 0.0, -7.2479248046875e-05, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -3.981588815804571e-05, -4.57763671875e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0005168914794921875, -1.52587890625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.08336520195007324, -0.0005298852920532227, -1.9073486328125e-06, -0.0039501190185546875, -0.002094268798828125, -4.1961669921875e-05, -3.814697265625e-06, -0.008731990121304989, -1.1966898441314697, 0.0, -1.9073486328125e-06, -0.010152816772460938, -0.6751136779785156, -0.2233600616455078, -1.9073486328125e-05, -1.9073486328125e-06, -0.00035452842712402344, -1.1444091796875e-05, -0.00011444091796875, -0.090484619140625, -0.000499725341796875, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000584476045332849, -0.0003008842468261719, -4.446487218956463e-05, -0.0060577392578125, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.00014317035675048828, -1.9073486328125e-06, -0.0041942596435546875, 0.0]}, {"score": -4.633867954255649, "choice_history": [59, 124, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Iron", " ", "Sensei", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 47, 113, "True", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeHealth(2)), MinionSelector(IsType(MINION_TYPE.MECH), True)))]\n            )\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnEnded"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "IronSensei", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001964569091796875, -0.0004990047891624272, -6.341733387671411e-05, -2.694129761948716e-05, -1.1920883480343036e-07, -7.748603820800781e-06, -5.161762237548828e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.001705169677734375, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0012291265884414315, -4.220008850097656e-05, -0.00015400654228869826, -0.0003319978713989258, -0.000148773193359375, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -2.6941299438476562e-05, 0.0, -0.28713512420654297, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -7.87973403930664e-05, -4.9591064453125e-05, -0.0003509521484375, -1.71661376953125e-05, -0.00011086463928222656, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.004125714302062988, 0.0, -0.000270843505859375, 0.0, -0.0006753206253051758, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -0.000240325927734375, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -7.033334895822918e-06, -6.175073212943971e-05, -1.3947414117865264e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.00014770030975341797, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.07867050170898438, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.682209014892578e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0042476654052734375, 0.0, -0.0012236827751621604, -0.25597333908081055, -4.768370445162873e-07, -9.5367431640625e-06, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -9.906289051286876e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.05058181285858154, -0.00029730796813964844, -3.814697265625e-06, -0.00144195556640625, -0.001209259033203125, -4.9591064453125e-05, -3.814697265625e-06, -0.007457533851265907, -0.3907679319381714, -3.3378546504536644e-06, -5.7220458984375e-06, -0.734440803527832, -0.2150707244873047, -0.32627296447753906, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001468658447265625, -7.748603820800781e-06, -1.9073486328125e-05, -1.7150506973266602, -0.000225067138671875, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.034100767225027084, -0.0031248328741639853, -5.125993993715383e-06, -9.34600830078125e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, 0.0, -0.0008205175399780273, 0.0, -0.0036029815673828125, 0.0, -0.5024986267089844, -0.0004787445068359375, -0.006940960884094238, -1.9073486328125e-06]}], "gold_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.MECH), picker=RandomPicker())))])\n"}
{"beams": [{"score": -2.751728391017309, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Minion", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), MinionSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "MinionSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.29767322540283203, -9.5367431640625e-06, -0.00042724609375, 0.0, -0.000400543212890625, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029420852661132812, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.00040268898010253906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.97350042173639e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -1.0840626955032349, 0.0, -0.000110626220703125, -2.47955322265625e-05, -0.0015869140625, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00225830078125, -7.462501525878906e-05, -0.006439208984375, -0.007818222045898438, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.0005918873939663172, -0.0007097721099853516, -3.933906555175781e-06, 0.0, -0.05210590362548828, -0.48909568786621094, 0.0, -0.06837963312864304, -0.0004634857177734375, 0.0]}, {"score": -3.755721545033225, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Minion", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), MinionSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "MinionSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.6632709503173828, 0.0, 0.0, 0.0, -1.9073486328125e-06, -0.2615633010864258, -5.7220458984375e-06, -0.0006389617919921875, 0.0, -0.0007781982421875, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029523849487304688, -5.7220458984375e-06, -0.00014495849609375, 0.0, -0.00046193599700927734, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0009975433349609375, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.83045873302035e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -1.0775281190872192, 0.0, -0.0001125335693359375, -2.47955322265625e-05, -0.0015888214111328125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0022640228271484375, -7.462501525878906e-05, -0.0065765380859375, -0.007781982421875, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.000591172487474978, -0.0007116794586181641, -3.933906555175781e-06, 0.0, -0.05238151550292969, -0.4797554016113281, 0.0, -0.06917237490415573, -0.00046539306640625, 0.0]}, {"score": -3.762768125580692, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Minion", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.DRUID, CARD_RARITY\n            .EPIC, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), MinionSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "MinionSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.4321832656860352, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.4455299377441406, -3.814697265625e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0002155303955078125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.05003070831298828, -5.7220458984375e-06, -0.0001678466796875, 0.0, -0.0005171298980712891, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0009784698486328125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.913899414939806e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -1.0863877534866333, 0.0, -0.0001087188720703125, -2.47955322265625e-05, -0.00157928466796875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00228118896484375, -7.271766662597656e-05, -0.0061206817626953125, -0.00778961181640625, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.0005904575227759778, -0.0007097721099853516, -3.933906555175781e-06, 0.0, -0.05148792266845703, -0.5094432830810547, 0.0, -0.06670700758695602, -0.0004558563232421875, 0.0]}, {"score": -3.8471237172387873, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Minion", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), MinionSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "MinionSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.3675775527954102, -3.814697265625e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.00022125244140625, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.040287017822265625, -9.5367431640625e-06, -0.0001468658447265625, 0.0, -0.00041985511779785156, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0009918212890625, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -7.199982064776123e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -1.0796862840652466, 0.0, -0.0001087188720703125, -2.47955322265625e-05, -0.0015811920166015625, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0022754669189453125, -7.271766662597656e-05, -0.00609588623046875, -0.007833480834960938, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.0005904566496610641, -0.0007078647613525391, -3.933906555175781e-06, 0.0, -0.05144214630126953, -0.5114269256591797, 0.0, -0.0665498897433281, -0.0004558563232421875, 0.0]}, {"score": -3.8579273053627503, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.PIRATE)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.29767322540283203, -9.5367431640625e-06, -0.00042724609375, 0.0, -0.000400543212890625, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029420852661132812, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.00040268898010253906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.97350042173639e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -1.0840626955032349, 0.0, -0.000110626220703125, -2.47955322265625e-05, -0.0015869140625, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00225830078125, -7.462501525878906e-05, -0.006439208984375, -0.007818222045898438, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.0005918873939663172, -0.0007097721099853516, -3.933906555175781e-06, 0.0, -0.05210590362548828, -0.9515581130981445, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0012110471725463867, -4.76837158203125e-05, -1.9073486328125e-06, -0.053844451904296875, -0.010511398315429688, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021801114082336426, -0.00011706352233886719, -2.944469088106416e-05, -0.0043277740478515625, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -6.115436553955078e-05, 0.0, -0.620590329170227, 0.0]}, {"score": -4.1251468488197816, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.MECH)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.29767322540283203, -9.5367431640625e-06, -0.00042724609375, 0.0, -0.000400543212890625, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029420852661132812, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.00040268898010253906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.97350042173639e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -1.0840626955032349, 0.0, -0.000110626220703125, -2.47955322265625e-05, -0.0015869140625, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00225830078125, -7.462501525878906e-05, -0.006439208984375, -0.007818222045898438, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.0005918873939663172, -0.0007097721099853516, -3.933906555175781e-06, 0.0, -0.05210590362548828, -0.9515581130981445, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0012110471725463867, -4.76837158203125e-05, -1.9073486328125e-06, -0.053844451904296875, -0.010511398315429688, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021801114082336426, -0.00011706352233886719, -2.944469088106416e-05, -0.0043277740478515625, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -6.115436553955078e-05, 0.0, -0.8878098726272583, 0.0]}, {"score": -4.7101794757517155, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Character", "Attack", "<EOS>", 164, 51, 130, "Is", "Hero", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "Until", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(BuffUntil(ChangeAttack(2), MinionSelector(IsType\n            (MINION_TYPE.PIRATE)))), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "IsHero"}], "func": {"_type": "Name", "id": "CharacterAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "BuffUntil"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.29767322540283203, -9.5367431640625e-06, -0.00042724609375, 0.0, -0.000400543212890625, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029420852661132812, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.00040268898010253906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.97350042173639e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -0.4662371873855591, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -0.0015926361083984375, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003396272659301758, -2.2649765014648438e-06, -1.9073486328125e-06, -0.3531055450439453, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.867082417011261, -0.0056002140045166016, -0.0001354217529296875, -0.001331329345703125, -0.01039886474609375, 0.0, -0.011770278215408325, -0.19405171275138855, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0001621246337890625, -3.814697265625e-05, 0.0, -9.5367431640625e-06, -0.0007610321044921875, 0.0, -3.814697265625e-06, 0.0, -0.04859936237335205, -1.2159347534179688e-05, -7.62939453125e-06, -0.03753948211669922, -1.71661376953125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.25940072536468506, -0.17920684814453125, -2.2649765014648438e-06, -1.52587890625e-05, -0.06567859649658203, 0.0, -1.9073486328125e-06, -0.00118255615234375, -0.00010478234617039561, -0.032354116439819336, -4.0531158447265625e-06, 0.0, -0.008303642272949219, -0.4263792037963867, -3.814697265625e-06, 0.0, 0.0, -0.011337281204760075, -4.00543212890625e-05, 0.0, -0.00799560546875, -0.00038909912109375, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.01175987720489502, -9.012222290039062e-05, -2.2292137145996094e-05, -0.001422882080078125, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.022785186767578e-05, 0.0, -0.64448082447052, 0.0, -0.0029048919677734375, 0.0, -0.020030975341796875, -3.814697265625e-05, 0.0]}, {"score": -4.920676378217536, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Character", "Attack", "<EOS>", 164, 51, 130, "Is", "Hero", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "Until", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(BuffUntil(ChangeAttack(2), MinionSelector(IsType\n            (MINION_TYPE.MECH)))), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "IsHero"}], "func": {"_type": "Name", "id": "CharacterAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "BuffUntil"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.29767322540283203, -9.5367431640625e-06, -0.00042724609375, 0.0, -0.000400543212890625, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029420852661132812, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.00040268898010253906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.97350042173639e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -0.4662371873855591, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -0.0015926361083984375, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003396272659301758, -2.2649765014648438e-06, -1.9073486328125e-06, -0.3531055450439453, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.867082417011261, -0.0056002140045166016, -0.0001354217529296875, -0.001331329345703125, -0.01039886474609375, 0.0, -0.011770278215408325, -0.19405171275138855, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0001621246337890625, -3.814697265625e-05, 0.0, -9.5367431640625e-06, -0.0007610321044921875, 0.0, -3.814697265625e-06, 0.0, -0.04859936237335205, -1.2159347534179688e-05, -7.62939453125e-06, -0.03753948211669922, -1.71661376953125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.25940072536468506, -0.17920684814453125, -2.2649765014648438e-06, -1.52587890625e-05, -0.06567859649658203, 0.0, -1.9073486328125e-06, -0.00118255615234375, -0.00010478234617039561, -0.032354116439819336, -4.0531158447265625e-06, 0.0, -0.008303642272949219, -0.4263792037963867, -3.814697265625e-06, 0.0, 0.0, -0.011337281204760075, -4.00543212890625e-05, 0.0, -0.00799560546875, -0.00038909912109375, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.01175987720489502, -9.012222290039062e-05, -2.2292137145996094e-05, -0.001422882080078125, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.022785186767578e-05, 0.0, -0.8601714372634888, 0.0, -0.003265380859375, 0.0, -0.014490127563476562, -2.47955322265625e-05, 0.0]}, {"score": -5.233726706935045, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Used", "Power", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "Until", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Minion", "Selector", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(UsedPower(), ActionTag(Give(\n            BuffUntil(ChangeAttack(2), MinionSelector())), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "UsedPower"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "MinionSelector"}], "func": {"_type": "Name", "id": "BuffUntil"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.29767322540283203, -9.5367431640625e-06, -0.00042724609375, 0.0, -0.000400543212890625, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029420852661132812, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.00040268898010253906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.97350042173639e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -0.4662371873855591, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -0.0015926361083984375, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003396272659301758, -2.2649765014648438e-06, -1.9073486328125e-06, -1.2123947143554688, 0.0, -0.6905883550643921, -0.1958169937133789, -0.00042259693145751953, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -4.38690185546875e-05, 0.0, -4.00543212890625e-05, -0.00089263916015625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.009737253189086914, -3.5643577575683594e-05, -7.62939453125e-06, -0.07554054260253906, -2.09808349609375e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.10062205791473389, -0.043657541275024414, -4.291534423828125e-06, -3.0517578125e-05, -0.15106868743896484, -1.9073486328125e-06, -1.9073486328125e-06, -0.0012187957763671875, -0.00010144444968318567, -0.024358630180358887, -4.0531158447265625e-06, 0.0, -0.014781951904296875, -0.4684772491455078, 0.0, -0.1858525276184082, -0.005076408386230469, 0.0, -0.0002803802490234375, 0.0, -0.5463638305664062, -3.814697265625e-06, 0.0]}, {"score": -5.357542936374443, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Character", "Attack", "<EOS>", 164, 51, 130, "Is", "Hero", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "Until", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Minion", "Selector", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(BuffUntil(ChangeAttack(2), MinionSelector())),\n            PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "IsHero"}], "func": {"_type": "Name", "id": "CharacterAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "MinionSelector"}], "func": {"_type": "Name", "id": "BuffUntil"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.29767322540283203, -9.5367431640625e-06, -0.00042724609375, 0.0, -0.000400543212890625, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029420852661132812, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.00040268898010253906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.97350042173639e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -0.4662371873855591, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -0.0015926361083984375, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003396272659301758, -2.2649765014648438e-06, -1.9073486328125e-06, -0.3531055450439453, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.867082417011261, -0.0056002140045166016, -0.0001354217529296875, -0.001331329345703125, -0.01039886474609375, 0.0, -0.011770278215408325, -0.19405171275138855, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0001621246337890625, -3.814697265625e-05, 0.0, -9.5367431640625e-06, -0.0007610321044921875, 0.0, -3.814697265625e-06, 0.0, -0.04859936237335205, -1.2159347534179688e-05, -7.62939453125e-06, -0.03753948211669922, -1.71661376953125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.25940072536468506, -0.17920684814453125, -2.2649765014648438e-06, -1.52587890625e-05, -0.06567859649658203, 0.0, -1.9073486328125e-06, -0.00118255615234375, -0.00010478234617039561, -0.032354116439819336, -4.0531158447265625e-06, 0.0, -0.008303642272949219, -1.0593128204345703, 0.0, -0.08665470033884048, -0.00296783447265625, 0.0, -0.000701904296875, 0.0, -0.6247358322143555, -3.814697265625e-06, 0.0]}, {"score": -5.485783933855487, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Character", "Attack", "<EOS>", 164, 51, 130, "Is", "Hero", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Target", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(ChangeAttack(2)), TargetSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "IsHero"}], "func": {"_type": "Name", "id": "CharacterAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "TargetSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.29767322540283203, -9.5367431640625e-06, -0.00042724609375, 0.0, -0.000400543212890625, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029420852661132812, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.00040268898010253906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.97350042173639e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -0.4662371873855591, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -0.0015926361083984375, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003396272659301758, -2.2649765014648438e-06, -1.9073486328125e-06, -0.3531055450439453, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.867082417011261, -0.0056002140045166016, -0.0001354217529296875, -0.001331329345703125, -0.01039886474609375, 0.0, -0.011770278215408325, -0.19405171275138855, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0001621246337890625, -3.814697265625e-05, 0.0, -9.5367431640625e-06, -0.0007610321044921875, 0.0, -3.814697265625e-06, 0.0, -0.04859936237335205, -1.2159347534179688e-05, -7.62939453125e-06, -0.03753948211669922, -1.71661376953125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.4807008504867554, -0.4604150056838989, -1.9073486328125e-06, -4.9591064453125e-05, -0.019960403442382812, -0.002109527587890625, 0.0, -0.48556527495384216, -7.009481487330049e-05, 0.0]}, {"score": -5.717134903895271, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Character", "Attack", "<EOS>", 164, 51, 130, "Is", "Hero", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "Until", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(BuffUntil(ChangeAttack(2), MinionSelector(IsType\n            (MINION_TYPE.PIRATE)))), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "IsHero"}], "func": {"_type": "Name", "id": "CharacterAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "BuffUntil"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.6632709503173828, 0.0, 0.0, 0.0, -1.9073486328125e-06, -0.2615633010864258, -5.7220458984375e-06, -0.0006389617919921875, 0.0, -0.0007781982421875, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029523849487304688, -5.7220458984375e-06, -0.00014495849609375, 0.0, -0.00046193599700927734, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0009975433349609375, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.83045873302035e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -0.46965229511260986, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -0.0015964508056640625, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003396272659301758, -2.2649765014648438e-06, -1.9073486328125e-06, -0.3500022888183594, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.8604034185409546, -0.0055696964263916016, -0.0001354217529296875, -0.0013256072998046875, -0.010334014892578125, 0.0, -0.011779574677348137, -0.1914399415254593, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0001583099365234375, -3.814697265625e-05, 0.0, -9.5367431640625e-06, -0.000762939453125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.04847443103790283, -1.2159347534179688e-05, -7.62939453125e-06, -0.037446022033691406, -1.71661376953125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.2580198049545288, -0.17813491821289062, -2.2649765014648438e-06, -1.52587890625e-05, -0.0658254623413086, 0.0, -1.9073486328125e-06, -0.00118255615234375, -0.00010478234617039561, -0.032331228256225586, -4.0531158447265625e-06, 0.0, -0.008315086364746094, -0.42687034606933594, -3.814697265625e-06, 0.0, 0.0, -0.0113716134801507, -4.00543212890625e-05, 0.0, -0.007925033569335938, -0.00038909912109375, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.011800885200500488, -9.012222290039062e-05, -2.2292137145996094e-05, -0.0014190673828125, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.022785186767578e-05, 0.0, -0.6442786455154419, 0.0, -0.0028934478759765625, 0.0, -0.019626617431640625, -3.814697265625e-05, 0.0]}, {"score": -5.731965429794286, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Character", "Attack", "<EOS>", 164, 51, 130, "Is", "Hero", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "Until", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.DRUID, CARD_RARITY\n            .EPIC, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(BuffUntil(ChangeAttack(2), MinionSelector(IsType\n            (MINION_TYPE.PIRATE)))), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "IsHero"}], "func": {"_type": "Name", "id": "CharacterAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "BuffUntil"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.4321832656860352, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.4455299377441406, -3.814697265625e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0002155303955078125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.05003070831298828, -5.7220458984375e-06, -0.0001678466796875, 0.0, -0.0005171298980712891, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0009784698486328125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.913899414939806e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -0.46487629413604736, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -0.001590728759765625, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003415346145629883, -2.2649765014648438e-06, -1.9073486328125e-06, -0.35700416564941406, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.8815584778785706, -0.005670666694641113, -0.0001392364501953125, -0.0013408660888671875, -0.010668754577636719, 0.0, -0.01174204982817173, -0.20063798129558563, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0001697540283203125, -3.814697265625e-05, 0.0, -9.5367431640625e-06, -0.00075531005859375, 0.0, -3.814697265625e-06, 0.0, -0.04889118671417236, -1.2159347534179688e-05, -7.62939453125e-06, -0.03777027130126953, -1.71661376953125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.26289308071136475, -0.1818675994873047, -2.2649765014648438e-06, -1.52587890625e-05, -0.06535053253173828, 0.0, -1.9073486328125e-06, -0.0011806488037109375, -0.00010490154818398878, -0.03241324424743652, -4.0531158447265625e-06, 0.0, -0.008275032043457031, -0.4252920150756836, -3.814697265625e-06, 0.0, 0.0, -0.011255265213549137, -4.00543212890625e-05, 0.0, -0.0081787109375, -0.000385284423828125, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.011661648750305176, -9.012222290039062e-05, -2.2292137145996094e-05, -0.0014324188232421875, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.832050323486328e-05, 0.0, -0.6449805498123169, 0.0, -0.00293731689453125, 0.0, -0.021062850952148438, -3.814697265625e-05, 0.0]}, {"score": -5.949887364348228, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Minion", "Placed", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "Until", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .PIRATE)), ActionTag(Give(BuffUntil(ChangeAttack(2),\n            MinionSelector(IsType(MINION_TYPE.PIRATE)))), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionPlaced"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "BuffUntil"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.29767322540283203, -9.5367431640625e-06, -0.00042724609375, 0.0, -0.000400543212890625, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029420852661132812, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.00040268898010253906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.97350042173639e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -0.4662371873855591, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -0.0015926361083984375, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003396272659301758, -2.2649765014648438e-06, -1.9073486328125e-06, -0.3531055450439453, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.169811725616455, -0.11725902557373047, -3.647804260253906e-05, -2.86102294921875e-05, -0.0003871917724609375, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.1668623685836792, -5.745887756347656e-05, -6.556510470545618e-06, -0.0007648468017578125, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.6969243288040161, 0.0, -5.340576171875e-05, -1.71661376953125e-05, 0.0, 0.0, -8.96453857421875e-05, -7.62939453125e-05, 0.0, -7.62939453125e-06, -0.00653839111328125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0181351900100708, -1.3470647900248878e-05, -9.5367431640625e-06, -0.03523063659667969, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0907372236251831, -0.20880186557769775, -2.1457672119140625e-06, -2.09808349609375e-05, -0.060715675354003906, 0.0, -1.9073486328125e-06, -0.001026153564453125, -8.320689084939659e-05, -0.0314481258392334, -5.9604644775390625e-06, 0.0, -0.007512092590332031, -0.4262685775756836, -3.814697265625e-06, 0.0, 0.0, -0.011448980309069157, -4.1961669921875e-05, 0.0, -0.015443801879882812, -0.0003509521484375, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.010009169578552246, -8.821487426757812e-05, -2.4199485778808594e-05, -0.0016078948974609375, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.069110870361328e-05, 0.0, -0.6595660448074341, 0.0, -0.0008602142333984375, 0.0, -0.35190773010253906, -4.1961669921875e-05, 0.0]}, {"score": -5.955590455809556, "choice_history": [59, 124, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mal'Ganis", "<EOS>", 48, 117, "9", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "9", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Minion", "Placed", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "Until", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give(BuffUntil(ChangeAttack(2),\n            MinionSelector(IsType(MINION_TYPE.PIRATE)))), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 9, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionPlaced"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "BuffUntil"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Mal'Ganis", "hole3": "create_minion"}, "score_history": [0.0, -6.866455078125e-05, -0.0010367813520133495, -6.198883056640625e-05, -4.768307917402126e-07, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00853729248046875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.08913274109363556, -5.507337846211158e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.6091718673706055, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.29767322540283203, -9.5367431640625e-06, -0.00042724609375, 0.0, -0.000400543212890625, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.029420852661132812, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.00040268898010253906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.00098419189453125, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -6.97350042173639e-05, -2.2292137145996094e-05, -3.576278118089249e-07, -5.340576171875e-05, -1.9073486328125e-06, -0.4662371873855591, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -0.0015926361083984375, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003396272659301758, -2.2649765014648438e-06, -1.9073486328125e-06, -0.3531055450439453, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.169811725616455, -0.11725902557373047, -3.647804260253906e-05, -2.86102294921875e-05, -0.0003871917724609375, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.1668623685836792, -5.745887756347656e-05, -6.556510470545618e-06, -0.0007648468017578125, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.7771588563919067, 0.0, -4.1961669921875e-05, -7.62939453125e-06, 0.0, 0.0, -4.00543212890625e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, -0.00577545166015625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.017826199531555176, -1.3232229321147315e-05, -9.5367431640625e-06, -0.03407859802246094, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.10534954071044922, -0.210030198097229, -2.1457672119140625e-06, -2.09808349609375e-05, -0.06520366668701172, 0.0, -1.9073486328125e-06, -0.0010623931884765625, -8.439882367383689e-05, -0.0313718318939209, -5.9604644775390625e-06, 0.0, -0.007603645324707031, -0.4323844909667969, -3.814697265625e-06, 0.0, 0.0, -0.011322141624987125, -4.00543212890625e-05, 0.0, -0.015428543090820312, -0.000354766845703125, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.010148406028747559, -8.821487426757812e-05, -2.4199485778808594e-05, -0.001617431640625, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.069110870361328e-05, 0.0, -0.6593400239944458, 0.0, -0.00093841552734375, 0.0, -0.25331687927246094, -4.1961669921875e-05, 0.0]}], "gold_code": "class MalGanis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeHealth(2), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeAttack(2),\n            MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(Immune(),\n            HeroSelector())])\n"}
{"beams": [{"score": -1.424458214769004, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mistress", " ", "of", " ", "Pain", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -0.24069786071777344, -6.103515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00010966652916977182, -0.0010684728622436523, -1.3232223864179105e-05, -0.0043898820877075195, -6.556494918186218e-05, -1.9073486328125e-06, -0.0048122406005859375, -0.0010700225830078125, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -3.933906555175781e-06, -0.3569566011428833, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -0.00019621849060058594, -2.09808349609375e-05, -0.0007343292236328125, -1.9073486328125e-06, -0.0001659393310546875, -1.9073486328125e-06, -0.0001697540283203125, 0.0, -5.7220458984375e-06, 0.0, -0.000179290771484375, -5.7220458984375e-06, -0.5078334808349609, -1.9073486328125e-06, -0.000797271728515625, 0.0, -0.0011997222900390625, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -0.0007343292236328125, -4.649098627851345e-06, -3.576278118089249e-07, -9.655952453613281e-06, -2.50339189733495e-06, -3.933906555175781e-06, -1.311301275563892e-06, -0.0004978179931640625, -3.814697265625e-06, -0.00019299983978271484, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.006168365478515625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -6.67572021484375e-05, -3.576277322281385e-06, -1.33514404296875e-05, -0.0003032684326171875, 0.0, -0.03130350634455681, -0.0035854573361575603, -0.0013141632080078125, -7.62939453125e-06, 0.0, 0.0, -3.457069396972656e-05, -0.0001316070556640625, 0.0, -5.340576171875e-05, -0.003448486328125, -1.9073486328125e-06, 0.0, 0.0, -0.23651456832885742, -0.00022125232499092817, -3.814697265625e-06, -0.00701904296875, -1.33514404296875e-05, -0.0002515033120289445, -8.344646857949556e-07, -0.0024356842041015625, 0.0, -0.000263214111328125, -0.00010347366333007812, 0.0]}, {"score": -1.8530964739285025, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mistress", " ", "of", " ", "Pain", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}}], "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -0.24069786071777344, -6.103515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00010966652916977182, -0.0010684728622436523, -1.3232223864179105e-05, -0.0043898820877075195, -6.556494918186218e-05, -1.9073486328125e-06, -0.0048122406005859375, -0.0010700225830078125, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -3.933906555175781e-06, -0.3569566011428833, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -0.00019621849060058594, -2.09808349609375e-05, -0.0007343292236328125, -1.9073486328125e-06, -0.0001659393310546875, -1.9073486328125e-06, -0.0001697540283203125, 0.0, -5.7220458984375e-06, 0.0, -0.000179290771484375, -5.7220458984375e-06, -0.9387102127075195, 0.0, -0.0009307861328125, 0.0, -0.0009441375732421875, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -0.0003662109375, -6.556430889759213e-06, -2.3841855067985307e-07, -3.933906555175781e-06, -4.0531076592742465e-06, -3.814697265625e-06, -3.6954863844584906e-06, -0.000377655029296875, -3.814697265625e-06, -0.00015294551849365234, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, -0.0062122344970703125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, 0.0, -6.67572021484375e-05, -3.6954863844584906e-06, -1.33514404296875e-05, -0.000301361083984375, 0.0, -0.030264398083090782, -0.0033712382428348064, -0.001220703125, -7.62939453125e-06, 0.0, 0.0, -3.457069396972656e-05, -0.00012969970703125, 0.0, -5.340576171875e-05, -0.0034580230712890625, -1.9073486328125e-06, 0.0, 0.0, -0.23627901077270508, -0.00021934497635811567, -3.814697265625e-06, -0.0069866180419921875, -1.33514404296875e-05, -0.00025150354485958815, -8.344646857949556e-07, -0.0024204254150390625, 0.0, -0.000263214111328125, -0.00010347366333007812, 0.0]}, {"score": -2.583408389561548, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Mistress of Pain", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -1.5474224090576172, -1.52587890625e-05, -9.179088920063805e-06, -0.0001220703125, -1.9073486328125e-06, -0.00022590160369873047, -0.0004273653030395508, -1.9073486328125e-06, -1.060962586052483e-05, -1.1920928244535389e-07, -0.624809980392456, 0.0, -0.05092823505401611, 0.0, -7.62939453125e-06, 0.0, -0.0004718303680419922, 0.0, 0.0, -1.71661376953125e-05, -0.0003948211669921875, -0.00014495849609375, 0.0, -5.7220458984375e-06, -5.006785613659304e-06, -3.814697265625e-06, -6.079665126890177e-06, -0.0005397796630859375, -9.5367431640625e-06, -7.319450378417969e-05, 0.0, -2.47955322265625e-05, -4.57763671875e-05, -0.010488510131835938, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.000209808349609375, -3.933904736186378e-06, -7.82012939453125e-05, -0.0004405975341796875, 0.0, -0.0243181511759758, -0.012642979621887207, -0.002124786376953125, -5.7220458984375e-06, 0.0, 0.0, -2.8848648071289062e-05, -5.53131103515625e-05, 0.0, -0.0005130767822265625, -0.003173828125, -1.9073486328125e-06, 0.0, 0.0, -0.28998732566833496, -0.0008982419385574758, -1.9073486328125e-06, -0.001239776611328125, -9.5367431640625e-06, -0.0003175521269440651, -2.741813204920618e-06, -0.0016613006591796875, 0.0, -0.0002536773681640625, -0.00021398067474365234, 0.0]}, {"score": -2.8211391622617086, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Mistress of Pain", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -1.5474224090576172, -1.52587890625e-05, -9.179088920063805e-06, -0.0001220703125, -1.9073486328125e-06, -0.00022590160369873047, -0.0004273653030395508, -1.9073486328125e-06, -1.060962586052483e-05, -1.1920928244535389e-07, -0.8465278148651123, 0.0, -0.06711018085479736, 0.0, -9.5367431640625e-06, 0.0, -0.0004429817199707031, 0.0, 0.0, -1.71661376953125e-05, -0.000377655029296875, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -3.814697265625e-06, -6.079665126890177e-06, -0.000537872314453125, -9.5367431640625e-06, -6.35385513305664e-05, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -0.010904312133789062, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.000213623046875, -3.933904736186378e-06, -7.62939453125e-05, -0.0004024505615234375, 0.0, -0.024661622941493988, -0.012851238250732422, -0.0020961761474609375, -5.7220458984375e-06, 0.0, 0.0, -2.8848648071289062e-05, -5.53131103515625e-05, 0.0, -0.00051116943359375, -0.0031948089599609375, -1.9073486328125e-06, 0.0, 0.0, -0.2889457941055298, -0.0009012221707962453, -1.9073486328125e-06, -0.001239776611328125, -9.5367431640625e-06, -0.00031731510534882545, -2.741813204920618e-06, -0.0016689300537109375, 0.0, -0.00025177001953125, -0.00021398067474365234, 0.0]}, {"score": -3.360037406673257, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mistress", " ", "of", " ", "Pain", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -0.24069786071777344, -6.103515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00010966652916977182, -0.0010684728622436523, -1.3232223864179105e-05, -0.0043898820877075195, -6.556494918186218e-05, -1.9073486328125e-06, -0.0048122406005859375, -0.0010700225830078125, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -3.933906555175781e-06, -2.288092613220215, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.00012922286987304688, -3.0517578125e-05, -0.0005931854248046875, -1.9073486328125e-06, -0.00016021728515625, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.000141143798828125, -5.7220458984375e-06, -0.5114545822143555, -1.9073486328125e-06, -0.00079345703125, 0.0, -0.0015354156494140625, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -0.0007534027099609375, -4.291481673135422e-06, -3.576278118089249e-07, -1.1444091796875e-05, -2.50339189733495e-06, -3.933906555175781e-06, -1.311301275563892e-06, -0.0004711151123046875, -3.814697265625e-06, -0.00019109249114990234, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.0062084197998046875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -6.67572021484375e-05, -3.576277322281385e-06, -1.33514404296875e-05, -0.0003032684326171875, 0.0, -0.03108011931180954, -0.0035711522214114666, -0.0013332366943359375, -7.62939453125e-06, 0.0, 0.0, -3.457069396972656e-05, -0.0001316070556640625, 0.0, -5.340576171875e-05, -0.0034637451171875, -1.9073486328125e-06, 0.0, 0.0, -0.23742055892944336, -0.00022125232499092817, -3.814697265625e-06, -0.0070590972900390625, -1.33514404296875e-05, -0.000249595963396132, -8.344646857949556e-07, -0.0024204254150390625, 0.0, -0.000263214111328125, -0.00010347366333007812, 0.0]}, {"score": -3.40272013644568, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mistress", " ", "of", " ", "Pain", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -0.24069786071777344, -6.103515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00010966652916977182, -0.0010684728622436523, -1.3232223864179105e-05, -0.0043898820877075195, -6.556494918186218e-05, -1.9073486328125e-06, -0.0048122406005859375, -0.0010700225830078125, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -3.933906555175781e-06, -2.3358325958251953, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.592273712158203e-05, -2.47955322265625e-05, -0.000606536865234375, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, -0.00020599365234375, 0.0, -5.7220458984375e-06, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.5069808959960938, -1.9073486328125e-06, -0.0007839202880859375, 0.0, -0.001476287841796875, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -0.0007419586181640625, -4.410685505717993e-06, -3.576278118089249e-07, -9.655952453613281e-06, -2.50339189733495e-06, -3.933906555175781e-06, -1.311301275563892e-06, -0.00048065185546875, -3.814697265625e-06, -0.00019109249114990234, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.006175994873046875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -6.67572021484375e-05, -3.576277322281385e-06, -1.33514404296875e-05, -0.0003032684326171875, 0.0, -0.031194761395454407, -0.003580688964575529, -0.001312255859375, -7.62939453125e-06, 0.0, 0.0, -3.457069396972656e-05, -0.0001316070556640625, 0.0, -5.340576171875e-05, -0.00345611572265625, -1.9073486328125e-06, 0.0, 0.0, -0.23682165145874023, -0.00022125232499092817, -3.814697265625e-06, -0.0070400238037109375, -1.33514404296875e-05, -0.0002495960798114538, -8.344646857949556e-07, -0.0024261474609375, 0.0, -0.000263214111328125, -0.00010347366333007812, 0.0]}, {"score": -3.781108992039293, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mistress", " ", "of", " ", "Pain", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}}], "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -0.24069786071777344, -6.103515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00010966652916977182, -0.0010684728622436523, -1.3232223864179105e-05, -0.0043898820877075195, -6.556494918186218e-05, -1.9073486328125e-06, -0.0048122406005859375, -0.0010700225830078125, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -3.933906555175781e-06, -2.288092613220215, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.00012922286987304688, -3.0517578125e-05, -0.0005931854248046875, -1.9073486328125e-06, -0.00016021728515625, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.000141143798828125, -5.7220458984375e-06, -0.9351129531860352, 0.0, -0.000919342041015625, 0.0, -0.001064300537109375, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -0.0003719329833984375, -5.960399903415237e-06, -2.3841855067985307e-07, -5.841255187988281e-06, -4.172316494077677e-06, -3.814697265625e-06, -3.6954863844584906e-06, -0.000362396240234375, -3.814697265625e-06, -0.00015115737915039062, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, -0.0062408447265625, -1.9073486328125e-06, -7.62939453125e-06, 0.0, 0.0, -6.67572021484375e-05, -3.6954863844584906e-06, -1.33514404296875e-05, -0.000301361083984375, 0.0, -0.030037809163331985, -0.0033550257794559, -0.0012340545654296875, -7.62939453125e-06, 0.0, 0.0, -3.457069396972656e-05, -0.0001316070556640625, 0.0, -5.340576171875e-05, -0.0034732818603515625, -1.9073486328125e-06, 0.0, 0.0, -0.23708200454711914, -0.00022125232499092817, -3.814697265625e-06, -0.0070209503173828125, -1.33514404296875e-05, -0.0002515034284442663, -8.344646857949556e-07, -0.002407073974609375, 0.0, -0.000263214111328125, -0.00010347366333007812, 0.0]}, {"score": -3.8326087240990034, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mistress", " ", "of", " ", "Pain", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}}], "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -0.24069786071777344, -6.103515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00010966652916977182, -0.0010684728622436523, -1.3232223864179105e-05, -0.0043898820877075195, -6.556494918186218e-05, -1.9073486328125e-06, -0.0048122406005859375, -0.0010700225830078125, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -3.933906555175781e-06, -2.3358325958251953, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.592273712158203e-05, -2.47955322265625e-05, -0.000606536865234375, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, -0.00020599365234375, 0.0, -5.7220458984375e-06, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.939295768737793, 0.0, -0.0009136199951171875, 0.0, -0.0010356903076171875, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -0.0003719329833984375, -6.318015948636457e-06, -2.3841855067985307e-07, -5.841255187988281e-06, -4.172316494077677e-06, -3.814697265625e-06, -3.6954863844584906e-06, -0.0003681182861328125, -3.814697265625e-06, -0.00015294551849365234, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, -0.00621795654296875, -1.9073486328125e-06, -7.62939453125e-06, 0.0, 0.0, -6.67572021484375e-05, -3.6954863844584906e-06, -1.33514404296875e-05, -0.000301361083984375, 0.0, -0.030163463205099106, -0.0033663506619632244, -0.001220703125, -7.62939453125e-06, 0.0, 0.0, -3.457069396972656e-05, -0.0001316070556640625, 0.0, -5.340576171875e-05, -0.0034656524658203125, -1.9073486328125e-06, 0.0, 0.0, -0.23656225204467773, -0.00022125232499092817, -3.814697265625e-06, -0.0070056915283203125, -1.33514404296875e-05, -0.0002513844519853592, -8.344646857949556e-07, -0.0024127960205078125, 0.0, -0.000263214111328125, -0.00010347366333007812, 0.0]}, {"score": -4.689326860190647, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mistress", " ", "of", " ", "Pain", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 55, 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Damage(2),\n            PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -0.24069786071777344, -6.103515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00010966652916977182, -0.0010684728622436523, -1.3232223864179105e-05, -0.0043898820877075195, -6.556494918186218e-05, -1.9073486328125e-06, -0.0048122406005859375, -0.0010700225830078125, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -3.933906555175781e-06, -0.3569566011428833, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -0.00019621849060058594, -2.09808349609375e-05, -0.0007343292236328125, -1.9073486328125e-06, -0.0001659393310546875, -1.9073486328125e-06, -0.0001697540283203125, 0.0, -5.7220458984375e-06, 0.0, -0.000179290771484375, -5.7220458984375e-06, -0.5078334808349609, -1.9073486328125e-06, -0.000797271728515625, 0.0, -0.0011997222900390625, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -0.0007343292236328125, -4.649098627851345e-06, -3.576278118089249e-07, -9.655952453613281e-06, -2.50339189733495e-06, -3.933906555175781e-06, -1.311301275563892e-06, -0.0004978179931640625, -3.814697265625e-06, -0.00019299983978271484, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.006168365478515625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -6.67572021484375e-05, -3.576277322281385e-06, -1.33514404296875e-05, -0.0003032684326171875, 0.0, -0.03130350634455681, -0.0035854573361575603, -0.0013141632080078125, -7.62939453125e-06, 0.0, 0.0, -3.457069396972656e-05, -0.0001316070556640625, 0.0, -5.340576171875e-05, -0.003448486328125, -1.9073486328125e-06, 0.0, 0.0, -2.4634852409362793, -1.1086422091466375e-05, -1.9073486328125e-06, -0.17618656158447266, -0.018157958984375, 0.0, -0.8538217544555664, -3.0875205993652344e-05, 0.0]}, {"score": -4.764136053801792, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mistress", " ", "of", " ", "Pain", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 55, 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Damage(2),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -0.24069786071777344, -6.103515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00010966652916977182, -0.0010684728622436523, -1.3232223864179105e-05, -0.0043898820877075195, -6.556494918186218e-05, -1.9073486328125e-06, -0.0048122406005859375, -0.0010700225830078125, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -3.933906555175781e-06, -0.3569566011428833, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -0.00019621849060058594, -2.09808349609375e-05, -0.0007343292236328125, -1.9073486328125e-06, -0.0001659393310546875, -1.9073486328125e-06, -0.0001697540283203125, 0.0, -5.7220458984375e-06, 0.0, -0.000179290771484375, -5.7220458984375e-06, -0.5078334808349609, -1.9073486328125e-06, -0.000797271728515625, 0.0, -0.0011997222900390625, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -0.0007343292236328125, -4.649098627851345e-06, -3.576278118089249e-07, -9.655952453613281e-06, -2.50339189733495e-06, -3.933906555175781e-06, -1.311301275563892e-06, -0.0004978179931640625, -3.814697265625e-06, -0.00019299983978271484, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.006168365478515625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -6.67572021484375e-05, -3.576277322281385e-06, -1.33514404296875e-05, -0.0003032684326171875, 0.0, -0.03130350634455681, -0.0035854573361575603, -0.0013141632080078125, -7.62939453125e-06, 0.0, 0.0, -3.457069396972656e-05, -0.0001316070556640625, 0.0, -5.340576171875e-05, -0.003448486328125, -1.9073486328125e-06, 0.0, 0.0, -2.4634852409362793, -1.1086422091466375e-05, -1.9073486328125e-06, -0.17618656158447266, -0.018157958984375, 0.0, -0.9284963607788086, -0.00016546249389648438, 0.0]}, {"score": -5.124251659286067, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 55, 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Damage(2),\n            HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Mistress of Pain", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -1.5474224090576172, -1.52587890625e-05, -9.179088920063805e-06, -0.0001220703125, -1.9073486328125e-06, -0.00022590160369873047, -0.0004273653030395508, -1.9073486328125e-06, -1.060962586052483e-05, -1.1920928244535389e-07, -0.624809980392456, 0.0, -0.05092823505401611, 0.0, -7.62939453125e-06, 0.0, -0.0004718303680419922, 0.0, 0.0, -1.71661376953125e-05, -0.0003948211669921875, -0.00014495849609375, 0.0, -5.7220458984375e-06, -5.006785613659304e-06, -3.814697265625e-06, -6.079665126890177e-06, -0.0005397796630859375, -9.5367431640625e-06, -7.319450378417969e-05, 0.0, -2.47955322265625e-05, -4.57763671875e-05, -0.010488510131835938, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.000209808349609375, -3.933904736186378e-06, -7.82012939453125e-05, -0.0004405975341796875, 0.0, -0.0243181511759758, -0.012642979621887207, -0.002124786376953125, -5.7220458984375e-06, 0.0, 0.0, -2.8848648071289062e-05, -5.53131103515625e-05, 0.0, -0.0005130767822265625, -0.003173828125, -1.9073486328125e-06, 0.0, 0.0, -2.088416814804077, -2.1338340957299806e-05, -1.9073486328125e-06, -0.4350461959838867, -0.0046539306640625, 0.0, -0.30702507495880127, -0.00026404857635498047, 0.0]}, {"score": -5.218052245416118, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mistress", " ", "of", " ", "Pain", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            ChangeHealth(2))), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -0.24069786071777344, -6.103515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00010966652916977182, -0.0010684728622436523, -1.3232223864179105e-05, -0.0043898820877075195, -6.556494918186218e-05, -1.9073486328125e-06, -0.0048122406005859375, -0.0010700225830078125, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -3.933906555175781e-06, -0.3569566011428833, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -0.00019621849060058594, -2.09808349609375e-05, -0.0007343292236328125, -1.9073486328125e-06, -0.0001659393310546875, -1.9073486328125e-06, -0.0001697540283203125, 0.0, -5.7220458984375e-06, 0.0, -0.000179290771484375, -5.7220458984375e-06, -0.5078334808349609, -1.9073486328125e-06, -0.000797271728515625, 0.0, -0.0011997222900390625, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -0.0007343292236328125, -4.649098627851345e-06, -3.576278118089249e-07, -9.655952453613281e-06, -2.50339189733495e-06, -3.933906555175781e-06, -1.311301275563892e-06, -0.0004978179931640625, -3.814697265625e-06, -0.00019299983978271484, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.006168365478515625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -6.67572021484375e-05, -3.576277322281385e-06, -1.33514404296875e-05, -0.0003032684326171875, 0.0, -0.03130350634455681, -0.0035854573361575603, -0.0013141632080078125, -7.62939453125e-06, 0.0, 0.0, -3.457069396972656e-05, -0.0001316070556640625, 0.0, -5.340576171875e-05, -0.003448486328125, -1.9073486328125e-06, 0.0, 0.0, -2.170685291290283, -5.316732858773321e-05, -5.7220458984375e-06, -0.02392578125, -4.9591064453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.03380858898162842, -0.022112250328063965, -0.000278472900390625, -0.1186065673828125, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-05, -0.0005517001263797283, -0.6581073999404907, -2.0265558760002023e-06, -0.000156402587890625, -0.9392566680908203, -0.0002536773681640625, 0.0, -0.07229852676391602, -0.000148773193359375, 0.0]}, {"score": -5.360886789599988, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Mistress", " ", "of", " ", "Pain", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 41, 89, 24, 112, "Attribute", "<EOS>", 165, 49, 121, "attack", "<EOS>", 51, 130, "Self", "Selector", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            ChangeAttack(Attribute('attack', SelfSelector())))),\n            SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Attribute"}}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -0.24069786071777344, -6.103515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00010966652916977182, -0.0010684728622436523, -1.3232223864179105e-05, -0.0043898820877075195, -6.556494918186218e-05, -1.9073486328125e-06, -0.0048122406005859375, -0.0010700225830078125, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -3.933906555175781e-06, -0.3569566011428833, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -0.00019621849060058594, -2.09808349609375e-05, -0.0007343292236328125, -1.9073486328125e-06, -0.0001659393310546875, -1.9073486328125e-06, -0.0001697540283203125, 0.0, -5.7220458984375e-06, 0.0, -0.000179290771484375, -5.7220458984375e-06, -0.5078334808349609, -1.9073486328125e-06, -0.000797271728515625, 0.0, -0.0011997222900390625, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -0.0007343292236328125, -4.649098627851345e-06, -3.576278118089249e-07, -9.655952453613281e-06, -2.50339189733495e-06, -3.933906555175781e-06, -1.311301275563892e-06, -0.0004978179931640625, -3.814697265625e-06, -0.00019299983978271484, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.006168365478515625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -6.67572021484375e-05, -3.576277322281385e-06, -1.33514404296875e-05, -0.0003032684326171875, 0.0, -0.03130350634455681, -0.0035854573361575603, -0.0013141632080078125, -7.62939453125e-06, 0.0, 0.0, -3.457069396972656e-05, -0.0001316070556640625, 0.0, -5.340576171875e-05, -0.003448486328125, -1.9073486328125e-06, 0.0, 0.0, -2.170685291290283, -5.316732858773321e-05, -5.7220458984375e-06, -0.02392578125, -4.9591064453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.03380858898162842, -0.022112250328063965, -0.000278472900390625, -0.1186065673828125, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-05, -0.0005517001263797283, -0.7427986860275269, -1.621246337890625e-05, -0.0001392364501953125, -0.2096576690673828, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.04730415344238281, -7.987022399902344e-06, -2.6702880859375e-05, -0.0001678466796875, -3.62396240234375e-05, -0.2819020748138428, -0.000152587890625, -0.09833717346191406, 0.0, -0.044620633125305176, -0.000217437744140625, 0.0, -0.28827381134033203, -1.9073486328125e-06, -0.09927749633789062, -8.392333984375e-05, 0.0]}, {"score": -7.090248043635704, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Target", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            ChangeAttack(2))), TargetSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Mistress of Pain", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "TargetSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -1.5474224090576172, -1.52587890625e-05, -9.179088920063805e-06, -0.0001220703125, -1.9073486328125e-06, -0.00022590160369873047, -0.0004273653030395508, -1.9073486328125e-06, -1.060962586052483e-05, -1.1920928244535389e-07, -0.624809980392456, 0.0, -0.05092823505401611, 0.0, -7.62939453125e-06, 0.0, -0.0004718303680419922, 0.0, 0.0, -1.71661376953125e-05, -0.0003948211669921875, -0.00014495849609375, 0.0, -5.7220458984375e-06, -5.006785613659304e-06, -3.814697265625e-06, -6.079665126890177e-06, -0.0005397796630859375, -9.5367431640625e-06, -7.319450378417969e-05, 0.0, -2.47955322265625e-05, -4.57763671875e-05, -0.010488510131835938, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.000209808349609375, -3.933904736186378e-06, -7.82012939453125e-05, -0.0004405975341796875, 0.0, -0.0243181511759758, -0.012642979621887207, -0.002124786376953125, -5.7220458984375e-06, 0.0, 0.0, -2.8848648071289062e-05, -5.53131103515625e-05, 0.0, -0.0005130767822265625, -0.003173828125, -1.9073486328125e-06, 0.0, 0.0, -2.1482627391815186, -0.00010466572712175548, -3.814697265625e-06, -0.01422882080078125, -5.91278076171875e-05, -3.814697265625e-06, 0.0, -0.029893994331359863, -0.5851502418518066, -6.103515625e-05, -0.17475509643554688, -4.57763671875e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.0004240271227899939, -0.21232080459594727, -4.112720489501953e-05, -6.67572021484375e-05, -0.954742431640625, -0.0001354217529296875, 0.0, -0.6808205842971802, -0.00020432467863429338, 0.0]}, {"score": -7.180827791833046, "choice_history": [59, 124, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            ChangeAttack(2))), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Mistress of Pain", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "MistressOfPain", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.392333984375e-05, -0.004141033627092838, -0.0014310565311461687, -0.00253502675332129, -0.0007655146764591336, -1.5495606930926442e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -2.09808349609375e-05, 0.0, -1.5474224090576172, -1.52587890625e-05, -9.179088920063805e-06, -0.0001220703125, -1.9073486328125e-06, -0.00022590160369873047, -0.0004273653030395508, -1.9073486328125e-06, -1.060962586052483e-05, -1.1920928244535389e-07, -0.624809980392456, 0.0, -0.05092823505401611, 0.0, -7.62939453125e-06, 0.0, -0.0004718303680419922, 0.0, 0.0, -1.71661376953125e-05, -0.0003948211669921875, -0.00014495849609375, 0.0, -5.7220458984375e-06, -5.006785613659304e-06, -3.814697265625e-06, -6.079665126890177e-06, -0.0005397796630859375, -9.5367431640625e-06, -7.319450378417969e-05, 0.0, -2.47955322265625e-05, -4.57763671875e-05, -0.010488510131835938, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.000209808349609375, -3.933904736186378e-06, -7.82012939453125e-05, -0.0004405975341796875, 0.0, -0.0243181511759758, -0.012642979621887207, -0.002124786376953125, -5.7220458984375e-06, 0.0, 0.0, -2.8848648071289062e-05, -5.53131103515625e-05, 0.0, -0.0005130767822265625, -0.003173828125, -1.9073486328125e-06, 0.0, 0.0, -2.1482627391815186, -0.00010466572712175548, -3.814697265625e-06, -0.01422882080078125, -5.91278076171875e-05, -3.814697265625e-06, 0.0, -0.029893994331359863, -0.5851502418518066, -6.103515625e-05, -0.17475509643554688, -4.57763671875e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.0004240271227899939, -0.21232080459594727, -4.112720489501953e-05, -6.67572021484375e-05, -0.954742431640625, -0.0001354217529296875, 0.0, -0.771377682685852, -0.0002269744873046875, 0.0]}], "gold_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Heal(\n            EventValue()), HeroSelector()))])\n"}
{"beams": [{"score": -2.7767179829661472, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give(ChangeHealth(2)),\n            MinionSelector(IsType(MINION_TYPE.MECH))))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -0.665501594543457, 0.0, -0.0002689361572265625, 0.0, -0.003930091857910156, 0.0, -0.0004443430807441473, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.5497195136049413e-06, -0.009707330726087093, -8.34464663057588e-06, -3.135155202471651e-05, -4.363058542367071e-05, -3.671578815556131e-05, -7.2479248046875e-05, 0.0, -0.024176478385925293, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.0031528472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.5633987784385681, -0.0012802802957594395, -2.86102294921875e-05, -0.0868072509765625, -0.004833221435546875, -1.9073486328125e-06, 0.0, -0.009776437655091286, -0.4584747552871704, -0.00011002412065863609, -3.814697265625e-06, -0.0057773590087890625, -6.29425048828125e-05, -0.00759124755859375, -7.62939453125e-06, -1.1444091796875e-05, -0.44429829716682434, -1.728534698486328e-05, -9.5367431640625e-06, -0.025491714477539062, -0.000614166259765625, -0.00014495849609375, -3.814697265625e-06, -3.814697265625e-06, -0.33831536769866943, -0.0008509159088134766, -7.987013304955326e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0018291473388671875, -1.9073486328125e-06, -0.11780273914337158, 0.0]}, {"score": -2.952943887348738, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Weapon", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give(ChangeHealth(2)),\n            WeaponSelector(EnemyPlayer())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "WeaponSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -0.665501594543457, 0.0, -0.0002689361572265625, 0.0, -0.003930091857910156, 0.0, -0.0004443430807441473, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.5497195136049413e-06, -0.009707330726087093, -8.34464663057588e-06, -3.135155202471651e-05, -4.363058542367071e-05, -3.671578815556131e-05, -7.2479248046875e-05, 0.0, -0.024176478385925293, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.0031528472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.5633987784385681, -0.0012802802957594395, -2.86102294921875e-05, -0.0868072509765625, -0.004833221435546875, -1.9073486328125e-06, 0.0, -0.009776437655091286, -0.4584747552871704, -0.00011002412065863609, -3.814697265625e-06, -0.0057773590087890625, -6.29425048828125e-05, -0.00759124755859375, -7.62939453125e-06, -1.1444091796875e-05, -1.0414650440216064, -7.867811291362159e-06, 0.0, -0.000110626220703125, -0.044220924377441406, -5.7220458984375e-06, -0.019831929355859756, -2.1457672119140625e-06, 0.0]}, {"score": -3.1874602731697905, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give(ChangeHealth(2)),\n            MinionSelector(IsType(MINION_TYPE.MECH))))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -1.0269479751586914, -3.814697265625e-06, -0.0003376007080078125, 0.0, -0.012741684913635254, 0.0, -0.00040882869507186115, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.14984130859375e-05, -1.4305104514278355e-06, -0.008478485979139805, -7.510183422709815e-06, -3.9457496313843876e-05, -3.826617466984317e-05, -3.325883881188929e-05, -6.103515625e-05, 0.0, -0.026515960693359375, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.003231048583984375, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.5790621638298035, -0.0012880247086286545, -2.86102294921875e-05, -0.085906982421875, -0.004848480224609375, -1.9073486328125e-06, 0.0, -0.009812267497181892, -0.46119940280914307, -0.00011145447206217796, -3.814697265625e-06, -0.0057392120361328125, -6.29425048828125e-05, -0.00763702392578125, -7.62939453125e-06, -1.1444091796875e-05, -0.44633007049560547, -1.728534698486328e-05, -9.5367431640625e-06, -0.025544166564941406, -0.0006122589111328125, -0.00014495849609375, -3.814697265625e-06, -3.814697265625e-06, -0.35782885551452637, -0.0008566379547119141, -7.987013304955326e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0018634796142578125, -1.9073486328125e-06, -0.11788475513458252, 0.0]}, {"score": -3.3384570215350777, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Weapon", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give(ChangeHealth(2)),\n            WeaponSelector(EnemyPlayer())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "WeaponSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -1.0269479751586914, -3.814697265625e-06, -0.0003376007080078125, 0.0, -0.012741684913635254, 0.0, -0.00040882869507186115, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.14984130859375e-05, -1.4305104514278355e-06, -0.008478485979139805, -7.510183422709815e-06, -3.9457496313843876e-05, -3.826617466984317e-05, -3.325883881188929e-05, -6.103515625e-05, 0.0, -0.026515960693359375, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.003231048583984375, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.5790621638298035, -0.0012880247086286545, -2.86102294921875e-05, -0.085906982421875, -0.004848480224609375, -1.9073486328125e-06, 0.0, -0.009812267497181892, -0.46119940280914307, -0.00011145447206217796, -3.814697265625e-06, -0.0057392120361328125, -6.29425048828125e-05, -0.00763702392578125, -7.62939453125e-06, -1.1444091796875e-05, -1.0377817153930664, -7.867811291362159e-06, 0.0, -0.000110626220703125, -0.04440784454345703, -5.7220458984375e-06, -0.019817057996988297, -2.1457672119140625e-06, 0.0]}, {"score": -3.4509763998821654, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give(ChangeAttack(2)),\n            MinionSelector(IsType(MINION_TYPE.MECH))))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -0.665501594543457, 0.0, -0.0002689361572265625, 0.0, -0.003930091857910156, 0.0, -0.0004443430807441473, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.5497195136049413e-06, -0.009707330726087093, -8.34464663057588e-06, -3.135155202471651e-05, -4.363058542367071e-05, -3.671578815556131e-05, -7.2479248046875e-05, 0.0, -0.024176478385925293, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.0031528472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.5633987784385681, -0.0012802802957594395, -2.86102294921875e-05, -0.0868072509765625, -0.004833221435546875, -1.9073486328125e-06, 0.0, -0.009776437655091286, -1.0040642023086548, -2.6106828954652883e-05, -1.9073486328125e-06, -0.00035858154296875, -6.103515625e-05, -0.009248733520507812, -9.5367431640625e-06, -1.1444091796875e-05, -0.4026341140270233, -2.110004425048828e-05, -7.62939453125e-06, -0.022874832153320312, -0.0003108978271484375, -0.0002117156982421875, -3.814697265625e-06, -3.814697265625e-06, -0.5170993804931641, -0.0009458064450882375, -9.059892363438848e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.002315521240234375, -1.9073486328125e-06, -0.11546814441680908, 0.0]}, {"score": -3.5945484361291165, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Weapon", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give(ChangeAttack(2)),\n            WeaponSelector(EnemyPlayer())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "WeaponSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -0.665501594543457, 0.0, -0.0002689361572265625, 0.0, -0.003930091857910156, 0.0, -0.0004443430807441473, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.5497195136049413e-06, -0.009707330726087093, -8.34464663057588e-06, -3.135155202471651e-05, -4.363058542367071e-05, -3.671578815556131e-05, -7.2479248046875e-05, 0.0, -0.024176478385925293, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.0031528472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.5633987784385681, -0.0012802802957594395, -2.86102294921875e-05, -0.0868072509765625, -0.004833221435546875, -1.9073486328125e-06, 0.0, -0.009776437655091286, -1.0040642023086548, -2.6106828954652883e-05, -1.9073486328125e-06, -0.00035858154296875, -6.103515625e-05, -0.009248733520507812, -9.5367431640625e-06, -1.1444091796875e-05, -1.1237040758132935, -9.655950634623878e-06, 0.0, -0.0001220703125, -0.057915687561035156, -5.7220458984375e-06, -0.023747120052576065, -2.1457672119140625e-06, 0.0]}, {"score": -3.668336336988432, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Give", "Powermace", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Summon(GivePowermace()),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "GivePowermace"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -0.665501594543457, 0.0, -0.0002689361572265625, 0.0, -0.003930091857910156, 0.0, -0.0004443430807441473, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.5497195136049413e-06, -0.009707330726087093, -8.34464663057588e-06, -3.135155202471651e-05, -4.363058542367071e-05, -3.671578815556131e-05, -7.2479248046875e-05, 0.0, -0.024176478385925293, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.0031528472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.9615389108657837, -0.0003072755062021315, -0.000156402587890625, -0.017554283142089844, 0.0, -0.6688501834869385, -0.2769129276275635, -0.002917339326813817, -0.030628204345703125, -1.9073486328125e-06, -0.0003197192563675344, -1.52587890625e-05, 0.0]}, {"score": -3.858510708658514, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give(ChangeAttack(2)),\n            MinionSelector(IsType(MINION_TYPE.MECH))))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -1.0269479751586914, -3.814697265625e-06, -0.0003376007080078125, 0.0, -0.012741684913635254, 0.0, -0.00040882869507186115, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.14984130859375e-05, -1.4305104514278355e-06, -0.008478485979139805, -7.510183422709815e-06, -3.9457496313843876e-05, -3.826617466984317e-05, -3.325883881188929e-05, -6.103515625e-05, 0.0, -0.026515960693359375, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.003231048583984375, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.5790621638298035, -0.0012880247086286545, -2.86102294921875e-05, -0.085906982421875, -0.004848480224609375, -1.9073486328125e-06, 0.0, -0.009812267497181892, -0.9993816614151001, -2.6106828954652883e-05, -1.9073486328125e-06, -0.000354766845703125, -6.103515625e-05, -0.00928497314453125, -9.5367431640625e-06, -1.1444091796875e-05, -0.4047863483428955, -2.110004425048828e-05, -7.62939453125e-06, -0.022916793823242188, -0.0003108978271484375, -0.0002117156982421875, -3.814697265625e-06, -5.7220458984375e-06, -0.5406070947647095, -0.0009534358396194875, -9.179100743494928e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0023784637451171875, -1.9073486328125e-06, -0.11558544635772705, 0.0]}, {"score": -4.000730166931135, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH)])), PlayerSelector(\n            EnemyPlayer())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -0.665501594543457, 0.0, -0.0002689361572265625, 0.0, -0.003930091857910156, 0.0, -0.0004443430807441473, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.5497195136049413e-06, -0.009707330726087093, -8.34464663057588e-06, -3.135155202471651e-05, -4.363058542367071e-05, -3.671578815556131e-05, -7.2479248046875e-05, 0.0, -0.024176478385925293, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.0031528472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.9810010194778442, -0.02078566700220108, -0.019795536994934082, -5.14984130859375e-05, -0.0001068115234375, -0.01717090606689453, -1.9073486328125e-06, 0.0, -0.004755409434437752, -0.010257839225232601, 0.0, -0.0039520263671875, -2.288818359375e-05, -0.1318817138671875, -1.52587890625e-05, -0.0016260147094726562, -9.34600830078125e-05, -0.009853363037109375, -0.0902862548828125, -9.72747802734375e-05, 0.0, 0.0, -0.10274505615234375, -0.02004408836364746, -3.099440846199286e-06, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0065822601318359375, 0.0, -0.08049404621124268, 0.0, -0.19686317443847656, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -0.5871816873550415, -1.52587890625e-05, 0.0, -9.918212890625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.005650818347930908, -2.503394853192731e-06, 0.0]}, {"score": -4.0062995869177485, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Give", "Powermace", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Summon(GivePowermace()),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "GivePowermace"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -1.0269479751586914, -3.814697265625e-06, -0.0003376007080078125, 0.0, -0.012741684913635254, 0.0, -0.00040882869507186115, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.14984130859375e-05, -1.4305104514278355e-06, -0.008478485979139805, -7.510183422709815e-06, -3.9457496313843876e-05, -3.826617466984317e-05, -3.325883881188929e-05, -6.103515625e-05, 0.0, -0.026515960693359375, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.003231048583984375, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.9278916120529175, -0.00031144655076786876, -0.000156402587890625, -0.017530441284179688, 0.0, -0.6669704914093018, -0.27895182371139526, -0.002934856805950403, -0.030612945556640625, -1.9073486328125e-06, -0.0003197192563675344, -1.52587890625e-05, 0.0]}, {"score": -4.349441726991472, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH)])), PlayerSelector(\n            EnemyPlayer())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -1.0269479751586914, -3.814697265625e-06, -0.0003376007080078125, 0.0, -0.012741684913635254, 0.0, -0.00040882869507186115, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.14984130859375e-05, -1.4305104514278355e-06, -0.008478485979139805, -7.510183422709815e-06, -3.9457496313843876e-05, -3.826617466984317e-05, -3.325883881188929e-05, -6.103515625e-05, 0.0, -0.026515960693359375, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.003231048583984375, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.9574264287948608, -0.021112889051437378, -0.019954800605773926, -5.14984130859375e-05, -0.0001087188720703125, -0.017188072204589844, -1.9073486328125e-06, 0.0, -0.004822390154004097, -0.010270236991345882, 0.0, -0.00395965576171875, -2.288818359375e-05, -0.1320323944091797, -1.52587890625e-05, -0.0016231536865234375, -9.34600830078125e-05, -0.009857177734375, -0.0902872085571289, -9.72747802734375e-05, 0.0, 0.0, -0.10273170471191406, -0.02003931999206543, -3.099440846199286e-06, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0065822601318359375, 0.0, -0.08049213886260986, 0.0, -0.19717788696289062, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -0.586957573890686, -1.52587890625e-05, 0.0, -0.0001010894775390625, -3.814697265625e-05, -5.7220458984375e-06, -0.005650578066706657, -2.503394853192731e-06, 0.0]}, {"score": -4.390239664132423, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeAttack\n            (2)), Buff(ChangeHealth(2))]), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -0.665501594543457, 0.0, -0.0002689361572265625, 0.0, -0.003930091857910156, 0.0, -0.0004443430807441473, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.5497195136049413e-06, -0.009707330726087093, -8.34464663057588e-06, -3.135155202471651e-05, -4.363058542367071e-05, -3.671578815556131e-05, -7.2479248046875e-05, 0.0, -0.024176478385925293, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.0031528472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.5633987784385681, -0.0012802802957594395, -2.86102294921875e-05, -2.490738868713379, -1.52587890625e-05, -0.018785476684570312, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.005562782287597656, -4.00543212890625e-05, -3.0517578125e-05, -0.0001277923583984375, -0.0001201629638671875, -1.1444091796875e-05, -9.5367431640625e-06, -0.0005876136710867286, -0.02539050579071045, -7.617473602294922e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0004966256092302501, -2.396106719970703e-05, -3.0517578125e-05, -0.0016155242919921875, -0.0001316070556640625, -5.7220458984375e-06, -1.9073486328125e-05, -0.0017532451311126351, -0.23962926864624023, -4.684815212385729e-05, -5.7220458984375e-06, -7.82012939453125e-05, -0.08265495300292969, -0.00225067138671875, -1.1444091796875e-05, -3.814697265625e-06, -0.06458142399787903, -2.288818359375e-05, -5.7220458984375e-06, -0.010419845581054688, -0.0056819915771484375, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0627361536026001, -0.0008459091186523438, -9.655935173213948e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0019283294677734375, -1.9073486328125e-06, -0.09979641437530518, 0.0]}, {"score": -4.6818846206515445, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Mech", "Powermace", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Summon(MechPowermace()),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MechPowermace"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -0.665501594543457, 0.0, -0.0002689361572265625, 0.0, -0.003930091857910156, 0.0, -0.0004443430807441473, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.5497195136049413e-06, -0.009707330726087093, -8.34464663057588e-06, -3.135155202471651e-05, -4.363058542367071e-05, -3.671578815556131e-05, -7.2479248046875e-05, 0.0, -0.024176478385925293, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.0031528472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.9615389108657837, -0.0003072755062021315, -0.000156402587890625, -0.017554283142089844, 0.0, -0.9034950733184814, -1.0299313068389893, -0.057276684790849686, -0.0011749267578125, 0.0, -0.0012967586517333984, -1.9073486328125e-05, 0.0]}, {"score": -4.794333074554743, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Mech", "<UNK>", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Summon(Mech<UNK>()),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Mech<UNK>"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -0.665501594543457, 0.0, -0.0002689361572265625, 0.0, -0.003930091857910156, 0.0, -0.0004443430807441473, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.5497195136049413e-06, -0.009707330726087093, -8.34464663057588e-06, -3.135155202471651e-05, -4.363058542367071e-05, -3.671578815556131e-05, -7.2479248046875e-05, 0.0, -0.024176478385925293, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.0031528472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.9615389108657837, -0.0003072755062021315, -0.000156402587890625, -0.017554283142089844, 0.0, -0.9034950733184814, -1.1423797607421875, -0.057276684790849686, -0.0011749267578125, 0.0, -0.0012967586517333984, -1.9073486328125e-05, 0.0]}, {"score": -5.0271827231802035, "choice_history": [59, 124, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Powermace", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH)])), ActionTag(Give(\n            ChangeAttack(2)), SelfSelector())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 3, "_type": "Template3", "hole0": "Powermace", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Powermace", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -9.1552734375e-05, -0.0006829596823081374, -0.00010418881720397621, -6.318072337307967e-06, -4.5180280721979216e-05, -3.0398361559491605e-05, -3.814697265625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -1.0728830375228426e-06, -3.898143768310547e-05, -1.931572478497401e-05, -1.9073486328125e-06, -0.665501594543457, 0.0, -0.0002689361572265625, 0.0, -0.003930091857910156, 0.0, -0.0004443430807441473, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.5497195136049413e-06, -0.009707330726087093, -8.34464663057588e-06, -3.135155202471651e-05, -4.363058542367071e-05, -3.671578815556131e-05, -7.2479248046875e-05, 0.0, -0.024176478385925293, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002499818801879883, 0.0, -0.0031528472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.9810010194778442, -0.02078566700220108, -0.019795536994934082, -5.14984130859375e-05, -0.0001068115234375, -0.01717090606689453, -1.9073486328125e-06, 0.0, -0.004755409434437752, -0.010257839225232601, 0.0, -0.0039520263671875, -2.288818359375e-05, -0.1318817138671875, -1.52587890625e-05, -0.0016260147094726562, -9.34600830078125e-05, -0.009853363037109375, -0.0902862548828125, -9.72747802734375e-05, 0.0, 0.0, -0.10274505615234375, -0.02004408836364746, -3.099440846199286e-06, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0065822601318359375, 0.0, -0.08049404621124268, 0.0, -0.19686317443847656, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -0.8459173440933228, -0.0042400360107421875, 0.0, -6.4849853515625e-05, -7.05718994140625e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.007894039154052734, -5.805492037325166e-05, -3.814697265625e-06, -0.3510122299194336, -0.00048828125, 0.0, 0.0, -0.002554851584136486, -0.4046670198440552, -7.748603820800781e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0001697540283203125, -1.9073486328125e-06, -0.002154943533241749, -1.1563301086425781e-05, 0.0]}], "gold_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeHealth\n            (2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=RandomPicker())))\n"}
{"beams": [{"score": -1.5255778624255, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -0.9397859573364258, -9.5367431640625e-06, -4.00543212890625e-05, -3.814697265625e-05, -7.05718994140625e-05, -0.004247426986694336, 0.0, -0.007153511047363281, -0.00060272216796875, -0.00018405914306640625, 0.0, -0.0002155303955078125, 0.0, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.0052165985107421875, 0.0, 0.0, -0.0164947509765625, 0.0, -0.000308990478515625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -1.9311904907226562e-05, -1.9073486328125e-06, -0.0005931854248046875, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.049992334097623825, -0.00039504957385361195, -6.866455078125e-05, -0.2483978271484375, -0.000186920166015625, -3.814697265625e-06, 0.0, -0.14870873093605042, -0.05141478404402733, -8.702239938429557e-06, -3.814697265625e-06, -0.000217437744140625, -1.33514404296875e-05, -0.027189254760742188, -9.5367431640625e-06, -3.814697265625e-06, -0.0002810955047607422, -3.933906555175781e-06, 0.0, -0.0013828277587890625, -0.0002288818359375, -0.000164031982421875, -3.814697265625e-06, -1.9073486328125e-06, -0.007032113149762154, -0.0019350051879882812, -1.5258699932019226e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000244140625, 0.0, -0.0002009868621826172, 0.0, -0.009241104125976562, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.00014960765838623047, 0.0, -1.9073486328125e-06, -0.0002346038818359375, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, -1.811964830267243e-05, -1.1920928244535389e-07, -2.3126602172851562e-05, -9.536738616588991e-07]}, {"score": -1.5971419928487123, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -1.0123014450073242, 0.0, -0.0001697540283203125, -1.71661376953125e-05, -0.00017547607421875, -0.0009647607221268117, 0.0, -0.008848190307617188, -0.0004673004150390625, -0.000164031982421875, 0.0, -0.000255584716796875, 0.0, -5.7220458984375e-06, 0.0, -9.1552734375e-05, 0.0, -0.00518798828125, 0.0, 0.0, -0.015553474426269531, 0.0, -0.0003185272216796875, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9431114196777344e-05, -1.9073486328125e-06, -0.000591278076171875, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.05114074423909187, -0.000393380643799901, -6.866455078125e-05, -0.24794387817382812, -0.0001888275146484375, -3.814697265625e-06, 0.0, -0.147565558552742, -0.05272000655531883, -8.940656698541716e-06, -3.814697265625e-06, -0.0002155303955078125, -1.33514404296875e-05, -0.027858734130859375, -9.5367431640625e-06, -3.814697265625e-06, -0.0002810359001159668, -3.933906555175781e-06, 0.0, -0.0013904571533203125, -0.0002288818359375, -0.000164031982421875, -3.814697265625e-06, -1.9073486328125e-06, -0.007001357153058052, -0.0019378662109375, -1.5377907402580604e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002460479736328125, 0.0, -0.0002009868621826172, 0.0, -0.009241104125976562, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.00014960765838623047, 0.0, -1.9073486328125e-06, -0.0002346038818359375, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, -1.811964830267243e-05, -1.1920928244535389e-07, -2.3126602172851562e-05, -9.536738616588991e-07]}, {"score": -2.753695663408955, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -2.1686010360717773, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.0001354217529296875, -0.0011866091517731547, 0.0, -0.0099639892578125, -0.0003643035888671875, -0.00017261505126953125, 0.0, -0.00023651123046875, 0.0, -5.7220458984375e-06, 0.0, -0.000102996826171875, 0.0, -0.0049839019775390625, 0.0, 0.0, -0.015604972839355469, 0.0, -0.0003299713134765625, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0005893707275390625, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.05167311802506447, -0.000394334172597155, -6.866455078125e-05, -0.24771499633789062, -0.0001926422119140625, -3.814697265625e-06, 0.0, -0.14635677635669708, -0.05284732207655907, -8.940656698541716e-06, -3.814697265625e-06, -0.0002117156982421875, -1.33514404296875e-05, -0.027982711791992188, -9.5367431640625e-06, -3.814697265625e-06, -0.0002818107604980469, -3.933906555175781e-06, 0.0, -0.0013790130615234375, -0.0002307891845703125, -0.000164031982421875, -3.814697265625e-06, -1.9073486328125e-06, -0.007022099569439888, -0.0019378662109375, -1.5377907402580604e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002460479736328125, 0.0, -0.0002009868621826172, 0.0, -0.009240150451660156, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.00014960765838623047, 0.0, -1.9073486328125e-06, -0.0002346038818359375, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, -1.811964830267243e-05, -1.1920928244535389e-07, -2.3126602172851562e-05, -9.536738616588991e-07]}, {"score": -2.984036227094741, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -0.9397859573364258, -9.5367431640625e-06, -4.00543212890625e-05, -3.814697265625e-05, -7.05718994140625e-05, -0.004247426986694336, 0.0, -0.007153511047363281, -0.00060272216796875, -0.00018405914306640625, 0.0, -0.0002155303955078125, 0.0, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.0052165985107421875, 0.0, 0.0, -0.0164947509765625, 0.0, -0.000308990478515625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -1.9311904907226562e-05, -1.9073486328125e-06, -0.0005931854248046875, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.049992334097623825, -0.00039504957385361195, -6.866455078125e-05, -1.515512466430664, -8.58306884765625e-05, -0.1913919448852539, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0012580155162140727, -4.38690185546875e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.000209808349609375, -7.62939453125e-06, -1.9073486328125e-06, -0.00508478470146656, -0.0398256778717041, -1.549720582261216e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -0.001353214611299336, -9.536741345073096e-06, -4.57763671875e-05, -0.0037708282470703125, -0.000255584716796875, -2.6702880859375e-05, -7.62939453125e-06, -0.0026784969959408045, -0.11261749267578125, -1.2874520507466514e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.0015277862548828125, -0.05879688262939453, -1.52587890625e-05, -3.814697265625e-06, -0.0003322809934616089, -3.814697265625e-06, -1.9073486328125e-06, -0.0005893707275390625, -0.000377655029296875, -0.0002079010009765625, -5.7220458984375e-06, -1.9073486328125e-06, -0.007740351837128401, -0.0019210577011108398, -1.549711487314198e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000232696533203125, 0.0, -0.0001989603042602539, 0.0, -0.009003639221191406, 0.0, -7.62939453125e-05, 0.0, -0.0001742839813232422, 0.0, -1.9073486328125e-06, -0.000247955322265625, -3.0517578125e-05, 0.0, -3.4332275390625e-05, -1.7404405298293568e-05, -1.1920928244535389e-07, -2.5033950805664062e-05, -9.536738616588991e-07]}, {"score": -3.0561979227236336, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -1.0123014450073242, 0.0, -0.0001697540283203125, -1.71661376953125e-05, -0.00017547607421875, -0.0009647607221268117, 0.0, -0.008848190307617188, -0.0004673004150390625, -0.000164031982421875, 0.0, -0.000255584716796875, 0.0, -5.7220458984375e-06, 0.0, -9.1552734375e-05, 0.0, -0.00518798828125, 0.0, 0.0, -0.015553474426269531, 0.0, -0.0003185272216796875, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9431114196777344e-05, -1.9073486328125e-06, -0.000591278076171875, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.05114074423909187, -0.000393380643799901, -6.866455078125e-05, -1.517134666442871, -8.58306884765625e-05, -0.19097042083740234, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0012561081675812602, -4.38690185546875e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.000209808349609375, -7.62939453125e-06, -1.9073486328125e-06, -0.005064147058874369, -0.039781808853149414, -1.549720582261216e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -0.001353214611299336, -9.536741345073096e-06, -4.57763671875e-05, -0.0037708282470703125, -0.000255584716796875, -2.6702880859375e-05, -7.62939453125e-06, -0.002679091412574053, -0.11230659484863281, -1.2874520507466514e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.0015316009521484375, -0.058945655822753906, -1.52587890625e-05, -3.814697265625e-06, -0.00033237040042877197, -3.814697265625e-06, -1.9073486328125e-06, -0.0005893707275390625, -0.000377655029296875, -0.0002079010009765625, -5.7220458984375e-06, -1.9073486328125e-06, -0.007719847839325666, -0.001922011375427246, -1.549711487314198e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000232696533203125, 0.0, -0.0001989603042602539, 0.0, -0.009003639221191406, 0.0, -7.62939453125e-05, 0.0, -0.0001742839813232422, 0.0, -1.9073486328125e-06, -0.000247955322265625, -3.0517578125e-05, 0.0, -3.4332275390625e-05, -1.7404405298293568e-05, -1.1920928244535389e-07, -2.5033950805664062e-05, -9.536738616588991e-07]}, {"score": -3.431061540349667, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -2.8414063453674316, 0.0, -2.6702880859375e-05, -3.0517578125e-05, -9.918212890625e-05, -0.0029227733612060547, 0.0, -0.010214805603027344, -0.0004940032958984375, -0.00015926361083984375, 0.0, -0.0002193450927734375, 0.0, -5.7220458984375e-06, 0.0, -0.000102996826171875, 0.0, -0.00511932373046875, 0.0, 0.0, -0.015542030334472656, 0.0, -0.0003299713134765625, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9431114196777344e-05, -1.9073486328125e-06, -0.000579833984375, -0.0001068115234375, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.05144215747714043, -0.00039373821346089244, -6.866455078125e-05, -0.24754714965820312, -0.0001888275146484375, -3.814697265625e-06, 0.0, -0.14936839044094086, -0.052668388932943344, -8.821448318485636e-06, -3.814697265625e-06, -0.0002155303955078125, -1.33514404296875e-05, -0.02796173095703125, -9.5367431640625e-06, -3.814697265625e-06, -0.0002810955047607422, -3.933906555175781e-06, 0.0, -0.001392364501953125, -0.0002307891845703125, -0.0001659393310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.007018404081463814, -0.0019378662109375, -1.5258699932019226e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002460479736328125, 0.0, -0.0002009868621826172, 0.0, -0.009240150451660156, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.00014960765838623047, 0.0, -1.9073486328125e-06, -0.0002346038818359375, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, -1.811964830267243e-05, -1.1920928244535389e-07, -2.3126602172851562e-05, -9.536738616588991e-07]}, {"score": -4.1497186614410495, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -3.5542240142822266, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.43865966796875e-05, -0.00764012336730957, 0.0, -0.011102676391601562, -0.00034332275390625, -0.000213623046875, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, 0.0, -9.72747802734375e-05, 0.0, -0.0049953460693359375, 0.0, 0.0, -0.01654338836669922, 0.0, -0.000335693359375, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9431114196777344e-05, -1.9073486328125e-06, -0.000553131103515625, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.052226778119802475, -0.00039349982398562133, -6.866455078125e-05, -0.2482776641845703, -0.0001888275146484375, -3.814697265625e-06, 0.0, -0.14777134358882904, -0.05235534533858299, -8.821448318485636e-06, -3.814697265625e-06, -0.000213623046875, -1.33514404296875e-05, -0.027959823608398438, -9.5367431640625e-06, -3.814697265625e-06, -0.00028192996978759766, -3.933906555175781e-06, 0.0, -0.0013713836669921875, -0.0002307891845703125, -0.0001659393310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.006979422643780708, -0.0019378662109375, -1.5377907402580604e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002460479736328125, 0.0, -0.0002009868621826172, 0.0, -0.009241104125976562, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.00014960765838623047, 0.0, -1.9073486328125e-06, -0.0002346038818359375, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, -1.8000440832111053e-05, -1.1920928244535389e-07, -2.3126602172851562e-05, -9.536738616588991e-07]}, {"score": -4.215457102941848, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -2.1686010360717773, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.0001354217529296875, -0.0011866091517731547, 0.0, -0.0099639892578125, -0.0003643035888671875, -0.00017261505126953125, 0.0, -0.00023651123046875, 0.0, -5.7220458984375e-06, 0.0, -0.000102996826171875, 0.0, -0.0049839019775390625, 0.0, 0.0, -0.015604972839355469, 0.0, -0.0003299713134765625, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0005893707275390625, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.05167311802506447, -0.000394334172597155, -6.866455078125e-05, -1.517953872680664, -8.58306884765625e-05, -0.1913595199584961, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.001257896306924522, -4.38690185546875e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0002079010009765625, -7.62939453125e-06, -1.9073486328125e-06, -0.005038526840507984, -0.0397493839263916, -1.549720582261216e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0013550028670579195, -9.536741345073096e-06, -4.57763671875e-05, -0.003772735595703125, -0.000255584716796875, -2.6702880859375e-05, -7.62939453125e-06, -0.0026789724361151457, -0.1127166748046875, -1.2874520507466514e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.0015354156494140625, -0.058892250061035156, -1.52587890625e-05, -3.814697265625e-06, -0.0003323554992675781, -3.814697265625e-06, -1.9073486328125e-06, -0.0005893707275390625, -0.000377655029296875, -0.0002079010009765625, -5.7220458984375e-06, -1.9073486328125e-06, -0.007736775558441877, -0.0019210577011108398, -1.549711487314198e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000232696533203125, 0.0, -0.0001989603042602539, 0.0, -0.009003639221191406, 0.0, -7.62939453125e-05, 0.0, -0.0001742839813232422, 0.0, -1.9073486328125e-06, -0.000247955322265625, -3.0517578125e-05, 0.0, -3.4332275390625e-05, -1.7404405298293568e-05, -1.1920928244535389e-07, -2.5033950805664062e-05, -9.536738616588991e-07]}, {"score": -4.542410754267614, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -0.9397859573364258, -9.5367431640625e-06, -4.00543212890625e-05, -3.814697265625e-05, -7.05718994140625e-05, -0.004247426986694336, 0.0, -0.007153511047363281, -0.00060272216796875, -0.00018405914306640625, 0.0, -0.0002155303955078125, 0.0, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.0052165985107421875, 0.0, 0.0, -0.0164947509765625, 0.0, -0.000308990478515625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -1.9311904907226562e-05, -1.9073486328125e-06, -0.0005931854248046875, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.049992334097623825, -0.00039504957385361195, -6.866455078125e-05, -0.2483978271484375, -0.000186920166015625, -3.814697265625e-06, 0.0, -0.14870873093605042, -3.0255539417266846, -9.536738616588991e-07, -7.62939453125e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.07128334045410156, -1.1444091796875e-05, -9.5367431640625e-06, -0.00028312206268310547, -3.933906555175781e-06, -1.9073486328125e-06, -0.0013904571533203125, -0.000148773193359375, -0.0002155303955078125, -3.814697265625e-06, -1.9073486328125e-06, -0.0056566763669252396, -0.001990675926208496, -2.026544461841695e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.00021445751190185547, 0.0, -0.0093536376953125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.00014960765838623047, 0.0, -1.9073486328125e-06, -0.0002346038818359375, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, -1.823885577323381e-05, -1.1920928244535389e-07, -2.3126602172851562e-05, -9.536738616588991e-07]}, {"score": -4.588519707864172, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -1.0123014450073242, 0.0, -0.0001697540283203125, -1.71661376953125e-05, -0.00017547607421875, -0.0009647607221268117, 0.0, -0.008848190307617188, -0.0004673004150390625, -0.000164031982421875, 0.0, -0.000255584716796875, 0.0, -5.7220458984375e-06, 0.0, -9.1552734375e-05, 0.0, -0.00518798828125, 0.0, 0.0, -0.015553474426269531, 0.0, -0.0003185272216796875, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9431114196777344e-05, -1.9073486328125e-06, -0.000591278076171875, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.05114074423909187, -0.000393380643799901, -6.866455078125e-05, -0.24794387817382812, -0.0001888275146484375, -3.814697265625e-06, 0.0, -0.147565558552742, -3.0001049041748047, -9.536738616588991e-07, -7.62939453125e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.07324028015136719, -1.1444091796875e-05, -9.5367431640625e-06, -0.00028324127197265625, -3.933906555175781e-06, -1.9073486328125e-06, -0.00139617919921875, -0.000148773193359375, -0.0002155303955078125, -3.814697265625e-06, -1.9073486328125e-06, -0.005639629438519478, -0.0019925832748413086, -2.026544461841695e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.00021445751190185547, 0.0, -0.009354591369628906, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.00014960765838623047, 0.0, -1.9073486328125e-06, -0.0002346038818359375, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, -1.823885577323381e-05, -1.1920928244535389e-07, -2.3126602172851562e-05, -9.536738616588991e-07]}, {"score": -4.651052132251543, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(MinionSelector(IsType(MINION_TYPE.MECH))),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -0.9397859573364258, -9.5367431640625e-06, -4.00543212890625e-05, -3.814697265625e-05, -7.05718994140625e-05, -0.004247426986694336, 0.0, -0.007153511047363281, -0.00060272216796875, -0.00018405914306640625, 0.0, -0.0002155303955078125, 0.0, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.0052165985107421875, 0.0, 0.0, -0.0164947509765625, 0.0, -0.000308990478515625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -1.9311904907226562e-05, -1.9073486328125e-06, -0.0005931854248046875, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.049992334097623825, -0.00039504957385361195, -6.866455078125e-05, -0.2483978271484375, -0.000186920166015625, -3.814697265625e-06, 0.0, -2.0311954021453857, -0.1148524284362793, -2.562971531006042e-05, -0.007656097412109375, -0.04164886474609375, -0.014260292053222656, -3.814697265625e-06, 0.0, -0.13185380399227142, -0.0012781618861481547, -1.025196434056852e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.00022017955780029297, -1.1920928244535389e-07, -0.010051727294921875, 0.0, -1.0165367126464844, -5.7220458984375e-05, -0.0035420656204223633, -0.0001125335693359375, 0.0, -5.7220458984375e-06, 0.0, -9.632110595703125e-05, 0.0, 0.0, -0.000629425048828125, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.00011193146929144859, 0.0, -1.811981201171875e-05, -3.576278118089249e-07]}, {"score": -4.735900871380117, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(MinionSelector(IsType(MINION_TYPE.MECH))),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -1.0123014450073242, 0.0, -0.0001697540283203125, -1.71661376953125e-05, -0.00017547607421875, -0.0009647607221268117, 0.0, -0.008848190307617188, -0.0004673004150390625, -0.000164031982421875, 0.0, -0.000255584716796875, 0.0, -5.7220458984375e-06, 0.0, -9.1552734375e-05, 0.0, -0.00518798828125, 0.0, 0.0, -0.015553474426269531, 0.0, -0.0003185272216796875, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9431114196777344e-05, -1.9073486328125e-06, -0.000591278076171875, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.05114074423909187, -0.000393380643799901, -6.866455078125e-05, -0.24794387817382812, -0.0001888275146484375, -3.814697265625e-06, 0.0, -2.0362422466278076, -0.11224615573883057, -2.646416032803245e-05, -0.00695037841796875, -0.04477214813232422, -0.014871597290039062, -3.814697265625e-06, 0.0, -0.13214363157749176, -0.0012772082118317485, -1.025196434056852e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.00022017955780029297, -1.1920928244535389e-07, -0.010053634643554688, 0.0, -1.024892807006836, -5.7220458984375e-05, -0.0035229921340942383, -0.000110626220703125, 0.0, -5.7220458984375e-06, 0.0, -9.632110595703125e-05, 0.0, 0.0, -0.000629425048828125, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -0.00011193146929144859, 0.0, -1.811981201171875e-05, -3.576278118089249e-07]}, {"score": -4.890785213723113, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -2.8414063453674316, 0.0, -2.6702880859375e-05, -3.0517578125e-05, -9.918212890625e-05, -0.0029227733612060547, 0.0, -0.010214805603027344, -0.0004940032958984375, -0.00015926361083984375, 0.0, -0.0002193450927734375, 0.0, -5.7220458984375e-06, 0.0, -0.000102996826171875, 0.0, -0.00511932373046875, 0.0, 0.0, -0.015542030334472656, 0.0, -0.0003299713134765625, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9431114196777344e-05, -1.9073486328125e-06, -0.000579833984375, -0.0001068115234375, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.05144215747714043, -0.00039373821346089244, -6.866455078125e-05, -1.518545150756836, -8.58306884765625e-05, -0.1914682388305664, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0012542008189484477, -4.38690185546875e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0002079010009765625, -7.62939453125e-06, -1.9073486328125e-06, -0.005036748014390469, -0.0397646427154541, -1.549720582261216e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0013528570998460054, -9.536741345073096e-06, -4.57763671875e-05, -0.0037689208984375, -0.000255584716796875, -2.6702880859375e-05, -7.62939453125e-06, -0.0026777833700180054, -0.11269855499267578, -1.2874520507466514e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.0015430450439453125, -0.05881690979003906, -1.52587890625e-05, -3.814697265625e-06, -0.00033237040042877197, -3.814697265625e-06, -1.9073486328125e-06, -0.0005893707275390625, -0.000377655029296875, -0.0002079010009765625, -5.7220458984375e-06, -1.9073486328125e-06, -0.007736656349152327, -0.0019210577011108398, -1.549711487314198e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000232696533203125, 0.0, -0.0001989603042602539, 0.0, -0.009003639221191406, 0.0, -7.62939453125e-05, 0.0, -0.0001742839813232422, 0.0, -1.9073486328125e-06, -0.000247955322265625, -3.0517578125e-05, 0.0, -3.4332275390625e-05, -1.7404405298293568e-05, -1.1920928244535389e-07, -2.5033950805664062e-05, -9.536738616588991e-07]}, {"score": -5.123809343339296, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(MinionSelector(IsType(MINION_TYPE.MECH))),\n            ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -0.9397859573364258, -9.5367431640625e-06, -4.00543212890625e-05, -3.814697265625e-05, -7.05718994140625e-05, -0.004247426986694336, 0.0, -0.007153511047363281, -0.00060272216796875, -0.00018405914306640625, 0.0, -0.0002155303955078125, 0.0, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.0052165985107421875, 0.0, 0.0, -0.0164947509765625, 0.0, -0.000308990478515625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -1.9311904907226562e-05, -1.9073486328125e-06, -0.0005931854248046875, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.049992334097623825, -0.00039504957385361195, -6.866455078125e-05, -0.2483978271484375, -0.000186920166015625, -3.814697265625e-06, 0.0, -2.0311954021453857, -0.1148524284362793, -2.562971531006042e-05, -0.007656097412109375, -0.04164886474609375, -0.014260292053222656, -3.814697265625e-06, 0.0, -0.13185380399227142, -0.0012781618861481547, -1.025196434056852e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.00022017955780029297, -1.1920928244535389e-07, -0.010051727294921875, 0.0, -0.4492969512939453, -0.0037136077880859375, 0.0, 0.0, -0.5084854364395142, -0.000957489013671875, -1.9073486328125e-06, -3.4332275390625e-05, -0.00011444091796875, -0.0001888275146484375, -3.814697265625e-06, 0.0, -0.001883506658487022, -2.2888181774760596e-05, -9.5367431640625e-06, -0.21431732177734375, -6.4849853515625e-05, -0.08127307891845703, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0007617473602294922, -1.9073486328125e-05, -4.00543212890625e-05, -3.0517578125e-05, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0015022647567093372, -0.03456556797027588, -2.3007391064311378e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0018579281168058515, -7.6293927122605965e-06, -4.38690185546875e-05, -0.004604339599609375, -0.0002231597900390625, -3.24249267578125e-05, -7.62939453125e-06, -0.002749286126345396, -0.17740654945373535, -1.2636104656849056e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.003513336181640625, -1.9073486328125e-06, -0.005709991790354252, -0.00010883808135986328, 0.0, -1.9073486328125e-06, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -5.53131103515625e-05, -2.6702880859375e-05, -1.1918018572032452e-07, -9.5367431640625e-06, -8.880697714630514e-05, 0.0, -2.205371856689453e-05, -4.768370445162873e-07]}, {"score": -5.194760424898838, "choice_history": [59, 124, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Screwjank", " ", "Clunker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(MinionSelector(IsType(MINION_TYPE.MECH))),\n            ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "ScrewjankClunker", "hole3": "create_minion"}, "score_history": [0.0, -7.2479248046875e-05, -0.0017279977910220623, -0.00021455370006151497, -5.6862118071876466e-05, 0.0, -9.5367431640625e-06, -5.602834789897315e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.847726889536716e-05, -3.063678741455078e-05, -1.3947389561508317e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.0398361559491605e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.1457672119140625e-06, -1.0123014450073242, 0.0, -0.0001697540283203125, -1.71661376953125e-05, -0.00017547607421875, -0.0009647607221268117, 0.0, -0.008848190307617188, -0.0004673004150390625, -0.000164031982421875, 0.0, -0.000255584716796875, 0.0, -5.7220458984375e-06, 0.0, -9.1552734375e-05, 0.0, -0.00518798828125, 0.0, 0.0, -0.015553474426269531, 0.0, -0.0003185272216796875, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9431114196777344e-05, -1.9073486328125e-06, -0.000591278076171875, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.05114074423909187, -0.000393380643799901, -6.866455078125e-05, -0.24794387817382812, -0.0001888275146484375, -3.814697265625e-06, 0.0, -2.0362422466278076, -0.11224615573883057, -2.646416032803245e-05, -0.00695037841796875, -0.04477214813232422, -0.014871597290039062, -3.814697265625e-06, 0.0, -0.13214363157749176, -0.0012772082118317485, -1.025196434056852e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.00022017955780029297, -1.1920928244535389e-07, -0.010053634643554688, 0.0, -0.44458770751953125, -0.00371551513671875, 0.0, 0.0, -0.507754921913147, -0.0009555816650390625, -1.9073486328125e-06, -3.4332275390625e-05, -0.0001125335693359375, -0.0001888275146484375, -3.814697265625e-06, 0.0, -0.0018854140071198344, -2.2888181774760596e-05, -9.5367431640625e-06, -0.2142620086669922, -6.4849853515625e-05, -0.08127498626708984, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0007617473602294922, -1.9073486328125e-05, -4.00543212890625e-05, -3.0517578125e-05, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0015023838495835662, -0.03456556797027588, -2.3007391064311378e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -0.001856020768173039, -7.6293927122605965e-06, -4.38690185546875e-05, -0.004604339599609375, -0.0002231597900390625, -3.24249267578125e-05, -7.62939453125e-06, -0.002749286126345396, -0.1773388385772705, -1.2636104656849056e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.003513336181640625, -1.9073486328125e-06, -0.005709991790354252, -0.00010883808135986328, 0.0, -1.9073486328125e-06, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -5.53131103515625e-05, -2.6702880859375e-05, -2.383312676101923e-07, -9.5367431640625e-06, -8.880697714630514e-05, 0.0, -2.205371856689453e-05, -4.768370445162873e-07]}], "gold_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}
{"beams": [{"score": -1.1261420517362808, "choice_history": [59, 124, "<UNK>", "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 55, 51, 130, "Is", "Minion", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsMinion"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Old", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -0.2800310254096985, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -0.037682533264160156, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.01575183868408203, -0.00339508056640625, -1.9073486328125e-06, 0.0, 0.0, -0.16252338886260986, -0.004194378852844238, 0.0, -1.9073486328125e-06, -0.09637451171875, -0.0020599365234375, 0.0, -0.011029229499399662, -0.04474332928657532, -1.9073486328125e-06, -0.0026416778564453125, 0.0, -2.288818359375e-05, -3.814697265625e-06, 0.0]}, {"score": -2.3694396882452224, "choice_history": [59, 124, "<UNK>", "<UNK>", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 55, 51, 130, "Is", "Minion", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Shredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsMinion"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Shredder", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -1.5233286619186401, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -0.037682533264160156, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.01575183868408203, -0.00339508056640625, -1.9073486328125e-06, 0.0, 0.0, -0.16252338886260986, -0.004194378852844238, 0.0, -1.9073486328125e-06, -0.09637451171875, -0.0020599365234375, 0.0, -0.011029229499399662, -0.04474332928657532, -1.9073486328125e-06, -0.0026416778564453125, 0.0, -2.288818359375e-05, -3.814697265625e-06, 0.0]}, {"score": -2.5839443623222564, "choice_history": [59, 124, "<UNK>", "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 55, 51, 130, "Is", "Minion", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Sneed Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsMinion"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Old", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -0.2800310254096985, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.6682335138320923, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -0.037682533264160156, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.01575183868408203, -0.00339508056640625, -1.9073486328125e-06, 0.0, 0.0, -0.16252338886260986, -0.004194378852844238, 0.0, -1.9073486328125e-06, -0.09637451171875, -0.0020599365234375, 0.0, -0.011029229499399662, -0.04474332928657532, -1.9073486328125e-06, -0.0026416778564453125, 0.0, -2.288818359375e-05, -3.814697265625e-06, 0.0]}, {"score": -3.1339710654825126, "choice_history": [59, 124, "<UNK>", "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Sneed", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(Sneed()),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Sneed"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Old", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -0.2800310254096985, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -2.3935956954956055, 0.0, -0.05450687184929848, -0.08482573926448822, -0.004119873046875, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0]}, {"score": -3.827241998831198, "choice_history": [59, 124, "<UNK>", "<UNK>", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 55, 51, 130, "Is", "Minion", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Shredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Sneed Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsMinion"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Shredder", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -1.5233286619186401, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.6682335138320923, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -0.037682533264160156, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.01575183868408203, -0.00339508056640625, -1.9073486328125e-06, 0.0, 0.0, -0.16252338886260986, -0.004194378852844238, 0.0, -1.9073486328125e-06, -0.09637451171875, -0.0020599365234375, 0.0, -0.011029229499399662, -0.04474332928657532, -1.9073486328125e-06, -0.0026416778564453125, 0.0, -2.288818359375e-05, -3.814697265625e-06, 0.0]}, {"score": -4.046906966333665, "choice_history": [59, 124, "<UNK>", "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 41, 89, 24, 112, "Attribute", "<EOS>", 165, 49, 121, "attack", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Is", "Spell", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(Attribute('attack', MinionSelector(\n            EnemyPlayer()))), IsSpell()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"s": "attack", "_type": "Str"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Attribute"}}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsSpell"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Old", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -0.2800310254096985, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -0.037682533264160156, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.01575183868408203, -0.00339508056640625, -1.9073486328125e-06, 0.0, 0.0, -0.16252338886260986, -0.004194378852844238, 0.0, -1.9073486328125e-06, -2.424633026123047, -4.9591064453125e-05, 0.0, 0.0, -0.032242417335510254, -3.3020973205566406e-05, -0.0006084442138671875, -1.1444091796875e-05, -0.000179290771484375, -0.1914006471633911, -5.91278076171875e-05, -0.1365041732788086, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -0.010516062378883362, -6.4849853515625e-05, -0.0002384185791015625, -0.0016536712646484375, -0.026208877563476562, -1.9073486328125e-06, -0.03186170011758804, -7.653236389160156e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.0011395214824005961, -0.19543440639972687, -1.1444091796875e-05, -0.02451324462890625, -3.814697265625e-06, -0.00011646747589111328, -3.814697265625e-06, 0.0]}, {"score": -4.257878538886473, "choice_history": [59, 124, "<UNK>", "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 55, 51, 130, "Is", "Spell", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsSpell()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsSpell"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Old", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -0.2800310254096985, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -0.037682533264160156, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.01575183868408203, -0.00339508056640625, -1.9073486328125e-06, 0.0, 0.0, -0.16252338886260986, -0.004194378852844238, 0.0, -1.9073486328125e-06, -0.09637451171875, -0.0020599365234375, 0.0, -0.011029229499399662, -3.178572177886963, -3.814697265625e-06, -0.0005550384521484375, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0]}, {"score": -4.377268701991454, "choice_history": [59, 124, "<UNK>", "<UNK>", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Sneed", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Shredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(Sneed()),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Sneed"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Shredder", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -1.5233286619186401, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -2.3935956954956055, 0.0, -0.05450687184929848, -0.08482573926448822, -0.004119873046875, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0]}, {"score": -4.585063417176173, "choice_history": [59, 124, "<UNK>", "Old", "Old", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 55, 51, 130, "Is", "Minion", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK>OldOld(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsMinion"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK>OldOld", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -3.4907541275024414, -0.2800310254096985, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -0.037682533264160156, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.01575183868408203, -0.00339508056640625, -1.9073486328125e-06, 0.0, 0.0, -0.16252338886260986, -0.004194378852844238, 0.0, -1.9073486328125e-06, -0.09637451171875, -0.0020599365234375, 0.0, -0.011029229499399662, -0.04474332928657532, -1.9073486328125e-06, -0.0026416778564453125, 0.0, -2.288818359375e-05, -3.814697265625e-06, 0.0]}, {"score": -4.591773376068488, "choice_history": [59, 124, "<UNK>", "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Sneed", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(Sneed()),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Sneed Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Sneed"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Old", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -0.2800310254096985, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.6682335138320923, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -2.3935956954956055, 0.0, -0.05450687184929848, -0.08482573926448822, -0.004119873046875, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0]}, {"score": -4.640738215962813, "choice_history": [59, 124, "<UNK>", "<UNK>", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 55, 51, 130, "Is", "Minion", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsMinion"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK><UNK>", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -3.7946271896362305, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -0.037682533264160156, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.01575183868408203, -0.00339508056640625, -1.9073486328125e-06, 0.0, 0.0, -0.16252338886260986, -0.004194378852844238, 0.0, -1.9073486328125e-06, -0.09637451171875, -0.0020599365234375, 0.0, -0.011029229499399662, -0.04474332928657532, -1.9073486328125e-06, -0.0026416778564453125, 0.0, -2.288818359375e-05, -3.814697265625e-06, 0.0]}, {"score": -4.7213118180766855, "choice_history": [59, 124, "<UNK>", "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class <UNK><UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(source\n            =CARD_SOURCE.<UNK>)), PlayerSelector(EnemyPlayer())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Old", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -0.2800310254096985, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -3.4627885818481445, 0.0, -0.0026216506958007812, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0016747713088989258, -0.000225067138671875, -0.3954277038574219, 0.0, -0.11107826232910156, -6.866455078125e-05, 0.0, 0.0, -0.0010471343994140625, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.0008893008343875408, -5.841255187988281e-06, 0.0]}, {"score": -4.793507960355413, "choice_history": [59, 124, "<UNK>", "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 55, 51, 130, "Is", "Minion", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsMinion"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Old", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -0.2800310254096985, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -3.7021830081939697, -7.557868957519531e-05, -3.814697265625e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0005285739898681641, -8.225440979003906e-05, -3.814697265625e-06, -0.0004253387451171875, -1.9073486328125e-05, -0.0010776519775390625, -0.0039196014404296875, 0.0, -4.9591064453125e-05, -4.38690185546875e-05, -0.00019752979278564453, -2.3841855067985307e-07, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.003021240234375, 0.0, -7.62939453125e-06, 0.0, -0.0006783008575439453, 0.0, -8.392333984375e-05, -5.7220458984375e-06, -0.0025577545166015625, -4.219716720399447e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002613067626953125, -0.008904808200895786, -7.629378160345368e-06, -0.0013275146484375, -0.09582710266113281, -0.045027732849121094, -1.9073486328125e-06, 0.0, -0.005568384658545256, -0.0011049509048461914, 0.0, -0.0008792877197265625, -1.9073486328125e-06, -0.03763771057128906, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.015755653381347656, -0.0033931732177734375, -1.9073486328125e-06, 0.0, 0.0, -0.16249096393585205, -0.0041953325271606445, 0.0, -1.9073486328125e-06, -0.09637832641601562, -0.0020599365234375, 0.0, -0.011031136848032475, -0.044736772775650024, -1.9073486328125e-06, -0.0026416778564453125, 0.0, -2.288818359375e-05, -3.814697265625e-06, 0.0]}, {"score": -5.290204602842607, "choice_history": [59, 124, "<UNK>", "<UNK>", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 41, 89, 24, 112, "Attribute", "<EOS>", 165, 49, 121, "attack", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Is", "Spell", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Shredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(Attribute('attack', MinionSelector(\n            EnemyPlayer()))), IsSpell()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"s": "attack", "_type": "Str"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Attribute"}}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsSpell"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Shredder", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -1.5233286619186401, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.21043120324611664, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -0.037682533264160156, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.01575183868408203, -0.00339508056640625, -1.9073486328125e-06, 0.0, 0.0, -0.16252338886260986, -0.004194378852844238, 0.0, -1.9073486328125e-06, -2.424633026123047, -4.9591064453125e-05, 0.0, 0.0, -0.032242417335510254, -3.3020973205566406e-05, -0.0006084442138671875, -1.1444091796875e-05, -0.000179290771484375, -0.1914006471633911, -5.91278076171875e-05, -0.1365041732788086, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -0.010516062378883362, -6.4849853515625e-05, -0.0002384185791015625, -0.0016536712646484375, -0.026208877563476562, -1.9073486328125e-06, -0.03186170011758804, -7.653236389160156e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.0011395214824005961, -0.19543440639972687, -1.1444091796875e-05, -0.02451324462890625, -3.814697265625e-06, -0.00011646747589111328, -3.814697265625e-06, 0.0]}, {"score": -5.504709276919641, "choice_history": [59, 124, "<UNK>", "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", 48, 117, "8", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 41, 89, 24, 112, "Attribute", "<EOS>", 165, 49, 121, "attack", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Is", "Spell", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(Attribute('attack', MinionSelector(\n            EnemyPlayer()))), IsSpell()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Sneed Old Shredder", "_type": "Str"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"s": "attack", "_type": "Str"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Attribute"}}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsSpell"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "<UNK><UNK>Old", "hole3": "create_minion"}, "score_history": [-4.00543212890625e-05, -0.0002307891845703125, -0.006235312670469284, -0.03183276206254959, -0.2800310254096985, -0.0016723840963095427, -1.549196895211935e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -4.38690185546875e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.6682335138320923, -0.00026702880859375, -0.002300107618793845, -0.00055694580078125, -0.0009845462627708912, -0.0006694793701171875, -0.000209808349609375, -7.43865966796875e-05, -0.03427255153656006, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.0010828971862792969, -7.843971252441406e-05, -1.9073486328125e-06, -0.000507354736328125, -2.09808349609375e-05, -0.00116729736328125, -0.0036897659301757812, 0.0, -4.9591064453125e-05, -4.1961669921875e-05, -0.00020325183868408203, -2.3841855067985307e-07, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003948211669921875, -3.814697265625e-06, -0.0030040740966796875, 0.0, -7.62939453125e-06, 0.0, -0.0006878376007080078, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0025482177734375, -4.2077961552422494e-05, -8.344646857949556e-07, -0.0002785921096801758, -4.887569048150908e-06, -7.629378160345368e-06, -8.821448318485636e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.00042176246643066406, 0.0, -0.001018524169921875, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002595186233520508, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004825592041015625, -2.288818359375e-05, -7.62939453125e-06, -0.0002593994140625, -0.008900039829313755, -7.629378160345368e-06, -0.0013275146484375, -0.09588813781738281, -0.04505634307861328, -1.9073486328125e-06, 0.0, -0.005566477309912443, -0.0011049509048461914, 0.0, -0.00087738037109375, -1.9073486328125e-06, -0.037682533264160156, -3.814697265625e-06, -0.000274658203125, -2.86102294921875e-05, -0.01575183868408203, -0.00339508056640625, -1.9073486328125e-06, 0.0, 0.0, -0.16252338886260986, -0.004194378852844238, 0.0, -1.9073486328125e-06, -2.424633026123047, -4.9591064453125e-05, 0.0, 0.0, -0.032242417335510254, -3.3020973205566406e-05, -0.0006084442138671875, -1.1444091796875e-05, -0.000179290771484375, -0.1914006471633911, -5.91278076171875e-05, -0.1365041732788086, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -0.010516062378883362, -6.4849853515625e-05, -0.0002384185791015625, -0.0016536712646484375, -0.026208877563476562, -1.9073486328125e-06, -0.03186170011758804, -7.653236389160156e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.0011395214824005961, -0.19543440639972687, -1.1444091796875e-05, -0.02451324462890625, -3.814697265625e-06, -0.00011646747589111328, -3.814697265625e-06, 0.0]}], "gold_code": "class SneedsOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sneed's Old Shredder\", 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[IsRarity(CARD_RARITY.LEGENDARY), IsMinion()])),\n            PlayerSelector()))\n"}
{"beams": [{"score": -1.8019676408884493, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 173, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 154, "source_list", "<EOS>", 24, 112, "<UNK>", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=<UNK>)), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"_type": "keyword", "arg": "source_list", "value": {"_type": "Name", "id": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -0.49481117725372314, 0.0, -0.00142669677734375, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.548664093017578e-05, -7.62939453125e-06, -0.0377427339553833, -1.9073486328125e-06, -0.0002480745315551758, -1.9073486328125e-06, -0.001030314713716507, 0.0, -0.5273189544677734, -2.86102294921875e-05, -0.012074470520019531, 0.0, -3.576278118089249e-07, -0.002521514892578125, -8.940656698541716e-06, -5.841247457283316e-06, -3.123234637314454e-05, -0.000347137451171875, 0.0, -0.00487065315246582, 0.0, -0.0055103302001953125, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00017178058624267578, 0.0, -0.00701141357421875, -0.017171859741210938, -0.0034189224243164062, -5.7220458984375e-06, -0.0001373291015625, -0.003407238284125924, -0.00036227318923920393, -0.0001748800277709961, -0.0013256072998046875, -6.4849853515625e-05, -9.72747802734375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.013549847528338432, -0.000546574592590332, -6.115436553955078e-05, -0.008630752563476562, -0.000118255615234375, -0.0014383791713044047, 0.0, -0.00139617919921875, 0.0, -4.00543212890625e-05, -0.0001201629638671875, -0.000705718994140625, -1.9073486328125e-06, -0.004700779914855957, -3.814697265625e-06, -0.0005054473876953125, -0.005775570869445801, -0.00609588623046875, -0.0018463134765625, -1.9073486328125e-06, -0.5084161758422852, -7.653236389160156e-05, -0.02020549774169922, -7.62939453125e-06, -0.0002995729446411133, -0.000225067138671875, 0.0]}, {"score": -2.2810380659220186, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 173, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 154, "source_list", "<EOS>", 24, 112, "spare_part_list", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"_type": "keyword", "arg": "source_list", "value": {"_type": "Name", "id": "spare_part_list"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -0.49481117725372314, 0.0, -0.00142669677734375, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.548664093017578e-05, -7.62939453125e-06, -0.0377427339553833, -1.9073486328125e-06, -0.0002480745315551758, -1.9073486328125e-06, -0.001030314713716507, 0.0, -0.5273189544677734, -2.86102294921875e-05, -0.012074470520019531, 0.0, -3.576278118089249e-07, -0.002521514892578125, -8.940656698541716e-06, -5.841247457283316e-06, -3.123234637314454e-05, -0.000347137451171875, 0.0, -0.00487065315246582, 0.0, -0.0055103302001953125, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00017178058624267578, 0.0, -0.00701141357421875, -0.017171859741210938, -0.0034189224243164062, -5.7220458984375e-06, -0.0001373291015625, -0.003407238284125924, -0.00036227318923920393, -0.0001748800277709961, -0.0013256072998046875, -6.4849853515625e-05, -9.72747802734375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.013549847528338432, -0.000546574592590332, -6.115436553955078e-05, -0.008630752563476562, -0.000118255615234375, -0.0014383791713044047, 0.0, -0.00139617919921875, 0.0, -4.00543212890625e-05, -0.0001201629638671875, -0.000705718994140625, -1.9073486328125e-06, -0.004700779914855957, -3.814697265625e-06, -0.0005054473876953125, -0.005775570869445801, -0.00609588623046875, -0.0018463134765625, -1.9073486328125e-06, -0.9978828430175781, -1.9073486328125e-06, -0.009927749633789062, -5.7220458984375e-06, -0.00012600421905517578, -0.0003566741943359375, 0.0]}, {"score": -2.4321228827320738, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 178, 72, 101, "<UNK>", "<EOS>", 155, 150, "spare_part_list", "<EOS>", "0", "<EOS>", 75, 144, "Minion", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 173, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 154, "source_list", "<EOS>", 24, 112, "spare_part_list", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        from <UNK> import spare_part_list\n        return Minion(7, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"names": [{"_type": "alias", "name": "spare_part_list"}], "_type": "ImportFrom", "level": 0, "module": "<UNK>"}, {"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"_type": "keyword", "arg": "source_list", "value": {"_type": "Name", "id": "spare_part_list"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -0.49481117725372314, 0.0, -0.00142669677734375, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.548664093017578e-05, -7.62939453125e-06, -0.0377427339553833, -1.9073486328125e-06, -0.0002480745315551758, -1.9073486328125e-06, -0.001030314713716507, 0.0, -0.8966703414916992, -0.10906124114990234, -0.000347137451171875, -0.0037518758326768875, -0.0005627870559692383, -0.04386329650878906, -0.0013570785522460938, -0.03849577158689499, -2.47955322265625e-05, -0.00636935792863369, 0.0, -0.000545501708984375, -0.002841949462890625, -0.0015644000377506018, 0.0, -0.345943808555603, -1.6689286894688848e-06, -0.0003723418922163546, -1.764281842042692e-05, -0.00213623046875, 0.0, -0.0023870468139648438, 0.0, -0.00665283203125, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.0009250640869140625, 0.0, -0.0008068084716796875, -0.0010242462158203125, -0.010668754577636719, -5.7220458984375e-06, -1.71661376953125e-05, -0.0031477208249270916, -0.00022888166131451726, -0.00017178058624267578, -0.0037384033203125, -4.57763671875e-05, -0.0003223419189453125, -1.1444091796875e-05, -3.814697265625e-06, -0.004874235484749079, -0.0003408193588256836, -2.47955322265625e-05, -0.024712562561035156, -0.0001277923583984375, -0.0016480681952089071, 0.0, -0.000904083251953125, 0.0, -4.76837158203125e-05, -0.000217437744140625, -0.0009813308715820312, -3.814697265625e-06, -0.005547642707824707, -3.814697265625e-06, -0.0004062652587890625, -0.0051490068435668945, -0.0059814453125, -0.001651763916015625, -1.9073486328125e-06, -0.2435169219970703, -1.9073486328125e-06, -0.010572433471679688, -3.814697265625e-06, -7.259845733642578e-05, -0.0001392364501953125, 0.0]}, {"score": -2.519269393345432, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Bounce", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Bounce(), MinionSelector(players\n            =BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Bounce"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -1.3621503114700317, 0.0, -0.004321098327636719, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.00010335445404052734, 0.0, -0.0006732940673828125, -0.0887603759765625, -1.9073486328125e-06, -0.03003881871700287, -0.004386173561215401, -0.00373077392578125, -8.58306884765625e-05, -3.24249267578125e-05, -0.0001354217529296875, -0.0004732254892587662, -0.0035495758056640625, -2.0265579223632812e-06, -0.20062541961669922, -1.9073486328125e-05, -0.005448341369628906, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.599555492401123, -2.288818359375e-05, 0.0, -9.5367431640625e-06, -0.014369964599609375, 0.0, -0.0001678466796875, -5.7220458984375e-06, -0.08982431888580322, -0.00012660013453569263, -1.9073486328125e-06, -2.9444683605106547e-05, -1.9073486328125e-06, -0.0012752971379086375, 0.0, -0.00012969970703125, -0.0004711151123046875, -1.52587890625e-05, -1.1920565157197416e-07, 0.0, -0.0029458997305482626, 0.0, -7.748602001811378e-06, -1.1920928244535389e-07]}, {"score": -2.871091275162591, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Bounce", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Bounce(), MinionSelector(players\n            =EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Bounce"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -1.3621503114700317, 0.0, -0.004321098327636719, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.00010335445404052734, 0.0, -0.0006732940673828125, -0.0887603759765625, -1.9073486328125e-06, -0.03003881871700287, -0.004386173561215401, -0.00373077392578125, -8.58306884765625e-05, -3.24249267578125e-05, -0.0001354217529296875, -0.0004732254892587662, -0.0035495758056640625, -2.0265579223632812e-06, -0.20062541961669922, -1.9073486328125e-05, -0.005448341369628906, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.8210387229919434, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.018741607666015625, 0.0, -0.0001373291015625, -3.814697265625e-06, -0.215783953666687, -0.00012361988774500787, -1.9073486328125e-06, -3.194807504769415e-05, -1.9073486328125e-06, -0.001293637789785862, 0.0, -0.000133514404296875, -0.0005130767822265625, -1.33514404296875e-05, -1.1920565157197416e-07, 0.0, -0.0029394624289125204, 0.0, -5.602834789897315e-06, -1.1920928244535389e-07]}, {"score": -3.0426563357965435, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 173, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 154, "source_list", "<EOS>", 24, 112, "<UNK>", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=<UNK>)), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 6, "_type": "Template3", "hole0": "Toshley", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"_type": "keyword", "arg": "source_list", "value": {"_type": "Name", "id": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -2.4373035430908203, -3.24249267578125e-05, -8.940656698541716e-06, -1.33514404296875e-05, -0.0003478527069091797, -2.0265579223632812e-06, -0.0022058486938476562, -2.0265579223632812e-06, -0.020971616730093956, 0.0, -0.006788519211113453, 0.0, -0.02688664011657238, 0.0, -0.0001697540283203125, -0.0002593994140625, -0.0002040863037109375, -1.1920906217710581e-07, -1.1920928244535389e-07, -0.0023652315139770508, -1.4305104514278355e-06, -7.152543730626348e-06, -6.9141146923357155e-06, -0.0019540786743164062, 0.0, -0.005286574363708496, 0.0, -0.007472038269042969, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00014507770538330078, 0.0, -0.0070018768310546875, -0.05707359313964844, -0.00339508056640625, -9.5367431640625e-06, -0.000301361083984375, -0.004392025526612997, -0.0005183139001019299, -0.0002740621566772461, -0.00107574462890625, -7.43865966796875e-05, -8.96453857421875e-05, -1.1444091796875e-05, 0.0, -0.02045464515686035, -0.000676274299621582, -9.357929229736328e-05, -0.0072784423828125, -0.0001316070556640625, -0.0013303756713867188, 0.0, -0.0018215179443359375, 0.0, -3.62396240234375e-05, -0.0001010894775390625, -0.0006532669067382812, -1.9073486328125e-06, -0.004098057746887207, -1.9073486328125e-06, -0.00055694580078125, -0.006197094917297363, -0.006382942199707031, -0.002094268798828125, -1.9073486328125e-06, -0.3712453842163086, -9.560585021972656e-05, -0.02093791961669922, -7.62939453125e-06, -0.000316619873046875, -0.0002803802490234375, 0.0]}, {"score": -3.3163871279101613, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 178, 72, 101, "<UNK>", "<EOS>", 155, 150, "spare_part_list", "<EOS>", "0", "<EOS>", 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 173, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 154, "source_list", "<EOS>", 24, 112, "spare_part_list", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        from <UNK> import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"names": [{"_type": "alias", "name": "spare_part_list"}], "_type": "ImportFrom", "level": 0, "module": "<UNK>"}, {"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"_type": "keyword", "arg": "source_list", "value": {"_type": "Name", "id": "spare_part_list"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -0.49481117725372314, 0.0, -0.00142669677734375, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.548664093017578e-05, -7.62939453125e-06, -0.0377427339553833, -1.9073486328125e-06, -0.0002480745315551758, -1.9073486328125e-06, -0.001030314713716507, 0.0, -0.8966703414916992, -0.10906124114990234, -0.000347137451171875, -0.0037518758326768875, -0.0005627870559692383, -0.04386329650878906, -0.0013570785522460938, -0.03849577158689499, -2.47955322265625e-05, -0.00636935792863369, 0.0, -0.000545501708984375, -0.002841949462890625, -0.0015644000377506018, 0.0, -1.2294906377792358, -1.0728830375228426e-06, -0.0001660450652707368, -9.059865078597795e-06, -0.0018415451049804688, 0.0, -0.003936767578125, 0.0, -0.0038471221923828125, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000942230224609375, 0.0, -0.0009708404541015625, -0.001125335693359375, -0.010869979858398438, -5.7220458984375e-06, -1.71661376953125e-05, -0.003282188903540373, -0.00022816633281763643, -0.00016605854034423828, -0.0037212371826171875, -4.76837158203125e-05, -0.000301361083984375, -1.1444091796875e-05, -3.814697265625e-06, -0.005150999408215284, -0.0003485679626464844, -2.47955322265625e-05, -0.025146484375, -0.0001277923583984375, -0.0016496179159730673, 0.0, -0.000885009765625, 0.0, -4.57763671875e-05, -0.00022125244140625, -0.0009746551513671875, -3.814697265625e-06, -0.005607724189758301, -3.814697265625e-06, -0.0004062652587890625, -0.005158543586730957, -0.005997657775878906, -0.0016536712646484375, -1.9073486328125e-06, -0.24445819854736328, -1.9073486328125e-06, -0.010759353637695312, -3.814697265625e-06, -7.450580596923828e-05, -0.000141143798828125, 0.0]}, {"score": -3.935576343932084, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Bounce", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Bounce(), MinionSelector(players\n            =EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Bounce"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -1.3621503114700317, 0.0, -0.004321098327636719, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.00010335445404052734, 0.0, -0.0006732940673828125, -0.0887603759765625, -1.9073486328125e-06, -0.03003881871700287, -0.004386173561215401, -0.00373077392578125, -8.58306884765625e-05, -3.24249267578125e-05, -0.0001354217529296875, -0.0004732254892587662, -0.0035495758056640625, -2.0265579223632812e-06, -1.7642402648925781, -9.5367431640625e-06, -0.006637692451477051, 0.0, -3.4332275390625e-05, 0.0, -0.5574148893356323, -3.814697265625e-06, -1.9073486328125e-06, -2.5510787963867188e-05, 0.0, -0.0006701687816530466, 0.0, -0.001346588134765625, -0.00011444091796875, -7.62939453125e-06, -1.1920565157197416e-07, 0.0, -0.0008910891483537853, -1.1920928244535389e-07, -4.410743713378906e-06, -1.1920928244535389e-07]}, {"score": -3.9420969819681133, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 173, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 154, "source_list", "<EOS>", 24, 112, "spare_part_list", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 6, "_type": "Template3", "hole0": "Toshley", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"_type": "keyword", "arg": "source_list", "value": {"_type": "Name", "id": "spare_part_list"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -2.4373035430908203, -3.24249267578125e-05, -8.940656698541716e-06, -1.33514404296875e-05, -0.0003478527069091797, -2.0265579223632812e-06, -0.0022058486938476562, -2.0265579223632812e-06, -0.020971616730093956, 0.0, -0.006788519211113453, 0.0, -0.02688664011657238, 0.0, -0.0001697540283203125, -0.0002593994140625, -0.0002040863037109375, -1.1920906217710581e-07, -1.1920928244535389e-07, -0.0023652315139770508, -1.4305104514278355e-06, -7.152543730626348e-06, -6.9141146923357155e-06, -0.0019540786743164062, 0.0, -0.005286574363708496, 0.0, -0.007472038269042969, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00014507770538330078, 0.0, -0.0070018768310546875, -0.05707359313964844, -0.00339508056640625, -9.5367431640625e-06, -0.000301361083984375, -0.004392025526612997, -0.0005183139001019299, -0.0002740621566772461, -0.00107574462890625, -7.43865966796875e-05, -8.96453857421875e-05, -1.1444091796875e-05, 0.0, -0.02045464515686035, -0.000676274299621582, -9.357929229736328e-05, -0.0072784423828125, -0.0001316070556640625, -0.0013303756713867188, 0.0, -0.0018215179443359375, 0.0, -3.62396240234375e-05, -0.0001010894775390625, -0.0006532669067382812, -1.9073486328125e-06, -0.004098057746887207, -1.9073486328125e-06, -0.00055694580078125, -0.006197094917297363, -0.006382942199707031, -0.002094268798828125, -1.9073486328125e-06, -1.2818260192871094, -1.9073486328125e-06, -0.009929656982421875, -5.7220458984375e-06, -0.00016224384307861328, -0.0003986358642578125, 0.0]}, {"score": -4.223951383382413, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 173, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 154, "source_list", "<EOS>", 24, 112, "spare_part_list", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"_type": "keyword", "arg": "source_list", "value": {"_type": "Name", "id": "spare_part_list"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -1.3621503114700317, 0.0, -0.004321098327636719, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.00010335445404052734, 0.0, -0.0006732940673828125, -2.467545509338379, -0.0126953125, -1.1444091796875e-05, -3.4332275390625e-05, -0.04091370105743408, -0.0004494016757234931, -0.0004475116729736328, -0.008698463439941406, -6.4849853515625e-05, -5.7220458984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.007610206492245197, -0.0002970695495605469, -4.1961669921875e-05, -0.022713661193847656, -0.0001583099365234375, -0.003231048583984375, 0.0, -0.0009632110595703125, 0.0, -0.0008697509765625, -0.0001239776611328125, -0.0010061264038085938, -1.9073486328125e-06, -0.004390835762023926, -1.9073486328125e-06, -0.00026702880859375, -0.0062628984451293945, -0.0027799606323242188, -0.0033750534057617188, -1.9073486328125e-06, -0.14943981170654297, 0.0, -0.012319564819335938, -3.814697265625e-06, -6.878376007080078e-05, -0.0001354217529296875, 0.0, -6.484983896370977e-05, 0.0, -0.0030700592324137688, 0.0, -0.0001659393310546875, -0.0001010894775390625, -1.1444091796875e-05, -2.3841312213335186e-07, 0.0, -0.0005612368113361299, -1.1920928244535389e-07, -3.8146954466355965e-06, -1.1920928244535389e-07]}, {"score": -4.25373992812591, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Bounce", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Bounce(), MinionSelector(players\n            =BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Bounce"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -1.3621503114700317, 0.0, -0.004321098327636719, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.00010335445404052734, 0.0, -0.0006732940673828125, -0.0887603759765625, -1.9073486328125e-06, -0.03003881871700287, -0.004386173561215401, -0.00373077392578125, -8.58306884765625e-05, -3.24249267578125e-05, -0.0001354217529296875, -0.0004732254892587662, -0.0035495758056640625, -2.0265579223632812e-06, -1.7642402648925781, -9.5367431640625e-06, -0.006637692451477051, 0.0, -3.4332275390625e-05, 0.0, -0.875930666923523, -2.09808349609375e-05, 0.0, -9.894371032714844e-06, 0.0, -0.0004672254726756364, 0.0, -0.0011577606201171875, -8.58306884765625e-05, -7.62939453125e-06, 0.0, 0.0, -0.0009597536409273744, -1.1920928244535389e-07, -4.410743713378906e-06, -1.1920928244535389e-07]}, {"score": -4.308294537239803, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Bounce", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Bounce(), MinionSelector(players\n            =EnemyPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Bounce"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -1.3621503114700317, 0.0, -0.004321098327636719, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.00010335445404052734, 0.0, -0.0006732940673828125, -0.0887603759765625, -1.9073486328125e-06, -0.03003881871700287, -0.004386173561215401, -0.00373077392578125, -8.58306884765625e-05, -3.24249267578125e-05, -0.0001354217529296875, -0.0004732254892587662, -0.0035495758056640625, -2.0265579223632812e-06, -0.20062541961669922, -1.9073486328125e-05, -0.005448341369628906, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.8210387229919434, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.018741607666015625, 0.0, -0.0001373291015625, -3.814697265625e-06, -1.652704119682312, -0.0002658359589986503, -5.7220458984375e-06, -5.1617593271657825e-05, -1.9073486328125e-06, -0.0019973046146333218, 0.0, -0.000247955322265625, -0.0004062652587890625, -9.5367431640625e-06, -1.192074705613777e-07, 0.0, -0.0023499727249145508, -1.1920928244535389e-07, -4.88758041683468e-06, -1.1920928244535389e-07]}, {"score": -4.393678092422753, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "combo", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Bounce", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, combo=Battlecry(Bounce(), MinionSelector(players=\n            BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Bounce"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -3.2622084617614746, 0.0, -0.0016317367553710938, 0.0, -4.00543212890625e-05, 0.0, -0.00012624263763427734, 0.0, -0.0011882781982421875, -0.08892822265625, 0.0, -0.02243509329855442, -0.0050472659058868885, -0.0042972564697265625, -8.96453857421875e-05, -3.4332275390625e-05, -0.000133514404296875, -0.0005010925233364105, -0.0037593841552734375, -2.0265579223632812e-06, -0.1690053939819336, -2.09808349609375e-05, -0.0056629180908203125, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.5986810922622681, -2.09808349609375e-05, 0.0, -9.5367431640625e-06, -0.015165328979492188, 0.0, -0.000171661376953125, -5.7220458984375e-06, -0.10376787185668945, -0.0001244543382199481, -1.9073486328125e-06, -2.956389289465733e-05, -1.9073486328125e-06, -0.001268272171728313, 0.0, -0.0001277923583984375, -0.0004749298095703125, -1.52587890625e-05, -1.1920565157197416e-07, 0.0, -0.002941965823993087, 0.0, -5.7220440794480965e-06, -1.1920928244535389e-07]}, {"score": -4.781161322260225, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "combo", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Bounce", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, combo=Battlecry(Bounce(), MinionSelector(players=\n            EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Bounce"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -3.2622084617614746, 0.0, -0.0016317367553710938, 0.0, -4.00543212890625e-05, 0.0, -0.00012624263763427734, 0.0, -0.0011882781982421875, -0.08892822265625, 0.0, -0.02243509329855442, -0.0050472659058868885, -0.0042972564697265625, -8.96453857421875e-05, -3.4332275390625e-05, -0.000133514404296875, -0.0005010925233364105, -0.0037593841552734375, -2.0265579223632812e-06, -0.1690053939819336, -2.09808349609375e-05, -0.0056629180908203125, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.8243967294692993, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.019972801208496094, 0.0, -0.0001354217529296875, -3.814697265625e-06, -0.26073265075683594, -0.00012004357267869636, -1.9073486328125e-06, -3.206728433724493e-05, -1.9073486328125e-06, -0.0012800643453374505, 0.0, -0.00012969970703125, -0.0005130767822265625, -1.33514404296875e-05, -1.192074705613777e-07, 0.0, -0.0029391050338745117, 0.0, -5.483625955093885e-06, -1.1920928244535389e-07]}, {"score": -4.905680784934233, "choice_history": [59, 124, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Toshley", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Bounce", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Bounce(), MinionSelector(players\n            =BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Bounce"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "Toshley", "hole3": "create_minion"}, "score_history": [0.0, -6.67572021484375e-05, -7.665027806069702e-05, -0.00012707660789601505, -3.576255949155893e-07, -5.7220458984375e-06, -0.0003293752670288086, -0.010494232177734375, -8.58306884765625e-05, -1.9073486328125e-06, -0.09203052520751953, -3.0517578125e-05, -4.9591064453125e-05, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -4.8397800128441304e-05, -2.6941299438476562e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.0003032684326171875, -7.509931310778484e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -6.508827209472656e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00091552734375, -1.9073486328125e-06, -0.000133514404296875, -0.00021564960479736328, 0.0, -0.0001506805419921875, -3.814697265625e-06, -1.3621503114700317, 0.0, -0.004321098327636719, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.00010335445404052734, 0.0, -0.0006732940673828125, -0.0887603759765625, -1.9073486328125e-06, -0.03003881871700287, -0.004386173561215401, -0.00373077392578125, -8.58306884765625e-05, -3.24249267578125e-05, -0.0001354217529296875, -0.0004732254892587662, -0.0035495758056640625, -2.0265579223632812e-06, -0.20062541961669922, -1.9073486328125e-05, -0.005448341369628906, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.599555492401123, -2.288818359375e-05, 0.0, -9.5367431640625e-06, -0.014369964599609375, 0.0, -0.0001678466796875, -5.7220458984375e-06, -2.4761013984680176, -0.00029587678727693856, -5.7220458984375e-06, -4.804132549907081e-05, 0.0, -0.0017200304428115487, 0.0, -0.000244140625, -0.0003719329833984375, -9.5367431640625e-06, 0.0, 0.0, -0.002438783645629883, -1.1920928244535389e-07, -5.125998541188892e-06, -1.1920928244535389e-07]}], "gold_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n"}
{"beams": [{"score": -1.8922247542215587, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MECH)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -0.7974674701690674, 0.0, -4.38690185546875e-05, -0.0001697540283203125, -2.09808349609375e-05, -2.8848648071289062e-05, -2.1457672119140625e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -0.0038623809814453125, 0.0, -0.0013886690139770508, 0.0, -0.04048893228173256, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.0063381195068359375, -6.794398359488696e-06, -1.7523643691674806e-05, -8.344646857949556e-07, -3.576278118089249e-07, -5.0066824769601226e-05, -3.576277322281385e-06, -0.00150299072265625, -3.814697265625e-06, -0.17434024810791016, 0.0, -3.4332275390625e-05, -4.57763671875e-05, -0.0041294097900390625, -1.1444091796875e-05, -0.0001888275146484375, 0.0, -1.9073486328125e-06, -0.0015755891799926758, -0.00016868114471435547, -0.0010738372802734375, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.015900757163763046, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.0001888275146484375, -0.050357818603515625, -0.06091594696044922, -9.5367431640625e-06, 0.0, -0.0007254462689161301, -2.47955322265625e-05, -2.3245811462402344e-05, -0.0001392364501953125, -0.6650485992431641, -0.004124641418457031, -5.7220458984375e-06, 0.0, -0.00223246356472373, -0.0006021260633133352, -1.740455445542466e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00030791759490966797, 0.0, -0.006972312927246094, 0.0]}, {"score": -2.4395154059022275, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MECH)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -1.3473360538482666, -3.814697265625e-06, -3.62396240234375e-05, -0.0001125335693359375, -1.71661376953125e-05, -3.8623809814453125e-05, -2.0265579223632812e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001659393310546875, 0.0, -0.003912925720214844, 0.0, -0.0013943910598754883, 0.0, -0.037955522537231445, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.007389068603515625, -6.436806870624423e-06, -1.680839886830654e-05, -8.344646857949556e-07, -3.576278118089249e-07, -4.9232399760512635e-05, -3.576277322281385e-06, -0.0014972686767578125, -3.814697265625e-06, -0.1713409423828125, 0.0, -3.4332275390625e-05, -4.38690185546875e-05, -0.004119873046875, -1.1444091796875e-05, -0.00019073486328125, 0.0, -1.9073486328125e-06, -0.0015794038772583008, -0.00016868114471435547, -0.0010776519775390625, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.01585254818201065, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.00019073486328125, -0.051097869873046875, -0.06100273132324219, -9.5367431640625e-06, 0.0, -0.0007256753742694855, -2.47955322265625e-05, -2.3245811462402344e-05, -0.0001392364501953125, -0.6661834716796875, -0.004118919372558594, -5.7220458984375e-06, 0.0, -0.0022300798445940018, -0.0006021260633133352, -1.740455445542466e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00030791759490966797, 0.0, -0.0069732666015625, 0.0]}, {"score": -3.1831738292113982, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            EnemyPlayer()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -0.7974674701690674, 0.0, -4.38690185546875e-05, -0.0001697540283203125, -2.09808349609375e-05, -2.8848648071289062e-05, -2.1457672119140625e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -0.0038623809814453125, 0.0, -0.0013886690139770508, 0.0, -0.04048893228173256, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.0063381195068359375, -6.794398359488696e-06, -1.7523643691674806e-05, -8.344646857949556e-07, -3.576278118089249e-07, -5.0066824769601226e-05, -3.576277322281385e-06, -0.00150299072265625, -3.814697265625e-06, -0.17434024810791016, 0.0, -3.4332275390625e-05, -4.57763671875e-05, -0.0041294097900390625, -1.1444091796875e-05, -0.0001888275146484375, 0.0, -1.9073486328125e-06, -0.0015755891799926758, -0.00016868114471435547, -0.0010738372802734375, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.015900757163763046, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.0001888275146484375, -0.050357818603515625, -0.06091594696044922, -9.5367431640625e-06, 0.0, -0.0007254462689161301, -2.47955322265625e-05, -2.3245811462402344e-05, -0.0001392364501953125, -1.4594783782958984, 0.0, -0.5106295347213745, -0.00017714491696096957, 0.0]}, {"score": -3.3502741396243323, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 56], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(1))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -0.7974674701690674, 0.0, -4.38690185546875e-05, -0.0001697540283203125, -2.09808349609375e-05, -2.8848648071289062e-05, -2.1457672119140625e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -0.0038623809814453125, 0.0, -0.0013886690139770508, 0.0, -0.04048893228173256, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.0063381195068359375, -6.794398359488696e-06, -1.7523643691674806e-05, -8.344646857949556e-07, -3.576278118089249e-07, -5.0066824769601226e-05, -3.576277322281385e-06, -0.00150299072265625, -3.814697265625e-06, -0.17434024810791016, 0.0, -3.4332275390625e-05, -4.57763671875e-05, -0.0041294097900390625, -1.1444091796875e-05, -0.0001888275146484375, 0.0, -1.9073486328125e-06, -0.0015755891799926758, -0.00016868114471435547, -0.0010738372802734375, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.015900757163763046, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.0001888275146484375, -0.050357818603515625, -0.06091594696044922, -9.5367431640625e-06, 0.0, -0.0007254462689161301, -2.47955322265625e-05, -2.3245811462402344e-05, -0.0001392364501953125, -2.137385368347168]}, {"score": -3.3904734843926576, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MECH)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -2.297389268875122, -1.9073486328125e-06, -4.57763671875e-05, -0.0001983642578125, -3.0517578125e-05, -3.2901763916015625e-05, -2.1457672119140625e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001659393310546875, 0.0, -0.0039348602294921875, 0.0, -0.0013924837112426758, 0.0, -0.03851771727204323, 0.0, -5.14984130859375e-05, -7.62939453125e-05, -0.006413459777832031, -6.675196345895529e-06, -1.728522875055205e-05, -8.344646857949556e-07, -3.576278118089249e-07, -4.851717676501721e-05, -3.6954863844584906e-06, -0.001537322998046875, -3.814697265625e-06, -0.17269515991210938, 0.0, -3.4332275390625e-05, -4.38690185546875e-05, -0.0041103363037109375, -1.1444091796875e-05, -0.00019073486328125, 0.0, -1.9073486328125e-06, -0.0015813112258911133, -0.00016868114471435547, -0.0010738372802734375, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.015833532437682152, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.00019073486328125, -0.05099678039550781, -0.060973167419433594, -9.5367431640625e-06, 0.0, -0.0007255598902702332, -2.47955322265625e-05, -2.3245811462402344e-05, -0.0001392364501953125, -0.6661462783813477, -0.0041179656982421875, -5.7220458984375e-06, 0.0, -0.0022321061696857214, -0.0006021260633133352, -1.740455445542466e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00030791759490966797, 0.0, -0.0069751739501953125, 0.0]}, {"score": -3.4810030470327433, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MECH)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -2.392833948135376, 0.0, -3.24249267578125e-05, -9.34600830078125e-05, -1.52587890625e-05, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -0.003757476806640625, 0.0, -0.0013676881790161133, 0.0, -0.03809773549437523, 0.0, -5.14984130859375e-05, -7.62939453125e-05, -0.0071926116943359375, -6.436806870624423e-06, -1.633156898606103e-05, -8.344646857949556e-07, -3.576278118089249e-07, -5.01860304211732e-05, -3.576277322281385e-06, -0.0014858245849609375, -3.814697265625e-06, -0.16921138763427734, 0.0, -3.24249267578125e-05, -4.57763671875e-05, -0.0041370391845703125, -1.1444091796875e-05, -0.00019073486328125, 0.0, -1.9073486328125e-06, -0.0015774965286254883, -0.00016868114471435547, -0.0010738372802734375, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.015865959227085114, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.0001888275146484375, -0.050563812255859375, -0.06096935272216797, -9.5367431640625e-06, 0.0, -0.0007254481315612793, -2.47955322265625e-05, -2.3245811462402344e-05, -0.0001392364501953125, -0.6651315689086914, -0.004124641418457031, -5.7220458984375e-06, 0.0, -0.002232582774013281, -0.0006021260633133352, -1.740455445542466e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00030791759490966797, 0.0, -0.006972312927246094, 0.0]}, {"score": -3.6329017219488264, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 47, 114, "Null", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            Null))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -0.7974674701690674, 0.0, -4.38690185546875e-05, -0.0001697540283203125, -2.09808349609375e-05, -2.8848648071289062e-05, -2.1457672119140625e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -0.0038623809814453125, 0.0, -0.0013886690139770508, 0.0, -0.04048893228173256, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.0063381195068359375, -6.794398359488696e-06, -1.7523643691674806e-05, -8.344646857949556e-07, -3.576278118089249e-07, -5.0066824769601226e-05, -3.576277322281385e-06, -0.00150299072265625, -3.814697265625e-06, -0.17434024810791016, 0.0, -3.4332275390625e-05, -4.57763671875e-05, -0.0041294097900390625, -1.1444091796875e-05, -0.0001888275146484375, 0.0, -1.9073486328125e-06, -0.0015755891799926758, -0.00016868114471435547, -0.0010738372802734375, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.015900757163763046, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.0001888275146484375, -0.050357818603515625, -0.06091594696044922, -9.5367431640625e-06, 0.0, -0.0007254462689161301, -2.47955322265625e-05, -2.3245811462402344e-05, -0.0001392364501953125, -2.419793128967285, -0.0001773834228515625, -3.266311978222802e-05, -9.775161743164062e-06]}, {"score": -3.730401835944747, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            EnemyPlayer()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -1.3473360538482666, -3.814697265625e-06, -3.62396240234375e-05, -0.0001125335693359375, -1.71661376953125e-05, -3.8623809814453125e-05, -2.0265579223632812e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001659393310546875, 0.0, -0.003912925720214844, 0.0, -0.0013943910598754883, 0.0, -0.037955522537231445, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.007389068603515625, -6.436806870624423e-06, -1.680839886830654e-05, -8.344646857949556e-07, -3.576278118089249e-07, -4.9232399760512635e-05, -3.576277322281385e-06, -0.0014972686767578125, -3.814697265625e-06, -0.1713409423828125, 0.0, -3.4332275390625e-05, -4.38690185546875e-05, -0.004119873046875, -1.1444091796875e-05, -0.00019073486328125, 0.0, -1.9073486328125e-06, -0.0015794038772583008, -0.00016868114471435547, -0.0010776519775390625, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.01585254818201065, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.00019073486328125, -0.051097869873046875, -0.06100273132324219, -9.5367431640625e-06, 0.0, -0.0007256753742694855, -2.47955322265625e-05, -2.3245811462402344e-05, -0.0001392364501953125, -1.4600887298583984, 0.0, -0.5110841393470764, -0.00017726412625052035, 0.0]}, {"score": -3.8916925412360683, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 56], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(1))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -1.3473360538482666, -3.814697265625e-06, -3.62396240234375e-05, -0.0001125335693359375, -1.71661376953125e-05, -3.8623809814453125e-05, -2.0265579223632812e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001659393310546875, 0.0, -0.003912925720214844, 0.0, -0.0013943910598754883, 0.0, -0.037955522537231445, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.007389068603515625, -6.436806870624423e-06, -1.680839886830654e-05, -8.344646857949556e-07, -3.576278118089249e-07, -4.9232399760512635e-05, -3.576277322281385e-06, -0.0014972686767578125, -3.814697265625e-06, -0.1713409423828125, 0.0, -3.4332275390625e-05, -4.38690185546875e-05, -0.004119873046875, -1.1444091796875e-05, -0.00019073486328125, 0.0, -1.9073486328125e-06, -0.0015794038772583008, -0.00016868114471435547, -0.0010776519775390625, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.01585254818201065, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.00019073486328125, -0.051097869873046875, -0.06100273132324219, -9.5367431640625e-06, 0.0, -0.0007256753742694855, -2.47955322265625e-05, -2.3245811462402344e-05, -0.0001392364501953125, -2.132640838623047]}, {"score": -4.0880528785679076, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MECH)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -3.0247297286987305, -6.103515625e-05, 0.0, -5.6028297876764555e-06, -7.748603820800781e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.6028297876764555e-06, -9.536738616588991e-07, -0.054097533226013184, 0.0, -0.000286102294921875, -5.7220458984375e-06, -5.7220458984375e-05, -9.119509923039004e-05, -3.933906555175781e-06, -8.7738037109375e-05, -9.5367431640625e-06, -0.0001404285430908203, -9.536738616588991e-07, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0013942718505859375, 0.0, -0.002598881721496582, 0.0, -0.003423929214477539, 0.0, -0.018823962658643723, 0.0, -3.4332275390625e-05, -6.29425048828125e-05, -0.028656959533691406, -2.860866516130045e-06, -9.298297300119884e-06, -1.1920922133867862e-06, -5.960462772236497e-07, -3.3139749575639144e-05, -6.31808916295995e-06, -0.0017604827880859375, -1.9073486328125e-06, -0.11034202575683594, 0.0, -3.62396240234375e-05, -3.814697265625e-05, -0.003986358642578125, -1.33514404296875e-05, -0.0002193450927734375, 0.0, -1.9073486328125e-06, -0.0016503334045410156, -0.00017440319061279297, -0.001148223876953125, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.015234231948852539, -0.00029790401458740234, -1.609325408935547e-05, -3.814697265625e-06, -0.0001964569091796875, -0.061786651611328125, -0.06251049041748047, -9.5367431640625e-06, 0.0, -0.0007342081516981125, -2.47955322265625e-05, -2.1338462829589844e-05, -0.0001392364501953125, -0.6781740188598633, -0.00406646728515625, -5.7220458984375e-06, 0.0, -0.0022235249634832144, -0.0006039142026565969, -1.740455445542466e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00030791759490966797, 0.0, -0.006983757019042969, 0.0]}, {"score": -4.106307357158755, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, spell_damage=1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -0.7974674701690674, 0.0, -4.38690185546875e-05, -0.0001697540283203125, -2.09808349609375e-05, -2.8848648071289062e-05, -2.1457672119140625e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -0.0038623809814453125, 0.0, -0.0013886690139770508, 0.0, -0.04048893228173256, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.0063381195068359375, -6.794398359488696e-06, -1.7523643691674806e-05, -8.344646857949556e-07, -3.576278118089249e-07, -5.0066824769601226e-05, -3.576277322281385e-06, -0.00150299072265625, -3.814697265625e-06, -3.2033615112304688, 0.0, -0.0002689361572265625]}, {"score": -4.171099977642541, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Adjacent", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Adjacent"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -0.7974674701690674, 0.0, -4.38690185546875e-05, -0.0001697540283203125, -2.09808349609375e-05, -2.8848648071289062e-05, -2.1457672119140625e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -0.0038623809814453125, 0.0, -0.0013886690139770508, 0.0, -0.04048893228173256, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.0063381195068359375, -6.794398359488696e-06, -1.7523643691674806e-05, -8.344646857949556e-07, -3.576278118089249e-07, -5.0066824769601226e-05, -3.576277322281385e-06, -0.00150299072265625, -3.814697265625e-06, -0.17434024810791016, 0.0, -3.4332275390625e-05, -4.57763671875e-05, -0.0041294097900390625, -1.1444091796875e-05, -0.0001888275146484375, 0.0, -1.9073486328125e-06, -0.0015755891799926758, -0.00016868114471435547, -0.0010738372802734375, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.015900757163763046, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.0001888275146484375, -0.050357818603515625, -0.06091594696044922, -9.5367431640625e-06, 0.0, -0.0007254462689161301, -2.47955322265625e-05, -2.3245811462402344e-05, -0.0001392364501953125, -1.4594783782958984, 0.0, -1.4977482557296753, -0.0009845723398029804]}, {"score": -4.34475180095086, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -0.7974674701690674, 0.0, -4.38690185546875e-05, -0.0001697540283203125, -2.09808349609375e-05, -2.8848648071289062e-05, -2.1457672119140625e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -0.0038623809814453125, 0.0, -0.0013886690139770508, 0.0, -0.04048893228173256, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.0063381195068359375, -6.794398359488696e-06, -1.7523643691674806e-05, -8.344646857949556e-07, -3.576278118089249e-07, -5.0066824769601226e-05, -3.576277322281385e-06, -0.00150299072265625, -3.814697265625e-06, -0.17434024810791016, 0.0, -3.4332275390625e-05, -4.57763671875e-05, -0.0041294097900390625, -1.1444091796875e-05, -0.0001888275146484375, 0.0, -1.9073486328125e-06, -0.0015755891799926758, -0.00016868114471435547, -0.0010738372802734375, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.015900757163763046, -0.0003114938735961914, -1.609325408935547e-05, -3.814697265625e-06, -0.0001888275146484375, -3.0137929916381836, -1.9073486328125e-06, -0.2296193540096283, -0.0006448030471801758, 0.0]}, {"score": -4.657797809386636, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, spell_damage=1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}]}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -1.3473360538482666, -3.814697265625e-06, -3.62396240234375e-05, -0.0001125335693359375, -1.71661376953125e-05, -3.8623809814453125e-05, -2.0265579223632812e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001659393310546875, 0.0, -0.003912925720214844, 0.0, -0.0013943910598754883, 0.0, -0.037955522537231445, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -0.007389068603515625, -6.436806870624423e-06, -1.680839886830654e-05, -8.344646857949556e-07, -3.576278118089249e-07, -4.9232399760512635e-05, -3.576277322281385e-06, -0.0014972686767578125, -3.814697265625e-06, -3.206472396850586, 0.0, -0.0002651214599609375]}, {"score": -6.015067310480163, "choice_history": [59, 124, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Warbot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Warbot", "hole3": "create_minion"}, "score_history": [-0.00012969970703125, -9.1552734375e-05, -4.410669862409122e-05, -6.770929030608386e-05, 0.0, -3.814697265625e-06, -1.2278503163543064e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.050334930419921875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -3.3378591979271732e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.9802317840221804e-06, -8.344646857949556e-07, -0.7974674701690674, 0.0, -4.38690185546875e-05, -0.0001697540283203125, -2.09808349609375e-05, -2.8848648071289062e-05, -2.1457672119140625e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -0.0038623809814453125, 0.0, -0.0013886690139770508, 0.0, -0.04048893228173256, 0.0, -5.14984130859375e-05, -7.82012939453125e-05, -5.120169639587402, 0.0, -1.0013580322265625e-05, -4.768370445162873e-07, -1.7881377516459906e-06, -0.00012612342834472656, -6.4373016357421875e-06]}], "gold_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n"}
{"beams": [{"score": -1.448054259378921, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -1.4113664627075195, -3.814697265625e-06, -0.01858222484588623, -2.1457672119140625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.00028455257415771484, 0.0]}, {"score": -2.975652521212112, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -2.5373950004577637, 0.0, -0.0029144287109375, -0.0001049041748046875, -0.010255932807922363, -1.9073486328125e-06]}, {"score": -3.7091854565930475, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "Cant", "Attack", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, buffs=[Aura(CantAttack(),\n            SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "CantAttack"}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -1.3081269264221191, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.0010356903076171875, -5.53131103515625e-05, 0.0, 0.0, 0.0, -1.3146390914916992, -0.016485214233398438, -0.000476837158203125, -0.0003757476806640625, 0.0, -0.4630585014820099, -0.0058383941650390625, -0.0001277923583984375, -0.16902637481689453, 0.0, -0.004814267158508301, -0.0001201629638671875, 0.0]}, {"score": -3.9095085540008654, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Cant", "Attack", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, buffs=[Buff(CantAttack())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "CantAttack"}], "func": {"_type": "Name", "id": "Buff"}}]}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -1.3081269264221191, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.0010356903076171875, -5.53131103515625e-05, 0.0, 0.0, 0.0, -2.0758209228515625, -1.9073486328125e-06, -0.07445907592773438, -0.0016841888427734375, 0.0, -0.01595141738653183, -0.007348418235778809, -1.9550323486328125e-05]}, {"score": -4.558047585478278, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 164, 51, 130, "Is", "Minion", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(AddCard(\n            CardQuery(conditions=[IsMinion()])), PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Template10", "hole0": "IsMinion"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -1.6746845245361328, 0.0, -0.5239086151123047, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001506805419921875, -3.814697265625e-06, -0.0014057159423828125, -0.08737754821777344, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -0.6079411506652832, -0.00038683414459228516, -0.0002231597900390625, -0.5693960189819336, -0.0001163482666015625, -0.0062313079833984375, -0.0001354217529296875, 0.0, -0.0006549350218847394, -0.005632638931274414, 0.0, -0.11519050598144531, -1.9073486328125e-06, -0.010730743408203125, -0.0001373291015625, -0.0017681121826171875, -4.76837158203125e-05, -0.27977752685546875, -0.018611907958984375, 0.0, -0.00037189151044003665, -0.15419486165046692, 0.0, -0.07342720031738281, 0.0, -0.00049591064453125, -5.7220458984375e-06, 0.0]}, {"score": -4.720293586809646, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, spell_targetable=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -4.203808784484863, 0.0, -0.00125885009765625, -0.000335693359375, -0.08990609645843506, -3.814697265625e-06]}, {"score": -4.771306462296764, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -4.392095565795898, -7.152531907195225e-06, -0.3637809753417969, -1.9073486328125e-06, -0.010005474090576172, -4.768370445162873e-07, -1.33514404296875e-05, -3.814697265625e-06, -0.00020444393157958984, 0.0]}, {"score": -5.0952900105309595, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "divine_shield", "<EOS>", 25, 113, "True", "<EOS>", 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -3.283203601837158, 0.0, -1.9073486328125e-05, -0.000118255615234375, -0.00012993812561035156, -1.9073486328125e-06, 0.0, -1.4918627738952637, 0.0, -0.0063629150390625, -0.0002079010009765625, -0.0098801851272583, -1.9073486328125e-06]}, {"score": -5.107636741331305, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Used", "Power", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, buffs=[Effect(UsedPower(),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.LIST)),\n            PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "UsedPower"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -1.3081269264221191, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.0010356903076171875, -5.53131103515625e-05, 0.0, 0.0, 0.0, -0.5968093872070312, -2.0265579223632812e-06, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.4624650478363037, -0.041191935539245605, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -0.0001506805419921875, -7.62939453125e-06, -0.0002231597900390625, -0.015604019165039062, -0.0002613067626953125, 0.0, 0.0, -1.2879830598831177, -0.0007877349853515625, -5.7220458984375e-05, -7.43865966796875e-05, -0.030050277709960938, -0.0066509246826171875, -3.62396240234375e-05, 0.0, -0.0025935035664588213, -0.004214286804199219, -1.9073486328125e-06, -0.04111957550048828, -3.814697265625e-06, -0.3825465440750122, 0.0, -0.02890777587890625, 0.0, -1.71661376953125e-05, 0.0, -0.0012826919555664062, 0.0, -0.10913372039794922, 0.0, -0.3585023880004883, -1.9073486328125e-06, -0.0022430419921875, -4.76837158203125e-05, 0.0]}, {"score": -5.25001612351997, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 165, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 164, 51, 130, "Is", "Minion", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(AddCard(\n            CardQuery(conditions=[IsMinion()]), PlayerSelector()),\n            PlayerSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Template10", "hole0": "IsMinion"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -1.6746845245361328, 0.0, -0.5239086151123047, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001506805419921875, -3.814697265625e-06, -0.0014057159423828125, -0.08737754821777344, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -0.6079411506652832, -0.00038683414459228516, -0.0002231597900390625, -0.8498926162719727, -0.027585983276367188, -0.00058746337890625, -1.9073486328125e-06, 0.0, -0.03979909420013428, -0.16155648231506348, 0.0, -0.00202178955078125, -1.9073486328125e-06, -0.08147621154785156, -0.0001850128173828125, -0.015560150146484375, -0.0003204345703125, -0.0518646240234375, -0.002887725830078125, 0.0, -0.0003548513923306018, -0.14676260948181152, 0.0, -0.24018192291259766, 0.0, -0.18294048309326172, -7.62939453125e-06, 0.0, -0.12472248077392578, -9.5367431640625e-06, -0.00017178058624267578, -3.814697265625e-06, 0.0]}, {"score": -5.2816553894196545, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Used", "Power", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 55, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, buffs=[Effect(UsedPower(),\n            ActionTag(Damage(2), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "UsedPower"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -1.3081269264221191, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.0010356903076171875, -5.53131103515625e-05, 0.0, 0.0, 0.0, -0.5968093872070312, -2.0265579223632812e-06, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.4624650478363037, -0.041191935539245605, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -0.0001506805419921875, -7.62939453125e-06, -0.0002231597900390625, -0.015604019165039062, -0.0002613067626953125, 0.0, 0.0, -1.177808403968811, -6.914137884450611e-06, 0.0, -0.06348991394042969, -0.1903514862060547, -0.02533721923828125, -9.5367431640625e-06, 0.0, -0.02003098838031292, -2.8848648071289062e-05, 0.0, -0.8428211212158203, -1.1444091796875e-05, -0.008241653442382812, 0.0, -3.814697265625e-05, -2.86102294921875e-05, -0.0710296630859375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.003490447998046875, 0.0, -0.001461029052734375, 0.0, -0.026000261306762695, -8.308874384965748e-05, 0.0]}, {"score": -5.750868343949776, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Used", "Power", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, effects=[Effect(UsedPower(),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.LIST)),\n            PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "UsedPower"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -2.6650071144104004, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.002208709716796875, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, 0.0, -0.09506809711456299, -2.1457672119140625e-06, -7.62939453125e-06, -0.000858306884765625, 0.0, -0.29216787219047546, -0.021960973739624023, -3.814697265625e-06, -0.0001220703125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, -0.000186920166015625, -5.7220458984375e-06, -0.0002689361572265625, -0.011165618896484375, -0.000255584716796875, 0.0, 0.0, -1.255496621131897, -0.0007724761962890625, -5.91278076171875e-05, -7.43865966796875e-05, -0.028985977172851562, -0.0067539215087890625, -3.62396240234375e-05, 0.0, -0.002550590317696333, -0.003926277160644531, -1.9073486328125e-06, -0.042466163635253906, -3.814697265625e-06, -0.3827277421951294, 0.0, -0.028095245361328125, 0.0, -1.71661376953125e-05, 0.0, -0.0012836456298828125, 0.0, -0.10863018035888672, 0.0, -0.3723592758178711, -1.9073486328125e-06, -0.0022182464599609375, -4.76837158203125e-05, 0.0]}, {"score": -5.966437033346381, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Used", "Power", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, buffs=[Effect(UsedPower(),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.LIST)),\n            PlayerSelector(EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "UsedPower"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -1.3081269264221191, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.0010356903076171875, -5.53131103515625e-05, 0.0, 0.0, 0.0, -0.5968093872070312, -2.0265579223632812e-06, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.4624650478363037, -0.041191935539245605, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -0.0001506805419921875, -7.62939453125e-06, -0.0002231597900390625, -0.015604019165039062, -0.0002613067626953125, 0.0, 0.0, -1.2879830598831177, -0.0007877349853515625, -5.7220458984375e-05, -7.43865966796875e-05, -0.030050277709960938, -0.0066509246826171875, -3.62396240234375e-05, 0.0, -0.0025935035664588213, -0.004214286804199219, -1.9073486328125e-06, -0.04111957550048828, -3.814697265625e-06, -0.3825465440750122, 0.0, -0.02890777587890625, 0.0, -1.71661376953125e-05, 0.0, -0.0012826919555664062, 0.0, -0.10913372039794922, 0.0, -1.201991081237793, -0.0001010894775390625, 0.0, 0.0, -0.0011379718780517578, 0.0, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.016321182250976562, -2.0265579223632812e-06, 0.0]}, {"score": -5.997635439224439, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Used", "Power", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 55, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 174, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, buffs=[Effect(UsedPower(),\n            ActionTag(Damage(2), CharacterSelector(players=EnemyPlayer(),\n            picker=RandomPicker(), players=BothPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "UsedPower"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -0.0027443498838692904, 0.0, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -3.576278118089249e-07, 0.0, -6.318072337307967e-06, -0.012592194601893425, -9.536738616588991e-07, -0.2857074737548828, -7.62939453125e-06, -0.12128019332885742, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00017762184143066406, -1.9073486328125e-06, 0.0, -1.3081269264221191, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.0010356903076171875, -5.53131103515625e-05, 0.0, 0.0, 0.0, -0.5968093872070312, -2.0265579223632812e-06, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.4624650478363037, -0.041191935539245605, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -0.0001506805419921875, -7.62939453125e-06, -0.0002231597900390625, -0.015604019165039062, -0.0002613067626953125, 0.0, 0.0, -1.177808403968811, -6.914137884450611e-06, 0.0, -0.06348991394042969, -0.1903514862060547, -0.02533721923828125, -9.5367431640625e-06, 0.0, -0.02003098838031292, -2.8848648071289062e-05, 0.0, -0.6415224075317383, -0.0003414154052734375, -0.0029621124267578125, -1.9073486328125e-06, -1.33514404296875e-05, -2.47955322265625e-05, -0.23998653888702393, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -0.0028820037841796875, -3.814697265625e-06, -0.0001773834228515625, 0.0, -0.003919363021850586, -0.00021254688908811659, 0.0, -0.0001392364501953125, -0.5079345703125, -4.57763671875e-05, -0.00528717041015625, 0.0, -0.2636662721633911, -5.7220458984375e-05, 0.0]}, {"score": -6.94129255738693, "choice_history": [59, 124, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "Minion", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, Minion):\n        return Minion(2, 8, taunt=True)\n", "model_output": {"hole4": "Minion", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 3, "_type": "Template3", "hole0": "Deathlord", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Deathlord", "hole3": "create_minion"}, "score_history": [-1.1444091796875e-05, -0.000194549560546875, -0.0011688811937347054, -0.00018835056107491255, 0.0, -2.384185791015625e-06, -6.0796710386057384e-06, -1.9073486328125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -0.000133514404296875, -4.9591064453125e-05, -3.2186455882765586e-06, -1.728534698486328e-05, -1.1324880688334815e-05, 0.0, -0.00012409687042236328, 0.0, -0.0003262758255004883, 0.0, -6.914137884450611e-06, 0.0, -6.210442066192627, -0.00023651123046875, 0.0, -9.5367431640625e-06, -6.67572021484375e-05, 0.0, -4.768370445162873e-07, 0.0, -1.9073468138230965e-06, -0.011770128272473812, -5.960462772236497e-07, -0.702794075012207, -3.814697265625e-06, -0.013329386711120605, -2.0265579223632812e-06, -1.1444091796875e-05, -1.52587890625e-05, -0.00026547908782958984, 0.0]}], "gold_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(Summon(\n            CardQuery(conditions=[IsMinion()], source=CARD_SOURCE.MY_DECK)),\n            PlayerSelector(EnemyPlayer())))\n"}
{"beams": [{"score": -1.5514994741335997, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 32, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Spell", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, enrage=[Aura(ManaChange(-1), CardSelector(\n            condition=IsSpell()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsSpell"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -0.8438854217529297, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.0012302398681640625, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0006829500198364258, -0.000156402587890625, -0.008213043212890625, -0.0050907135009765625, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.04942941665649414, -0.0058290958404541016, -5.14984130859375e-05, -3.24249267578125e-05, -0.30916500091552734, -0.0001392364501953125, -5.7220458984375e-05, -0.04244518280029297, -3.0517578125e-05, -0.0002651214599609375, -0.0004520416259765625, 0.0, -0.00022745132446289062, -3.24249267578125e-05, 0.0, -6.103515625e-05, -1.52587890625e-05, -0.00133514404296875, -2.288818359375e-05, -0.027553558349609375, 0.0, -0.04429362341761589, -0.20592692494392395, -3.62396240234375e-05]}, {"score": -1.9187863276258597, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 32, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Spell", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(-1), CardSelector(\n            condition=IsSpell()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsSpell"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -1.202239990234375, 0.0, -4.57763671875e-05, -7.62939453125e-06, -0.0010395050048828125, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0006524324417114258, -0.0001354217529296875, -0.019745826721191406, -0.009082794189453125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.05105113983154297, -0.007116913795471191, -6.103515625e-05, -2.288818359375e-05, -0.2964334487915039, -0.0001354217529296875, -5.7220458984375e-05, -0.044582366943359375, -3.0517578125e-05, -0.0002689361572265625, -0.0004940032958984375, 0.0, -0.00023126602172851562, -3.24249267578125e-05, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -0.001354217529296875, -2.288818359375e-05, -0.027435302734375, 0.0, -0.04427506402134895, -0.207295224070549, -3.62396240234375e-05]}, {"score": -2.0539642342284807, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_targetable=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -1.9911823272705078, 0.0, -0.05568218231201172, -0.00014495849609375, -0.0021458864212036133, 0.0]}, {"score": -3.0385280431166777, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 32, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, enrage=[Aura(ManaChange(-1), CardSelector(\n            condition=IsMinion()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -0.8438854217529297, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.0012302398681640625, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0006829500198364258, -0.000156402587890625, -0.008213043212890625, -0.0050907135009765625, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.04942941665649414, -0.0058290958404541016, -5.14984130859375e-05, -3.24249267578125e-05, -0.30916500091552734, -0.0001392364501953125, -5.7220458984375e-05, -0.04244518280029297, -3.0517578125e-05, -0.0002651214599609375, -0.0004520416259765625, 0.0, -0.00022745132446289062, -3.24249267578125e-05, 0.0, -6.103515625e-05, -1.52587890625e-05, -0.00133514404296875, -2.288818359375e-05, -0.027553558349609375, 0.0, -0.04429362341761589, -1.6929802894592285, -1.1444091796875e-05]}, {"score": -3.2762769267812857, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 32, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Spell", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, buffs=[Aura(ManaChange(-1), CardSelector(\n            condition=IsSpell()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsSpell"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -2.5636301040649414, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.0005207061767578125, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0320281982421875, -0.0035343170166015625, -0.0046596527099609375, -0.021595001220703125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.041922688484191895, -0.0070648193359375, -7.62939453125e-05, -2.09808349609375e-05, -0.27135467529296875, -0.0001392364501953125, -5.53131103515625e-05, -0.04189491271972656, -3.0517578125e-05, -0.000274658203125, -0.0004291534423828125, 0.0, -0.0002657175064086914, -2.86102294921875e-05, 0.0, -6.103515625e-05, -1.52587890625e-05, -0.00133514404296875, -2.288818359375e-05, -0.027830123901367188, 0.0, -0.04403931275010109, -0.20856624841690063, -3.62396240234375e-05]}, {"score": -3.297617142359961, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 55, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Spell", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, enrage=[Aura(ManaChange(2), CardSelector(\n            condition=IsSpell()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsSpell"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -0.8438854217529297, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.0012302398681640625, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0006829500198364258, -0.000156402587890625, -0.008213043212890625, -0.0050907135009765625, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.04942941665649414, -0.0058290958404541016, -5.14984130859375e-05, -3.24249267578125e-05, -1.891824722290039, -0.13146400451660156, -0.023927688598632812, -5.7220458984375e-06, 0.0, -0.021131394430994987, -6.866455078125e-05, 0.0, -6.67572021484375e-05, -5.7220458984375e-06, -0.0016765594482421875, -3.24249267578125e-05, -0.03905677795410156, 0.0, -0.04440122842788696, -0.22449007630348206, -2.47955322265625e-05]}, {"score": -3.485084443158705, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 57, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Spell", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, enrage=[Aura(ManaChange(3), CardSelector(\n            condition=IsSpell()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsSpell"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -0.8438854217529297, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.0012302398681640625, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0006829500198364258, -0.000156402587890625, -0.008213043212890625, -0.0050907135009765625, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.04942941665649414, -0.0058290958404541016, -5.14984130859375e-05, -3.24249267578125e-05, -2.1779518127441406, -0.00183868408203125, -0.00018310546875, -1.52587890625e-05, 0.0, -0.0036890502087771893, -0.0001220703125, 0.0, -3.24249267578125e-05, -1.33514404296875e-05, -0.0014362335205078125, -1.71661376953125e-05, -0.03794097900390625, 0.0, -0.032876186072826385, -0.3094989061355591, -2.86102294921875e-05]}, {"score": -3.7519126118079313, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 55, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Spell", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            condition=IsSpell()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsSpell"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -1.202239990234375, 0.0, -4.57763671875e-05, -7.62939453125e-06, -0.0010395050048828125, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0006524324417114258, -0.0001354217529296875, -0.019745826721191406, -0.009082794189453125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.05105113983154297, -0.007116913795471191, -6.103515625e-05, -2.288818359375e-05, -1.9450626373291016, -0.15351295471191406, -0.02239990234375, -7.62939453125e-06, 0.0, -0.02179097756743431, -6.67572021484375e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -0.0018024444580078125, -3.4332275390625e-05, -0.0398406982421875, 0.0, -0.044038325548172, -0.2272331863641739, -2.47955322265625e-05]}, {"score": -3.8795781683095285, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 57, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Spell", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(3), CardSelector(\n            condition=IsSpell()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsSpell"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -1.202239990234375, 0.0, -4.57763671875e-05, -7.62939453125e-06, -0.0010395050048828125, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0006524324417114258, -0.0001354217529296875, -0.019745826721191406, -0.009082794189453125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.05105113983154297, -0.007116913795471191, -6.103515625e-05, -2.288818359375e-05, -2.1931285858154297, -0.001903533935546875, -0.0001773834228515625, -1.71661376953125e-05, 0.0, -0.0036097760312259197, -0.0001316070556640625, 0.0, -3.24249267578125e-05, -1.33514404296875e-05, -0.0014801025390625, -1.71661376953125e-05, -0.03838920593261719, 0.0, -0.03271825984120369, -0.31190741062164307, -2.86102294921875e-05]}, {"score": -4.277756667967189, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -4.270275592803955, -1.9073486328125e-06, -0.0026702880859375]}, {"score": -4.925553775663722, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -4.90371036529541, 0.0, -0.014299392700195312, -3.814697265625e-05, -0.002696990966796875, 0.0]}, {"score": -5.79950616442715, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -5.789705753326416, 0.0, -0.0017719268798828125, -4.1961669921875e-05, -0.003177642822265625, 0.0]}, {"score": -6.654242969389308, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 32], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_targetable=1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "Template18"}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -1.9911823272705078, 0.0, -4.658251762390137]}, {"score": -7.106674648161281, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.000675201416015625, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00014972685312386602, -2.3841855067985307e-07, -4.57763671875e-05, -1.9073486328125e-06, -6.997918128967285, 0.0, -0.1010751724243164, -0.0002117156982421875, -0.0026607513427734375, 0.0]}, {"score": -7.423553443799214, "choice_history": [59, 124, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Nerub'ar Weblord", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Nerub'arWeblord", "hole3": "create_minion"}, "score_history": [-4.9591064453125e-05, -5.91278076171875e-05, -5.9604562920867465e-06, -3.635817120084539e-05, -2.0265410057618283e-05, 0.0, 0.0, -5.960462772236497e-07, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003086090087890625, -1.71661376953125e-05, -2.5629668016335927e-05, -3.504753112792969e-05, -9.536738616588991e-07, -6.29425048828125e-05, -0.0002640267484821379, 0.0, -2.586841583251953e-05, 0.0, -0.00020575523376464844, 0.0, -5.841255187988281e-06, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -7.419517517089844, 0.0, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-05]}], "gold_code": "class NerubarWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            BothPlayer(), HasBattlecry()))])\n"}
{"beams": [{"score": -0.48520834450967243, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -0.4687138795852661, -1.1920928244535389e-07, -0.005223274230957031, -0.0001201629638671875, -0.0003606081008911133, 0.0]}, {"score": -1.9927191085683589, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, enrage=[Aura(ChangeAttack(2), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -1.7142115831375122, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -0.003421783447265625, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0009959936141967773, -5.53131103515625e-05, -0.01137542724609375, -0.023180007934570312, 0.0, 0.0, -1.9073486328125e-06, -0.001213414128869772, -0.0007982254028320312, -9.5367431640625e-06, -1.9073486328125e-06, -0.011224746704101562, -0.0032520294189453125, 0.0, -0.2121201753616333, -1.71661376953125e-05, 0.0]}, {"score": -2.892132338465977, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=[Aura(ChangeAttack(2), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -2.596658229827881, 0.0, -0.000133514404296875, -9.5367431640625e-06, -0.0018978118896484375, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0007251501083374023, -5.91278076171875e-05, -0.019138336181640625, -0.045104026794433594, 0.0, 0.0, -1.9073486328125e-06, -0.0016345824114978313, -0.0007271766662597656, -9.5367431640625e-06, -1.9073486328125e-06, -0.01226043701171875, -0.0027217864990234375, 0.0, -0.20022845268249512, -1.71661376953125e-05, 0.0]}, {"score": -3.0643395901227777, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_damage=1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -3.0505261421203613, -3.814697265625e-06, -0.0030193328857421875]}, {"score": -3.598058635698486, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, enrage=[Aura(ChangeAttack(2), WeaponSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -1.7142115831375122, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -0.003421783447265625, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0009959936141967773, -5.53131103515625e-05, -0.01137542724609375, -0.023180007934570312, 0.0, 0.0, -1.9073486328125e-06, -0.001213414128869772, -0.0007982254028320312, -9.5367431640625e-06, -1.9073486328125e-06, -0.011224746704101562, -0.0032520294189453125, 0.0, -1.817379117012024, -9.775161743164062e-05, 0.0]}, {"score": -3.9020165920759027, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -3.879316806793213, 0.0, -0.00412750244140625, -2.86102294921875e-05, -0.00775146484375, -1.9073486328125e-06]}, {"score": -4.558932241381932, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=[Aura(ChangeAttack(2), WeaponSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -2.596658229827881, 0.0, -0.000133514404296875, -9.5367431640625e-06, -0.0018978118896484375, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0007251501083374023, -5.91278076171875e-05, -0.019138336181640625, -0.045104026794433594, 0.0, 0.0, -1.9073486328125e-06, -0.0016345824114978313, -0.0007271766662597656, -9.5367431640625e-06, -1.9073486328125e-06, -0.01226043701171875, -0.0027217864990234375, 0.0, -1.8669440746307373, -0.00010144710540771484, 0.0]}, {"score": -4.699809014428261, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, buffs=[Aura(ChangeAttack(2), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -4.384063720703125, -1.9073486328125e-06, -4.9591064453125e-05, -7.62939453125e-06, -0.001102447509765625, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, 0.0, -0.005037426948547363, -0.0003795623779296875, -0.0098114013671875, -0.07142829895019531, 0.0, 0.0, -1.9073486328125e-06, -0.0014480229001492262, -0.0009337663650512695, -1.33514404296875e-05, -1.9073486328125e-06, -0.0109710693359375, -0.002941131591796875, 0.0, -0.20079505443572998, -1.71661376953125e-05, 0.0]}, {"score": -5.5519208431745355, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -5.500223636627197, 0.0, -0.0109100341796875, -7.62939453125e-06, -0.029987335205078125, -1.9073486328125e-06]}, {"score": -5.556136185632873, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Minion", "Selector", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, enrage=[Aura(ChangeAttack(2), MinionSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "MinionSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -1.7142115831375122, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -0.003421783447265625, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0009959936141967773, -5.53131103515625e-05, -0.01137542724609375, -0.023180007934570312, 0.0, 0.0, -1.9073486328125e-06, -0.001213414128869772, -0.0007982254028320312, -9.5367431640625e-06, -1.9073486328125e-06, -0.011224746704101562, -0.0032520294189453125, 0.0, -3.7754247188568115, -0.00012969970703125, 0.0]}, {"score": -5.783150269373486, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spectral", " ", "Knight", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}], "args": [{"s": "Spectral Knight", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.385724067687988, -0.2119617462158203, -3.0517578125e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -1.549708758830093e-05, -2.1338462829589844e-05, -4.124641418457031e-05, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.876855720998719e-05, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.24249267578125e-05, -3.814697265625e-06, -0.0035668611526489258, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -1.33514404296875e-05, -1.52587890625e-05, -0.060813188552856445, -1.52587890625e-05, -0.00011646747589111328, -1.9073486328125e-06, -0.010317087173461914, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.0016145706176757812, 0.0, -3.099440846199286e-06, -7.62939453125e-06, -2.3841855067985307e-07, -0.001142221735790372, -2.3841855067985307e-07, -0.00016021728515625, 0.0, -0.09852242469787598, -4.768370445162873e-07, -0.006049156188964844, -6.103515625e-05, -0.0003477334976196289, 0.0]}, {"score": -6.41371511235257, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "4", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4, spell_targetable=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -6.055118083953857, -2.3841855067985307e-07, -0.00012969970703125, 0.0, -0.3402053117752075, -2.3841855067985307e-07, -0.009603500366210938, -0.00011444091796875, -0.00029206275939941406, 0.0]}, {"score": -6.813347768833715, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "HUNTER", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, HUNTER=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "HUNTER", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -6.414632320404053, 0.0, -0.04182720184326172, -7.62939453125e-05, -0.3460216522216797, 0.0]}, {"score": -6.9834690809751265, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>", 172, 154, "minion_type", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, minion_type=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -0.001888275146484375, 0.0, -4.768370445162873e-07, -7.62939453125e-06, 0.0, -0.002420270349830389, -2.3841855067985307e-07, -0.000118255615234375, 0.0, -6.354325771331787, -1.1920928244535389e-07, -0.004399299621582031, -0.0014781951904296875, -0.6124753952026367, 0.0]}, {"score": -7.504186188058604, "choice_history": [59, 124, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "6", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 5, "_type": "Template3", "hole0": "Spectral Knight", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "SpectralKnight", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.0001430511474609375, -5.531158240046352e-05, -9.65590606938349e-06, -5.292828427627683e-05, -1.7878774087876081e-06, -1.1920928244535389e-07, -3.802774881478399e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0047454833984375, -1.9073486328125e-05, -2.3841830625315197e-06, -3.3736188925104216e-05, -2.50339189733495e-06, -1.9073486328125e-06, -0.00013731993385590613, 0.0, -0.00011444085248513147, -1.9073486328125e-06, -7.74860309320502e-05, 0.0, -2.0265579223632812e-05, 0.0, -0.0008767843246459961, 0.0, 0.0, -5.7220458984375e-06, -7.48956298828125, 0.0, -1.9073486328125e-06, -1.299367067986168e-05, 0.0, -0.008253144100308418, 0.0]}], "gold_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=False)\n"}
{"beams": [{"score": -1.8664218399348655, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -1.291337490081787, -0.00038955139461904764, -0.44943809509277344, 0.0, -0.0037676095962524414, -5.7220458984375e-05, 0.0, -2.634511110954918e-05, -1.9073486328125e-06, -1.9788720237556845e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -0.03255176544189453, 0.0, 0.0, -9.179113476420753e-06, -2.3841855067985307e-07, -0.0019780397415161133, 0.0]}, {"score": -2.167898222162414, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "<UNK>", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>(), MinionSelector(\n            players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -1.1808762550354004, -0.3614269495010376, -0.000518798828125, -0.014502525329589844, -1.71661376953125e-05, 0.0, -9.476952254772186e-05, -3.933906555175781e-06, 0.0, -0.1475973129272461, -7.2479248046875e-05, -0.005740523338317871, 0.0, -3.0517578125e-05, 0.0, -0.3698716163635254, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.9669532775878906e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -4.57763671875e-05, 0.0, 0.0, -8.106225322990213e-06, 0.0, -0.00019860267639160156, 0.0]}, {"score": -2.964035684533414, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Silence", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector\n            (players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Silence"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -1.926026463508606, -0.016475902870297432, -0.0009975433349609375, -0.0009441375732421875, -3.814697265625e-06, 0.0, -2.2790394723415375e-05, -5.841255187988281e-06, -1.1920928244535389e-07, -0.2924680709838867, -0.000102996826171875, -0.006722807884216309, 0.0, -3.62396240234375e-05, 0.0, -0.6330932378768921, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.7762184143066406e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, 0.0, -7.987016942934133e-06, 0.0, -0.00020432472229003906, 0.0]}, {"score": -2.9739399396935298, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "<UNK>", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>(), MinionSelector(\n            players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -1.1808762550354004, -0.3614269495010376, -0.000518798828125, -0.014502525329589844, -1.71661376953125e-05, 0.0, -9.476952254772186e-05, -3.933906555175781e-06, 0.0, -0.1475973129272461, -7.2479248046875e-05, -0.005740523338317871, 0.0, -3.0517578125e-05, 0.0, -1.1757416725158691, -0.0001277923583984375, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.5974044799804688e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, 0.0, -1.0013575774792116e-05, 0.0, -0.0002633333206176758, 0.0]}, {"score": -3.0895371980154636, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Silence", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector\n            (players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Silence"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -1.926026463508606, -0.016475902870297432, -0.0009975433349609375, -0.0009441375732421875, -3.814697265625e-06, 0.0, -2.2790394723415375e-05, -5.841255187988281e-06, -1.1920928244535389e-07, -0.2924680709838867, -0.000102996826171875, -0.006722807884216309, 0.0, -3.62396240234375e-05, 0.0, -0.7584060430526733, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -4.00543212890625e-05, 0.0, 0.0, -1.0013575774792116e-05, 0.0, -0.0002614259719848633, 0.0]}, {"score": -3.4802257521928226, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), MinionSelector(\n            players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -2.003065586090088, -0.00042485984158702195, -7.62939453125e-05, -0.662811279296875, -3.0517578125e-05, 0.0, -8.013099431991577e-06, -5.841255187988281e-06, -1.1920928244535389e-07, -0.1172952651977539, -0.0001087188720703125, -0.021068811416625977, 0.0, -2.86102294921875e-05, 0.0, -0.5879216194152832, -0.0001926422119140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.5974044799804688e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-05, -1.1920838005607948e-07, 0.0, -1.0132783245353494e-05, 0.0, -0.0002633333206176758, 0.0]}, {"score": -3.7043047650645207, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), MinionSelector(\n            players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -2.003065586090088, -0.00042485984158702195, -7.62939453125e-05, -0.662811279296875, -3.0517578125e-05, 0.0, -8.013099431991577e-06, -5.841255187988281e-06, -1.1920928244535389e-07, -0.1172952651977539, -0.0001087188720703125, -0.021068811416625977, 0.0, -2.86102294921875e-05, 0.0, -0.8122429847717285, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -1.9788742065429688e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, 0.0, -8.106225322990213e-06, 0.0, -0.00020241737365722656, 0.0]}, {"score": -3.8717773922517082, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Increase", "Soul", "<EOS>", 41, 89, 24, 112, "Weapon", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(IncreaseSoul(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "IncreaseSoul"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "WeaponSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -2.773667335510254, -0.23870372772216797, -0.008313336409628391, -0.09942054748535156, -0.061944007873535156, -2.09808349609375e-05, -1.9073486328125e-06, -0.5161986351013184, -0.0002992152876686305, 0.0, -0.07768821716308594, -0.0001354217529296875, 0.0, -0.003939283080399036, -5.507468449650332e-05, 0.0, -2.5033950805664062e-05, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -0.003139495849609375, 0.0, 0.0, -6.556510470545618e-06, 0.0, -0.0013543367385864258, 0.0]}, {"score": -3.9301852201328913, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Draw(), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -1.291337490081787, -0.00038955139461904764, -1.0160808563232422, -0.05443859100341797, -4.00543212890625e-05, -1.9073486328125e-06, -0.10718262195587158, -9.5367431640625e-06, -1.9073486328125e-06, -0.0054798126220703125, -0.35371875762939453, -4.38690185546875e-05, -2.6702880859375e-05, 0.0, -0.7635103464126587, -0.1952524185180664, -1.9073486328125e-06, -1.1444091796875e-05, -4.9591064453125e-05, 0.0, -1.52587890625e-05, -0.0001888275146484375, -0.0006564855575561523, 0.0, -0.05178260803222656, -9.1552734375e-05, -9.5367431640625e-05, 0.0, -0.0023366212844848633, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.7418136596679688e-05, 0.0, 0.0, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, 0.0, -1.001356213237159e-05, 0.0, -0.0005018711090087891, 0.0]}, {"score": -4.945758351199622, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Attack", "<UNK>", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>(2), EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -2.003065586090088, -0.00042485984158702195, -7.62939453125e-05, -0.841252326965332, -0.0002193450927734375, 0.0, -3.2687559723854065e-05, -2.503394853192731e-06, 0.0, -0.008932113647460938, -0.08841228485107422, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -0.731082558631897, -0.031620025634765625, -0.13765990734100342, -0.041996002197265625, -0.4045228958129883, -0.000457763671875, 0.0, -0.5686741471290588, -4.363059269962832e-05, 0.0, -3.826618194580078e-05, -1.9073486328125e-06, -1.2278556823730469e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, 0.0, -6.556500920851249e-06, 0.0, -0.00023102760314941406, 0.0]}, {"score": -5.129408440482159, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Attack", "<UNK>", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Draw(), MinionSelector(\n            Attack<UNK>(2), EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -0.06398582458496094, -1.9073486328125e-06, -1.291337490081787, -0.00038955139461904764, -1.0160808563232422, -0.05443859100341797, -4.00543212890625e-05, -1.9073486328125e-06, -0.10718262195587158, -9.5367431640625e-06, -1.9073486328125e-06, -0.0054798126220703125, -0.35371875762939453, -4.38690185546875e-05, -2.6702880859375e-05, 0.0, -0.7591501474380493, -0.06207561492919922, -0.15984678268432617, -0.08127975463867188, -0.4826164245605469, -0.000278472900390625, 0.0, -0.6681528687477112, -4.5657150621991605e-05, 0.0, -3.635883331298828e-05, -1.9073486328125e-06, -1.2278556823730469e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, 0.0, -6.6757102104020305e-06, 0.0, -0.00022912025451660156, 0.0]}, {"score": -6.10725584168312, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -4.024847030639648, -5.53131103515625e-05, -3.0517578125e-05, -8.58306884765625e-05, -0.011814411729574203, -0.010053612291812897, -0.0004673004150390625, -0.018965721130371094, -1.71661376953125e-05, -0.0027523040771484375, -9.5367431640625e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -0.008725880645215511, -3.921985626220703e-05, -8.0108642578125e-05, -0.010381698608398438, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.0008753414149396122, -0.04183053970336914, -3.135203223791905e-05, -7.62939453125e-06, -0.12191963195800781, -4.9591064453125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.002239346271380782, -5.125998541188892e-06, -3.24249267578125e-05, -0.15237045288085938, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.0031805902253836393, -0.0354846715927124, -2.729855441430118e-05, -2.09808349609375e-05, -0.5916252136230469, -0.11244964599609375, -0.06136512756347656, -2.09808349609375e-05, -1.9073486328125e-06, -0.029587142169475555, -1.9073486328125e-06, 0.0, -7.82012939453125e-05, -0.0001544952392578125, -0.8226032257080078, 0.0, -3.814697265625e-06, 0.0, -0.019539952278137207, -0.0001010894775390625, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -2.181529998779297e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -5.340576171875e-05, 0.0, 0.0, -1.0609618584567215e-05, 0.0, -0.00026345252990722656, 0.0]}, {"score": -7.43792274134784, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Wailing", " ", "Soul", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(condition=\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000980377197265625, -9.1552734375e-05, -0.000293731689453125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -1.6569954823353328e-05, -0.00012683868408203125, -1.6689286894688848e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.682164267753251e-05, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -0.0008562803268432617, 0.0, -0.012597084045410156, -1.9073486328125e-05, -0.0034580230712890625, 0.0, -0.003314971923828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -7.62939453125e-06, -0.00019073486328125, -4.024847030639648, -5.53131103515625e-05, -3.0517578125e-05, -8.58306884765625e-05, -0.011814411729574203, -0.010053612291812897, -0.0004673004150390625, -0.018965721130371094, -1.71661376953125e-05, -0.0027523040771484375, -9.5367431640625e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -0.008725880645215511, -3.921985626220703e-05, -8.0108642578125e-05, -0.010381698608398438, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.0008753414149396122, -0.04183053970336914, -3.135203223791905e-05, -7.62939453125e-06, -0.12191963195800781, -4.9591064453125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.002239346271380782, -5.125998541188892e-06, -3.24249267578125e-05, -0.15237045288085938, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.0031805902253836393, -0.0354846715927124, -2.729855441430118e-05, -2.09808349609375e-05, -0.5916252136230469, -0.11244964599609375, -0.06136512756347656, -2.09808349609375e-05, -1.9073486328125e-06, -0.029587142169475555, -1.9073486328125e-06, 0.0, -7.82012939453125e-05, -0.0001544952392578125, -0.6062936782836914, 0.0, -0.6949396133422852, 0.0, -0.8716708421707153, -2.872943878173828e-05, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.96695291379001e-05, 0.0, 0.0, -7.62939453125e-06, -1.71661376953125e-05, 0.0, 0.0, -1.0132768693438265e-05, 0.0, -0.00018906593322753906, 0.0]}, {"score": -8.353778885385445, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, spell_damage=1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Wailing Soul", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}]}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.03444766998291, -8.0108642578125e-05, -1.0132738680113107e-05, -3.707408905029297e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.3351423149288166e-05, 0.0, -0.00011289119720458984, -1.9073486328125e-06, -0.004036664962768555, 0.0, -2.3722519472357817e-05, 0.0, -1.621245246496983e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -4.1961669921875e-05, 0.0, 0.0, -1.9311904907226562e-05, -3.576278118089249e-07, -2.956390380859375e-05, -8.4638240878121e-06, -0.0038356781005859375, 0.0, -1.2291253805160522, -5.7220458984375e-06, -0.08128643035888672]}, {"score": -9.497382091066292, "choice_history": [59, 124, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "5", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, spell_targetable=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Wailing Soul", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WailingSoul", "hole3": "create_minion"}, "score_history": [-3.4332275390625e-05, -4.00543212890625e-05, -0.00013457823661156, -0.00035637227119877934, -1.7046813809429295e-05, 0.0, -3.933906555175781e-06, -8.344629350176547e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.03444766998291, -8.0108642578125e-05, -1.0132738680113107e-05, -3.707408905029297e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.3351423149288166e-05, 0.0, -0.00011289119720458984, -1.9073486328125e-06, -0.004036664962768555, 0.0, -2.3722519472357817e-05, 0.0, -1.621245246496983e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -4.1961669921875e-05, 0.0, 0.0, -1.9311904907226562e-05, -3.576278118089249e-07, -2.956390380859375e-05, -8.4638240878121e-06, -0.0038356781005859375, 0.0, -2.410698175430298, 0.0, -0.042090415954589844, -6.29425048828125e-05, -0.0011692047119140625, 0.0]}], "gold_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}
{"beams": [{"score": -0.32944267450846354, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -0.08151817321777344, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0004047155089210719, -0.0003377199172973633, -0.0012454986572265625, -0.0001049041748046875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.044920291751623154, -0.00021600723266601562, -4.291534423828125e-06, 0.0, -0.16997146606445312, -0.01277923583984375, 0.0, -0.007372137624770403, -7.82012939453125e-05, 0.0]}, {"score": -2.5575651207288317, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -0.08151817321777344, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0004047155089210719, -0.0003377199172973633, -0.0012454986572265625, -0.0001049041748046875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.044920291751623154, -0.00021600723266601562, -4.291534423828125e-06, 0.0, -2.267401695251465, -0.02712249755859375, 0.0, -0.12375923991203308, -4.00543212890625e-05, 0.0]}, {"score": -3.991668256241546, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector()),\n            Aura(ChangeHealth(1), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -2.548442840576172, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.003014206886291504, -0.00021564960479736328, -0.0009174346923828125, -6.67572021484375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.002255207858979702, -0.0003572702407836914, -3.933906555175781e-06, 0.0, -0.4794197082519531, -0.0030803680419921875, 0.0, -0.0109060974791646, -8.7738037109375e-05, 0.0, -6.103515625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.10451352596282959, -0.0001888275146484375, -0.00284576416015625, -0.09873008728027344, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.024559078738093376, -0.6673053503036499, -1.7881377516459906e-06, -1.9073486328125e-06, -0.027228355407714844, -0.00116729736328125, 0.0, -0.005744932685047388, -3.063678741455078e-05, 0.0]}, {"score": -4.722965297969203, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), WeaponSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -0.08151817321777344, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0004047155089210719, -0.0003377199172973633, -0.0012454986572265625, -0.0001049041748046875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.044920291751623154, -0.00021600723266601562, -4.291534423828125e-06, 0.0, -2.267401695251465, -0.02712249755859375, 0.0, -2.2891130447387695, -8.64267349243164e-05, 0.0]}, {"score": -4.791407933207374, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -0.08151817321777344, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0004047155089210719, -0.0003377199172973633, -0.0012454986572265625, -0.0001049041748046875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.044920291751623154, -0.00021600723266601562, -4.291534423828125e-06, 0.0, -4.534280776977539, -0.033802032470703125, 0.0, -0.0840490385890007, -3.445148468017578e-05, 0.0]}, {"score": -4.8381896733868, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector()),\n            Aura(ChangeHealth(1), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -2.548442840576172, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.003014206886291504, -0.00021564960479736328, -0.0009174346923828125, -6.67572021484375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.002255207858979702, -0.0003572702407836914, -3.933906555175781e-06, 0.0, -1.205057144165039, -0.0050506591796875, 0.0, -0.08442389219999313, -4.00543212890625e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.07298779487609863, -0.0001983642578125, -0.003635406494140625, -0.07874870300292969, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.12315640598535538, -0.6710675954818726, -1.4305104514278355e-06, -1.9073486328125e-06, -0.022210121154785156, -0.001068115234375, 0.0, -0.004685167223215103, -2.872943878173828e-05, 0.0]}, {"score": -4.867514190944057, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -0.08151817321777344, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0004047155089210719, -0.0003377199172973633, -0.0012454986572265625, -0.0001049041748046875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.044920291751623154, -0.00021600723266601562, -4.291534423828125e-06, 0.0, -3.184825897216797, 0.0, -1.2794793844223022, 0.0, -0.21436119079589844, 0.0, -0.0494992733001709, -0.0001068115234375, 0.0]}, {"score": -5.002222921476623, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector()),\n            Aura(ChangeAttack(2), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -2.548442840576172, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.003014206886291504, -0.00021564960479736328, -0.0009174346923828125, -6.67572021484375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.002255207858979702, -0.0003572702407836914, -3.933906555175781e-06, 0.0, -0.4794197082519531, -0.0030803680419921875, 0.0, -0.0109060974791646, -8.7738037109375e-05, 0.0, -6.103515625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.10451352596282959, -0.0001888275146484375, -0.00284576416015625, -0.09873008728027344, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.024559078738093376, -0.7295116186141968, -6.556510470545618e-06, 0.0, -0.916046142578125, -0.0013599395751953125, 0.0, -0.06508588045835495, -2.47955322265625e-05, 0.0]}, {"score": -5.023719135391438, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), MinionSelector(\n            picker=RandomPicker()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -0.08151817321777344, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0004047155089210719, -0.0003377199172973633, -0.0012454986572265625, -0.0001049041748046875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.044920291751623154, -0.00021600723266601562, -4.291534423828125e-06, 0.0, -0.16997146606445312, -4.367076873779297, -0.18338680267333984, -9.5367431640625e-06, 0.0, -0.012143125757575035, -1.9073486328125e-06, 0.0, -0.0002536773681640625, -5.14984130859375e-05, -0.015779495239257812, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.13560368120670319, -0.00019562241504900157, 0.0]}, {"score": -5.072268398255964, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector()),\n            Aura(ChangeAttack(3), SelfSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -2.548442840576172, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.003014206886291504, -0.00021564960479736328, -0.0009174346923828125, -6.67572021484375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.002255207858979702, -0.0003572702407836914, -3.933906555175781e-06, 0.0, -0.4794197082519531, -0.0030803680419921875, 0.0, -0.0109060974791646, -8.7738037109375e-05, 0.0, -6.103515625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.10451352596282959, -0.0001888275146484375, -0.00284576416015625, -0.09873008728027344, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.024559078738093376, -0.7295116186141968, -6.556510470545618e-06, 0.0, -1.0379276275634766, -0.0002346038818359375, 0.0, -0.014333246275782585, -6.67572021484375e-05, 0.0]}, {"score": -6.049304752581229, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "enrage", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 48, 117, "4", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(4), GreaterThan(Count\n            (MinionSelector(IsType(MINION_TYPE.MURLOC))), picker=\n            RandomPicker()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -0.007113337516784668, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -0.08151817321777344, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0004047155089210719, -0.0003377199172973633, -0.0012454986572265625, -0.0001049041748046875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.044920291751623154, -0.00021600723266601562, -4.291534423828125e-06, 0.0, -3.184825897216797, 0.0, -0.7547782063484192, 0.0, -0.14274883270263672, -0.06633663177490234, -0.0005435943603515625, 0.0, -0.0706096887588501, -0.009293794631958008, -1.33514404296875e-05, -0.0002918243408203125, -0.0004062652587890625, -5.7220458984375e-06, 0.0, 0.0, -0.0011918542440980673, -3.814697265625e-06, -1.9073486328125e-06, -0.0036935806274414062, -0.1460132598876953, -3.814697265625e-06, 0.0, -0.009085727855563164, -2.09808349609375e-05, -1.9073486328125e-06, -0.001087188720703125, -0.02777385711669922, -0.006234169006347656, -5.7220458984375e-06, -5.7220458984375e-06, -0.04475298896431923, -0.0005440710228867829, -2.014635902014561e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.003921627998352051, -1.9073486328125e-06, -0.5941413640975952, -0.0001010894775390625, -0.000125885009765625, -3.814697265625e-06, -0.6321783065795898, 0.0, -1.1444091796875e-05, 0.0, -0.2086891382932663, -0.0002678629825823009, 0.0]}, {"score": -6.9103399233533125, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, spell_targetable=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -6.692650318145752, -2.0265579223632812e-06, -0.2094402313232422, -0.0012264251708984375, -0.0037453174591064453, 0.0]}, {"score": -7.335085125417827, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, spell_damage=1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -7.326873302459717, -3.814697265625e-06, -0.004932403564453125]}, {"score": -8.38570341631901, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "Deathrattle", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, Deathrattle=EnemyPlayer())\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "Deathrattle", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}]}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.72747802734375e-05, -1.1920906217710581e-07, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.00010895288869505748, -3.3378591979271732e-06, -0.0012073516845703125, -1.9073486328125e-06, -7.560936450958252, 0.0, -0.31920337677001953, 0.0, -0.5022670030593872, -2.09808349609375e-05, 0.0]}, {"score": -9.916519379693447, "choice_history": [59, 124, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Amani Berserker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "AmaniBerserker", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-05, -0.0001983642578125, -1.4662635294371285e-05, -8.332382276421413e-05, -9.536714060232043e-06, -3.576233211788349e-07, -3.814697265625e-06, -7.867794920457527e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.52587890625e-05, -4.994744449504651e-05, -4.00543212890625e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.001210313057526946, 0.0, -3.6597251892089844e-05, 0.0, -2.8967857360839844e-05, 0.0, -7.748603820800781e-06, 0.0, -1.3351424058782868e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -9.914454460144043, 0.0, -3.933906555175781e-06, -1.5497195136049413e-06, -5.9604562920867465e-06, -0.00018966197967529297, -1.0848044439626392e-05]}], "gold_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n"}
{"beams": [{"score": -3.116901952560397, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Spell", "Cast", "<EOS>", 165, 41, 89, 24, 112, "Not", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 56, 51, 130, "Card", "Selector", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(Not(ManaCost(1)),\n            CardSelector()), ActionTag(AddCard(CardQuery(source=CARD_SOURCE\n            .<UNK>)), PlayerSelector(EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ManaCost"}}], "func": {"_type": "Name", "id": "Not"}}, {"_type": "Template10", "hole0": "CardSelector"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -0.12751293182373047, -0.15456390380859375, -0.0001354217529296875, -9.5367431640625e-06, -0.03744504973292351, -0.0009785890579223633, -4.5299530029296875e-06, -0.00038909912109375, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, 0.0, -0.652616024017334, -0.0015755891799926758, -1.52587890625e-05, -1.9073486328125e-06, -0.019815444946289062, -2.86102294921875e-05, 0.0, -0.15197861194610596, -0.013688445091247559, 0.0, -0.0023040771484375, -0.004207611083984375, -0.026988983154296875, 0.0, -0.3996129035949707, -0.002342820167541504, 0.0, -0.0012359619140625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0004546642303466797, -7.82012939453125e-05, -3.814697265625e-06, -1.71661376953125e-05, -5.340576171875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.035178422927856445, -4.744529724121094e-05, -0.00045680999755859375, -2.86102294921875e-05, -0.0002040863037109375, -0.000408172607421875, -2.86102294921875e-05, 0.0, -9.775161743164062e-05, -0.001068115234375, -1.9073486328125e-05, -0.01442718505859375, -1.9073486328125e-06, -0.21452248096466064, 0.0, -0.00020599365234375, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.0002841949462890625, -1.9073486328125e-06, -0.12398719787597656, -1.9073486328125e-06, -0.004573822021484375, -1.9073486328125e-05, 0.0, 0.0, -0.0013903379440307617, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -0.0021953582763671875, -3.814697265625e-05, -0.6649572849273682, -2.4437902538920753e-05, 0.0]}, {"score": -3.249100530308965, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Spell", "Cast", "<EOS>", 165, 41, 89, 24, 112, "Not", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 56, 51, 130, "Card", "Selector", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "<UNK>", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(Not(ManaCost(1)),\n            CardSelector()), ActionTag(AddCard(CardQuery(source=CARD_SOURCE\n            .<UNK>)), PlayerSelector(<UNK>Player())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ManaCost"}}], "func": {"_type": "Name", "id": "Not"}}, {"_type": "Template10", "hole0": "CardSelector"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Player"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -0.12751293182373047, -0.15456390380859375, -0.0001354217529296875, -9.5367431640625e-06, -0.03744504973292351, -0.0009785890579223633, -4.5299530029296875e-06, -0.00038909912109375, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, 0.0, -0.652616024017334, -0.0015755891799926758, -1.52587890625e-05, -1.9073486328125e-06, -0.019815444946289062, -2.86102294921875e-05, 0.0, -0.15197861194610596, -0.013688445091247559, 0.0, -0.0023040771484375, -0.004207611083984375, -0.026988983154296875, 0.0, -0.3996129035949707, -0.002342820167541504, 0.0, -0.0012359619140625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0004546642303466797, -7.82012939453125e-05, -3.814697265625e-06, -1.71661376953125e-05, -5.340576171875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.035178422927856445, -4.744529724121094e-05, -0.00045680999755859375, -2.86102294921875e-05, -0.0002040863037109375, -0.000408172607421875, -2.86102294921875e-05, 0.0, -9.775161743164062e-05, -0.001068115234375, -1.9073486328125e-05, -0.01442718505859375, -1.9073486328125e-06, -0.21452248096466064, 0.0, -0.00020599365234375, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.0002841949462890625, -1.9073486328125e-06, -0.12398719787597656, -1.9073486328125e-06, -0.004573822021484375, -1.9073486328125e-05, 0.0, 0.0, -0.0013903379440307617, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -0.0021953582763671875, -3.814697265625e-05, -0.7885382175445557, -0.008642083033919334, 0.0]}, {"score": -3.933789454187604, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -0.12751293182373047, -1.9545602798461914, -9.5367431640625e-06, 0.0, -0.1619257777929306, -0.000446319580078125, -4.291534423828125e-06, -0.000202178955078125, -6.866455078125e-05, -0.0001468658447265625, 0.0, -0.000209808349609375, 0.0, -0.03951001167297363, -9.5367431640625e-06, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.0003070831298828125, -1.1444091796875e-05, -1.33514404296875e-05, -6.103515625e-05, -0.000606536865234375, -5.7220458984375e-06, 0.0, -0.03985130786895752, -0.00010824203491210938, -0.0001659393310546875, -5.14984130859375e-05, -0.0004444122314453125, -0.000247955322265625, -4.38690185546875e-05, 0.0, -0.0002492666244506836, -0.0010930299758911133, -9.5367431640625e-06, -0.023012161254882812, -1.9073486328125e-06, -0.33583176136016846, 0.0, -0.0002117156982421875, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.0002803802490234375, -3.814697265625e-06, -0.12920188903808594, -1.9073486328125e-06, -0.009973526000976562, -2.86102294921875e-05, 0.0, 0.0, -0.0011425018310546875, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -0.0020427703857421875, -4.00543212890625e-05, -0.6493929624557495, -2.241134461655747e-05, 0.0]}, {"score": -3.9629259481952204, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Spell", "Cast", "<EOS>", 165, 41, 89, 24, 112, "Not", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 56, 51, 130, "Card", "Selector", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(Not(ManaCost(1)),\n            CardSelector()), ActionTag(AddCard(CardQuery(source=CARD_SOURCE\n            .<UNK>)), PlayerSelector(EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ManaCost"}}], "func": {"_type": "Name", "id": "Not"}}, {"_type": "Template10", "hole0": "CardSelector"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -1.1920382976531982, 0.0, -0.06064260005950928, 0.0, -2.145765392924659e-05, 0.0, -2.133846101060044e-05, 0.0, -3.814697265625e-06, -4.57763671875e-05, -0.000125885009765625, -1.9073486328125e-06, -7.510183422709815e-06, -0.00013184547424316406, -1.156325470219599e-05, -6.0796710386057384e-06, -2.7894804588868283e-05, -1.33514404296875e-05, -7.62939453125e-06, -3.552423368091695e-05, 0.0, -5.7220458984375e-06, -5.340576171875e-05, -0.024995803833007812, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, -3.0517578125e-05, -0.00018894672393798828, -8.034706115722656e-05, -4.9591064453125e-05, -0.12716293334960938, -0.15014171600341797, -0.0001373291015625, -9.5367431640625e-06, -0.038323938846588135, -0.0009766817092895508, -4.5299530029296875e-06, -0.0003814697265625, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, 0.0, -0.651160717010498, -0.0015755891799926758, -1.52587890625e-05, -1.9073486328125e-06, -0.019809722900390625, -2.86102294921875e-05, 0.0, -0.15272736549377441, -0.013733386993408203, 0.0, -0.002315521240234375, -0.0042209625244140625, -0.026945114135742188, 0.0, -0.40304768085479736, -0.0023391246795654297, 0.0, -0.00127410888671875, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0004584789276123047, -7.82012939453125e-05, -3.814697265625e-06, -1.71661376953125e-05, -5.14984130859375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.03549611568450928, -4.756450653076172e-05, -0.00046539306640625, -2.86102294921875e-05, -0.0001850128173828125, -0.0004100799560546875, -2.86102294921875e-05, 0.0, -9.393692016601562e-05, -0.0010623931884765625, -1.9073486328125e-05, -0.014501571655273438, -1.9073486328125e-06, -0.21467220783233643, 0.0, -0.00020599365234375, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.00028324127197265625, -1.9073486328125e-06, -0.12370681762695312, -1.9073486328125e-06, -0.004535675048828125, -1.9073486328125e-05, 0.0, 0.0, -0.001383662223815918, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -0.002197265625, -3.814697265625e-05, -0.6642286777496338, -2.4437902538920753e-05, 0.0]}, {"score": -3.963800795016482, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Spell", "Cast", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector(\n            EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "SpellCast"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -2.123225212097168, 0.0, -0.42484429478645325, -0.004606485366821289, -6.079665126890177e-06, -0.002231597900390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.307517080334947e-05, -0.0001983642578125, 0.0, -0.0001239776611328125, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, 0.0, -0.08200764656066895, -7.581709360238165e-05, -0.00047779083251953125, -4.1961669921875e-05, -4.76837158203125e-05, -0.00026702880859375, -2.09808349609375e-05, 0.0, -7.87973403930664e-05, -0.00098419189453125, -1.9073486328125e-05, -0.024347305297851562, -1.9073486328125e-06, -0.08941483497619629, 0.0, -0.000156402587890625, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00025081634521484375, -1.9073486328125e-06, -0.12793350219726562, -1.9073486328125e-06, -0.0036830902099609375, -1.9073486328125e-05, 0.0, 0.0, -0.001046299934387207, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -0.0024662017822265625, -3.4332275390625e-05, -0.6204137802124023, -2.241134461655747e-05, 0.0]}, {"score": -4.09662347100118, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Spell", "Cast", "<EOS>", 165, 41, 89, 24, 112, "Not", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 56, 51, 130, "Card", "Selector", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "<UNK>", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(Not(ManaCost(1)),\n            CardSelector()), ActionTag(AddCard(CardQuery(source=CARD_SOURCE\n            .<UNK>)), PlayerSelector(<UNK>Player())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ManaCost"}}], "func": {"_type": "Name", "id": "Not"}}, {"_type": "Template10", "hole0": "CardSelector"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Player"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -1.1920382976531982, 0.0, -0.06064260005950928, 0.0, -2.145765392924659e-05, 0.0, -2.133846101060044e-05, 0.0, -3.814697265625e-06, -4.57763671875e-05, -0.000125885009765625, -1.9073486328125e-06, -7.510183422709815e-06, -0.00013184547424316406, -1.156325470219599e-05, -6.0796710386057384e-06, -2.7894804588868283e-05, -1.33514404296875e-05, -7.62939453125e-06, -3.552423368091695e-05, 0.0, -5.7220458984375e-06, -5.340576171875e-05, -0.024995803833007812, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, -3.0517578125e-05, -0.00018894672393798828, -8.034706115722656e-05, -4.9591064453125e-05, -0.12716293334960938, -0.15014171600341797, -0.0001373291015625, -9.5367431640625e-06, -0.038323938846588135, -0.0009766817092895508, -4.5299530029296875e-06, -0.0003814697265625, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, 0.0, -0.651160717010498, -0.0015755891799926758, -1.52587890625e-05, -1.9073486328125e-06, -0.019809722900390625, -2.86102294921875e-05, 0.0, -0.15272736549377441, -0.013733386993408203, 0.0, -0.002315521240234375, -0.0042209625244140625, -0.026945114135742188, 0.0, -0.40304768085479736, -0.0023391246795654297, 0.0, -0.00127410888671875, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0004584789276123047, -7.82012939453125e-05, -3.814697265625e-06, -1.71661376953125e-05, -5.14984130859375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.03549611568450928, -4.756450653076172e-05, -0.00046539306640625, -2.86102294921875e-05, -0.0001850128173828125, -0.0004100799560546875, -2.86102294921875e-05, 0.0, -9.393692016601562e-05, -0.0010623931884765625, -1.9073486328125e-05, -0.014501571655273438, -1.9073486328125e-06, -0.21467220783233643, 0.0, -0.00020599365234375, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.00028324127197265625, -1.9073486328125e-06, -0.12370681762695312, -1.9073486328125e-06, -0.004535675048828125, -1.9073486328125e-05, 0.0, 0.0, -0.001383662223815918, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -0.002197265625, -3.814697265625e-05, -0.7893097400665283, -0.008640898391604424, 0.0]}, {"score": -4.0985454961409005, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "<UNK>", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Player"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -0.12751293182373047, -1.9545602798461914, -9.5367431640625e-06, 0.0, -0.1619257777929306, -0.000446319580078125, -4.291534423828125e-06, -0.000202178955078125, -6.866455078125e-05, -0.0001468658447265625, 0.0, -0.000209808349609375, 0.0, -0.03951001167297363, -9.5367431640625e-06, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.0003070831298828125, -1.1444091796875e-05, -1.33514404296875e-05, -6.103515625e-05, -0.000606536865234375, -5.7220458984375e-06, 0.0, -0.03985130786895752, -0.00010824203491210938, -0.0001659393310546875, -5.14984130859375e-05, -0.0004444122314453125, -0.000247955322265625, -4.38690185546875e-05, 0.0, -0.0002492666244506836, -0.0010930299758911133, -9.5367431640625e-06, -0.023012161254882812, -1.9073486328125e-06, -0.33583176136016846, 0.0, -0.0002117156982421875, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.0002803802490234375, -3.814697265625e-06, -0.12920188903808594, -1.9073486328125e-06, -0.009973526000976562, -2.86102294921875e-05, 0.0, 0.0, -0.0011425018310546875, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -0.0020427703857421875, -4.00543212890625e-05, -0.8056811094284058, -0.008490306325256824, 0.0]}, {"score": -4.192498448878155, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Spell", "Cast", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "<UNK>", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector(\n            <UNK>Player())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "SpellCast"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Player"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -2.123225212097168, 0.0, -0.42484429478645325, -0.004606485366821289, -6.079665126890177e-06, -0.002231597900390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.307517080334947e-05, -0.0001983642578125, 0.0, -0.0001239776611328125, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, 0.0, -0.08200764656066895, -7.581709360238165e-05, -0.00047779083251953125, -4.1961669921875e-05, -4.76837158203125e-05, -0.00026702880859375, -2.09808349609375e-05, 0.0, -7.87973403930664e-05, -0.00098419189453125, -1.9073486328125e-05, -0.024347305297851562, -1.9073486328125e-06, -0.08941483497619629, 0.0, -0.000156402587890625, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00025081634521484375, -1.9073486328125e-06, -0.12793350219726562, -1.9073486328125e-06, -0.0036830902099609375, -1.9073486328125e-05, 0.0, 0.0, -0.001046299934387207, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -0.0024662017822265625, -3.4332275390625e-05, -0.840672492980957, -0.008461352437734604, 0.0]}, {"score": -4.429741222200271, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Spell", "Cast", "<EOS>", 165, 41, 89, 24, 112, "Not", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 56, 51, 130, "Card", "Selector", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(Not(ManaCost(1)),\n            CardSelector()), ActionTag(AddCard(CardQuery(conditions=[IsType\n            (MINION_TYPE.MECH)])), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ManaCost"}}], "func": {"_type": "Name", "id": "Not"}}, {"_type": "Template10", "hole0": "CardSelector"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -0.12751293182373047, -0.15456390380859375, -0.0001354217529296875, -9.5367431640625e-06, -0.03744504973292351, -0.0009785890579223633, -4.5299530029296875e-06, -0.00038909912109375, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, 0.0, -0.652616024017334, -0.0015755891799926758, -1.52587890625e-05, -1.9073486328125e-06, -0.019815444946289062, -2.86102294921875e-05, 0.0, -0.15197861194610596, -0.013688445091247559, 0.0, -0.0023040771484375, -0.004207611083984375, -0.026988983154296875, 0.0, -0.3996129035949707, -0.002342820167541504, 0.0, -0.0012359619140625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0004546642303466797, -7.82012939453125e-05, -3.814697265625e-06, -1.71661376953125e-05, -5.340576171875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.035178422927856445, -4.744529724121094e-05, -0.00045680999755859375, -2.86102294921875e-05, -0.0002040863037109375, -0.000408172607421875, -2.86102294921875e-05, 0.0, -9.775161743164062e-05, -0.001068115234375, -1.9073486328125e-05, -0.01442718505859375, -1.9073486328125e-06, -1.6707736253738403, -2.288818359375e-05, -0.0005741119384765625, -9.5367431640625e-06, -0.000507354736328125, -0.0030164718627929688, -0.000247955322265625, -1.9073486328125e-06, -0.0001163482666015625, -0.08288764953613281, -0.004247903823852539, -1.1920928244535389e-07, -0.00019073486328125, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, 0.0, -0.003078460693359375, 0.0, -0.11971104145050049, 0.0, -0.4391918182373047, -1.9073486328125e-06, -0.0002231597900390625, -0.0002422332763671875, 0.0]}, {"score": -4.5449441296731194, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -0.12751293182373047, -1.9545602798461914, -9.5367431640625e-06, 0.0, -0.1619257777929306, -0.000446319580078125, -4.291534423828125e-06, -0.000202178955078125, -6.866455078125e-05, -0.0001468658447265625, 0.0, -0.000209808349609375, 0.0, -0.03951001167297363, -9.5367431640625e-06, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.0003070831298828125, -1.1444091796875e-05, -1.33514404296875e-05, -6.103515625e-05, -0.000606536865234375, -5.7220458984375e-06, 0.0, -0.03985130786895752, -0.00010824203491210938, -0.0001659393310546875, -5.14984130859375e-05, -0.0004444122314453125, -0.000247955322265625, -4.38690185546875e-05, 0.0, -0.0002492666244506836, -0.0010930299758911133, -9.5367431640625e-06, -0.023012161254882812, -1.9073486328125e-06, -1.2744885683059692, -2.288818359375e-05, -0.0006732940673828125, -9.5367431640625e-06, -0.00055694580078125, -0.0034503936767578125, -0.00025177001953125, -1.9073486328125e-06, -0.0001163482666015625, -0.0923919677734375, -0.004343271255493164, -1.1920928244535389e-07, -0.00017547607421875, -1.71661376953125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0032558441162109375, 0.0, -0.11968624591827393, 0.0, -0.2394390106201172, -1.9073486328125e-06, -0.000213623046875, -0.00025177001953125, 0.0]}, {"score": -4.756813861202204, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Card", "Played", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(CardPlayed(), ActionTag(AddCard\n            (CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector(\n            EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "CardPlayed"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -2.123225212097168, 0.0, -1.0907483100891113, -0.009149551391601562, -1.0251998901367188e-05, -0.0089111328125, -5.7220458984375e-06, -5.91278076171875e-05, -1.9073486328125e-06, -4.303455352783203e-05, -6.103515625e-05, -1.9073486328125e-06, -0.000141143798828125, -1.71661376953125e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -0.15712690353393555, -6.425379251595587e-05, -0.0007238388061523438, -4.9591064453125e-05, -4.57763671875e-05, -0.0003204345703125, -2.288818359375e-05, 0.0, -5.91278076171875e-05, -0.0010013580322265625, -2.47955322265625e-05, -0.019216537475585938, -1.9073486328125e-06, -0.09134876728057861, 0.0, -0.0001468658447265625, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -0.12256431579589844, -1.9073486328125e-06, -0.00518035888671875, -2.09808349609375e-05, 0.0, 0.0, -0.0009765625, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -0.002353668212890625, -3.62396240234375e-05, -0.6682400703430176, -2.2530553906108253e-05, 0.0]}, {"score": -4.811639033250572, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -1.1920382976531982, 0.0, -0.06064260005950928, 0.0, -2.145765392924659e-05, 0.0, -2.133846101060044e-05, 0.0, -3.814697265625e-06, -4.57763671875e-05, -0.000125885009765625, -1.9073486328125e-06, -7.510183422709815e-06, -0.00013184547424316406, -1.156325470219599e-05, -6.0796710386057384e-06, -2.7894804588868283e-05, -1.33514404296875e-05, -7.62939453125e-06, -3.552423368091695e-05, 0.0, -5.7220458984375e-06, -5.340576171875e-05, -0.024995803833007812, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, -3.0517578125e-05, -0.00018894672393798828, -8.034706115722656e-05, -4.9591064453125e-05, -0.12716293334960938, -1.9817190170288086, -9.5367431640625e-06, 0.0, -0.16526459157466888, -0.0004444122314453125, -4.291534423828125e-06, -0.000202178955078125, -6.866455078125e-05, -0.0001468658447265625, 0.0, -0.000209808349609375, 0.0, -0.03997766971588135, -9.5367431640625e-06, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -0.0003032684326171875, -9.5367431640625e-06, -1.33514404296875e-05, -6.103515625e-05, -0.00060272216796875, -5.7220458984375e-06, 0.0, -0.039954304695129395, -0.00010824203491210938, -0.0001659393310546875, -5.14984130859375e-05, -0.0004444122314453125, -0.000247955322265625, -4.38690185546875e-05, 0.0, -0.00024831295013427734, -0.0010930299758911133, -9.5367431640625e-06, -0.0230255126953125, -1.9073486328125e-06, -0.33529865741729736, 0.0, -0.0002117156982421875, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.0002803802490234375, -3.814697265625e-06, -0.1291971206665039, -1.9073486328125e-06, -0.00995635986328125, -2.86102294921875e-05, 0.0, 0.0, -0.0011425018310546875, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -0.0020465850830078125, -4.00543212890625e-05, -0.6494053602218628, -2.241134461655747e-05, 0.0]}, {"score": -5.24497194939601, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Spell", "Cast", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 47, 113, "True", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH)])), True), ActionTag(\n            AddCard(CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector(\n            EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -0.12751293182373047, -0.15456390380859375, -0.0001354217529296875, -9.5367431640625e-06, -0.03744504973292351, -0.0009785890579223633, -4.5299530029296875e-06, -0.00038909912109375, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, 0.0, -1.5743718147277832, -0.006419181823730469, -0.00371551513671875, -2.288818359375e-05, -6.67572021484375e-05, -0.0022602081298828125, -0.00032806396484375, 0.0, -0.00011837482452392578, -0.0050487518310546875, -3.814697265625e-06, -0.0020961761474609375, -1.9073486328125e-06, -0.1623135805130005, -3.0517578125e-05, -0.000732421875, -2.09808349609375e-05, -0.000972747802734375, -0.0014047622680664062, -0.0001697540283203125, -1.9073486328125e-06, -0.00023651123046875, -0.27028560638427734, -0.007224321365356445, -1.1920928244535389e-07, -0.0001678466796875, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -0.003143310546875, 0.0, -0.12755310535430908, 0.0, -1.138051986694336, -0.000141143798828125, -0.0030480623245239258, -1.9073486328125e-06, -0.0046749114990234375, -0.00893402099609375, 0.0, 0.0, -0.000457763671875, -0.0005321502685546875, 0.0, -2.6702880859375e-05, -6.29425048828125e-05, -9.5367431640625e-05, -3.814697265625e-06, 0.0, -0.011648178100585938, -0.00018012523651123047, -6.866455078125e-05, -0.000827789306640625, -0.0003643035888671875, -0.000186920166015625, -7.2479248046875e-05, 0.0, -0.00016808509826660156, -0.0007878541946411133, -1.52587890625e-05, -0.019855499267578125, -1.9073486328125e-06, -0.3944350481033325, 0.0, -0.00020599365234375, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -0.0003204345703125, -3.814697265625e-06, -0.11480712890625, -1.9073486328125e-06, -0.006153106689453125, -1.9073486328125e-05, 0.0, 0.0, -0.0017249584197998047, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -0.00213623046875, -3.62396240234375e-05, -0.5904651880264282, -2.2292137145996094e-05, 0.0]}, {"score": -5.545165378385597, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Spell", "Cast", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH)])), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector(\n            EnemyPlayer()))), ActionTag(AddCard(CardQuery(source=\n            CARD_SOURCE.<UNK>)), PlayerSelector(EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -0.12751293182373047, -0.15456390380859375, -0.0001354217529296875, -9.5367431640625e-06, -0.03744504973292351, -0.0009785890579223633, -4.5299530029296875e-06, -0.00038909912109375, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, 0.0, -1.5743718147277832, -0.006419181823730469, -0.00371551513671875, -2.288818359375e-05, -6.67572021484375e-05, -0.0022602081298828125, -0.00032806396484375, 0.0, -0.00011837482452392578, -0.0050487518310546875, -3.814697265625e-06, -0.0020961761474609375, -1.9073486328125e-06, -0.1623135805130005, -3.0517578125e-05, -0.000732421875, -2.09808349609375e-05, -0.000972747802734375, -0.0014047622680664062, -0.0001697540283203125, -1.9073486328125e-06, -0.00023651123046875, -0.27028560638427734, -0.007224321365356445, -1.1920928244535389e-07, -0.0001678466796875, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -0.003143310546875, 0.0, -0.12755310535430908, 0.0, -0.39945030212402344, -0.0002689361572265625, -7.62939453125e-06, 0.0, -0.0006618499755859375, -0.000453948974609375, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.018363118171691895, -6.246566772460938e-05, -0.0002880096435546875, -3.4332275390625e-05, -0.0005035400390625, -0.00048828125, -5.7220458984375e-05, 0.0, -0.00014519691467285156, -0.0008068084716796875, -1.52587890625e-05, -0.011051177978515625, -1.9073486328125e-06, -0.32289040088653564, 0.0, -0.000209808349609375, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -0.00029468536376953125, -3.814697265625e-06, -0.13282489776611328, -1.9073486328125e-06, -0.010015487670898438, -2.6702880859375e-05, 0.0, 0.0, -0.001706838607788086, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -0.002246856689453125, -3.4332275390625e-05, -0.6216574907302856, -2.241134461655747e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.00014889240264892578, -0.000217437744140625, -3.814697265625e-06, -3.62396240234375e-05, -0.0002231597900390625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.022030949592590332, -6.258487701416016e-05, -0.0003490447998046875, -2.86102294921875e-05, -0.001178741455078125, -0.0005092620849609375, -3.4332275390625e-05, 0.0, -0.00013005733489990234, -0.001033782958984375, -1.52587890625e-05, -0.010555267333984375, -1.9073486328125e-06, -0.31116020679473877, 0.0, -0.00023651123046875, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.00028896331787109375, -1.9073486328125e-06, -0.12749099731445312, -1.9073486328125e-06, -0.003368377685546875, -1.71661376953125e-05, 0.0, 0.0, -0.0016878843307495117, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -0.0022563934326171875, -3.4332275390625e-05, -0.5927015542984009, -2.2530553906108253e-05, 0.0]}, {"score": -5.792361797551955, "choice_history": [59, 124, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Spell", "Cast", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "<UNK>", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Add", "Card", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "source", "<EOS>", 16, 82, 24, 112, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH)])), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector(\n            <UNK>Player()))), ActionTag(AddCard(CardQuery(source=\n            CARD_SOURCE.<UNK>)), PlayerSelector(EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Archmage Antonidas", "hole3": "LEGENDARY"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 5, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Player"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "source", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ArchmageAntonidas", "hole3": "create_minion"}, "score_history": [0.0, -4.9591064453125e-05, -0.019978368654847145, -0.0004463391669560224, -5.8054491091752425e-05, -4.7681896830908954e-07, -1.9073486328125e-06, -1.3709068298339844e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.1444091796875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -1.6689160474925302e-05, -2.8967857360839844e-05, -4.768370445162873e-07, -0.0006580352783203125, -0.002138609066605568, -9.5367431640625e-06, -0.3857572078704834, -1.9073486328125e-06, -0.011393308639526367, 0.0, -1.3112994565744884e-05, 0.0, -3.159045081702061e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001678466796875, 0.0, -9.417532055522315e-06, -0.00012993812561035156, -1.2040087312925607e-05, -5.841253368998878e-06, -2.4676177417859435e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.708732740255073e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.03278923034667969, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -0.00020229816436767578, -8.606910705566406e-05, -5.340576171875e-05, -0.12751293182373047, -0.15456390380859375, -0.0001354217529296875, -9.5367431640625e-06, -0.03744504973292351, -0.0009785890579223633, -4.5299530029296875e-06, -0.00038909912109375, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, 0.0, -1.5743718147277832, -0.006419181823730469, -0.00371551513671875, -2.288818359375e-05, -6.67572021484375e-05, -0.0022602081298828125, -0.00032806396484375, 0.0, -0.00011837482452392578, -0.0050487518310546875, -3.814697265625e-06, -0.0020961761474609375, -1.9073486328125e-06, -0.1623135805130005, -3.0517578125e-05, -0.000732421875, -2.09808349609375e-05, -0.000972747802734375, -0.0014047622680664062, -0.0001697540283203125, -1.9073486328125e-06, -0.00023651123046875, -0.27028560638427734, -0.007224321365356445, -1.1920928244535389e-07, -0.0001678466796875, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -0.003143310546875, 0.0, -0.12755310535430908, 0.0, -0.39945030212402344, -0.0002689361572265625, -7.62939453125e-06, 0.0, -0.0006618499755859375, -0.000453948974609375, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.018363118171691895, -6.246566772460938e-05, -0.0002880096435546875, -3.4332275390625e-05, -0.0005035400390625, -0.00048828125, -5.7220458984375e-05, 0.0, -0.00014519691467285156, -0.0008068084716796875, -1.52587890625e-05, -0.011051177978515625, -1.9073486328125e-06, -0.32289040088653564, 0.0, -0.000209808349609375, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -0.00029468536376953125, -3.814697265625e-06, -0.13282489776611328, -1.9073486328125e-06, -0.010015487670898438, -2.6702880859375e-05, 0.0, 0.0, -0.001706838607788086, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -0.002246856689453125, -3.4332275390625e-05, -0.8392573595046997, -0.008059723302721977, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013768672943115234, -0.0001888275146484375, -1.9073486328125e-06, -2.47955322265625e-05, -0.00016021728515625, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.027834177017211914, -5.900859832763672e-05, -0.0003204345703125, -2.86102294921875e-05, -0.0012073516845703125, -0.000499725341796875, -3.4332275390625e-05, 0.0, -0.00012433528900146484, -0.001010894775390625, -1.33514404296875e-05, -0.010011672973632812, -1.9073486328125e-06, -0.31285107135772705, 0.0, -0.000232696533203125, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.0002899169921875, -1.9073486328125e-06, -0.12736129760742188, -1.9073486328125e-06, -0.0040454864501953125, -1.71661376953125e-05, 0.0, 0.0, -0.0016325712203979492, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -0.0022678375244140625, -3.4332275390625e-05, -0.6070152521133423, -2.241134461655747e-05, 0.0]}], "gold_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(\n            hearthbreaker.cards.Fireball()), PlayerSelector()))])\n"}
{"beams": [{"score": -1.413472770022473, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -0.23142623901367188, -0.0002899169921875, -1.9073486328125e-06, -1.537788011773955e-05, -1.1086449376307428e-05, -3.814697265625e-05, -0.0001316070556640625, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -3.039830335183069e-05, -2.3841855067985307e-07, -0.002234816551208496, 0.0, -0.0001926422119140625, -2.288818359375e-05, -7.62939453125e-06, -0.00029647350311279297, -1.9073486328125e-06, -8.20159912109375e-05, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -0.0001239776611328125, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00020599365234375, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.12448978424072266, 0.0, -1.71661376953125e-05, 0.0, -1.5974044799804688e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -7.62939453125e-06, -7.212162017822266e-05, -1.3589859008789062e-05, -0.6825342178344727, -1.9073486328125e-06, -1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -6.103509076638147e-05, -2.6702880859375e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -0.00159454345703125, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000186920166015625, 0.0, -0.1755683422088623, -1.1920928244535389e-07, -5.7220458984375e-06, -0.19083404541015625]}, {"score": -3.362341695756605, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(4)\n        self.target.increase_health(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template18"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -0.23142623901367188, -0.0002899169921875, -1.9073486328125e-06, -1.537788011773955e-05, -1.1086449376307428e-05, -3.814697265625e-05, -0.0001316070556640625, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -3.039830335183069e-05, -2.3841855067985307e-07, -0.002234816551208496, 0.0, -0.0001926422119140625, -2.288818359375e-05, -7.62939453125e-06, -0.00029647350311279297, -1.9073486328125e-06, -8.20159912109375e-05, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -0.0001239776611328125, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00020599365234375, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.12448978424072266, 0.0, -1.71661376953125e-05, 0.0, -1.5974044799804688e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -7.62939453125e-06, -7.212162017822266e-05, -1.3589859008789062e-05, -0.782318115234375, -3.4332275390625e-05, -9.5367431640625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.00011408327554818243, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -0.005847930908203125, -3.62396240234375e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.12143051624298096, -1.1920928244535389e-07, -5.7220458984375e-06, -0.3507547378540039, -0.0010728836059570312, -0.0001506805419921875, -0.000202178955078125, 0.0, -3.814697265625e-06, 0.0, -7.05718994140625e-05, 0.0, -0.000377655029296875, 0.0, -0.3745328187942505, 0.0, -1.9073486328125e-06, -0.6700811386108398, -3.814697265625e-06, -0.009869630448520184, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002288818359375, -0.0001506805419921875, 0.0, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.3697547912597656, 0.0, -1.9073486328125e-06, -0.3121299743652344]}, {"score": -3.377300245971547, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n        self.target.add_buff(Buff(ChangeAttack(1)))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -0.23142623901367188, -0.0002899169921875, -1.9073486328125e-06, -1.537788011773955e-05, -1.1086449376307428e-05, -3.814697265625e-05, -0.0001316070556640625, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -3.039830335183069e-05, -2.3841855067985307e-07, -0.002234816551208496, 0.0, -0.0001926422119140625, -2.288818359375e-05, -7.62939453125e-06, -0.00029647350311279297, -1.9073486328125e-06, -8.20159912109375e-05, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -0.0001239776611328125, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00020599365234375, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.12448978424072266, 0.0, -1.71661376953125e-05, 0.0, -1.5974044799804688e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -7.62939453125e-06, -7.212162017822266e-05, -1.3589859008789062e-05, -0.782318115234375, -3.4332275390625e-05, -9.5367431640625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.00011408327554818243, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -0.005847930908203125, -3.62396240234375e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.12143051624298096, -1.1920928244535389e-07, -5.7220458984375e-06, -0.3507547378540039, -0.0010728836059570312, -0.0001506805419921875, -0.000202178955078125, 0.0, -3.814697265625e-06, 0.0, -7.05718994140625e-05, 0.0, -0.000377655029296875, 0.0, -1.2116948366165161, -4.0531158447265625e-06, -2.47955322265625e-05, -0.011958122253417969, -9.5367431640625e-05, -3.814697265625e-06, 0.0, -0.022295832633972168, -0.0002576112747192383, -2.288818359375e-05, -0.017708778381347656, -0.0002346038818359375, -3.0517578125e-05, -5.7220458984375e-06, -0.053323179483413696, -0.06419503688812256, -0.00042116641998291016, 0.0, -0.022142410278320312, -0.0007724761962890625, -0.0017299652099609375, -0.0004558563232421875, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0005016326904296875, 0.0, -9.918212890625e-05, 0.0, -0.17862772941589355, -1.3351433153729886e-05, -1.52587890625e-05, -0.02266216278076172, -0.000152587890625, -3.814697265625e-06, 0.0, -0.02847003936767578, -0.0008164644241333008, -1.33514404296875e-05, -0.007670402526855469, -0.000247955322265625, -3.0517578125e-05, -1.71661376953125e-05, -0.021004989743232727, -0.07822120189666748, -0.0003199577331542969, 0.0, -0.0057926177978515625]}, {"score": -3.405255196907511, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 56, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n        self.target.increase_health(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template18"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template18"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -0.23142623901367188, -0.0002899169921875, -1.9073486328125e-06, -1.537788011773955e-05, -1.1086449376307428e-05, -3.814697265625e-05, -0.0001316070556640625, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -3.039830335183069e-05, -2.3841855067985307e-07, -0.002234816551208496, 0.0, -0.0001926422119140625, -2.288818359375e-05, -7.62939453125e-06, -0.00029647350311279297, -1.9073486328125e-06, -8.20159912109375e-05, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -0.0001239776611328125, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00020599365234375, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.12448978424072266, 0.0, -1.71661376953125e-05, 0.0, -1.5974044799804688e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -7.62939453125e-06, -7.212162017822266e-05, -1.3589859008789062e-05, -0.782318115234375, -3.4332275390625e-05, -9.5367431640625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.00011408327554818243, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -0.005847930908203125, -3.62396240234375e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.12143051624298096, -1.1920928244535389e-07, -5.7220458984375e-06, -0.3507547378540039, -0.0010728836059570312, -0.0001506805419921875, -0.000202178955078125, 0.0, -3.814697265625e-06, 0.0, -7.05718994140625e-05, 0.0, -0.000377655029296875, 0.0, -0.3745328187942505, 0.0, -1.9073486328125e-06, -0.7735233306884766, -0.00408172607421875, -0.0024967193603515625, -0.0006198883056640625, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -0.0006341934204101562, 0.0, -0.24448883533477783, 0.0, -1.9073486328125e-06, -0.3795909881591797]}, {"score": -3.552767745658336, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -1.5850811004638672, -1.33514404296875e-05, -5.91278076171875e-05, -6.675708846159978e-06, -0.00011514976358739659, -3.0517578125e-05, -8.0108642578125e-05, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.8014177587465383e-05, -4.768370445162873e-07, -1.0813010931015015, 0.0, -0.00208282470703125, -0.0001373291015625, -1.9073486328125e-06, -0.000217437744140625, 0.0, -1.52587890625e-05, -0.000274658203125, -5.91278076171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.000308990478515625, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.1625128984451294, 0.0, -2.09808349609375e-05, 0.0, -2.3841854272177443e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.261198672698811e-05, -1.2755393072438892e-05, -0.33888912200927734, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -9.5367431640625e-06, -6.413449591491371e-05, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.0015735626220703125, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -2.09808349609375e-05, 0.0, -2.288818359375e-05, 0.0, -0.0001850128173828125, 0.0, -0.18265104293823242, -1.1920928244535389e-07, -5.7220458984375e-06, -0.19417095184326172]}, {"score": -3.756723640719848, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_friendly_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -0.23142623901367188, -0.0002899169921875, -1.9073486328125e-06, -1.537788011773955e-05, -1.1086449376307428e-05, -3.814697265625e-05, -0.0001316070556640625, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -3.039830335183069e-05, -2.3841855067985307e-07, -0.002234816551208496, 0.0, -0.0001926422119140625, -2.288818359375e-05, -7.62939453125e-06, -0.00029647350311279297, -1.9073486328125e-06, -8.20159912109375e-05, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -0.0001239776611328125, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00020599365234375, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -2.3672752380371094, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -1.1801719665527344e-05, 0.0, -1.52587890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -7.68899917602539e-05, -9.775161743164062e-06, -0.7847118377685547, -1.9073486328125e-06, -2.09808349609375e-05, -2.09808349609375e-05, -7.62939453125e-06, -6.198875780683011e-05, -2.6702880859375e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -0.0015621185302734375, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000186920166015625, 0.0, -0.173659086227417, -1.1920928244535389e-07, -5.7220458984375e-06, -0.19105052947998047]}, {"score": -3.8175665123930784, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 57], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -0.23142623901367188, -0.0002899169921875, -1.9073486328125e-06, -1.537788011773955e-05, -1.1086449376307428e-05, -3.814697265625e-05, -0.0001316070556640625, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -3.039830335183069e-05, -2.3841855067985307e-07, -0.002234816551208496, 0.0, -0.0001926422119140625, -2.288818359375e-05, -7.62939453125e-06, -0.00029647350311279297, -1.9073486328125e-06, -8.20159912109375e-05, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -0.0001239776611328125, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00020599365234375, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.12448978424072266, 0.0, -1.71661376953125e-05, 0.0, -1.5974044799804688e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -7.62939453125e-06, -7.212162017822266e-05, -1.3589859008789062e-05, -0.6825342178344727, -1.9073486328125e-06, -1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -6.103509076638147e-05, -2.6702880859375e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -0.00159454345703125, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000186920166015625, 0.0, -0.1755683422088623, -1.1920928244535389e-07, -5.7220458984375e-06, -2.5949277877807617]}, {"score": -3.8184520372746817, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -0.23142623901367188, -0.0002899169921875, -1.9073486328125e-06, -1.537788011773955e-05, -1.1086449376307428e-05, -3.814697265625e-05, -0.0001316070556640625, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -3.039830335183069e-05, -2.3841855067985307e-07, -0.002234816551208496, 0.0, -0.0001926422119140625, -2.288818359375e-05, -7.62939453125e-06, -0.00029647350311279297, -1.9073486328125e-06, -8.20159912109375e-05, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -0.0001239776611328125, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00020599365234375, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.12448978424072266, 0.0, -1.71661376953125e-05, 0.0, -1.5974044799804688e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -7.62939453125e-06, -7.212162017822266e-05, -1.3589859008789062e-05, -0.6825342178344727, -1.9073486328125e-06, -1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -6.103509076638147e-05, -2.6702880859375e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -0.00159454345703125, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000186920166015625, 0.0, -2.6036393642425537, -0.00011050247849198058, -2.6702880859375e-05, -0.007274627685546875, -3.814697265625e-05, -1.9073486328125e-05, 0.0, -0.0211180429905653, -0.0018506050109863281, -2.47955322265625e-05, -0.037384033203125, -0.00042724609375, -8.96453857421875e-05, -3.814697265625e-06, -0.035037800669670105, -0.06346404552459717, -0.0002954005904030055, -3.814697265625e-06, -0.000579833984375]}, {"score": -4.092175119847944, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(4)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "add_buff", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -0.23142623901367188, -0.0002899169921875, -1.9073486328125e-06, -1.537788011773955e-05, -1.1086449376307428e-05, -3.814697265625e-05, -0.0001316070556640625, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -3.039830335183069e-05, -2.3841855067985307e-07, -0.002234816551208496, 0.0, -0.0001926422119140625, -2.288818359375e-05, -7.62939453125e-06, -0.00029647350311279297, -1.9073486328125e-06, -8.20159912109375e-05, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -0.0001239776611328125, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00020599365234375, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.12448978424072266, 0.0, -1.71661376953125e-05, 0.0, -1.5974044799804688e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -7.62939453125e-06, -7.212162017822266e-05, -1.3589859008789062e-05, -0.782318115234375, -3.4332275390625e-05, -9.5367431640625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.00011408327554818243, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -0.005847930908203125, -3.62396240234375e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.12143051624298096, -1.1920928244535389e-07, -5.7220458984375e-06, -0.3507547378540039, -0.0010728836059570312, -0.0001506805419921875, -0.000202178955078125, 0.0, -3.814697265625e-06, 0.0, -7.05718994140625e-05, 0.0, -0.000377655029296875, 0.0, -0.3745328187942505, 0.0, -1.9073486328125e-06, -0.6700811386108398, -3.814697265625e-06, -0.009869630448520184, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002288818359375, -0.0001506805419921875, 0.0, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -1.2314567565917969, -5.9604644775390625e-06, -1.52587890625e-05, -0.007963180541992188, -0.0001163482666015625, -1.9073486328125e-06, 0.0, -0.030424952507019043, -9.34600830078125e-05, -1.9073486328125e-05, -0.0147705078125, -0.00011444091796875, -1.9073486328125e-05, -3.814697265625e-06, -0.03594869375228882, -0.05323660373687744, -0.0005828142166137695, 0.0, -0.03694725036621094]}, {"score": -4.381712428763301, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -1.5850811004638672, -1.33514404296875e-05, -5.91278076171875e-05, -6.675708846159978e-06, -0.00011514976358739659, -3.0517578125e-05, -8.0108642578125e-05, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.8014177587465383e-05, -4.768370445162873e-07, -1.8697618246078491, 0.0, -0.0012493133544921875, -0.0001125335693359375, -1.9073486328125e-06, -0.0005168914794921875, 0.0, -1.52587890625e-05, -0.0002422332763671875, -5.14984130859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0002899169921875, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.16086971759796143, 0.0, -2.110004425048828e-05, 0.0, -2.34842264035251e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.118150435620919e-05, -1.430511474609375e-05, -0.3847064971923828, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -9.5367431640625e-06, -6.365765875671059e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.001621246337890625, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -2.09808349609375e-05, 0.0, -2.288818359375e-05, 0.0, -0.000186920166015625, 0.0, -0.1802746057510376, -1.1920928244535389e-07, -5.7220458984375e-06, -0.19342803955078125]}, {"score": -4.40649663609917, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -1.5850811004638672, -1.33514404296875e-05, -5.91278076171875e-05, -6.675708846159978e-06, -0.00011514976358739659, -3.0517578125e-05, -8.0108642578125e-05, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.8014177587465383e-05, -4.768370445162873e-07, -1.88205087184906, 0.0, -0.0060901641845703125, -0.00011444091796875, -1.9073486328125e-06, -0.00048828125, 0.0, -1.1444091796875e-05, -0.000247955322265625, -5.14984130859375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.19761765003204346, 0.0, -2.110004425048828e-05, 0.0, -2.551078432588838e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.118148980429396e-05, -1.263618378288811e-05, -0.35376453399658203, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -9.5367431640625e-06, -6.353845674311742e-05, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.001605987548828125, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-05, -2.09808349609375e-05, 0.0, -2.288818359375e-05, 0.0, -0.000186920166015625, 0.0, -0.18178796768188477, -1.1920928244535389e-07, -5.7220458984375e-06, -0.19379711151123047]}, {"score": -4.935754529646935, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -1.5850811004638672, -1.33514404296875e-05, -5.91278076171875e-05, -6.675708846159978e-06, -0.00011514976358739659, -3.0517578125e-05, -8.0108642578125e-05, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.8014177587465383e-05, -4.768370445162873e-07, -2.038217782974243, 0.0, -0.4010591506958008, -0.0002899169921875, -1.9073486328125e-06, -0.000308990478515625, 0.0, -1.9073486328125e-05, -0.0002422332763671875, -6.29425048828125e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.17279064655303955, 0.0, -2.110004425048828e-05, 0.0, -2.7656551537802443e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.320804772665724e-05, -1.263618378288811e-05, -0.35680198669433594, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -9.5367431640625e-06, -6.437290721805766e-05, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.0015926361083984375, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -2.09808349609375e-05, 0.0, -2.288818359375e-05, 0.0, -0.000186920166015625, 0.0, -0.18163633346557617, -1.1920928244535389e-07, -5.7220458984375e-06, -0.193817138671875]}, {"score": -4.962628118223499, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -1.5850811004638672, -1.33514404296875e-05, -5.91278076171875e-05, -6.675708846159978e-06, -0.00011514976358739659, -3.0517578125e-05, -8.0108642578125e-05, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.8014177587465383e-05, -4.768370445162873e-07, -2.4749252796173096, 0.0, -0.007959365844726562, -0.000125885009765625, -1.9073486328125e-06, -0.0003070831298828125, 0.0, -1.33514404296875e-05, -0.0003147125244140625, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.000301361083984375, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.14385616779327393, 0.0, -2.110004425048828e-05, 0.0, -2.53915750363376e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.22543806862086e-05, -1.251697449333733e-05, -0.37001705169677734, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -9.5367431640625e-06, -6.377686804626137e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.001617431640625, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -2.09808349609375e-05, 0.0, -2.288818359375e-05, 0.0, -0.0001850128173828125, 0.0, -0.18097174167633057, -1.1920928244535389e-07, -5.7220458984375e-06, -0.19359111785888672]}, {"score": -5.578567377690767, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_friendly_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -1.5850811004638672, -1.33514404296875e-05, -5.91278076171875e-05, -6.675708846159978e-06, -0.00011514976358739659, -3.0517578125e-05, -8.0108642578125e-05, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.8014177587465383e-05, -4.768370445162873e-07, -1.0813010931015015, 0.0, -0.00208282470703125, -0.0001373291015625, -1.9073486328125e-06, -0.000217437744140625, 0.0, -1.52587890625e-05, -0.000274658203125, -5.91278076171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.000308990478515625, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -2.1662778854370117, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.811981201171875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -8.380406507058069e-05, -8.82148651726311e-06, -0.3615884780883789, -1.9073486328125e-06, -1.9073486328125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -6.782995478715748e-05, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.0015506744384765625, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -2.09808349609375e-05, 0.0, -2.288818359375e-05, 0.0, -0.000186920166015625, 0.0, -0.18162107467651367, -1.1920928244535389e-07, -5.7220458984375e-06, -0.1945486068725586]}, {"score": -5.581970326124846, "choice_history": [59, 126, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Bananas", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.PALADIN, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bananas", "hole3": "use"}, "score_history": [-0.0009403228759765625, -0.001018524169921875, -5.125999450683594e-06, -5.209310256759636e-05, -1.1920883480343036e-07, -2.503394853192731e-06, -1.1920922133867862e-06, -3.24249267578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -0.00016021728515625, -5.7220458984375e-06, -1.5850811004638672, -1.33514404296875e-05, -5.91278076171875e-05, -6.675708846159978e-06, -0.00011514976358739659, -3.0517578125e-05, -8.0108642578125e-05, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.8014177587465383e-05, -4.768370445162873e-07, -3.0806996822357178, -1.1920928244535389e-07, -0.009099960327148438, -6.4849853515625e-05, 0.0, -0.000324249267578125, 0.0, -1.52587890625e-05, -0.0002460479736328125, -6.29425048828125e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0002899169921875, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -0.15185368061065674, 0.0, -2.110004425048828e-05, 0.0, -2.5272365746786818e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -5.7220458984375e-06, -7.90357225923799e-05, -1.442432312614983e-05, -0.37587547302246094, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -9.5367431640625e-06, -6.401528662536293e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.001628875732421875, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -2.09808349609375e-05, 0.0, -2.288818359375e-05, 0.0, -0.0001850128173828125, 0.0, -0.17976248264312744, -1.1920928244535389e-07, -5.7220458984375e-06, -0.19347381591796875]}], "gold_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n"}
{"beams": [{"score": -2.1440416792738617, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 57], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -0.23852801322937012, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -8.7738037109375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00020039081573486328, -9.5367431640625e-06, -0.010940790176391602, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010967244452331215, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -6.103515625e-05, -0.00015866756439208984, 0.0, -0.5372552871704102, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.340576171875e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0001583099365234375, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.002559661865234375, -0.0003185272216796875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.001293182373046875, 0.0, -8.0108642578125e-05, 0.0, -0.05141186714172363, 0.0, 0.0, -1.0385770797729492]}, {"score": -3.0570134141580567, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(<UNK>)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -0.23852801322937012, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -8.7738037109375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00020039081573486328, -9.5367431640625e-06, -0.010940790176391602, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010967244452331215, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -6.103515625e-05, -0.00015866756439208984, 0.0, -0.5372552871704102, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.340576171875e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0001583099365234375, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.002559661865234375, -0.0003185272216796875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.001293182373046875, 0.0, -8.0108642578125e-05, 0.0, -0.05141186714172363, 0.0, 0.0, -1.9261384010314941, 0.0, -0.02514636516571045, -0.00026404845993965864]}, {"score": -3.586883805166501, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 57], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -1.7606563568115234, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0025157928466796875, -0.14635872840881348, -1.1444091796875e-05, -4.76837158203125e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00019276142120361328, -9.5367431640625e-06, -0.010373353958129883, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010979165381286293, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -5.91278076171875e-05, -0.00015866756439208984, 0.0, -0.5313510894775391, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.14984130859375e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0001583099365234375, -5.91278076171875e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.0025310516357421875, -0.000316619873046875, -5.7220458984375e-06, -1.1444091796875e-05, -0.000102996826171875, 0.0, -0.0012941360473632812, 0.0, -8.0108642578125e-05, 0.0, -0.05141854286193848, 0.0, 0.0, -1.0359554290771484]}, {"score": -3.7861833790575403, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 57], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -1.890338659286499, -5.340576171875e-05, -3.0517578125e-05, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -8.392333984375e-05, 0.0, -5.7220458984375e-06, 0.0, -9.1552734375e-05, -3.814697265625e-06, -0.00018322467803955078, -9.5367431640625e-06, -0.013249635696411133, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00011193741374881938, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -5.91278076171875e-05, -0.00015676021575927734, 0.0, -0.5323896408081055, -1.9073486328125e-06, -0.000179290771484375, -1.1444091796875e-05, -5.340576171875e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.000156402587890625, -5.91278076171875e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.00255584716796875, -0.000316619873046875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.0013332366943359375, 0.0, -8.0108642578125e-05, 0.0, -0.05138707160949707, 0.0, 0.0, -1.031468391418457]}, {"score": -3.8452478865492523, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "game", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.game)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "game"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -0.23852801322937012, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -8.7738037109375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00020039081573486328, -9.5367431640625e-06, -0.010940790176391602, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010967244452331215, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -6.103515625e-05, -0.00015866756439208984, 0.0, -0.5372552871704102, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.340576171875e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0001583099365234375, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.002559661865234375, -0.0003185272216796875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.001293182373046875, 0.0, -8.0108642578125e-05, 0.0, -0.05141186714172363, 0.0, 0.0, -1.3249216079711914, -1.9073486328125e-06, -0.0318756103515625, 0.0, -7.62939453125e-06, 0.0, -0.2824392318725586, -7.62939453125e-06, -0.0055999755859375, 0.0, -1.0949296951293945, 0.0]}, {"score": -3.8658689963029857, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 39, 84, 32, 61, 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"_type": "Template18"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -0.23852801322937012, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -8.7738037109375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00020039081573486328, -9.5367431640625e-06, -0.010940790176391602, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010967244452331215, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -6.103515625e-05, -0.00015866756439208984, 0.0, -0.5372552871704102, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.340576171875e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0001583099365234375, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.002559661865234375, -0.0003185272216796875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.001293182373046875, 0.0, -8.0108642578125e-05, 0.0, -0.05141186714172363, 0.0, 0.0, -1.9543094635009766, -0.04033851623535156, -0.06662178039550781, -0.04637622833251953, -0.03347015380859375, -0.004290580749511719, -5.340576171875e-05, -0.000354766845703125, -6.866455078125e-05, -5.7220458984375e-06, -0.00287628173828125, 0.0, -0.5696635246276855, -4.768370445162873e-07, -0.004748702049255371, -2.0265579223632812e-06, -0.03719167783856392, -3.24249267578125e-05]}, {"score": -4.502767107738684, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(<UNK>)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -1.7606563568115234, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0025157928466796875, -0.14635872840881348, -1.1444091796875e-05, -4.76837158203125e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00019276142120361328, -9.5367431640625e-06, -0.010373353958129883, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010979165381286293, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -5.91278076171875e-05, -0.00015866756439208984, 0.0, -0.5313510894775391, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.14984130859375e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0001583099365234375, -5.91278076171875e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.0025310516357421875, -0.000316619873046875, -5.7220458984375e-06, -1.1444091796875e-05, -0.000102996826171875, 0.0, -0.0012941360473632812, 0.0, -8.0108642578125e-05, 0.0, -0.05141854286193848, 0.0, 0.0, -1.9264273643493652, 0.0, -0.025147318840026855, -0.00026404845993965864]}, {"score": -4.659239552389401, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(player.game.current_player)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -0.23852801322937012, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -8.7738037109375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00020039081573486328, -9.5367431640625e-06, -0.010940790176391602, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010967244452331215, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -6.103515625e-05, -0.00015866756439208984, 0.0, -0.5372552871704102, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.340576171875e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0001583099365234375, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.002559661865234375, -0.0003185272216796875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.001293182373046875, 0.0, -8.0108642578125e-05, 0.0, -0.05141186714172363, 0.0, 0.0, -1.3249216079711914, -1.9073486328125e-06, -0.0318756103515625, 0.0, -7.62939453125e-06, 0.0, -2.022876739501953, 0.0, -0.007659912109375, -3.4332275390625e-05, -0.16639721393585205, 0.0]}, {"score": -4.700463912855405, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.player)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -0.23852801322937012, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -8.7738037109375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00020039081573486328, -9.5367431640625e-06, -0.010940790176391602, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010967244452331215, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -6.103515625e-05, -0.00015866756439208984, 0.0, -0.5372552871704102, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.340576171875e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0001583099365234375, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.002559661865234375, -0.0003185272216796875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.001293182373046875, 0.0, -8.0108642578125e-05, 0.0, -0.05141186714172363, 0.0, 0.0, -1.3249216079711914, -1.9073486328125e-06, -0.0318756103515625, 0.0, -7.62939453125e-06, 0.0, -0.2824392318725586, -7.62939453125e-06, -0.0055999755859375, 0.0, -1.9501457214355469, 0.0]}, {"score": -4.713747642284936, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(<UNK>)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "<UNK>"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -1.890338659286499, -5.340576171875e-05, -3.0517578125e-05, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -8.392333984375e-05, 0.0, -5.7220458984375e-06, 0.0, -9.1552734375e-05, -3.814697265625e-06, -0.00018322467803955078, -9.5367431640625e-06, -0.013249635696411133, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00011193741374881938, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -5.91278076171875e-05, -0.00015676021575927734, 0.0, -0.5323896408081055, -1.9073486328125e-06, -0.000179290771484375, -1.1444091796875e-05, -5.340576171875e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.000156402587890625, -5.91278076171875e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.00255584716796875, -0.000316619873046875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.0013332366943359375, 0.0, -8.0108642578125e-05, 0.0, -0.05138707160949707, 0.0, 0.0, -1.9335298538208008, 0.0, -0.025238871574401855, -0.00026392925065010786]}, {"score": -4.904295585523862, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "minions", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.minions)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "minions"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -0.23852801322937012, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -8.7738037109375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00020039081573486328, -9.5367431640625e-06, -0.010940790176391602, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010967244452331215, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -6.103515625e-05, -0.00015866756439208984, 0.0, -0.5372552871704102, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.340576171875e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0001583099365234375, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.002559661865234375, -0.0003185272216796875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.001293182373046875, 0.0, -8.0108642578125e-05, 0.0, -0.05141186714172363, 0.0, 0.0, -1.3249216079711914, -1.9073486328125e-06, -0.0318756103515625, 0.0, -7.62939453125e-06, 0.0, -0.2824392318725586, -7.62939453125e-06, -0.0055999755859375, 0.0, -2.153977394104004, 0.0]}, {"score": -5.156491433675903, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 57, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -0.23852801322937012, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -8.7738037109375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00020039081573486328, -9.5367431640625e-06, -0.010940790176391602, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010967244452331215, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -6.103515625e-05, -0.00015866756439208984, 0.0, -1.7493457794189453, -0.0001163482666015625, -0.0002002716064453125, -1.1444091796875e-05, -4.1961669921875e-05, -2.205371856689453e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -9.1552734375e-05, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.14371967315673828, -0.00016021728515625, -8.58306884765625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.00043010711669921875, 0.0, -0.0001068115234375, 0.0, -0.03136873245239258, 0.0, 0.0, -0.8828840255737305, -0.004387855529785156, -0.031426429748535156, -0.0001506805419921875, 0.0, -3.814697265625e-06, 0.0, -0.008159637451171875, -1.9073486328125e-06, -0.00049591064453125, 0.0, -0.7528486251831055, -1.9073486328125e-06, -3.814697265625e-06, -0.8321056365966797, -3.814697265625e-06, -0.01909794844686985, 0.0, -0.0001773834228515625, -0.001308441162109375, -7.2479248046875e-05, 0.0, -3.814697265625e-06, 0.0, -0.00146484375, -5.7220458984375e-06, -0.00017547607421875, 0.0, -0.0836191177368164, -5.7220458984375e-06, -1.9073486328125e-06, -0.059569358825683594, -1.1444091796875e-05, -0.040766943246126175, 0.0]}, {"score": -5.453826568495053, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 57], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY., target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": ""}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -3.550074338912964, -3.24249267578125e-05, -1.71661376953125e-05, -8.96453857421875e-05, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -8.0108642578125e-05, 0.0, -3.814697265625e-06, 0.0, -8.7738037109375e-05, -3.814697265625e-06, -0.00020420551300048828, -7.62939453125e-06, -0.015210390090942383, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.00010395039862487465, 0.0, -3.0517578125e-05, -2.288818359375e-05, -5.340576171875e-05, -0.00015294551849365234, 0.0, -0.5372829437255859, -1.9073486328125e-06, -0.000179290771484375, -1.1444091796875e-05, -4.76837158203125e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.000148773193359375, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.002544403076171875, -0.000316619873046875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.0013523101806640625, 0.0, -8.0108642578125e-05, 0.0, -0.05102276802062988, 0.0, 0.0, -1.0329132080078125]}, {"score": -5.639022490724521, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 39, 84, 32, 61, 19, 87, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "<UNK>", "<EOS>", "Blessed", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - player.<UNK>.Blessed())\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"_type": "Template18"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "<UNK>"}, "attr": "Blessed"}}}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -0.23852801322937012, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -8.7738037109375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00020039081573486328, -9.5367431640625e-06, -0.010940790176391602, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010967244452331215, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -6.103515625e-05, -0.00015866756439208984, 0.0, -0.5372552871704102, -1.9073486328125e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.340576171875e-05, -1.2159347534179688e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0001583099365234375, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.002559661865234375, -0.0003185272216796875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.001293182373046875, 0.0, -8.0108642578125e-05, 0.0, -0.05141186714172363, 0.0, 0.0, -1.9543094635009766, -0.04033851623535156, -0.06662178039550781, -0.04637622833251953, -0.03347015380859375, -0.004290580749511719, -5.340576171875e-05, -0.000354766845703125, -6.866455078125e-05, -5.7220458984375e-06, -0.00287628173828125, 0.0, -0.8587422370910645, 0.0, -0.7529629468917847, -5.769668860011734e-05, -0.7728849649429321, -0.00014448164438363165]}, {"score": -6.856841347585934, "choice_history": [59, 126, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessed", " ", "Champion", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 57, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 57, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 164, 57], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(3)\n        self.target.change_temp_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template19"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "BlessedChampion", "hole3": "use"}, "score_history": [-3.814697265625e-06, -0.000209808349609375, -2.5987286790041253e-05, -0.000593962671700865, -0.00024268247943837196, -6.674817996099591e-06, -3.4689903259277344e-05, -3.1470757676288486e-05, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.03864097595214844, -0.001220703125, -0.00025177001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011455356434453279, -0.00018918514251708984, -1.1205629562027752e-05, -0.0003104190400335938, -0.0001888275146484375, -1.52587890625e-05, -6.41325386823155e-05, -1.4424245819100179e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.21590328216552734, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00313568115234375, -0.23852801322937012, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -8.7738037109375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00020039081573486328, -9.5367431640625e-06, -0.010940790176391602, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.00010967244452331215, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -6.103515625e-05, -0.00015866756439208984, 0.0, -1.7493457794189453, -0.0001163482666015625, -0.0002002716064453125, -1.1444091796875e-05, -4.1961669921875e-05, -2.205371856689453e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -9.1552734375e-05, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.14371967315673828, -0.00016021728515625, -8.58306884765625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.00043010711669921875, 0.0, -0.0001068115234375, 0.0, -0.03136873245239258, 0.0, 0.0, -0.8828840255737305, -0.004387855529785156, -0.031426429748535156, -0.0001506805419921875, 0.0, -3.814697265625e-06, 0.0, -0.008159637451171875, -1.9073486328125e-06, -0.00049591064453125, 0.0, -0.7528486251831055, -1.9073486328125e-06, -3.814697265625e-06, -1.1397380828857422, -0.0033254623413085938, -0.13682079315185547, -0.0003490447998046875, 0.0, -3.814697265625e-06, 0.0, -0.00274658203125, -1.9073486328125e-06, -0.00019073486328125, 0.0, -0.8564319610595703, -3.814697265625e-06, -9.5367431640625e-06, -0.5991182327270508]}], "gold_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(DoubleAttack()))\n"}
{"beams": [{"score": -2.2564213832347093, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -0.37870311737060547, -4.2080762796103954e-05, -6.29425048828125e-05, -2.47955322265625e-05, 0.0, -0.00016294927627313882, -4.172325134277344e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.9895049333572388, -6.29425048828125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00012969970703125, -0.023913860321044922, -6.687641143798828e-05, -0.02037525177001953, 0.0, -0.060092926025390625, 0.0, -0.011304855346679688, 0.0, -1.52587890625e-05, 0.0, -8.82148651726311e-06, -3.814697265625e-06, -0.0005588531494140625, -0.0020627975463867188, 0.0, -0.22693639993667603, -0.00010573344479780644, -0.000156402587890625, -0.0005130767822265625, -6.4849853515625e-05, -2.86102294921875e-05, -0.0005198842845857143, -2.1457672119140625e-06, -7.748603820800781e-06, -0.008893966674804688, -0.000457763671875, -0.000423431396484375, -6.67572021484375e-05, -5.7220458984375e-06, -0.2975656986236572, -0.00031244754791259766, -0.014748799614608288, -0.0009273290634155273, -0.05551469326019287, -0.009356021881103516, -0.00017750263214111328, -0.0002307891845703125, -0.00200653076171875, -0.00031280517578125, -5.7220458984375e-06, -0.0008608096977695823, -3.814697265625e-06, 0.0, -0.000370025634765625, -3.814697265625e-06, -0.022582173347473145, -0.00030575666460208595, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1918018572032452e-07, -9.5367431640625e-06, -1.6927462638705038e-05, 0.0, -0.0004082440282218158, 0.0]}, {"score": -2.956607546834647, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -0.37870311737060547, -4.2080762796103954e-05, -6.29425048828125e-05, -2.47955322265625e-05, 0.0, -0.00016294927627313882, -4.172325134277344e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.667251706123352, -0.0003032684326171875, -3.4332275390625e-05, -3.4332275390625e-05, -7.82012939453125e-05, -0.014429450035095215, -8.046627044677734e-05, -0.04405498504638672, 0.0, -0.05000019073486328, 0.0, -0.01525115966796875, 0.0, -1.33514404296875e-05, 0.0, -8.70227722771233e-06, -3.814697265625e-06, -0.000591278076171875, -0.002079010009765625, 0.0, -0.23952043056488037, -0.00011228926450712606, -0.000156402587890625, -0.0005130767822265625, -6.4849853515625e-05, -2.86102294921875e-05, -0.0004941064398735762, -2.1457672119140625e-06, -7.748603820800781e-06, -0.0088348388671875, -0.00046539306640625, -0.0004253387451171875, -6.67572021484375e-05, -5.7220458984375e-06, -0.29922282695770264, -0.0003114938735961914, -0.01477192621678114, -0.0009235143661499023, -0.05547463893890381, -0.009346365928649902, -0.00017750263214111328, -0.0002346038818359375, -0.0020084381103515625, -0.0003108978271484375, -5.7220458984375e-06, -0.0008610480581410229, -3.814697265625e-06, 0.0, -0.000370025634765625, -3.814697265625e-06, -0.022566914558410645, -0.00030599505407735705, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.7046670109266415e-05, 0.0, -0.0004082440282218158, 0.0]}, {"score": -2.9760291905676866, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -0.37870311737060547, -4.2080762796103954e-05, -6.29425048828125e-05, -2.47955322265625e-05, 0.0, -0.00016294927627313882, -4.172325134277344e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.6995497941970825, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001544952392578125, -0.014548540115356445, -4.208087921142578e-05, -0.019023895263671875, 0.0, -0.06040763854980469, 0.0, -0.013028144836425781, 0.0, -1.52587890625e-05, 0.0, -1.049041748046875e-05, -3.814697265625e-06, -0.0005855560302734375, -0.002269744873046875, 0.0, -0.24584904313087463, -0.0001151499745901674, -0.0001544952392578125, -0.00051116943359375, -6.4849853515625e-05, -2.86102294921875e-05, -0.0005098790861666203, -2.1457672119140625e-06, -7.748603820800781e-06, -0.008684158325195312, -0.0004520416259765625, -0.0004444122314453125, -6.67572021484375e-05, -5.7220458984375e-06, -0.29657649993896484, -0.0003116130828857422, -0.014815437607467175, -0.0009330511093139648, -0.05572652816772461, -0.009387493133544922, -0.00017750263214111328, -0.000232696533203125, -0.0020160675048828125, -0.000308990478515625, -5.7220458984375e-06, -0.0008611672674305737, -3.814697265625e-06, 0.0, -0.0003681182861328125, -3.814697265625e-06, -0.022599339485168457, -0.00030647177482023835, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1918018572032452e-07, -9.5367431640625e-06, -1.6927462638705038e-05, 0.0, -0.000408482359489426, 0.0]}, {"score": -3.213351496281547, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -0.37870311737060547, -4.2080762796103954e-05, -6.29425048828125e-05, -2.47955322265625e-05, 0.0, -0.00016294927627313882, -4.172325134277344e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9345284700393677, -9.5367431640625e-06, -1.71661376953125e-05, -5.91278076171875e-05, -4.9591064453125e-05, -0.016319870948791504, -5.352497100830078e-05, -0.04210376739501953, 0.0, -0.04363822937011719, 0.0, -0.016897201538085938, 0.0, -1.1444091796875e-05, 0.0, -8.70227722771233e-06, -1.9073486328125e-06, -0.0006008148193359375, -0.0020313262939453125, 0.0, -0.23358018696308136, -0.0001083557799574919, -0.0001583099365234375, -0.000518798828125, -6.29425048828125e-05, -2.86102294921875e-05, -0.0005032522603869438, -2.1457672119140625e-06, -7.748603820800781e-06, -0.008838653564453125, -0.000457763671875, -0.0004291534423828125, -6.67572021484375e-05, -5.7220458984375e-06, -0.2997547388076782, -0.00031054019927978516, -0.01477669458836317, -0.0009244680404663086, -0.05548512935638428, -0.00932919979095459, -0.00017750263214111328, -0.0002346038818359375, -0.0020084381103515625, -0.0003108978271484375, -5.7220458984375e-06, -0.0008609288488514721, -3.814697265625e-06, 0.0, -0.000370025634765625, -3.814697265625e-06, -0.02259361743927002, -0.00030599505407735705, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1918018572032452e-07, -9.5367431640625e-06, -1.6927462638705038e-05, 0.0, -0.000408482359489426, 0.0]}, {"score": -3.5242346711774815, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -1.1553421020507812, -2.288818359375e-05, -3.814697265625e-06, -0.0016552917659282684, -2.0265579223632812e-06, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.4465761184692383, -7.2479248046875e-05, -1.9073486328125e-06, -8.0108642578125e-05, -0.0001544952392578125, -0.005853891372680664, -5.3763389587402344e-05, -0.056571006774902344, 0.0, -0.07531261444091797, 0.0, -0.018136024475097656, 0.0, -1.9073486328125e-05, 0.0, -8.82148651726311e-06, -1.9073486328125e-06, -0.0005397796630859375, -0.0019979476928710938, -1.9073486328125e-06, -0.2394099086523056, -0.00010728300549089909, -0.000156402587890625, -0.000507354736328125, -6.29425048828125e-05, -2.86102294921875e-05, -0.00042850058525800705, -2.1457672119140625e-06, -7.62939453125e-06, -0.011191368103027344, -0.0001888275146484375, -0.0005245208740234375, -6.103515625e-05, -3.814697265625e-06, -0.27557018399238586, -0.00033342838287353516, -0.015887485817074776, -0.0011485815048217773, -0.054379940032958984, -0.00888669490814209, -0.00018322467803955078, -0.0001964569091796875, -0.0021114349365234375, -0.0002651214599609375, -5.7220458984375e-06, -0.0009467594209127128, -3.814697265625e-06, 0.0, -0.0003070831298828125, -3.814697265625e-06, -0.02279376983642578, -0.00032065686536952853, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.6689049516571686e-05, 0.0, -0.00041467990376986563, 0.0]}, {"score": -3.5535322788300334, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -1.1553421020507812, -2.288818359375e-05, -3.814697265625e-06, -0.0016552917659282684, -2.0265579223632812e-06, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.4523849487304688, -9.5367431640625e-06, -5.7220458984375e-06, -8.20159912109375e-05, -4.9591064453125e-05, -0.00649571418762207, -3.6597251892089844e-05, -0.0893402099609375, 0.0, -0.053806304931640625, 0.0, -0.023477554321289062, 0.0, -1.52587890625e-05, 0.0, -8.70227722771233e-06, -1.9073486328125e-06, -0.0005893707275390625, -0.0019807815551757812, -1.9073486328125e-06, -0.2439107447862625, -0.00010907096293522045, -0.000156402587890625, -0.000514984130859375, -6.103515625e-05, -2.6702880859375e-05, -0.0004186537116765976, -2.1457672119140625e-06, -7.62939453125e-06, -0.011037826538085938, -0.0001888275146484375, -0.000530242919921875, -6.103515625e-05, -3.814697265625e-06, -0.27760329842567444, -0.00033152103424072266, -0.015914665535092354, -0.001143813133239746, -0.05437135696411133, -0.008875131607055664, -0.00018513202667236328, -0.0002002716064453125, -0.0021114349365234375, -0.000263214111328125, -5.7220458984375e-06, -0.0009486667695455253, -3.814697265625e-06, 0.0, -0.0003070831298828125, -3.814697265625e-06, -0.022798538208007812, -0.00032101443503051996, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1918018572032452e-07, -9.5367431640625e-06, -1.6689049516571686e-05, 0.0, -0.00041479908395558596, 0.0]}, {"score": -3.6200453410601483, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -1.1553421020507812, -2.288818359375e-05, -3.814697265625e-06, -0.0016552917659282684, -2.0265579223632812e-06, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.5425872802734375, -7.05718994140625e-05, 0.0, -3.814697265625e-06, -0.0001277923583984375, -0.008659601211547852, -3.8504600524902344e-05, -0.035483360290527344, 0.0, -0.07348918914794922, 0.0, -0.01830577850341797, 0.0, -1.9073486328125e-05, 0.0, -1.049041748046875e-05, -3.814697265625e-06, -0.00057220458984375, -0.0022325515747070312, -1.9073486328125e-06, -0.25800788402557373, -0.00011669952073134482, -0.0001544952392578125, -0.0005092620849609375, -6.29425048828125e-05, -2.6702880859375e-05, -0.0004208756145089865, -2.1457672119140625e-06, -7.62939453125e-06, -0.011035919189453125, -0.00019073486328125, -0.000530242919921875, -6.29425048828125e-05, -3.814697265625e-06, -0.27649930119514465, -0.00033354759216308594, -0.015931235626339912, -0.001151442527770996, -0.0544734001159668, -0.008919119834899902, -0.00018322467803955078, -0.0001983642578125, -0.002117156982421875, -0.0002651214599609375, -5.7220458984375e-06, -0.0009431831422261894, -3.814697265625e-06, 0.0, -0.0003108978271484375, -3.814697265625e-06, -0.02281773090362549, -0.0003214911848772317, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1918018572032452e-07, -9.5367431640625e-06, -1.6689049516571686e-05, 0.0, -0.00041479908395558596, 0.0]}, {"score": -3.7676922229556737, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -0.37870311737060547, -4.2080762796103954e-05, -6.29425048828125e-05, -2.47955322265625e-05, 0.0, -0.00016294927627313882, -4.172325134277344e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.490675926208496, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -8.20159912109375e-05, -0.011596083641052246, -4.982948303222656e-05, -0.027665138244628906, 0.0, -0.05775737762451172, 0.0, -0.015028953552246094, 0.0, -1.33514404296875e-05, 0.0, -8.82148651726311e-06, -3.814697265625e-06, -0.000598907470703125, -0.0020799636840820312, 0.0, -0.23886172473430634, -0.00010954774916172028, -0.0001583099365234375, -0.00049591064453125, -6.29425048828125e-05, -2.6702880859375e-05, -0.00048704654909670353, -2.1457672119140625e-06, -7.748603820800781e-06, -0.008958816528320312, -0.00045013427734375, -0.000438690185546875, -6.67572021484375e-05, -5.7220458984375e-06, -0.2994917929172516, -0.0003116130828857422, -0.014850961975753307, -0.0009330511093139648, -0.05542135238647461, -0.009335041046142578, -0.00017940998077392578, -0.000232696533203125, -0.002010345458984375, -0.0003070831298828125, -5.7220458984375e-06, -0.0008628361974842846, -3.814697265625e-06, 0.0, -0.0003662109375, -3.814697265625e-06, -0.02257359027862549, -0.0003063526237383485, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1919473763555288e-07, -9.5367431640625e-06, -1.6927462638705038e-05, 0.0, -0.0004087206907570362, 0.0]}, {"score": -3.8470669351690674, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -1.1553421020507812, -2.288818359375e-05, -3.814697265625e-06, -0.0016552917659282684, -2.0265579223632812e-06, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71759033203125, -0.00040721893310546875, -1.71661376953125e-05, -3.814697265625e-05, -9.918212890625e-05, -0.009176492691040039, -6.365776062011719e-05, -0.08400821685791016, 0.0, -0.07632160186767578, 0.0, -0.0242767333984375, 0.0, -1.71661376953125e-05, 0.0, -8.70227722771233e-06, -3.814697265625e-06, -0.00058746337890625, -0.002044677734375, 0.0, -0.2522887885570526, -0.00011371962318662554, -0.000156402587890625, -0.0005054473876953125, -6.29425048828125e-05, -2.6702880859375e-05, -0.00041806302033364773, -2.1457672119140625e-06, -7.62939453125e-06, -0.010918617248535156, -0.00019073486328125, -0.0005321502685546875, -6.103515625e-05, -3.814697265625e-06, -0.2763829529285431, -0.0003324747085571289, -0.015919910743832588, -0.0011447668075561523, -0.05447244644165039, -0.008900046348571777, -0.00018513202667236328, -0.000202178955078125, -0.00211334228515625, -0.000263214111328125, -5.7220458984375e-06, -0.0009468786302022636, -3.814697265625e-06, 0.0, -0.0003070831298828125, -3.814697265625e-06, -0.022785186767578125, -0.00032101443503051996, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.6689049516571686e-05, 0.0, -0.0004145607235841453, 0.0]}, {"score": -3.861896752870024, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Attack", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Attack(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Attack"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -0.37870311737060547, -4.2080762796103954e-05, -6.29425048828125e-05, -2.47955322265625e-05, 0.0, -0.00016294927627313882, -4.172325134277344e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.9895049333572388, -6.29425048828125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00012969970703125, -0.023913860321044922, -6.687641143798828e-05, -0.02037525177001953, 0.0, -0.060092926025390625, 0.0, -0.011304855346679688, 0.0, -1.52587890625e-05, 0.0, -8.82148651726311e-06, -3.814697265625e-06, -0.0005588531494140625, -0.0020627975463867188, 0.0, -1.7602598667144775, -0.05723154544830322, -0.000637054443359375, -0.0608978271484375, -1.9073486328125e-05, -1.9073486328125e-06, -0.12478470802307129, -5.7220458984375e-06, -3.4332275390625e-05, -0.01826763153076172, -0.0018901824951171875, -0.000591278076171875, -7.62939453125e-05, -5.7220458984375e-06, -0.1171654537320137, -0.0004551410675048828, -0.01717006228864193, -0.0010949373245239258, -0.05414712429046631, -0.009229421615600586, -0.00019276142120361328, -0.00031280517578125, -0.0019378662109375, -0.0004863739013671875, -7.62939453125e-06, -0.0007489909185096622, -3.933906555175781e-06, 0.0, -0.0005283355712890625, -3.814697265625e-06, -0.020434260368347168, -0.0003269745211582631, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.66890567925293e-05, 0.0, -0.000398232921725139, 0.0]}, {"score": -4.422944485088891, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -1.1553421020507812, -2.288818359375e-05, -3.814697265625e-06, -0.0016552917659282684, -2.0265579223632812e-06, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.331266403198242, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -6.103515625e-05, -0.007005929946899414, -3.6835670471191406e-05, -0.052863121032714844, 0.0, -0.07528400421142578, 0.0, -0.021392822265625, 0.0, -1.9073486328125e-05, 0.0, -8.82148651726311e-06, -3.814697265625e-06, -0.000579833984375, -0.002033233642578125, -1.9073486328125e-06, -0.25258317589759827, -0.00011097810784121975, -0.000156402587890625, -0.00049591064453125, -6.103515625e-05, -2.6702880859375e-05, -0.00039103487506508827, -2.1457672119140625e-06, -9.5367431640625e-06, -0.011531829833984375, -0.000186920166015625, -0.0005340576171875, -6.103515625e-05, -3.814697265625e-06, -0.2756585478782654, -0.00033354759216308594, -0.015961872413754463, -0.0011562108993530273, -0.054308533668518066, -0.008865714073181152, -0.00018513202667236328, -0.0001983642578125, -0.0021209716796875, -0.0002613067626953125, -5.7220458984375e-06, -0.0009506933274678886, -3.814697265625e-06, 0.0, -0.0003070831298828125, -3.814697265625e-06, -0.022751927375793457, -0.0003217295743525028, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1918018572032452e-07, -9.5367431640625e-06, -1.6689049516571686e-05, 0.0, -0.00041479908395558596, 0.0]}, {"score": -4.501377656615631, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Attack", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Attack(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Attack"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -0.37870311737060547, -4.2080762796103954e-05, -6.29425048828125e-05, -2.47955322265625e-05, 0.0, -0.00016294927627313882, -4.172325134277344e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.6995497941970825, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001544952392578125, -0.014548540115356445, -4.208087921142578e-05, -0.019023895263671875, 0.0, -0.06040763854980469, 0.0, -0.013028144836425781, 0.0, -1.52587890625e-05, 0.0, -1.049041748046875e-05, -3.814697265625e-06, -0.0005855560302734375, -0.002269744873046875, 0.0, -1.6810165643692017, -0.0677105188369751, -0.0005931854248046875, -0.07351875305175781, -1.9073486328125e-05, -1.9073486328125e-06, -0.1271262764930725, -5.7220458984375e-06, -3.4332275390625e-05, -0.017828941345214844, -0.0018625259399414062, -0.0005970001220703125, -7.82012939453125e-05, -5.7220458984375e-06, -0.11008145660161972, -0.00038743019104003906, -0.017343631014227867, -0.001061558723449707, -0.05343949794769287, -0.009192109107971191, -0.00019371509552001953, -0.0003185272216796875, -0.00194549560546875, -0.0004787445068359375, -7.62939453125e-06, -0.0007591237081214786, -3.933906555175781e-06, 0.0, -0.000530242919921875, -3.814697265625e-06, -0.02041327953338623, -0.00032840511994436383, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.66890567925293e-05, 0.0, -0.0003984712529927492, 0.0]}, {"score": -6.562957435952711, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Has", "<UNK>", "<EOS>", 164, 49, 121, "Gallywix's", " ", "Priest", " ", "Minion", "<EOS>", 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Has<UNK>(\"Gallywix's Priest Minion\"), EnemyPlayer(),\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"s": "Gallywix's Priest Minion", "_type": "Str"}], "func": {"_type": "Name", "id": "Has<UNK>"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -0.37870311737060547, -4.2080762796103954e-05, -6.29425048828125e-05, -2.47955322265625e-05, 0.0, -0.00016294927627313882, -4.172325134277344e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.9895049333572388, -6.29425048828125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00012969970703125, -0.023913860321044922, -6.687641143798828e-05, -0.02037525177001953, 0.0, -0.060092926025390625, 0.0, -0.011304855346679688, 0.0, -1.52587890625e-05, 0.0, -8.82148651726311e-06, -3.814697265625e-06, -0.0005588531494140625, -0.0020627975463867188, 0.0, -0.22693639993667603, -0.00010573344479780644, -0.000156402587890625, -0.0005130767822265625, -6.4849853515625e-05, -2.86102294921875e-05, -0.0005198842845857143, -2.1457672119140625e-06, -7.748603820800781e-06, -0.008893966674804688, -0.000457763671875, -0.000423431396484375, -6.67572021484375e-05, -5.7220458984375e-06, -1.6707966327667236, -0.03814336284995079, -0.7099253535270691, -0.0009403228759765625, -0.0679483413696289, -1.9073486328125e-06, -0.49269813299179077, -0.006533622741699219, -0.7036240696907043, -0.2615758180618286, -0.43639329075813293, -1.9073486328125e-05, -0.0001964569091796875, -2.47955322265625e-05, -0.014818191528320312, -0.0001430511474609375, 0.0, -0.004322052001953125, -5.7220458984375e-06, -0.30364513397216797, -0.00010502214718144387, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -1.3470649719238281e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -1.4781760910409503e-05, 0.0, -0.00035163050051778555, 0.0]}, {"score": -6.711980913076303, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 164, 55, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "UserPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -0.37870311737060547, -4.2080762796103954e-05, -6.29425048828125e-05, -2.47955322265625e-05, 0.0, -0.00016294927627313882, -4.172325134277344e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.9895049333572388, -6.29425048828125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00012969970703125, -0.023913860321044922, -6.687641143798828e-05, -0.02037525177001953, 0.0, -0.060092926025390625, 0.0, -0.011304855346679688, 0.0, -1.52587890625e-05, 0.0, -8.82148651726311e-06, -3.814697265625e-06, -0.0005588531494140625, -0.0020627975463867188, 0.0, -0.22693639993667603, -0.00010573344479780644, -0.000156402587890625, -0.0005130767822265625, -6.4849853515625e-05, -2.86102294921875e-05, -0.0005198842845857143, -2.1457672119140625e-06, -7.748603820800781e-06, -0.008893966674804688, -0.000457763671875, -0.000423431396484375, -6.67572021484375e-05, -5.7220458984375e-06, -0.2975656986236572, -0.00031244754791259766, -0.014748799614608288, -0.0009273290634155273, -0.05551469326019287, -0.009356021881103516, -0.00017750263214111328, -0.0002307891845703125, -0.00200653076171875, -0.00031280517578125, -5.7220458984375e-06, -0.0008608096977695823, -3.814697265625e-06, 0.0, -0.000370025634765625, -3.814697265625e-06, -4.474946022033691, -0.003611684311181307, 0.0, -5.7220458984375e-06, 0.0, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -7.390905921056401e-06, 0.0, -0.0003381708520464599, 0.0]}, {"score": -7.042173754179174, "choice_history": [59, 124, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 166, 41, 89, 24, 112, "Has", "<UNK>", "<EOS>", 164, 49, 121, "Gallywix's", " ", "of", " ", "Minion", "<EOS>", 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Has<UNK>(\"Gallywix's of Minion\"), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"s": "Gallywix's of Minion", "_type": "Str"}], "func": {"_type": "Name", "id": "Has<UNK>"}}, {"_type": "Template10", "hole0": "EnemyPlayer"}, {"_type": "Template10", "hole0": "RandomPicker"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "CabalShadow", "hole3": "create_minion"}, "score_history": [0.0, -5.91278076171875e-05, -0.0009465522598475218, -0.08452284336090088, -0.037199899554252625, -1.1920565157197416e-07, 0.0, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.9682672902708873e-05, -3.0517578125e-05, -0.0023508069571107626, -0.37870311737060547, -4.2080762796103954e-05, -6.29425048828125e-05, -2.47955322265625e-05, 0.0, -0.00016294927627313882, -4.172325134277344e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.9895049333572388, -6.29425048828125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00012969970703125, -0.023913860321044922, -6.687641143798828e-05, -0.02037525177001953, 0.0, -0.060092926025390625, 0.0, -0.011304855346679688, 0.0, -1.52587890625e-05, 0.0, -8.82148651726311e-06, -3.814697265625e-06, -0.0005588531494140625, -0.0020627975463867188, 0.0, -0.22693639993667603, -0.00010573344479780644, -0.000156402587890625, -0.0005130767822265625, -6.4849853515625e-05, -2.86102294921875e-05, -0.0005198842845857143, -2.1457672119140625e-06, -7.748603820800781e-06, -0.008893966674804688, -0.000457763671875, -0.000423431396484375, -6.67572021484375e-05, -5.7220458984375e-06, -1.6707966327667236, -0.03814336284995079, -0.7099253535270691, -0.0009403228759765625, -0.0679483413696289, -1.9073486328125e-06, -0.49269813299179077, -0.006533622741699219, -1.3784087896347046, -0.03958320617675781, -0.4339328706264496, -0.00014591217041015625, -0.000308990478515625, -8.7738037109375e-05, -0.024767041206359863, -0.0001544952392578125, 0.0, -0.008159637451171875, -5.7220458984375e-06, -0.31835484504699707, -7.10484164301306e-05, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -1.728534698486328e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -2.062282510451041e-05, 0.0, -0.00040501655894331634, 0.0]}], "gold_code": "class CabalShadowPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Steal(), MinionSelector(\n            AttackLessThanOrEqualTo(2), players=EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}
{"beams": [{"score": -3.927742755251984, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.013803482055664, -0.000102996826171875, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -1.3470647900248878e-05, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.18083477020263672, -3.814697265625e-06, -7.62939453125e-06, -0.00063323974609375, -1.9073486328125e-06, -0.47366929054260254, 0.0, -0.1315135955810547, -0.1255168914794922, -7.62939453125e-06, -1.9073486328125e-06, -1.325119972229004, 0.0, -0.0005772113217972219, -1.71661376953125e-05, -0.0002957582473754883, -7.2479248046875e-05, -2.6702880859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0010356903076171875, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -0.0015546083450317383, -1.9073486328125e-06, -0.006716728210449219, -3.814697265625e-06, -0.027568817138671875, -1.9073486328125e-06, -0.001728057861328125, 0.0, -0.0512847900390625, 0.0, -0.02179395593702793, -5.14984130859375e-05, -2.288818359375e-05, -0.0003719329833984375, 0.0, -0.1054677963256836, 0.0, -3.4332275390625e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -0.014287948608398438, 0.0, -0.0016088485717773438, -2.09808349609375e-05]}, {"score": -4.027883067979019, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.013803482055664, -0.000102996826171875, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -1.3470647900248878e-05, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.9229116439819336, -1.71661376953125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.005869865417480469, 0.0, -4.57763671875e-05, -3.814697265625e-06, -2.9802322387695312e-05, 0.0, -0.05542740598320961, -2.50339189733495e-06, -0.000774383544921875, -0.0009517669677734375, -0.00226593017578125, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -0.000118255615234375, 0.0, -0.0017775297164916992, 0.0, -1.52587890625e-05, -0.0004100799560546875, -3.24249267578125e-05, 0.0, -0.005354046821594238, -0.00015091894601937383, -0.23917675018310547, -0.017759323120117188, -0.015361785888671875, 0.0, -0.3021726608276367, 0.0, -0.0015393495559692383, -4.1961669921875e-05]}, {"score": -5.0920771502615025, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "game", "<EOS>", "check_delayed", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        game.check_delayed()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "check_delayed", "_type": "Template9", "hole0": {"_type": "Name", "id": "game"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.013803482055664, -0.000102996826171875, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -1.3470647900248878e-05, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.9229116439819336, -1.71661376953125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.005869865417480469, 0.0, -4.57763671875e-05, -3.814697265625e-06, -2.9802322387695312e-05, 0.0, -0.05542740598320961, -2.50339189733495e-06, -0.000774383544921875, -0.0009517669677734375, -0.00226593017578125, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -0.000118255615234375, 0.0, -0.0017775297164916992, 0.0, -1.52587890625e-05, -0.0004100799560546875, -3.24249267578125e-05, 0.0, -0.005354046821594238, -0.00015091894601937383, -0.23917675018310547, -0.017759323120117188, -0.015361785888671875, 0.0, -1.3527755737304688, 0.0, -0.015170215629041195, -2.2649765014648438e-06]}, {"score": -6.311933490946558, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 165, 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 43, 106, 3, 141, "x", "<EOS>", 25, 113, "True", "<EOS>", 69, 95, 24, 112, "target", "<EOS>", 24, 112, "targets", "<EOS>", 177, 76, 146, 24, 112, "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(\n            player.game, lambda x: True)\n        for target in targets:\n            target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Lambda", "args": {"_type": "Template6", "hole0": "x"}, "body": {"_type": "NameConstant", "value": true}}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_enemy_minion_battlecry_target"}}}, {"_type": "For", "target": {"_type": "Name", "id": "target"}, "body": [{"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "target"}}], "iter": {"_type": "Name", "id": "targets"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.013803482055664, -0.000102996826171875, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -1.3470647900248878e-05, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.18083477020263672, -3.814697265625e-06, -7.62939453125e-06, -0.00063323974609375, -1.9073486328125e-06, -0.47366929054260254, 0.0, -0.1315135955810547, -0.1255168914794922, -7.62939453125e-06, -1.9073486328125e-06, -0.3148326873779297, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.8329344987869263, -7.62939453125e-06, -0.02285623550415039, -1.9073486328125e-06, -0.1684654951095581, -0.000453948974609375, -7.2479248046875e-05, -0.0012340545654296875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.1049795150756836, 0.0, -0.001049041748046875, -3.0517578125e-05, -0.00093841552734375, -4.57763671875e-05, -0.000514984130859375, -0.000751495361328125, -0.028301160782575607, -0.0010604963172227144, -0.014365196228027344, -0.0029630661010742188, -0.00021958351135253906, -0.00030159950256347656, -0.8385963439941406, -0.0005168914794921875, -1.33514404296875e-05, -1.9073486328125e-06, -0.017473459243774414, 0.0, -0.04318428039550781, -0.00028228759765625, -0.07589066028594971, 0.0, -0.0024318695068359375, -0.000514984130859375, -1.1444091796875e-05, -0.000202178955078125, 0.0, -0.06773686408996582, 0.0, -1.2603939771652222, -4.649158654501662e-06, -9.5367431640625e-06, -0.14003467559814453]}, {"score": -6.4130789968407385, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 165, 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 43, 106, 3, 141, "x", "<EOS>", 25, 113, "True", "<EOS>", 69, 95, 24, 112, "target", "<EOS>", 24, 112, "targets", "<EOS>", 177, 76, 146, 24, 112, "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(\n            player.game, lambda x: True)\n        for target in targets:\n            target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Lambda", "args": {"_type": "Template6", "hole0": "x"}, "body": {"_type": "NameConstant", "value": true}}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_enemy_minion_battlecry_target"}}}, {"_type": "For", "target": {"_type": "Name", "id": "target"}, "body": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "target"}}], "iter": {"_type": "Name", "id": "targets"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.013803482055664, -0.000102996826171875, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -1.3470647900248878e-05, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.18083477020263672, -3.814697265625e-06, -7.62939453125e-06, -0.00063323974609375, -1.9073486328125e-06, -0.47366929054260254, 0.0, -0.1315135955810547, -0.1255168914794922, -7.62939453125e-06, -1.9073486328125e-06, -0.3148326873779297, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.8329344987869263, -7.62939453125e-06, -0.02285623550415039, -1.9073486328125e-06, -0.1684654951095581, -0.000453948974609375, -7.2479248046875e-05, -0.0012340545654296875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.1049795150756836, 0.0, -0.001049041748046875, -3.0517578125e-05, -0.00093841552734375, -4.57763671875e-05, -0.000514984130859375, -0.000751495361328125, -0.028301160782575607, -0.0010604963172227144, -0.014365196228027344, -0.0029630661010742188, -0.00021958351135253906, -0.00030159950256347656, -0.8385963439941406, -0.0005168914794921875, -1.33514404296875e-05, -1.9073486328125e-06, -0.017473459243774414, 0.0, -0.04318428039550781, -0.00028228759765625, -0.07589066028594971, 0.0, -0.0024318695068359375, -0.000514984130859375, -1.1444091796875e-05, -0.000202178955078125, 0.0, -0.06773686408996582, 0.0, -1.4705500602722168, -3.576278118089249e-07, -0.0003662109375, -0.0002307891845703125, -0.018718719482421875, -9.5367431640625e-06, 0.0, -9.1552734375e-05, 0.0, -9.5367431640625e-05, 0.0, -0.005350470542907715, 0.0, -1.33514404296875e-05, -0.000518798828125, -6.4849853515625e-05, 0.0, -0.005349278450012207, -0.00022900103067513555]}, {"score": -6.6257285806718755, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 165, 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 43, 106, 3, 141, "x", "<EOS>", 25, 113, "True", "<EOS>", 69, 95, 24, 112, "target", "<EOS>", 24, 112, "targets", "<EOS>", 177, 76, 146, 24, 112, "target", "<EOS>", "set_health_to", "<EOS>", 164, 56], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(\n            player.game, lambda x: True)\n        for target in targets:\n            target.set_health_to(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Lambda", "args": {"_type": "Template6", "hole0": "x"}, "body": {"_type": "NameConstant", "value": true}}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_enemy_minion_battlecry_target"}}}, {"_type": "For", "target": {"_type": "Name", "id": "target"}, "body": [{"hole2": [{"_type": "Template18"}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Name", "id": "target"}}], "iter": {"_type": "Name", "id": "targets"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.013803482055664, -0.000102996826171875, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -1.3470647900248878e-05, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.18083477020263672, -3.814697265625e-06, -7.62939453125e-06, -0.00063323974609375, -1.9073486328125e-06, -0.47366929054260254, 0.0, -0.1315135955810547, -0.1255168914794922, -7.62939453125e-06, -1.9073486328125e-06, -0.3148326873779297, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.8329344987869263, -7.62939453125e-06, -0.02285623550415039, -1.9073486328125e-06, -0.1684654951095581, -0.000453948974609375, -7.2479248046875e-05, -0.0012340545654296875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.1049795150756836, 0.0, -0.001049041748046875, -3.0517578125e-05, -0.00093841552734375, -4.57763671875e-05, -0.000514984130859375, -0.000751495361328125, -0.028301160782575607, -0.0010604963172227144, -0.014365196228027344, -0.0029630661010742188, -0.00021958351135253906, -0.00030159950256347656, -0.8385963439941406, -0.0005168914794921875, -1.33514404296875e-05, -1.9073486328125e-06, -0.017473459243774414, 0.0, -0.04318428039550781, -0.00028228759765625, -0.07589066028594971, 0.0, -0.0024318695068359375, -0.000514984130859375, -1.1444091796875e-05, -0.000202178955078125, 0.0, -0.06773686408996582, 0.0, -1.5217074155807495, -0.004855990409851074, -5.7220458984375e-05, -0.18761730194091797]}, {"score": -7.082953166418065, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 71, 99, 20, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 12, 164, 47, 114, "Null", "<EOS>", 177, 76, 146, 24, 112, "lightwarden", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target is not Null:\n            lightwarden.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"_type": "If", "body": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "lightwarden"}}], "test": {"_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "IsNot"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.013803482055664, -0.000102996826171875, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -1.3470647900248878e-05, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.9229116439819336, -1.71661376953125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.005869865417480469, 0.0, -4.57763671875e-05, -3.814697265625e-06, -2.9802322387695312e-05, 0.0, -0.05542740598320961, -2.50339189733495e-06, -0.000774383544921875, -0.0009517669677734375, -0.00226593017578125, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -0.000118255615234375, 0.0, -0.0017775297164916992, 0.0, -1.52587890625e-05, -0.0004100799560546875, -3.24249267578125e-05, 0.0, -0.005354046821594238, -0.00015091894601937383, -1.5699453353881836, -0.0004444122314453125, -0.041998863220214844, -1.71661376953125e-05, -0.0045070648193359375, -5.7220458984375e-06, -0.014162063598632812, 0.0, -0.006411552429199219, -1.9073486328125e-06, -0.00029981136322021484, 0.0, -0.0012111663818359375, -0.01727294921875, -9.5367431640625e-06, -0.0018177032470703125, -9.72747802734375e-05, -0.00012063607573509216, -7.62939453125e-05, -0.1780080795288086, -0.0003452301025390625, -0.0121917724609375, -0.0052814483642578125, 0.0, -1.4578962326049805, -2.0265579223632812e-06, -0.15433412790298462, -6.556489552167477e-06, -0.0008258819580078125, -7.62939453125e-06, -0.15560245513916016, -2.6702880859375e-05, 0.0, -0.0001392364501953125, 0.0, -0.0004634857177734375, 0.0, -0.002755403518676758, 0.0, -3.0517578125e-05, -0.00051116943359375, -0.000125885009765625, 0.0, -0.0038634538650512695, -0.00030517575214616954]}, {"score": -7.18012840843766, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 165, 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 43, 106, 3, 141, "x", "<EOS>", 25, 113, "True", "<EOS>", 71, 99, 20, 92, 24, 112, "index", "<EOS>", 161, 12, 164, 47, 114, "Null", "<EOS>", 177, 76, 146, 24, 112, "left_minion", "<EOS>", "damage", "<EOS>", 165, 41, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "target", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(\n            player.game, lambda x: True)\n        if index is not Null:\n            left_minion.damage(self.target.calculate_attack(), self.target)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Lambda", "args": {"_type": "Template6", "hole0": "x"}, "body": {"_type": "NameConstant", "value": true}}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_enemy_minion_battlecry_target"}}}, {"_type": "If", "body": [{"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "left_minion"}}], "test": {"_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "left": {"_type": "Name", "id": "index"}, "ops": [{"_type": "IsNot"}]}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.013803482055664, -0.000102996826171875, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -1.3470647900248878e-05, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.18083477020263672, -3.814697265625e-06, -7.62939453125e-06, -0.00063323974609375, -1.9073486328125e-06, -0.47366929054260254, 0.0, -0.1315135955810547, -0.1255168914794922, -7.62939453125e-06, -1.9073486328125e-06, -0.3148326873779297, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.8329344987869263, -7.62939453125e-06, -0.02285623550415039, -1.9073486328125e-06, -0.1684654951095581, -0.000453948974609375, -7.2479248046875e-05, -0.0012340545654296875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.1049795150756836, 0.0, -0.001049041748046875, -3.0517578125e-05, -0.00093841552734375, -4.57763671875e-05, -0.000514984130859375, -0.000751495361328125, -0.028301160782575607, -0.0010604963172227144, -0.014365196228027344, -0.0029630661010742188, -0.00021958351135253906, -0.00030159950256347656, -0.8493709564208984, -0.0017099380493164062, -0.015049934387207031, -0.0002079010009765625, -0.06306076049804688, -9.72747802734375e-05, -0.6773991584777832, -5.7220458984375e-06, -4.9591064453125e-05, -0.03753471374511719, -3.814697265625e-06, -0.000415802001953125, -0.0006103515625, -0.00010979016951750964, -0.00014889240264892578, -0.05217742919921875, -0.0032072067260742188, -0.0022869110107421875, -0.005870819091796875, -2.6702880859375e-05, -1.0828944444656372, -1.1920928244535389e-07, -0.14068341255187988, -5.364412118069595e-06, -0.0020952224731445312, -1.9073486328125e-06, -0.35213184356689453, -3.814697265625e-06, 0.0, -0.00188446044921875, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -9.608268737792969e-05, 0.0, -0.017623048275709152, -9.5367431640625e-06, -0.007716178894042969, 0.0, -0.0002880096435546875, 0.0, -0.00032806396484375, -1.9073486328125e-06, -4.9591064453125e-05, 0.0]}, {"score": -9.145678286712155, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 183, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.6380434036254883, -0.004902839660644531, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.753734588623047e-05, -2.47955322265625e-05, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.005692481994628906, -3.814697265625e-06, -2.86102294921875e-05, -2.47955322265625e-05, 0.0, -0.5627717971801758, 0.0, -0.0034761428833007812, -0.04475212097167969, -3.814697265625e-06, 0.0, -1.799520492553711, 0.0, -0.0010339021682739258, -1.52587890625e-05, -0.00028824806213378906, -8.58306884765625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -0.0009555816650390625, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.0013467073440551758, -1.9073486328125e-06, -0.006463050842285156, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.039849281311035156, 0.0, -0.01356783602386713, -0.0001049041748046875, -2.288818359375e-05, -0.0001888275146484375, 0.0, -0.18400001525878906, 0.0, -3.62396240234375e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.01093292236328125, 0.0, -0.0015277862548828125, -1.9073486328125e-05, -0.03061389923095703, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.14093875885009766, 0.0, -0.11001869291067123, -0.0001010894775390625, -9.5367431640625e-06, -9.34600830078125e-05, 0.0, -0.30362892150878906, 0.0, -3.0517578125e-05, 0.0, -0.0002040863037109375, 0.0, -0.01862335205078125, 0.0, -0.010874748229980469, -1.52587890625e-05, -0.14621925354003906, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.3030538558959961, 0.0, -0.37526509165763855, -0.00016021728515625, -1.1444091796875e-05, -6.866455078125e-05, 0.0, -0.22551727294921875, 0.0, -3.814697265625e-05, 0.0, -0.000225067138671875, 0.0, -0.029039382934570312, 0.0, -0.03982257843017578, -1.52587890625e-05, -0.23551082611083984, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.34722423553466797, 0.0, -0.4250788688659668, -0.0001583099365234375, -1.1444091796875e-05, -7.62939453125e-05, 0.0, -0.17755413055419922, 0.0, -4.57763671875e-05, 0.0, -0.0002593994140625, 0.0, -0.03126335144042969, 0.0, -0.042511940002441406, -1.71661376953125e-05, -0.2377033233642578, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.47341012954711914, 0.0, -0.4783499240875244, -0.0001430511474609375, -1.1444091796875e-05, -9.72747802734375e-05, 0.0, -0.12630462646484375, 0.0, -5.340576171875e-05, 0.0, -0.0003509521484375, 0.0, -0.0326080322265625, 0.0, -0.04062080383300781, -1.71661376953125e-05]}, {"score": -10.426043694179043, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 183, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        <UNK>.summon(game.current_player.minions, len(game.other_player.\n            minions), len(game.other_player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.6380434036254883, -0.004902839660644531, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.753734588623047e-05, -2.47955322265625e-05, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.005692481994628906, -3.814697265625e-06, -2.86102294921875e-05, -2.47955322265625e-05, 0.0, -0.5627717971801758, 0.0, -0.0034761428833007812, -0.04475212097167969, -3.814697265625e-06, 0.0, -1.799520492553711, 0.0, -0.0010339021682739258, -1.52587890625e-05, -0.00028824806213378906, -8.58306884765625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -0.0009555816650390625, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.0013467073440551758, -1.9073486328125e-06, -0.006463050842285156, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.039849281311035156, 0.0, -0.01356783602386713, -0.0001049041748046875, -2.288818359375e-05, -0.0001888275146484375, 0.0, -0.18400001525878906, 0.0, -3.62396240234375e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.01093292236328125, 0.0, -0.0015277862548828125, -1.9073486328125e-05, -0.03061389923095703, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.14093875885009766, 0.0, -0.11001869291067123, -0.0001010894775390625, -9.5367431640625e-06, -9.34600830078125e-05, 0.0, -0.30362892150878906, 0.0, -3.0517578125e-05, 0.0, -0.0002040863037109375, 0.0, -0.01862335205078125, 0.0, -0.010874748229980469, -1.52587890625e-05, -0.14621925354003906, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.3030538558959961, 0.0, -0.37526509165763855, -0.00016021728515625, -1.1444091796875e-05, -6.866455078125e-05, 0.0, -0.22551727294921875, 0.0, -3.814697265625e-05, 0.0, -0.000225067138671875, 0.0, -0.029039382934570312, 0.0, -0.03982257843017578, -1.52587890625e-05, -0.23551082611083984, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.34722423553466797, 0.0, -0.4250788688659668, -0.0001583099365234375, -1.1444091796875e-05, -7.62939453125e-05, 0.0, -0.17755413055419922, 0.0, -4.57763671875e-05, 0.0, -0.0002593994140625, 0.0, -0.03126335144042969, 0.0, -0.042511940002441406, -1.71661376953125e-05, -0.2377033233642578, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.2152342796325684, -0.0008172988891601562, -0.4497968554496765, -0.00018310546875, -0.0005884170532226562, -0.12807273864746094, -8.96453857421875e-05, -0.028421401977539062, 0.0, -4.57763671875e-05, 0.0, -0.009143829345703125, -1.9073486328125e-06, -0.026409149169921875, 0.0, -0.44034671783447266, -1.9073486328125e-06, -0.0001659393310546875, -0.0014591217041015625, -9.5367431640625e-06, 0.0, -0.007266044616699219, -7.62939453125e-06, -1.9073486328125e-06, -0.0075836181640625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.00016021728515625, 0.0, -0.0003833770751953125, 0.0, -0.027714014053344727, 0.0, -0.004858493804931641, -5.7220458984375e-06, -0.000621795654296875, -0.014621734619140625, -9.5367431640625e-06, 0.0, -0.03637981414794922, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002002716064453125, -1.52587890625e-05, -5.340576171875e-05, 0.0, -0.000194549560546875, 0.0, -0.00029754638671875, 0.0, -0.028711557388305664, 0.0, -0.0024123191833496094, -5.7220458984375e-06]}, {"score": -11.111297213728328, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 183, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 24, 112, "targets", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Frozen", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n        self.target.change_attack(Buff(Frozen()))\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Frozen"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.6380434036254883, -0.004902839660644531, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.753734588623047e-05, -2.47955322265625e-05, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.005692481994628906, -3.814697265625e-06, -2.86102294921875e-05, -2.47955322265625e-05, 0.0, -0.5627717971801758, 0.0, -0.0034761428833007812, -0.04475212097167969, -3.814697265625e-06, 0.0, -1.799520492553711, 0.0, -0.0010339021682739258, -1.52587890625e-05, -0.00028824806213378906, -8.58306884765625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -0.0009555816650390625, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.0013467073440551758, -1.9073486328125e-06, -0.006463050842285156, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.039849281311035156, 0.0, -0.01356783602386713, -0.0001049041748046875, -2.288818359375e-05, -0.0001888275146484375, 0.0, -0.18400001525878906, 0.0, -3.62396240234375e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.01093292236328125, 0.0, -0.0015277862548828125, -1.9073486328125e-05, -0.03061389923095703, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.14093875885009766, 0.0, -0.11001869291067123, -0.0001010894775390625, -9.5367431640625e-06, -9.34600830078125e-05, 0.0, -1.363922119140625, 0.0, -0.00568389892578125, 0.0, -0.0009794235229492188, -1.9073486328125e-06, -0.7464981079101562, -1.9073486328125e-06, 0.0, 0.0, -0.026210784912109375, -1.1920928244535389e-07, -0.0021610260009765625, -1.33514404296875e-05, -0.002258777618408203, 0.0, -2.288818359375e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0002689361572265625, 0.0, -0.026466846466064453, -8.344646857949556e-07, -0.039445873349905014, -1.1920922133867862e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.0010776519775390625, -1.71661376953125e-05, 0.0, -0.000202178955078125, 0.0, -0.0002288818359375, 0.0, -0.006026864051818848, 0.0, -1.9073486328125e-05, -0.00043487548828125, -5.340576171875e-05, 0.0, -0.00550079345703125, -0.0001549720618641004, -0.2766685485839844, -0.022752761840820312, -0.042962074279785156, -1.9073486328125e-06, -0.011514663696289062, 0.0, -0.00041675567626953125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.21103660762310028, 0.0, 0.0, -0.6479568481445312, -0.0019979476928710938, -7.62939453125e-06, 0.0, -0.4999433755874634, -1.3470649719238281e-05, -1.33514404296875e-05, -0.11171531677246094, 0.0, -0.0175093412399292, -0.05598306655883789, -0.7386407852172852, -2.288818359375e-05, -0.2799386978149414, 0.0, -9.5367431640625e-05, 0.0, -0.005633354187011719, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.05479968339204788, 0.0, -1.9073486328125e-06, -0.8603925704956055]}, {"score": -11.15328878657101, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 183, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        <UNK>.summon(game.current_player.game, len(game.other_player.\n            minions), len(game.other_player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.6380434036254883, -0.004902839660644531, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.753734588623047e-05, -2.47955322265625e-05, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.005692481994628906, -3.814697265625e-06, -2.86102294921875e-05, -2.47955322265625e-05, 0.0, -0.5627717971801758, 0.0, -0.0034761428833007812, -0.04475212097167969, -3.814697265625e-06, 0.0, -1.799520492553711, 0.0, -0.0010339021682739258, -1.52587890625e-05, -0.00028824806213378906, -8.58306884765625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -0.0009555816650390625, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.0013467073440551758, -1.9073486328125e-06, -0.006463050842285156, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.039849281311035156, 0.0, -0.01356783602386713, -0.0001049041748046875, -2.288818359375e-05, -0.0001888275146484375, 0.0, -0.18400001525878906, 0.0, -3.62396240234375e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.01093292236328125, 0.0, -0.0015277862548828125, -1.9073486328125e-05, -0.03061389923095703, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.14093875885009766, 0.0, -0.11001869291067123, -0.0001010894775390625, -9.5367431640625e-06, -9.34600830078125e-05, 0.0, -0.30362892150878906, 0.0, -3.0517578125e-05, 0.0, -0.0002040863037109375, 0.0, -0.01862335205078125, 0.0, -0.010874748229980469, -1.52587890625e-05, -0.14621925354003906, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.3030538558959961, 0.0, -0.37526509165763855, -0.00016021728515625, -1.1444091796875e-05, -6.866455078125e-05, 0.0, -0.22551727294921875, 0.0, -3.814697265625e-05, 0.0, -0.000225067138671875, 0.0, -0.029039382934570312, 0.0, -0.03982257843017578, -1.52587890625e-05, -0.23551082611083984, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.34722423553466797, 0.0, -0.4250788688659668, -0.0001583099365234375, -1.1444091796875e-05, -7.62939453125e-05, 0.0, -0.17755413055419922, 0.0, -4.57763671875e-05, 0.0, -0.0002593994140625, 0.0, -0.03126335144042969, 0.0, -0.042511940002441406, -1.71661376953125e-05, -0.2377033233642578, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.2152342796325684, -0.0008172988891601562, -0.4497968554496765, -0.00018310546875, -0.0005884170532226562, -0.12807273864746094, -8.96453857421875e-05, -0.028421401977539062, 0.0, -4.57763671875e-05, 0.0, -0.009143829345703125, -1.9073486328125e-06, -0.026409149169921875, 0.0, -1.1713027954101562, 0.0, -0.0007524490356445312, -0.001323699951171875, -9.5367431640625e-06, 0.0, -0.000370025634765625, -1.9073486328125e-06, -5.7220458984375e-06, -0.023954391479492188, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.000209808349609375, 0.0, -0.0005588531494140625, 0.0, -0.01576828956604004, 0.0, -0.012834787368774414, -5.7220458984375e-06, -0.0005083084106445312, -0.012547492980957031, -7.62939453125e-06, 0.0, -0.029272079467773438, -5.7220458984375e-06, -3.814697265625e-06, -0.000324249267578125, -1.33514404296875e-05, -5.340576171875e-05, 0.0, -0.000186920166015625, 0.0, -0.0003185272216796875, 0.0, -0.026623010635375977, 0.0, -0.003764629364013672, -5.7220458984375e-06]}, {"score": -11.384166267956509, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 183, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 24, 112, "targets", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Frozen", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 56], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n        self.target.change_attack(Buff(Frozen()))\n        self.target.change_attack(1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Frozen"}], "func": {"_type": "Name", "id": "Buff"}}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template18"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.6380434036254883, -0.004902839660644531, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.753734588623047e-05, -2.47955322265625e-05, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.005692481994628906, -3.814697265625e-06, -2.86102294921875e-05, -2.47955322265625e-05, 0.0, -0.5627717971801758, 0.0, -0.0034761428833007812, -0.04475212097167969, -3.814697265625e-06, 0.0, -1.799520492553711, 0.0, -0.0010339021682739258, -1.52587890625e-05, -0.00028824806213378906, -8.58306884765625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -0.0009555816650390625, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.0013467073440551758, -1.9073486328125e-06, -0.006463050842285156, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.039849281311035156, 0.0, -0.01356783602386713, -0.0001049041748046875, -2.288818359375e-05, -0.0001888275146484375, 0.0, -0.18400001525878906, 0.0, -3.62396240234375e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.01093292236328125, 0.0, -0.0015277862548828125, -1.9073486328125e-05, -0.03061389923095703, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.14093875885009766, 0.0, -0.11001869291067123, -0.0001010894775390625, -9.5367431640625e-06, -9.34600830078125e-05, 0.0, -0.30362892150878906, 0.0, -3.0517578125e-05, 0.0, -0.0002040863037109375, 0.0, -0.01862335205078125, 0.0, -0.010874748229980469, -1.52587890625e-05, -2.0266189575195312, -5.7220458984375e-06, 0.0, 0.0, -0.034363746643066406, -1.1920928244535389e-07, -0.0010881423950195312, -5.7220458984375e-06, -0.004655957221984863, 0.0, -2.86102294921875e-05, -9.5367431640625e-05, -5.7220458984375e-06, -0.000213623046875, 0.0, -0.02154386043548584, -8.344646857949556e-07, -0.04128513112664223, -1.0728830375228426e-06, -8.392333984375e-05, -5.7220458984375e-06, -0.0010547637939453125, -2.09808349609375e-05, 0.0, -0.000202178955078125, 0.0, -0.00026702880859375, 0.0, -0.006256580352783203, 0.0, -1.9073486328125e-05, -0.000415802001953125, -5.14984130859375e-05, 0.0, -0.0051250457763671875, -0.0001511573645984754, -0.28598594665527344, -0.01233673095703125, -0.07720279693603516, -1.9073486328125e-06, -0.010992050170898438, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.18242035806179047, 0.0, 0.0, -0.6185588836669922, -0.0018453598022460938, -7.62939453125e-06, 0.0, -0.5042376518249512, -1.3470649719238281e-05, -1.33514404296875e-05, -0.13164329528808594, 0.0, -0.018190860748291016, -0.059082746505737305, -0.7366151809692383, -2.288818359375e-05, -0.3075599670410156, 0.0, -9.34600830078125e-05, 0.0, -0.005829811096191406, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.055413518100976944, 0.0, -1.9073486328125e-06, -0.8549795150756836]}, {"score": -13.987898533503994, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 183, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n        <UNK>.summon(game.current_player.minions, len(game.other_player.\n            minions), len(game.current_player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.6380434036254883, -0.004902839660644531, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.753734588623047e-05, -2.47955322265625e-05, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.005692481994628906, -3.814697265625e-06, -2.86102294921875e-05, -2.47955322265625e-05, 0.0, -0.5627717971801758, 0.0, -0.0034761428833007812, -0.04475212097167969, -3.814697265625e-06, 0.0, -1.799520492553711, 0.0, -0.0010339021682739258, -1.52587890625e-05, -0.00028824806213378906, -8.58306884765625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -0.0009555816650390625, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.0013467073440551758, -1.9073486328125e-06, -0.006463050842285156, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.039849281311035156, 0.0, -0.01356783602386713, -0.0001049041748046875, -2.288818359375e-05, -0.0001888275146484375, 0.0, -0.18400001525878906, 0.0, -3.62396240234375e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.01093292236328125, 0.0, -0.0015277862548828125, -1.9073486328125e-05, -0.03061389923095703, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.14093875885009766, 0.0, -0.11001869291067123, -0.0001010894775390625, -9.5367431640625e-06, -9.34600830078125e-05, 0.0, -0.30362892150878906, 0.0, -3.0517578125e-05, 0.0, -0.0002040863037109375, 0.0, -0.01862335205078125, 0.0, -0.010874748229980469, -1.52587890625e-05, -0.14621925354003906, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.3030538558959961, 0.0, -0.37526509165763855, -0.00016021728515625, -1.1444091796875e-05, -6.866455078125e-05, 0.0, -0.22551727294921875, 0.0, -3.814697265625e-05, 0.0, -0.000225067138671875, 0.0, -0.029039382934570312, 0.0, -0.03982257843017578, -1.52587890625e-05, -0.23551082611083984, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.34722423553466797, 0.0, -0.4250788688659668, -0.0001583099365234375, -1.1444091796875e-05, -7.62939453125e-05, 0.0, -0.17755413055419922, 0.0, -4.57763671875e-05, 0.0, -0.0002593994140625, 0.0, -0.03126335144042969, 0.0, -0.042511940002441406, -1.71661376953125e-05, -0.2377033233642578, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.2152342796325684, -0.0008172988891601562, -0.4497968554496765, -0.00018310546875, -0.0005884170532226562, -0.12807273864746094, -8.96453857421875e-05, -0.028421401977539062, 0.0, -4.57763671875e-05, 0.0, -0.009143829345703125, -1.9073486328125e-06, -0.026409149169921875, 0.0, -0.44034671783447266, -1.9073486328125e-06, -0.0001659393310546875, -0.0014591217041015625, -9.5367431640625e-06, 0.0, -0.007266044616699219, -7.62939453125e-06, -1.9073486328125e-06, -0.0075836181640625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.00016021728515625, 0.0, -0.0003833770751953125, 0.0, -0.027714014053344727, 0.0, -0.004858493804931641, -5.7220458984375e-06, -0.000621795654296875, -0.014621734619140625, -9.5367431640625e-06, 0.0, -0.03637981414794922, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002002716064453125, -1.52587890625e-05, -5.340576171875e-05, 0.0, -0.000194549560546875, 0.0, -0.00029754638671875, 0.0, -3.5922367572784424, 0.0, -0.0007343292236328125, -1.33514404296875e-05]}, {"score": -20.07708612363831, "choice_history": [59, 126, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Cone", " ", "of", " ", "Cold", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 183, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 165, 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 43, 106, 3, 141, "x", "<EOS>", 25, 113, "True", "<EOS>", 64, 81, 164, 46, 112, "target", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "targets", "<EOS>", 76, 146, 24, 112, "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 71, 99, 20, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 12, 164, 47, 114, "Null", "<EOS>", 177, 76, 146, 24, 112, "lightwarden", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "Attack", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 174, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>", 64, 81, 164, 46, 112, "option", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "current_player", "<EOS>", "choose_option", "<EOS>", 165, 44, 108, 165, 51, 130, "Damage", "<UNK>", "<EOS>", 51, 130, "Damage", "Cold", "<EOS>", 46, 112, "player", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(\n            player.game, lambda x: True)\n        target = game.random_choice(targets)\n        target.damage(player.effective_spell_damage(1), self)\n        if self.target is not Null:\n            lightwarden.damage(player.effective_spell_damage(1), self)\n        self.target.set_health_to(Effect(CharacterAttack(condition=IsMinion\n            ()), ActionTag(Damage(1), CharacterSelector(players=EnemyPlayer\n            (), picker=RandomPicker(), condition=Null))))\n        option = game.current_player.choose_option([Damage<UNK>(),\n            DamageCold()], player)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Lambda", "args": {"_type": "Template6", "hole0": "x"}, "body": {"_type": "NameConstant", "value": true}}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_enemy_minion_battlecry_target"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "targets"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "target"}}, {"_type": "If", "body": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "lightwarden"}}], "test": {"_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "IsNot"}]}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CharacterAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}, {"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}], "hole1": "set_health_to", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "option"}], "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Template10", "hole0": "Damage<UNK>"}, {"_type": "Template10", "hole0": "DamageCold"}]}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "choose_option"}}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ConeOfCold", "hole3": "use"}, "score_history": [-1.33514404296875e-05, -0.0001850128173828125, -0.00011705678480211645, -0.000420093274442479, -0.0018035657703876495, -8.344650268554688e-06, -2.0265574676159304e-06, -2.0265579223632812e-06, -2.0265558760002023e-06, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.04335498809814453, -0.0002498626708984375, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0001163482666015625, -1.7762025890988298e-05, -0.0005609989166259766, -1.9788731151493266e-05, -0.00014543533325195312, -1.01327859738376e-05, -0.001636505126953125, -0.0002422332763671875, -3.814697265625e-06, -1.4305071545095416e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.36941826343536377, 0.0, -0.0001373291015625, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.01320648193359375, 0.0, -0.0005283355712890625, 0.0, -0.00858604907989502, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.398822784423828e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -1.6380434036254883, -0.004902839660644531, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.753734588623047e-05, -2.47955322265625e-05, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.005692481994628906, -3.814697265625e-06, -2.86102294921875e-05, -2.47955322265625e-05, 0.0, -0.5627717971801758, 0.0, -0.0034761428833007812, -0.04475212097167969, -3.814697265625e-06, 0.0, -0.18477916717529297, 0.0, -5.340576171875e-05, -3.814697265625e-06, -1.0131913423538208, -7.62939453125e-06, -0.019962668418884277, -1.9073486328125e-06, -0.17696607112884521, -0.0007610321044921875, -9.72747802734375e-05, -0.0015964508056640625, -1.9073486328125e-06, -0.0003871917724609375, 0.0, -0.07462787628173828, 0.0, -0.0010662078857421875, -3.0517578125e-05, -0.0009021759033203125, -4.57763671875e-05, -0.0005035400390625, -0.0007572174072265625, -0.028007397428154945, -0.0010624048300087452, -0.014712333679199219, -0.0029497146606445312, -0.00021767616271972656, -0.00029778480529785156, -0.7248058319091797, -5.340576171875e-05, -0.0005931854248046875, -9.5367431640625e-06, -0.0009784698486328125, -0.03693580627441406, 0.0, -0.006697654724121094, -0.0011501312255859375, -1.9073486328125e-06, 0.0, -0.09560394287109375, -1.9073486328125e-06, -3.445148468017578e-05, -3.814697265625e-06, -0.0019135471666231751, -1.1444091796875e-05, -1.9073486328125e-05, -0.0003948211669921875, 0.0, -0.07589828968048096, -3.814697265625e-06, -0.12779903411865234, -2.86102294921875e-05, -7.62939453125e-05, 0.0, -0.011089444160461426, 0.0, -0.19005128741264343, -4.1723224057932384e-06, -0.0011777877807617188, -0.005915641784667969, -0.01739215850830078, -1.52587890625e-05, 0.0, -8.0108642578125e-05, 0.0, -0.001232147216796875, 0.0, -0.04807758331298828, 0.0, -1.9073486328125e-05, -0.0004405975341796875, -7.2479248046875e-05, 0.0, -0.0048438310623168945, -0.0001896619505714625, -1.4910697937011719, -0.0003032684326171875, -0.006264686584472656, -2.86102294921875e-05, -0.15270233154296875, -9.5367431640625e-06, -0.008819580078125, 0.0, -0.009489059448242188, -1.9073486328125e-06, -0.0001926422119140625, 0.0, -0.0047168731689453125, -0.026185035705566406, -7.62939453125e-06, -0.001644134521484375, -8.20159912109375e-05, -0.00010466366802575067, -7.82012939453125e-05, -0.09749221801757812, -0.000255584716796875, -0.00469207763671875, -0.002777099609375, 0.0, -1.506040096282959, -2.0265579223632812e-06, -0.16466695070266724, -8.344629350176547e-06, -0.00095367431640625, -7.62939453125e-06, -0.17836284637451172, -3.0517578125e-05, 0.0, -0.0001125335693359375, 0.0, -0.000335693359375, 0.0, -0.0028754472732543945, 0.0, -3.0517578125e-05, -0.00054168701171875, -0.0001239776611328125, 0.0, -0.003988385200500488, -0.0002976655669044703, -0.3962106704711914, -0.040008544921875, -0.0062503814697265625, -1.9073486328125e-06, -0.01409912109375, 0.0, -0.0001773834228515625, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1362417936325073, -7.62939453125e-06, -3.814697265625e-06, -0.26912593841552734, -0.0038614273071289062, -5.7220458984375e-06, 0.0, -0.24928820133209229, -0.00010394820856163278, -0.05919837951660156, -0.24251174926757812, -0.46647071838378906, -3.814697265625e-06, 0.0, -0.12827852368354797, -0.6087970733642578, -9.5367431640625e-06, -0.012604713439941406, -0.00034332275390625, -0.8133316040039062, -1.9073486328125e-06, -0.1693887710571289, 0.0, -0.021256297826766968, -0.020997559651732445, -3.814697265625e-06, -0.002803802490234375, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -0.000652313232421875, -0.0004730224609375, -1.9073486328125e-06, -9.5367431640625e-06, -0.44391679763793945, -1.9073486328125e-06, -0.002689361572265625, 0.0, -0.005231022834777832, -2.2649765014648438e-06, -1.33514404296875e-05, -0.00052642822265625, -0.035228729248046875, -0.0018482208251953125, -3.814697265625e-06, 0.0, -0.4632573425769806, -9.655952453613281e-06, -1.1444091796875e-05, -0.6287260055541992, -0.0001430511474609375, -0.02167665958404541, -0.0015014410018920898, -0.0006961822509765625, -3.814697265625e-06, -0.09458577632904053, -0.0005588531494140625, -1.9073486328125e-06, -7.62939453125e-05, -0.0038394927978515625, -1.33514404296875e-05, -0.0018329620361328125, 0.0, -0.25599145889282227, -0.004650463350117207, -7.62939453125e-06, -0.010995864868164062, -0.713200569152832, -2.09808349609375e-05, -0.0003566741943359375, -0.4842853546142578, -0.00017750263214111328, -7.62939453125e-06, -0.48991870880126953, 0.0, -0.000110626220703125, -9.5367431640625e-06, 0.0, -0.18831110000610352, 0.0, -0.0034770965576171875, -0.0024852752685546875, 0.0, 0.0, -0.005268096923828125, 0.0, -0.06804084777832031, -1.9073486328125e-06, -0.010302543640136719, -1.9073486328125e-06, -0.5103193521499634, 0.0, -0.5496673583984375, -0.0009270906448364258, -0.000274658203125, -0.09228324890136719, -0.0002193450927734375, -0.0006427764892578125, -0.0021610260009765625, -7.62939453125e-06, -0.3629207909107208, -0.6089441776275635, -0.02718210592865944, -0.01085662841796875, -7.62939453125e-06, -0.030044561251997948, -0.028918664902448654, -0.001488019130192697, -5.7220458984375e-05, 0.0, -0.00036907196044921875, 0.0]}], "gold_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n        index = self.target.index\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n"}
{"beams": [{"score": -3.2728515740552595, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 51, 130, "Minion", "Has", "and", "<EOS>", 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(MinionHasand(),\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionHasand"}, {"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -0.04238319396972656, 0.0, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, -3.814697265625e-06, -0.0009002685546875, -0.021322250366210938, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.01556801050901413, -0.006008279975503683, -0.011168479919433594, -0.0040149688720703125, -1.1444091796875e-05, -0.0022735595703125, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0011588321067392826, -2.7179718017578125e-05, -0.0002498626708984375, -0.0021686553955078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014758416218683124, -0.08377909660339355, -7.212160562630743e-05, -9.5367431640625e-06, -0.112396240234375, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0015649513807147741, -2.5033725250978023e-05, -8.96453857421875e-05, -0.26808738708496094, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0022546793334186077, -0.028253555297851562, -1.7404405298293568e-05, -3.0517578125e-05, -0.4427976608276367, -0.015224456787109375, -0.1493854522705078, -1.1444091796875e-05, 0.0, -0.0002715587615966797, -3.814697265625e-06, -1.1920928244535389e-07, -0.250274658203125, -0.582606315612793, 0.0, -0.06904223561286926, -0.03705883026123047, -0.9323931932449341, -0.02221369743347168, -0.009217262268066406, 0.0, -0.05887866020202637, -5.996227264404297e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.504753112792969e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.012872695922851562, -1.1920883480343036e-07, 0.0, -7.152543730626348e-06, 0.0, -2.0265579223632812e-06, 0.0]}, {"score": -3.2863961683944964, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.\n            MURLOC))))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -0.04238319396972656, 0.0, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, -3.814697265625e-06, -0.0009002685546875, -0.021322250366210938, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.01556801050901413, -0.006008279975503683, -0.011168479919433594, -0.0040149688720703125, -1.1444091796875e-05, -0.0022735595703125, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0011588321067392826, -2.7179718017578125e-05, -0.0002498626708984375, -0.0021686553955078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014758416218683124, -0.08377909660339355, -7.212160562630743e-05, -9.5367431640625e-06, -0.112396240234375, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0015649513807147741, -2.5033725250978023e-05, -8.96453857421875e-05, -0.26808738708496094, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0022546793334186077, -0.028253555297851562, -1.7404405298293568e-05, -3.0517578125e-05, -0.4427976608276367, -0.015224456787109375, -0.1493854522705078, -1.1444091796875e-05, 0.0, -0.0002715587615966797, -3.814697265625e-06, -1.1920928244535389e-07, -1.5093603134155273, -0.001590728759765625, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -0.06516284495592117, -0.002463696524500847, -8.225431884056889e-06, -0.0001983642578125, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00023090839385986328, 0.0, -0.4086829423904419, -6.4849853515625e-05, -0.0001010894775390625, 0.0, -3.886222475557588e-05, 0.0, 0.0, -1.33514404296875e-05, -0.0002117156982421875, 0.0, 0.0, -3.2543604902457446e-05, 0.0, -2.1457672119140625e-06, 0.0]}, {"score": -3.294379818073814, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 51, 130, "Minion", "Has", "+1/+1", "<EOS>", 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(MinionHas+1/+1(),\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionHas+1/+1"}, {"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -0.04238319396972656, 0.0, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, -3.814697265625e-06, -0.0009002685546875, -0.021322250366210938, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.01556801050901413, -0.006008279975503683, -0.011168479919433594, -0.0040149688720703125, -1.1444091796875e-05, -0.0022735595703125, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0011588321067392826, -2.7179718017578125e-05, -0.0002498626708984375, -0.0021686553955078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014758416218683124, -0.08377909660339355, -7.212160562630743e-05, -9.5367431640625e-06, -0.112396240234375, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0015649513807147741, -2.5033725250978023e-05, -8.96453857421875e-05, -0.26808738708496094, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0022546793334186077, -0.028253555297851562, -1.7404405298293568e-05, -3.0517578125e-05, -0.4427976608276367, -0.015224456787109375, -0.1493854522705078, -1.1444091796875e-05, 0.0, -0.0002715587615966797, -3.814697265625e-06, -1.1920928244535389e-07, -0.250274658203125, -0.582606315612793, 0.0, -0.06904223561286926, -0.03705883026123047, -0.9539214372634888, -0.02221369743347168, -0.009217262268066406, 0.0, -0.05887866020202637, -5.996227264404297e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.504753112792969e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.012872695922851562, -1.1920883480343036e-07, 0.0, -7.152543730626348e-06, 0.0, -2.0265579223632812e-06, 0.0]}, {"score": -3.3506879817825848, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Taunt", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(Taunt())]), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Taunt"}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -0.04238319396972656, 0.0, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, -3.814697265625e-06, -0.0009002685546875, -0.021322250366210938, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.01556801050901413, -0.006008279975503683, -0.011168479919433594, -0.0040149688720703125, -1.1444091796875e-05, -0.0022735595703125, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0011588321067392826, -2.7179718017578125e-05, -0.0002498626708984375, -0.0021686553955078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014758416218683124, -0.08377909660339355, -7.212160562630743e-05, -9.5367431640625e-06, -0.112396240234375, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0015649513807147741, -2.5033725250978023e-05, -8.96453857421875e-05, -1.448598861694336, -1.9073486328125e-06, -0.31779366731643677, -0.00021040250430814922, -0.0479736328125, -0.6763544082641602, -8.0108642578125e-05, -1.9073486328125e-06, -4.26173210144043e-05, -1.9073486328125e-06, 0.0, -0.0001010894775390625, -0.00040435791015625, -0.39290809631347656, 0.0, -0.0005931854248046875, 0.0, -0.07362186908721924, -6.0200487496331334e-05, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -4.7326087951660156e-05, 0.0, 0.0, -7.62939453125e-06, -5.340576171875e-05, 0.0, 0.0, -6.198863957251888e-06, 0.0, -2.0265579223632812e-06, 0.0]}, {"score": -3.578435851364894, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.\n            MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -0.04238319396972656, 0.0, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, -3.814697265625e-06, -0.0009002685546875, -0.021322250366210938, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.01556801050901413, -0.006008279975503683, -0.011168479919433594, -0.0040149688720703125, -1.1444091796875e-05, -0.0022735595703125, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0011588321067392826, -2.7179718017578125e-05, -0.0002498626708984375, -0.0021686553955078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014758416218683124, -0.08377909660339355, -7.212160562630743e-05, -9.5367431640625e-06, -0.112396240234375, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0015649513807147741, -2.5033725250978023e-05, -8.96453857421875e-05, -0.26808738708496094, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0022546793334186077, -0.028253555297851562, -1.7404405298293568e-05, -3.0517578125e-05, -0.4427976608276367, -0.015224456787109375, -0.1493854522705078, -1.1444091796875e-05, 0.0, -0.0002715587615966797, -3.814697265625e-06, -1.1920928244535389e-07, -0.250274658203125, -0.8298101425170898, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.9573284387588501, -0.03296172246336937, -4.410743713378906e-06, -9.5367431640625e-06, -0.0001010894775390625, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.001596689224243164, 0.0, -0.20598995685577393, -3.24249267578125e-05, -0.0004634857177734375, 0.0, -0.001161813735961914, -3.933906555175781e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0003186464309692383, 0.0, 0.0, -7.62939453125e-06, -0.000133514404296875, 0.0, 0.0, -3.635817120084539e-05, 0.0, -2.3841855067985307e-07, 0.0]}, {"score": -3.7588129212792865, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(1))]), MinionSelector(condition=\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -0.04238319396972656, 0.0, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, -3.814697265625e-06, -0.0009002685546875, -0.021322250366210938, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.01556801050901413, -0.006008279975503683, -0.011168479919433594, -0.0040149688720703125, -1.1444091796875e-05, -0.0022735595703125, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0011588321067392826, -2.7179718017578125e-05, -0.0002498626708984375, -0.0021686553955078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014758416218683124, -0.08377909660339355, -7.212160562630743e-05, -9.5367431640625e-06, -0.112396240234375, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0015649513807147741, -2.5033725250978023e-05, -8.96453857421875e-05, -0.26808738708496094, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0022546793334186077, -0.028253555297851562, -1.7404405298293568e-05, -3.0517578125e-05, -1.2911767959594727, -0.00431060791015625, -0.3985576629638672, -9.5367431640625e-06, 0.0, -0.00020140409469604492, -1.9073486328125e-06, 0.0, -8.0108642578125e-05, -0.0001678466796875, -0.31351661682128906, -1.9073486328125e-06, -0.024143218994140625, 0.0, -1.0343025922775269, -0.0015859598061069846, 0.0, -0.00017058849334716797, 0.0, -6.449222564697266e-05, 0.0, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, 0.0, -7.271740287251305e-06, 0.0, -2.0265579223632812e-06, 0.0]}, {"score": -3.8325959618262004, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(1))]), MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "Adjacent"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -0.04238319396972656, 0.0, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, -3.814697265625e-06, -0.0009002685546875, -0.021322250366210938, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.01556801050901413, -0.006008279975503683, -0.011168479919433594, -0.0040149688720703125, -1.1444091796875e-05, -0.0022735595703125, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0011588321067392826, -2.7179718017578125e-05, -0.0002498626708984375, -0.0021686553955078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014758416218683124, -0.08377909660339355, -7.212160562630743e-05, -9.5367431640625e-06, -0.112396240234375, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0015649513807147741, -2.5033725250978023e-05, -8.96453857421875e-05, -0.26808738708496094, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0022546793334186077, -0.028253555297851562, -1.7404405298293568e-05, -3.0517578125e-05, -1.2911767959594727, -0.00431060791015625, -0.3985576629638672, -9.5367431640625e-06, 0.0, -0.00020140409469604492, -1.9073486328125e-06, 0.0, -8.0108642578125e-05, -0.0001678466796875, -0.31351661682128906, -1.9073486328125e-06, -0.024143218994140625, 0.0, -1.1095627546310425, -5.340576171875e-05, -5.960461203358136e-05, 0.0, -0.00021708005806431174, 0.0, 0.0, -9.5367431640625e-06, -5.53131103515625e-05, 0.0, 0.0, -5.8412379075889476e-06, 0.0, -2.0265579223632812e-06, 0.0]}, {"score": -4.0598326894938666, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -3.2463464736938477, 0.0, -0.0002002716064453125, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -0.5614415407180786, -7.62939453125e-06, -4.9591064453125e-05, 0.0, -0.0004671812057495117, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.0009021759033203125, 0.0, -1.1920928244535389e-07, -3.933906555175781e-06, -1.4305104514278355e-06, -6.198873961693607e-06, -1.6689286894688848e-06, -0.00150299072265625, 0.0, -0.15991556644439697, -1.728534698486328e-05, -0.0003719329833984375, -5.7220458984375e-06, -0.005691647529602051, 0.0]}, {"score": -4.183722518837605, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.\n            PIRATE))))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -0.04238319396972656, 0.0, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, -3.814697265625e-06, -0.0009002685546875, -0.021322250366210938, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.01556801050901413, -0.006008279975503683, -0.011168479919433594, -0.0040149688720703125, -1.1444091796875e-05, -0.0022735595703125, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0011588321067392826, -2.7179718017578125e-05, -0.0002498626708984375, -0.0021686553955078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014758416218683124, -0.08377909660339355, -7.212160562630743e-05, -9.5367431640625e-06, -0.112396240234375, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0015649513807147741, -2.5033725250978023e-05, -8.96453857421875e-05, -0.26808738708496094, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0022546793334186077, -0.028253555297851562, -1.7404405298293568e-05, -3.0517578125e-05, -0.4427976608276367, -0.015224456787109375, -0.1493854522705078, -1.1444091796875e-05, 0.0, -0.0002715587615966797, -3.814697265625e-06, -1.1920928244535389e-07, -1.5093603134155273, -0.001590728759765625, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -0.06516284495592117, -0.002463696524500847, -8.225431884056889e-06, -0.0001983642578125, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00023090839385986328, 0.0, -1.3061219453811646, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.00010812281834660098, 0.0, 0.0, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, 0.0, -2.6225747205899097e-05, 0.0, -2.0265579223632812e-06, 0.0]}, {"score": -4.252126230687566, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 51, 130, "Minion", "Has", "+1/+1", "<EOS>", 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(Count(MinionSelector(MinionHas+1/+1(),\n            EnemyPlayer()))))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionHas+1/+1"}, {"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -0.04238319396972656, 0.0, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, -3.814697265625e-06, -0.0009002685546875, -0.021322250366210938, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.01556801050901413, -0.006008279975503683, -0.011168479919433594, -0.0040149688720703125, -1.1444091796875e-05, -0.0022735595703125, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0011588321067392826, -2.7179718017578125e-05, -0.0002498626708984375, -0.0021686553955078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014758416218683124, -0.08377909660339355, -7.212160562630743e-05, -9.5367431640625e-06, -0.112396240234375, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0015649513807147741, -2.5033725250978023e-05, -8.96453857421875e-05, -0.26808738708496094, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0022546793334186077, -0.028253555297851562, -1.7404405298293568e-05, -3.0517578125e-05, -2.593473434448242, -0.00019073486328125, -1.1444091796875e-05, -1.9073486328125e-06, -0.009104094468057156, -2.9802317840221804e-06, -0.0006275177001953125, -0.0036468505859375, -0.0052051544189453125, -8.0108642578125e-05, 0.0, -0.009132608771324158, -9.655952453613281e-06, -5.960462772236497e-07, -0.009447097778320312, -0.0019292831420898438, 0.0, -0.04267823323607445, -0.025822516530752182, -0.6749265193939209, -0.012836453504860401, -0.04126453399658203, 0.0, -0.11060023307800293, -7.939338684082031e-05, 0.0, -0.00075531005859375, 0.0, -0.01843404769897461, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -4.3392181396484375e-05, 0.0, 0.0, -1.71661376953125e-05, -0.0013217926025390625, 0.0, 0.0, -3.099436753473128e-06, 0.0, -2.0265579223632812e-06, 0.0]}, {"score": -5.052565452782453, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -3.2463464736938477, 0.0, -0.0002002716064453125, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.5466262102127075, -3.0517578125e-05, -5.91278076171875e-05, 0.0, -0.0005544424057006836, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.00075531005859375, 0.0, -1.1920928244535389e-07, -3.933906555175781e-06, -1.4305104514278355e-06, -6.5565000113565475e-06, -1.6689286894688848e-06, -0.00148773193359375, 0.0, -0.1676011085510254, -1.919269561767578e-05, -0.0003833770751953125, -5.7220458984375e-06, -0.005584836006164551, 0.0]}, {"score": -5.181391594139647, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -3.2463464736938477, 0.0, -0.0002002716064453125, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.6824828386306763, -0.0039463043212890625, -3.814697265625e-05, 0.0, -0.0005867481231689453, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.00075531005859375, 0.0, -1.1920928244535389e-07, -3.933906555175781e-06, -1.5497195136049413e-06, -6.5565000113565475e-06, -1.6689286894688848e-06, -0.0014801025390625, 0.0, -0.1564793586730957, -1.537799835205078e-05, -0.0003719329833984375, -5.7220458984375e-06, -0.005771756172180176, 0.0]}, {"score": -6.129808614766482, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Attack", "<UNK>", "Than", "<UNK>", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 51, 130, "Minion", "Has", "+1/+1", "<EOS>", 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(\n            Attack<UNK>Than<UNK>(Count(MinionSelector(MinionHas+1/+1(),\n            EnemyPlayer()))), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionHas+1/+1"}, {"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -0.04238319396972656, 0.0, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, -3.814697265625e-06, -0.0009002685546875, -0.021322250366210938, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.01556801050901413, -0.006008279975503683, -0.011168479919433594, -0.0040149688720703125, -1.1444091796875e-05, -0.0022735595703125, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0011588321067392826, -2.7179718017578125e-05, -0.0002498626708984375, -0.0021686553955078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014758416218683124, -0.08377909660339355, -7.212160562630743e-05, -9.5367431640625e-06, -0.112396240234375, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0015649513807147741, -2.5033725250978023e-05, -8.96453857421875e-05, -0.26808738708496094, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0022546793334186077, -0.028253555297851562, -1.7404405298293568e-05, -3.0517578125e-05, -0.4427976608276367, -0.015224456787109375, -0.1493854522705078, -1.1444091796875e-05, 0.0, -0.0002715587615966797, -3.814697265625e-06, -1.1920928244535389e-07, -0.250274658203125, -0.8298101425170898, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.8838468790054321, -0.12943816184997559, -0.0979640856385231, -0.07065486907958984, -0.008975744247436523, -0.0019588470458984375, -0.6916980743408203, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.2829073667526245, -3.933906555175781e-06, -3.814697265625e-05, -0.0020885467529296875, -0.00167083740234375, -1.1444091796875e-05, 0.0, -0.004680054262280464, -3.814697265625e-05, 0.0, -0.09326744079589844, -0.0007753372192382812, 0.0, -0.022388281300663948, -0.022939322516322136, -0.7731317281723022, -0.024588225409388542, -0.015380859375, 0.0, -0.09668612480163574, -7.736682891845703e-05, -1.9073486328125e-06, -0.012441635131835938, -1.9073486328125e-06, -0.5100535154342651, -0.0002576112747192383, 0.0, -1.33514404296875e-05, 0.0, -0.0001531839370727539, 0.0, 0.0, -1.52587890625e-05, -0.0033740997314453125, 0.0, 0.0, -7.748573807475623e-06, 0.0, -2.1457672119140625e-06, 0.0]}, {"score": -6.243795273035737, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Defender", " ", "of", " ", "Argus", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 3, spell_targetable=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}}], "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.002010345458984375, -0.0004119873046875, -1.71661376953125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001510267611593008, -0.0002804994583129883, -1.7523747374070808e-05, -5.9485435485839844e-05, -6.0796710386057384e-06, -0.00041961669921875, -3.0517578125e-05, -9.5367431640625e-06, -3.957567969337106e-05, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -0.03375566005706787, -3.814697265625e-06, -0.00016021728515625, -6.29425048828125e-05, -3.2463464736938477, 0.0, -0.0002002716064453125, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -0.5614415407180786, -7.62939453125e-06, -4.9591064453125e-05, 0.0, -0.0004671812057495117, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.0009021759033203125, 0.0, -1.1920928244535389e-07, -3.933906555175781e-06, -1.4305104514278355e-06, -6.198873961693607e-06, -1.6689286894688848e-06, -0.00150299072265625, 0.0, -2.3463234901428223, -2.3245811462402344e-05, -0.0032339096069335938, -2.86102294921875e-05, -0.0003554821014404297, 0.0]}, {"score": -6.366822253282123, "choice_history": [59, 124, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Defender of Argus", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "DefenderOfArgus", "hole3": "create_minion"}, "score_history": [0.0, -9.5367431640625e-05, -8.332382276421413e-05, -0.04470296949148178, -0.00037222274113446474, -7.748586540401448e-06, 0.0, -3.814697265625e-06, -3.2186455882765586e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.244699478149414, -1.9073486328125e-05, -8.583057933719829e-06, -8.785724639892578e-05, -5.0067901611328125e-05, -2.110004425048828e-05, -1.71661376953125e-05, -1.52587890625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -0.00017559528350830078, 0.0, -0.0006325244903564453, 0.0, -1.3470649719238281e-05, 0.0, -0.00011765954695874825, 0.0, 0.0, -1.52587890625e-05, -4.38690185546875e-05, 0.0, 0.0, -3.576278118089249e-07, -1.311301275563892e-06, -6.5565000113565475e-06, -2.50339189733495e-06, -0.010469436645507812, 0.0, -0.060391902923583984, -5.7220458984375e-06, -0.0006237030029296875, -1.1444091796875e-05, -0.0040111541748046875, 0.0]}], "gold_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Taunt()), Buff\n            (ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}
{"beams": [{"score": -1.2621978419670015, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "overload", "<EOS>", 31, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -0.2243415117263794, -3.814697265625e-05, -0.03175926208496094, -1.9073486328125e-06, -0.14190387725830078, -0.001659393310546875, -0.34063720703125, -0.0061435699462890625, 0.0, -0.011280298233032227, 0.0, -0.0005130767822265625, -7.62939453125e-06, -0.008554458618164062, -2.384185791015625e-06, -0.0003892183303833008, -5.5193893786054105e-05, 0.0, -0.2980978488922119, 0.0]}, {"score": -2.3260482447990327, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "overload", "<EOS>", 31, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -0.2243415117263794, -3.814697265625e-05, -0.03175926208496094, -1.9073486328125e-06, -0.14190387725830078, -0.001659393310546875, -0.34063720703125, -0.0061435699462890625, 0.0, -0.011280298233032227, 0.0, -0.0005130767822265625, -7.62939453125e-06, -0.008554458618164062, -2.384185791015625e-06, -0.0003892183303833008, -5.5193893786054105e-05, 0.0, -1.3619482517242432, 0.0]}, {"score": -2.858639349310117, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "overload", "<EOS>", 31, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.LEGENDARY, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -1.9757853746414185, -3.62396240234375e-05, -0.12980270385742188, 0.0, -0.062294960021972656, -0.00012969970703125, -0.1542673110961914, -0.015089035034179688, 0.0, -0.009367704391479492, 0.0, -0.000629425048828125, -5.7220458984375e-06, -0.01123809814453125, -2.384185791015625e-06, -0.0003968477249145508, -4.82797586300876e-05, 0.0, -0.3027327060699463, 0.0]}, {"score": -3.0385498898872285, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "overload", "<EOS>", 32, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=1)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template18"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -0.2243415117263794, -3.814697265625e-05, -0.03175926208496094, -1.9073486328125e-06, -0.14190387725830078, -0.001659393310546875, -1.966965675354004, -0.14617347717285156, 0.0, -0.011258244514465332, 0.0, -0.0008449554443359375, -5.7220458984375e-06, -0.00580596923828125, -2.384185791015625e-06, -0.0003377199172973633, -6.115435826359317e-05, 0.0, -0.3105776309967041, 0.0]}, {"score": -3.9045148986265232, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "overload", "<EOS>", 31, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.LEGENDARY, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -1.9757853746414185, -3.62396240234375e-05, -0.12980270385742188, 0.0, -0.062294960021972656, -0.00012969970703125, -0.1542673110961914, -0.015089035034179688, 0.0, -0.009367704391479492, 0.0, -0.000629425048828125, -5.7220458984375e-06, -0.01123809814453125, -2.384185791015625e-06, -0.0003968477249145508, -4.82797586300876e-05, 0.0, -1.3486082553863525, 0.0]}, {"score": -3.9869497913709893, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "overload", "<EOS>", 31, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -2.7019777297973633, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.015006065368652344, -0.00026035308837890625, -3.814697265625e-06, -4.76837158203125e-05, -0.0001697540283203125, -0.2700580358505249, -9.5367431640625e-06, -0.4752788543701172, -1.9073486328125e-06, -0.10609722137451172, -0.000247955322265625, -0.07831764221191406, -0.004871368408203125, 0.0, -0.01802504062652588, 0.0, -0.0004329681396484375, -2.288818359375e-05, -0.008495330810546875, -2.1457672119140625e-06, -0.00028252601623535156, -3.504753112792969e-05, 0.0, -0.28859543800354004, 0.0]}, {"score": -4.054483880365744, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "overload", "<EOS>", 32, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=1)\n\n    def create_minion(self, player):\n        return Weapon(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template18"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -0.2243415117263794, -3.814697265625e-05, -0.03175926208496094, -1.9073486328125e-06, -0.14190387725830078, -0.001659393310546875, -1.966965675354004, -0.14617347717285156, 0.0, -0.011258244514465332, 0.0, -0.0008449554443359375, -5.7220458984375e-06, -0.00580596923828125, -2.384185791015625e-06, -0.0003377199172973633, -6.115435826359317e-05, 0.0, -1.3265116214752197, 0.0]}, {"score": -4.3749897378333955, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "overload", "<EOS>", 31, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.088979721069336, -0.0013265609741210938, -9.34600830078125e-05, -1.9073486328125e-05, -0.0002002716064453125, -0.0892859697341919, -2.288818359375e-05, -0.12428951263427734, -1.9073486328125e-06, -0.23179912567138672, -0.0017843246459960938, -0.4141654968261719, -0.0051593780517578125, 0.0, -0.01097118854522705, 0.0, -0.000476837158203125, -7.62939453125e-06, -0.008211135864257812, -2.384185791015625e-06, -0.0004025697708129883, -5.5193893786054105e-05, 0.0, -0.30031609535217285, 0.0]}, {"score": -4.570632328356162, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "overload", "<EOS>", 31, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.3324880599975586, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -0.000179290771484375, -0.05920219421386719, -1.71661376953125e-05, -0.04031848907470703, -1.9073486328125e-06, -0.3079242706298828, -0.00250244140625, -0.40844058990478516, -0.004795074462890625, 0.0, -0.01109921932220459, 0.0, -0.00052642822265625, -7.62939453125e-06, -0.009033203125, -2.384185791015625e-06, -0.0004197359085083008, -5.5193893786054105e-05, 0.0, -0.29617905616760254, 0.0]}, {"score": -4.839444746343808, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "overload", "<EOS>", 31, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -3.803816795349121, -1.9073486328125e-06, -0.29041194915771484, 0.0, -0.06151008605957031, -7.62939453125e-05, -0.14439773559570312, -0.01894664764404297, 0.0, -0.007441878318786621, 0.0, -0.0004367828369140625, -5.7220458984375e-06, -0.013189315795898438, -2.384185791015625e-06, -0.0003567934036254883, -4.8756595788290724e-05, 0.0, -0.3019888401031494, 0.0]}, {"score": -5.025711645449057, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "overload", "<EOS>", 31, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -4.099790096282959, -5.7220458984375e-06, -0.13688373565673828, 0.0, -0.07465648651123047, -9.1552734375e-05, -0.17786598205566406, -0.015405654907226562, 0.0, -0.008250713348388672, 0.0, -0.000396728515625, -5.7220458984375e-06, -0.009136199951171875, -2.384185791015625e-06, -0.0003644227981567383, -4.911422001896426e-05, 0.0, -0.30599427223205566, 0.0]}, {"score": -5.235642949408877, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "buffs", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 165, 41, 89, 24, 112, "Count", "<EOS>", 164, 51, 130, "Card", "Selector", "<EOS>", 58, 149, 78, 32, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, buffs=[Buff(ManaChange(Count(CardSelector()),\n            -1))])\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "CardSelector"}], "func": {"_type": "Name", "id": "Count"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}], "func": {"_type": "Name", "id": "Buff"}}]}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -0.2243415117263794, -3.814697265625e-05, -0.03175926208496094, -1.9073486328125e-06, -3.012345314025879, -3.24249267578125e-05, -0.039981842041015625, -0.0009136199951171875, -0.03132057189941406, -0.017179489135742188, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.02247333526611328, -1.9073486328125e-06, -0.001285552978515625, -0.03755950927734375, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -0.0026499032974243164, -0.0037670088931918144, -0.018294334411621094, -0.01192474365234375, -0.11040019989013672, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -0.02014601230621338, -0.0001659393310546875, -0.002994537353515625, -0.8704080581665039, -5.7220458984375e-05, -0.15108706057071686, -0.017703533172607422, 0.0, -0.312835693359375, -0.004630088806152344, -0.000579833984375, -0.00273895263671875, -0.0057501764968037605, -3.814697265625e-05, -0.002926749410107732, 0.0, -7.62939453125e-06, -0.0002460479736328125, -1.33514404296875e-05, -9.298297300119884e-06, -0.0004227161407470703, -0.00023829936981201172, 0.0, -0.07946479320526123, 0.0]}, {"score": -5.586250984592418, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "combo", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, combo=Battlecry(Kill(), MinionSelector(IsType\n            (MINION_TYPE.PIRATE), BothPlayer())))\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -0.2243415117263794, -3.814697265625e-05, -0.03175926208496094, -1.9073486328125e-06, -2.821417808532715, 0.0, -0.01021575927734375, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001163482666015625, -3.4332275390625e-05, -0.00223541259765625, -0.25249385833740234, -3.814697265625e-06, -0.42252469062805176, -2.2053680368117057e-05, -0.000110626220703125, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.5277297496795654, -1.71661376953125e-05, -1.71661376953125e-05, -0.0023746490478515625, -0.4638671875, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.009037017822265625, -0.009107232093811035, -4.38690185546875e-05, -4.1961669921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -0.000156402587890625, 0.0, -0.0001583099365234375, -3.814697265625e-06, -0.32959461212158203, -3.814697265625e-06, -0.00628662109375, -3.814697265625e-06, -0.13009357452392578, -5.7220458984375e-06, 0.0, -0.0553436279296875, 0.0, -0.009519100189208984, 0.0, -1.52587890625e-05, -0.00011444091796875, -9.5367431640625e-06, -0.0001223017170559615, -0.00043582916259765625, -0.0011151842772960663, 0.0, -0.07873868942260742, 0.0]}, {"score": -8.114632621213325, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "overload", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", 51, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=(Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ManaChange(2))]), MinionSelector(EnemyPlayer())),\n            RandomPicker()))\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaChange"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Template10", "hole0": "RandomPicker"}]}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -0.2243415117263794, -3.814697265625e-05, -0.03175926208496094, -1.9073486328125e-06, -0.14190387725830078, -0.001659393310546875, -2.623044967651367, -0.0034761428833007812, -0.0034656524658203125, -0.0019617080688476562, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0012456178665161133, -0.0002651214599609375, -5.7220458984375e-06, -0.35125255584716797, -4.38690185546875e-05, -7.62939453125e-06, -2.09808349609375e-05, -0.021319150924682617, -0.019108150154352188, -0.014599800109863281, -0.00095367431640625, -1.71661376953125e-05, -0.1886892318725586, -5.91278076171875e-05, -7.43865966796875e-05, -7.62939453125e-06, 0.0, -0.006153583526611328, -8.785724639892578e-05, -8.0108642578125e-05, -0.21383285522460938, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -0.954758882522583, -0.1353064775466919, -0.0004837512969970703, -4.1961669921875e-05, -0.0051021575927734375, -4.9591064453125e-05, -3.814697265625e-06, 0.0, 0.0, -0.00039005279541015625, -3.933906555175781e-06, -1.9073486328125e-05, -0.11807823181152344, 0.0, 0.0, -0.000148773193359375, -0.28571975231170654, -0.004119605757296085, -0.036246538162231445, -0.1427288055419922, -0.28588008880615234, -0.0047473907470703125, -0.014476776123046875, -1.9073486328125e-06, 0.0, -0.037347402423620224, -1.71661376953125e-05, -3.62396240234375e-05, -1.301443099975586, -0.011800765991210938, -9.5367431640625e-06, -0.027395842596888542, -0.00020229816436767578, 0.0, -0.057335853576660156, -2.86102294921875e-05, -0.03359198570251465, -0.00671970471739769, 0.0, -0.4928990602493286, 0.0, -0.000248551310505718, 0.0, -9.5367431640625e-06, -6.29425048828125e-05, -2.47955322265625e-05, -2.670266076165717e-05, -0.00020420551300048828, -0.001145005226135254, 0.0, -0.10943269729614258, 0.0]}, {"score": -10.068246979550615, "choice_history": [59, 124, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Doomhammer", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "overload", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 47, 114, "Null", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=(Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ManaChange(2))]), MinionSelector(Null, BothPlayer())),\n            Battlecry(Kill(), MinionSelector(EnemyPlayer()))))\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ManaChange"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 8, "hole1": 2, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Doomhammer", "hole3": "create_minion"}, "score_history": [0.0, -0.000171661376953125, -0.0046306755393743515, -1.1324880688334815e-05, -3.886147169396281e-05, -9.655950634623878e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0023212432861328125, -0.011369705200195312, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.52587890625e-05, -0.07848930358886719, -1.9073486328125e-06, -1.3112935448589269e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -0.000209808349609375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.09885978698730469, -0.000396728515625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -0.2243415117263794, -3.814697265625e-05, -0.03175926208496094, -1.9073486328125e-06, -0.14190387725830078, -0.001659393310546875, -2.623044967651367, -0.0034761428833007812, -0.0034656524658203125, -0.0019617080688476562, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0012456178665161133, -0.0002651214599609375, -5.7220458984375e-06, -0.35125255584716797, -4.38690185546875e-05, -7.62939453125e-06, -2.09808349609375e-05, -0.021319150924682617, -0.019108150154352188, -0.014599800109863281, -0.00095367431640625, -1.71661376953125e-05, -0.1886892318725586, -5.91278076171875e-05, -7.43865966796875e-05, -7.62939453125e-06, 0.0, -0.006153583526611328, -8.785724639892578e-05, -8.0108642578125e-05, -0.21383285522460938, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -0.954758882522583, -0.1353064775466919, -0.0004837512969970703, -4.1961669921875e-05, -0.0051021575927734375, -4.9591064453125e-05, -3.814697265625e-06, 0.0, 0.0, -0.00039005279541015625, -3.933906555175781e-06, -1.9073486328125e-05, -0.11807823181152344, 0.0, 0.0, -0.000148773193359375, -0.28571975231170654, -0.004119605757296085, -0.036246538162231445, -0.1427288055419922, -0.28588008880615234, -0.0047473907470703125, -0.014476776123046875, -1.9073486328125e-06, 0.0, -0.037347402423620224, -1.71661376953125e-05, -3.62396240234375e-05, -0.3178443908691406, -0.30890750885009766, -0.00045013427734375, -0.00024092040257528424, -0.00019276142120361328, -0.0001125335693359375, 0.0, -0.586336612701416, -7.62939453125e-06, 0.0, -0.22352313995361328, -0.000339508056640625, -1.1444091796875e-05, 0.0, -0.3998671770095825, -0.0001201629638671875, -5.7220458984375e-06, -0.5363712310791016, 0.0, -0.42280495166778564, -4.3034549889853224e-05, -0.12390899658203125, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.6758145093917847, -1.33514404296875e-05, -3.814697265625e-06, -0.235931396484375, -0.0008792877197265625, -9.5367431640625e-06, -0.031015396118164062, -8.404254913330078e-05, 0.0, -0.04284858703613281, 0.0, -0.00030159950256347656, 0.0, -9.5367431640625e-06, -1.9073486328125e-05, -2.288818359375e-05, -1.6927631804719567e-05, -0.00018131732940673828, -0.0012401342391967773, 0.0, -0.08669531345367432, 0.0]}], "gold_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, buffs=[Buff(Windfury())])\n"}
{"beams": [{"score": -2.8254357807789674, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -0.9200440645217896, 0.0, -0.0002307891845703125, -5.53131103515625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.09808349609375e-05, -0.0001850128173828125, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00038909912109375, -1.9073486328125e-06, -6.330013275146484e-05, 0.0, -0.08837342262268066, 0.0, -1.52587890625e-05, 0.0, -4.041194188175723e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -2.6225903638987802e-05, -1.9311904907226562e-05, -1.5457515716552734, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -0.00012134880671510473, -1.919269561767578e-05, -9.179100743494928e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0044097900390625, -0.000194549560546875, -1.33514404296875e-05, -3.814697265625e-06, -0.009799957275390625, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -2.002716064453125e-05, 0.0, -0.00042584838229231536, -2.0265558760002023e-06, -8.96453857421875e-05, -0.1221628189086914, -0.0019283294677734375, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0005550384521484375, 0.0, -0.0002458094386383891, 0.0, -0.000118255615234375, -0.00070953369140625, -2.86102294921875e-05, 0.0, -0.11381709575653076, -0.00016009790124371648]}, {"score": -2.906803929522617, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -0.9200440645217896, 0.0, -0.0002307891845703125, -5.53131103515625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.09808349609375e-05, -0.0001850128173828125, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00038909912109375, -1.9073486328125e-06, -6.330013275146484e-05, 0.0, -0.08837342262268066, 0.0, -1.52587890625e-05, 0.0, -4.041194188175723e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -2.6225903638987802e-05, -1.9311904907226562e-05, -1.012075424194336, -1.71661376953125e-05, -3.814697265625e-06, -8.392333984375e-05, -7.62939453125e-06, -8.999962301459163e-05, -4.076957702636719e-05, -8.940672159951646e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.48385143280029297, -6.67572021484375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0021343231201171875, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.990795135498047e-05, 0.0, -0.0002568667696323246, -2.9802276912960224e-06, -6.4849853515625e-05, -0.19219398498535156, -0.0023651123046875, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00048065185546875, 0.0, -0.00023329244868364185, 0.0, -0.000118255615234375, -0.0006847381591796875, -3.24249267578125e-05, 0.0, -0.12756133079528809, -0.00017166123143397272, -0.021221160888671875, -0.0003070831298828125, -0.0019683837890625, 0.0, -0.01148998737335205, 0.0, -0.024406909942626953, -7.62939453125e-06]}, {"score": -3.0841906290950973, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -1.1718865633010864, 0.0, -7.82012939453125e-05, -8.20159912109375e-05, 0.0, -3.0517578125e-05, 0.0, -2.09808349609375e-05, -0.0001430511474609375, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.283687591552734e-05, 0.0, -0.09810197353363037, 0.0, -1.52587890625e-05, 0.0, -4.088877540198155e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -2.825245974236168e-05, -1.7404556274414062e-05, -1.5427885055541992, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.9591064453125e-05, -0.0001221831771545112, -1.9311904907226562e-05, -9.059892363438848e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0044231414794921875, -0.00019073486328125, -1.33514404296875e-05, -3.814697265625e-06, -0.009777069091796875, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -2.002716064453125e-05, 0.0, -0.000428231549449265, -2.0265558760002023e-06, -8.96453857421875e-05, -0.1224517822265625, -0.001926422119140625, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0005550384521484375, 0.0, -0.0002458094386383891, 0.0, -0.000118255615234375, -0.0007114410400390625, -2.86102294921875e-05, 0.0, -0.11378562450408936, -0.00016009790124371648]}, {"score": -3.1710964077938897, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -1.1718865633010864, 0.0, -7.82012939453125e-05, -8.20159912109375e-05, 0.0, -3.0517578125e-05, 0.0, -2.09808349609375e-05, -0.0001430511474609375, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.283687591552734e-05, 0.0, -0.09810197353363037, 0.0, -1.52587890625e-05, 0.0, -4.088877540198155e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -2.825245974236168e-05, -1.7404556274414062e-05, -1.008784294128418, -1.9073486328125e-05, -3.814697265625e-06, -8.392333984375e-05, -7.62939453125e-06, -9.095321729546413e-05, -4.076957702636719e-05, -9.059880540007725e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.48876094818115234, -6.67572021484375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.002132415771484375, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.990795135498047e-05, 0.0, -0.00025770103093236685, -2.9802276912960224e-06, -6.4849853515625e-05, -0.19321155548095703, -0.0023593902587890625, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00048065185546875, 0.0, -0.00023329244868364185, 0.0, -0.000118255615234375, -0.0006847381591796875, -3.24249267578125e-05, 0.0, -0.1275622844696045, -0.00017166123143397272, -0.021198272705078125, -0.0003070831298828125, -0.001987457275390625, 0.0, -0.0117112398147583, 0.0, -0.024380207061767578, -7.62939453125e-06]}, {"score": -4.042927525452647, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -2.178821563720703, 0.0, -0.000392913818359375, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -2.09808349609375e-05, -0.0001544952392578125, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000438690185546875, -1.9073486328125e-06, -7.092952728271484e-05, 0.0, -0.09712910652160645, 0.0, -1.52587890625e-05, 0.0, -4.088877540198155e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -2.8133252271800302e-05, -1.7404556274414062e-05, -1.4947175979614258, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.14984130859375e-05, -0.00012051443627569824, -1.919269561767578e-05, -8.940683983382769e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0044536590576171875, -0.00019073486328125, -1.33514404296875e-05, -3.814697265625e-06, -0.009805679321289062, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -2.002716064453125e-05, 0.0, -0.000429065665230155, -2.0265558760002023e-06, -8.96453857421875e-05, -0.12292957305908203, -0.0019254684448242188, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0005550384521484375, 0.0, -0.0002458094386383891, 0.0, -0.000118255615234375, -0.0007114410400390625, -2.86102294921875e-05, 0.0, -0.11381042003631592, -0.00016009790124371648]}, {"score": -4.199029225136506, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -2.416200637817383, 0.0, -0.0002880096435546875, -6.4849853515625e-05, 0.0, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.0001392364501953125, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00048828125, -1.9073486328125e-06, -7.855892181396484e-05, 0.0, -0.10388326644897461, 0.0, -1.52587890625e-05, 0.0, -3.8743008190067485e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -2.694117938517593e-05, -1.7404556274414062e-05, -1.4101762771606445, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.53131103515625e-05, -0.00012039523426210508, -1.9311904907226562e-05, -8.821474693831988e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.004299163818359375, -0.000186920166015625, -1.33514404296875e-05, -3.814697265625e-06, -0.009397506713867188, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -2.002716064453125e-05, 0.0, -0.00043847921187989414, -2.0265558760002023e-06, -9.1552734375e-05, -0.12017822265625, -0.0019330978393554688, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.000553131103515625, 0.0, -0.00024569022934883833, 0.0, -0.000118255615234375, -0.00070953369140625, -2.86102294921875e-05, 0.0, -0.11365878582000732, -0.00016021711053326726]}, {"score": -4.20197018327152, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -2.178821563720703, 0.0, -0.000392913818359375, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -2.09808349609375e-05, -0.0001544952392578125, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000438690185546875, -1.9073486328125e-06, -7.092952728271484e-05, 0.0, -0.09712910652160645, 0.0, -1.52587890625e-05, 0.0, -4.088877540198155e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -2.8133252271800302e-05, -1.7404556274414062e-05, -1.022958755493164, -1.9073486328125e-05, -3.814697265625e-06, -8.392333984375e-05, -7.62939453125e-06, -9.10724193090573e-05, -4.076957702636719e-05, -8.940672159951646e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.497833251953125, -6.67572021484375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0021419525146484375, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.990795135498047e-05, 0.0, -0.00025770103093236685, -2.9802276912960224e-06, -6.4849853515625e-05, -0.19434261322021484, -0.0023565292358398438, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0004787445068359375, 0.0, -0.00023329244868364185, 0.0, -0.000118255615234375, -0.0006866455078125, -3.24249267578125e-05, 0.0, -0.12761855125427246, -0.00017166123143397272, -0.021238327026367188, -0.00030517578125, -0.002002716064453125, 0.0, -0.011854290962219238, 0.0, -0.024372458457946777, -7.62939453125e-06]}, {"score": -4.455846867744263, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -2.416200637817383, 0.0, -0.0002880096435546875, -6.4849853515625e-05, 0.0, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.0001392364501953125, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00048828125, -1.9073486328125e-06, -7.855892181396484e-05, 0.0, -0.10388326644897461, 0.0, -1.52587890625e-05, 0.0, -3.8743008190067485e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -2.694117938517593e-05, -1.7404556274414062e-05, -1.0468244552612305, -1.9073486328125e-05, -3.814697265625e-06, -8.392333984375e-05, -7.62939453125e-06, -9.274120384361595e-05, -4.267692565917969e-05, -8.821463779895566e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.49051952362060547, -6.4849853515625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00205230712890625, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.990795135498047e-05, 0.0, -0.0002638984005898237, -2.9802276912960224e-06, -6.67572021484375e-05, -0.18740272521972656, -0.0023756027221679688, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0004787445068359375, 0.0, -0.0002331732539460063, 0.0, -0.000118255615234375, -0.000682830810546875, -3.24249267578125e-05, 0.0, -0.12732481956481934, -0.00017189965001307428, -0.021318435668945312, -0.0003032684326171875, -0.002033233642578125, 0.0, -0.012284398078918457, 0.0, -0.024361014366149902, -7.62939453125e-06]}, {"score": -4.678752014320786, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>", 76, 145, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n        game.other_player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -0.9200440645217896, 0.0, -0.0002307891845703125, -5.53131103515625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.09808349609375e-05, -0.0001850128173828125, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00038909912109375, -1.9073486328125e-06, -6.330013275146484e-05, 0.0, -0.08837342262268066, 0.0, -1.52587890625e-05, 0.0, -4.041194188175723e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -2.6225903638987802e-05, -1.9311904907226562e-05, -1.7318172454833984, -0.0004596710205078125, -5.7220458984375e-06, -7.62939453125e-06, -2.288818359375e-05, -6.0319198382785544e-05, -7.987022399902344e-06, -7.867804924899247e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.05275535583496094, -0.000202178955078125, -1.52587890625e-05, 0.0, -0.000919342041015625, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.2768972485209815e-05, 0.0, -0.0003153814759571105, -3.3378546504536644e-06, -4.76837158203125e-05, -0.2612619400024414, -0.0019044876098632812, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0004711151123046875, 0.0, -0.00024950492661446333, 0.0, -0.0001220703125, -0.00070953369140625, -2.86102294921875e-05, 0.0, -0.13518881797790527, -0.00015437588444910944, -0.3810110092163086, -0.0013885498046875, -0.0067501068115234375, 0.0, -0.0818777084350586, 0.0, -0.024106740951538086, -5.7220458984375e-06, -0.0005197525024414062, -0.09624862670898438, -0.06336021423339844, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -0.6605424880981445, 0.0, -0.08326756954193115, 0.0, -0.06793451309204102, -0.00012612342834472656]}, {"score": -4.926655816787459, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -0.9200440645217896, 0.0, -0.0002307891845703125, -5.53131103515625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.09808349609375e-05, -0.0001850128173828125, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00038909912109375, -1.9073486328125e-06, -6.330013275146484e-05, 0.0, -0.08837342262268066, 0.0, -1.52587890625e-05, 0.0, -4.041194188175723e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -2.6225903638987802e-05, -1.9311904907226562e-05, -1.012075424194336, -1.71661376953125e-05, -3.814697265625e-06, -8.392333984375e-05, -7.62939453125e-06, -8.999962301459163e-05, -4.076957702636719e-05, -8.940672159951646e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.9700403213500977, -3.814697265625e-06, -7.62939453125e-06, -0.08372211456298828, -8.58306884765625e-05, -0.01940583810210228, -2.1457672119140625e-06, -0.7684745788574219, -0.004169464111328125, -7.62939453125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.028964996337890625, 0.0, -0.002369999885559082, -1.58548318722751e-05, -0.0004044756351504475, 0.0, -0.12593764066696167, -5.841255187988281e-06, -0.006549835205078125, -0.0002593994140625, -9.5367431640625e-06, -0.0002593994140625, -0.0005092620849609375, 0.0, -0.00020599365234375, -1.9073486328125e-06, -2.491474151611328e-05, 0.0, -0.8069491386413574, 0.0, -1.71661376953125e-05, -0.004006385803222656, -0.000469207763671875, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.0017528533935546875, 0.0, -0.00035607797326520085, -1.1920928244535389e-07, -0.0001068115234375, -0.00032806396484375, -1.1444091796875e-05, 0.0, -0.06371259689331055, -0.0003433224919717759]}, {"score": -4.959768960146981, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>", 76, 145, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n        self.target.<UNK>()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}, {"hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -0.9200440645217896, 0.0, -0.0002307891845703125, -5.53131103515625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.09808349609375e-05, -0.0001850128173828125, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00038909912109375, -1.9073486328125e-06, -6.330013275146484e-05, 0.0, -0.08837342262268066, 0.0, -1.52587890625e-05, 0.0, -4.041194188175723e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -2.6225903638987802e-05, -1.9311904907226562e-05, -1.7318172454833984, -0.0004596710205078125, -5.7220458984375e-06, -7.62939453125e-06, -2.288818359375e-05, -6.0319198382785544e-05, -7.987022399902344e-06, -7.867804924899247e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.05275535583496094, -0.000202178955078125, -1.52587890625e-05, 0.0, -0.000919342041015625, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.2768972485209815e-05, 0.0, -0.0003153814759571105, -3.3378546504536644e-06, -4.76837158203125e-05, -0.2612619400024414, -0.0019044876098632812, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0004711151123046875, 0.0, -0.00024950492661446333, 0.0, -0.0001220703125, -0.00070953369140625, -2.86102294921875e-05, 0.0, -0.13518881797790527, -0.00015437588444910944, -0.3810110092163086, -0.0013885498046875, -0.0067501068115234375, 0.0, -0.0818777084350586, 0.0, -0.024106740951538086, -5.7220458984375e-06, -0.0005197525024414062, -0.09624862670898438, -0.06336021423339844, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -0.7304315567016602, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.36233651638031006, -1.4662729881820269e-05]}, {"score": -4.99989015756281, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>", 76, 145, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n        game.other_player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -1.1718865633010864, 0.0, -7.82012939453125e-05, -8.20159912109375e-05, 0.0, -3.0517578125e-05, 0.0, -2.09808349609375e-05, -0.0001430511474609375, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.283687591552734e-05, 0.0, -0.09810197353363037, 0.0, -1.52587890625e-05, 0.0, -4.088877540198155e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -2.825245974236168e-05, -1.7404556274414062e-05, -1.7831411361694336, -0.000499725341796875, -5.7220458984375e-06, -7.62939453125e-06, -2.288818359375e-05, -6.0319198382785544e-05, -7.987022399902344e-06, -7.987013304955326e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.05415821075439453, -0.0002040863037109375, -1.52587890625e-05, 0.0, -0.00091552734375, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.2768972485209815e-05, 0.0, -0.0003163348592352122, -3.3378546504536644e-06, -4.76837158203125e-05, -0.26160335540771484, -0.001903533935546875, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0004711151123046875, 0.0, -0.00024950492661446333, 0.0, -0.0001220703125, -0.0007076263427734375, -2.86102294921875e-05, 0.0, -0.1349475383758545, -0.00015425667515955865, -0.38826847076416016, -0.0013980865478515625, -0.00677490234375, 0.0, -0.08269500732421875, 0.0, -0.02406775951385498, -5.7220458984375e-06, -0.0005235671997070312, -0.09737396240234375, -0.06290435791015625, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -0.6590347290039062, 0.0, -0.08292520046234131, 0.0, -0.0678476095199585, -0.00012612342834472656]}, {"score": -5.267998599480812, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "wrath", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), wrath)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "wrath"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -0.9200440645217896, 0.0, -0.0002307891845703125, -5.53131103515625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.09808349609375e-05, -0.0001850128173828125, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00038909912109375, -1.9073486328125e-06, -6.330013275146484e-05, 0.0, -0.08837342262268066, 0.0, -1.52587890625e-05, 0.0, -4.041194188175723e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -2.6225903638987802e-05, -1.9311904907226562e-05, -1.5457515716552734, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -0.00012134880671510473, -1.919269561767578e-05, -9.179100743494928e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0044097900390625, -0.000194549560546875, -1.33514404296875e-05, -3.814697265625e-06, -0.009799957275390625, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -2.002716064453125e-05, 0.0, -0.00042584838229231536, -2.0265558760002023e-06, -8.96453857421875e-05, -0.1221628189086914, -0.0019283294677734375, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0005550384521484375, 0.0, -0.0002458094386383891, 0.0, -0.000118255615234375, -0.00070953369140625, -2.86102294921875e-05, 0.0, -2.5564615726470947, -7.843971252441406e-05]}, {"score": -5.5636288088081045, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 71, 99, 20, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 12, 164, 47, 114, "Null", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target is not Null:\n            self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"_type": "If", "body": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "IsNot"}]}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -0.9200440645217896, 0.0, -0.0002307891845703125, -5.53131103515625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.09808349609375e-05, -0.0001850128173828125, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00038909912109375, -1.9073486328125e-06, -6.330013275146484e-05, 0.0, -0.08837342262268066, 0.0, -1.52587890625e-05, 0.0, -4.041194188175723e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -2.6225903638987802e-05, -1.9311904907226562e-05, -1.7318172454833984, -0.0004596710205078125, -5.7220458984375e-06, -7.62939453125e-06, -2.288818359375e-05, -6.0319198382785544e-05, -7.987022399902344e-06, -7.867804924899247e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.05275535583496094, -0.000202178955078125, -1.52587890625e-05, 0.0, -0.000919342041015625, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.2768972485209815e-05, 0.0, -0.0003153814759571105, -3.3378546504536644e-06, -4.76837158203125e-05, -0.2612619400024414, -0.0019044876098632812, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0004711151123046875, 0.0, -0.00024950492661446333, 0.0, -0.0001220703125, -0.00070953369140625, -2.86102294921875e-05, 0.0, -0.13518881797790527, -0.00015437588444910944, -1.1714286804199219, -0.003871917724609375, -0.0005931854248046875, -1.33514404296875e-05, -0.008455276489257812, -1.9073486328125e-06, -0.019502639770507812, 0.0, -0.0031185150146484375, 0.0, -0.0009272098541259766, 0.0, -0.0117034912109375, -0.05382537841796875, -2.288818359375e-05, -0.01578235626220703, -0.00130462646484375, -0.00041740044252946973, -0.0004901885986328125, -0.09976863861083984, -8.0108642578125e-05, -0.048302650451660156, -0.020008087158203125, -1.9073486328125e-06, -0.0044078826904296875, 0.0, -3.0517578125e-05, 0.0, -6.175033922772855e-05, 0.0, -0.0019551697187125683, -2.3841855067985307e-07, -6.29425048828125e-05, -0.00018310546875, -0.0012722015380859375, -2.6702880859375e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00136566162109375, 0.0, -0.00038802612107247114, -1.1920928244535389e-07, -0.000194549560546875, -0.0004901885986328125, -0.00018310546875, -3.814697265625e-06, -0.03525412082672119, -0.0004233119252603501, -0.518061637878418, -0.03968048095703125, -0.0148162841796875, 0.0, -0.23830044269561768, 0.0, -0.03526186943054199, -1.9073486328125e-06]}, {"score": -5.877294441920682, "choice_history": [59, 126, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Earth", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 71, 99, 20, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 12, 164, 47, 114, "Null", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target is not Null:\n            self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"_type": "If", "body": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "IsNot"}]}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "EarthShock", "hole3": "use"}, "score_history": [-0.0002002716064453125, -6.4849853515625e-05, -2.3841855067985307e-07, -7.664863369427621e-05, -7.987022399902344e-06, -3.5762423067353666e-07, -4.410743713378906e-06, -2.622604142743512e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000141143798828125, -2.6702880859375e-05, -3.814697265625e-06, -0.01424407958984375, -5.7220458984375e-06, -8.20159912109375e-05, -4.410734163684538e-06, -7.355213165283203e-05, -4.768370445162873e-07, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -2.193450927734375e-05, -1.1920928244535389e-07, -1.1718865633010864, 0.0, -7.82012939453125e-05, -8.20159912109375e-05, 0.0, -3.0517578125e-05, 0.0, -2.09808349609375e-05, -0.0001430511474609375, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.283687591552734e-05, 0.0, -0.09810197353363037, 0.0, -1.52587890625e-05, 0.0, -4.088877540198155e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -2.825245974236168e-05, -1.7404556274414062e-05, -1.7831411361694336, -0.000499725341796875, -5.7220458984375e-06, -7.62939453125e-06, -2.288818359375e-05, -6.0319198382785544e-05, -7.987022399902344e-06, -7.987013304955326e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.05415821075439453, -0.0002040863037109375, -1.52587890625e-05, 0.0, -0.00091552734375, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.2768972485209815e-05, 0.0, -0.0003163348592352122, -3.3378546504536644e-06, -4.76837158203125e-05, -0.26160335540771484, -0.001903533935546875, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0004711151123046875, 0.0, -0.00024950492661446333, 0.0, -0.0001220703125, -0.0007076263427734375, -2.86102294921875e-05, 0.0, -0.1349475383758545, -0.00015425667515955865, -1.1559782028198242, -0.0038576126098632812, -0.00058746337890625, -1.33514404296875e-05, -0.008451461791992188, -1.9073486328125e-06, -0.019680023193359375, 0.0, -0.0031499862670898438, 0.0, -0.0009281635284423828, 0.0, -0.011701583862304688, -0.05386638641357422, -2.288818359375e-05, -0.015714645385742188, -0.0013027191162109375, -0.0004165662976447493, -0.0004901885986328125, -0.0998067855834961, -8.0108642578125e-05, -0.048293113708496094, -0.020006179809570312, -1.9073486328125e-06, -0.00440216064453125, 0.0, -3.0517578125e-05, 0.0, -6.175033922772855e-05, 0.0, -0.001952670980244875, -2.3841855067985307e-07, -6.29425048828125e-05, -0.00018310546875, -0.0012722015380859375, -2.6702880859375e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00136566162109375, 0.0, -0.00038802612107247114, -1.1920928244535389e-07, -0.000194549560546875, -0.0004901885986328125, -0.00018310546875, -3.814697265625e-06, -0.035256028175354004, -0.0004233119252603501, -0.5304927825927734, -0.040129661560058594, -0.014888763427734375, 0.0, -0.24002468585968018, 0.0, -0.03519415855407715, -1.9073486328125e-06]}], "gold_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.silence()\n        self.target.damage(player.effective_spell_damage(1), self)\n"}
{"beams": [{"score": -4.242560771338489, "choice_history": [59, 125, "Eye", "for", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Eyefor(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for', 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.\n            COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Eye for", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Eyefor", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -0.7699702978134155, -0.0007941678049974144, -0.0007146596326492727, -1.5139551578613464e-05, -1.990795135498047e-05, -0.004756927490234375, -4.9591064453125e-05, -2.86102294921875e-05, -0.0006256103515625, -9.34600830078125e-05, -3.862306402879767e-05, -0.000286102294921875, -0.10399627685546875, -0.35091209411621094, -0.0009292364120483398, -1.537799835205078e-05, -0.5173013210296631, 0.0, -2.133846101060044e-05, 0.0, -0.006215095520019531, 0.0, -0.010320782661437988, 0.0, -0.0022296905517578125, -0.0005950927734375, -9.5367431640625e-06, -0.0037927627563476562, -4.9591064453125e-05, -0.015612602233886719, -0.000118255615234375, -7.62939453125e-06, -1.9073486328125e-06, -0.0009174346923828125, 0.0, -0.0010167360305786133, -9.5367431640625e-06, -0.0049103498458862305, -1.1920928244535389e-07, -0.03453850746154785, 0.0, -1.33514404296875e-05, -0.0001316070556640625, -3.814697265625e-06, -0.8494158983230591, -0.0012722015380859375, -8.0108642578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0020999908447265625, -5.7220458984375e-05, -0.000911712646484375, 0.0, -0.0009784698486328125, -0.0002117156982421875, -2.47955322265625e-05, -0.003412008285522461, 0.0, -0.0012111663818359375, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0099945068359375, -7.62939453125e-06, -0.0001163482666015625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0006008148193359375, 0.0, -0.00125885009765625, -7.62939453125e-06, -0.002526521449908614, 0.0, -0.011951354332268238, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.7858223915100098, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0017805099487304688, -3.4332275390625e-05, -0.000743865966796875, 0.0, -0.000164031982421875, -9.918212890625e-05, -0.07573890686035156, -1.9073486328125e-06, -0.000553131103515625, -0.0003681182861328125, -0.0370941162109375, -0.004734039306640625, -0.0002117156982421875, -3.24249267578125e-05, -0.024635791778564453, -1.9073486328125e-06, -0.027166366577148438, -0.000301361083984375, -0.0003681182861328125, -0.000125885009765625, 0.0, -0.000590205192565918, -1.1920928244535389e-07, -0.1496487557888031, 0.0, -0.0001773834228515625, -0.0024709701538085938, -3.814697265625e-05, -0.005678136367350817, -3.814697265625e-06, -0.0024394989013671875, -0.0018405914306640625, -0.002977609634399414, -1.33514404296875e-05, -0.000579833984375, -8.20159912109375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.0007838779711164534, -2.5510735213174485e-05, -0.00023102758859749883, -3.063678741455078e-05]}, {"score": -4.309340274706287, "choice_history": [59, 125, "Eye", "for", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Eyefor(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for', 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.\n            COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Eye for", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Eyefor", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -0.7699702978134155, -0.0007941678049974144, -0.0007146596326492727, -1.5139551578613464e-05, -1.990795135498047e-05, -0.004756927490234375, -4.9591064453125e-05, -2.86102294921875e-05, -0.0006256103515625, -9.34600830078125e-05, -3.862306402879767e-05, -0.000286102294921875, -0.10399627685546875, -0.35091209411621094, -0.0009292364120483398, -1.537799835205078e-05, -0.5173013210296631, 0.0, -2.133846101060044e-05, 0.0, -0.006215095520019531, 0.0, -0.010320782661437988, 0.0, -0.0022296905517578125, -0.0005950927734375, -9.5367431640625e-06, -0.0037927627563476562, -4.9591064453125e-05, -0.015612602233886719, -0.000118255615234375, -7.62939453125e-06, -1.9073486328125e-06, -0.0009174346923828125, 0.0, -0.0010167360305786133, -9.5367431640625e-06, -0.0049103498458862305, -1.1920928244535389e-07, -0.03453850746154785, 0.0, -1.33514404296875e-05, -0.0001316070556640625, -3.814697265625e-06, -0.9240704774856567, 0.0, -3.24249267578125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019826889038085938, -3.814697265625e-05, -0.0009307861328125, 0.0, -0.0007953643798828125, -0.000247955322265625, -2.6702880859375e-05, -0.0033756494522094727, 0.0, -0.0012493133544921875, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.010921478271484375, -7.62939453125e-06, -9.5367431640625e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.000537872314453125, 0.0, -0.0012683868408203125, -7.62939453125e-06, -0.002620815997943282, 0.0, -0.012589916586875916, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.7784742116928101, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001804351806640625, -3.4332275390625e-05, -0.0007419586181640625, 0.0, -0.0001697540283203125, -9.34600830078125e-05, -0.07526302337646484, -1.9073486328125e-06, -0.0005512237548828125, -0.000370025634765625, -0.036850929260253906, -0.00476837158203125, -0.000213623046875, -3.24249267578125e-05, -0.02472066879272461, -1.9073486328125e-06, -0.02693653106689453, -0.00029754638671875, -0.0003681182861328125, -0.0001277923583984375, 0.0, -0.0005826950073242188, -1.1920928244535389e-07, -0.14985953271389008, 0.0, -0.000179290771484375, -0.0024566650390625, -3.814697265625e-05, -0.005700942128896713, -3.814697265625e-06, -0.0024595260620117188, -0.00185394287109375, -0.003014802932739258, -1.33514404296875e-05, -0.000576019287109375, -8.20159912109375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.0007831620168872178, -2.5391527742613107e-05, -0.00022912023996468633, -3.063678741455078e-05]}, {"score": -4.455479001538137, "choice_history": [59, 125, "Eye", "for", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Eyefor(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for', 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.\n            COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Eye for", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Eyefor", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -0.7699702978134155, -0.0007941678049974144, -0.0007146596326492727, -1.5139551578613464e-05, -1.990795135498047e-05, -0.004756927490234375, -4.9591064453125e-05, -2.86102294921875e-05, -0.0006256103515625, -9.34600830078125e-05, -3.862306402879767e-05, -0.000286102294921875, -0.10399627685546875, -0.35091209411621094, -0.0009292364120483398, -1.537799835205078e-05, -0.5173013210296631, 0.0, -2.133846101060044e-05, 0.0, -0.006215095520019531, 0.0, -0.010320782661437988, 0.0, -0.0022296905517578125, -0.0005950927734375, -9.5367431640625e-06, -0.0037927627563476562, -4.9591064453125e-05, -0.015612602233886719, -0.000118255615234375, -7.62939453125e-06, -1.9073486328125e-06, -0.0009174346923828125, 0.0, -0.0010167360305786133, -9.5367431640625e-06, -0.0049103498458862305, -1.1920928244535389e-07, -0.03453850746154785, 0.0, -1.33514404296875e-05, -0.0001316070556640625, -3.814697265625e-06, -0.8494158983230591, -0.0012722015380859375, -8.0108642578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0020999908447265625, -5.7220458984375e-05, -0.000911712646484375, 0.0, -0.0009784698486328125, -0.0002117156982421875, -2.47955322265625e-05, -0.003412008285522461, 0.0, -0.0012111663818359375, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0099945068359375, -7.62939453125e-06, -0.0001163482666015625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0006008148193359375, 0.0, -0.00125885009765625, -7.62939453125e-06, -0.002526521449908614, 0.0, -0.011951354332268238, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.0142111778259277, -0.0012826919555664062, -4.57763671875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0018224716186523438, -4.9591064453125e-05, -0.0007457733154296875, 0.0, -0.0001506805419921875, -8.20159912109375e-05, -0.06632709503173828, -1.9073486328125e-06, -0.0005855560302734375, -0.000438690185546875, -0.03552818298339844, -0.0053730010986328125, -0.000217437744140625, -2.86102294921875e-05, -0.024250388145446777, -1.9073486328125e-06, -0.024806976318359375, -0.0002994537353515625, -0.0003795623779296875, -0.0001239776611328125, 0.0, -0.000605463981628418, -1.1920928244535389e-07, -0.14653779566287994, 0.0, -0.0001621246337890625, -0.002490997314453125, -3.814697265625e-05, -0.005559902638196945, -3.814697265625e-06, -0.002353668212890625, -0.0016689300537109375, -0.0026514530181884766, -1.1444091796875e-05, -0.0005245208740234375, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0007873363210819662, -2.8848578949691728e-05, -0.00023484228586312383, -3.063678741455078e-05]}, {"score": -4.528805778217233, "choice_history": [59, 125, "Eye", "for", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Eyefor(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for', 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.\n            COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Eye for", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Eyefor", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -0.7699702978134155, -0.0007941678049974144, -0.0007146596326492727, -1.5139551578613464e-05, -1.990795135498047e-05, -0.004756927490234375, -4.9591064453125e-05, -2.86102294921875e-05, -0.0006256103515625, -9.34600830078125e-05, -3.862306402879767e-05, -0.000286102294921875, -0.10399627685546875, -0.35091209411621094, -0.0009292364120483398, -1.537799835205078e-05, -0.5173013210296631, 0.0, -2.133846101060044e-05, 0.0, -0.006215095520019531, 0.0, -0.010320782661437988, 0.0, -0.0022296905517578125, -0.0005950927734375, -9.5367431640625e-06, -0.0037927627563476562, -4.9591064453125e-05, -0.015612602233886719, -0.000118255615234375, -7.62939453125e-06, -1.9073486328125e-06, -0.0009174346923828125, 0.0, -0.0010167360305786133, -9.5367431640625e-06, -0.0049103498458862305, -1.1920928244535389e-07, -0.03453850746154785, 0.0, -1.33514404296875e-05, -0.0001316070556640625, -3.814697265625e-06, -0.9240704774856567, 0.0, -3.24249267578125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019826889038085938, -3.814697265625e-05, -0.0009307861328125, 0.0, -0.0007953643798828125, -0.000247955322265625, -2.6702880859375e-05, -0.0033756494522094727, 0.0, -0.0012493133544921875, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.010921478271484375, -7.62939453125e-06, -9.5367431640625e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.000537872314453125, 0.0, -0.0012683868408203125, -7.62939453125e-06, -0.002620815997943282, 0.0, -0.012589916586875916, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.0143407583236694, -0.0012636184692382812, -4.57763671875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0018243789672851562, -4.9591064453125e-05, -0.000743865966796875, 0.0, -0.0001583099365234375, -7.62939453125e-05, -0.06505680084228516, -1.9073486328125e-06, -0.0005817413330078125, -0.0004405975341796875, -0.035210609436035156, -0.005408287048339844, -0.0002193450927734375, -2.86102294921875e-05, -0.024334311485290527, -1.9073486328125e-06, -0.02458953857421875, -0.000293731689453125, -0.0003795623779296875, -0.000125885009765625, 0.0, -0.000597834587097168, -1.1920928244535389e-07, -0.1467040479183197, 0.0, -0.000164031982421875, -0.0024785995483398438, -3.814697265625e-05, -0.005584974307566881, -3.814697265625e-06, -0.00237274169921875, -0.00168609619140625, -0.0026895999908447266, -1.1444091796875e-05, -0.000522613525390625, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0007882894715294242, -2.872937147913035e-05, -0.00023484228586312383, -3.063678741455078e-05]}, {"score": -4.875640884322806, "choice_history": [59, 125, "Eye", "for", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Eyefor(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for', 1, CHARACTER_CLASS.PALADIN, CARD_RARITY\n            .COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Eye for", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Eyefor", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -0.7699702978134155, -0.0007941678049974144, -0.0007146596326492727, -1.5139551578613464e-05, -1.990795135498047e-05, -0.004756927490234375, -4.9591064453125e-05, -2.86102294921875e-05, -0.0006256103515625, -9.34600830078125e-05, -3.862306402879767e-05, -0.000286102294921875, -0.10399627685546875, -0.35091209411621094, -0.0009292364120483398, -1.537799835205078e-05, -1.1420457363128662, -2.0265579223632812e-06, -3.6835670471191406e-05, 0.0, -0.007172584533691406, 0.0, -0.019612431526184082, 0.0, -0.00180816650390625, -0.00057220458984375, -7.62939453125e-06, -0.0042209625244140625, -4.1961669921875e-05, -0.015384674072265625, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0009441375732421875, 0.0, -0.0009881258010864258, -9.5367431640625e-06, -0.005050778388977051, -1.1920928244535389e-07, -0.03785204887390137, 0.0, -1.33514404296875e-05, -0.0001544952392578125, -3.814697265625e-06, -0.8435310125350952, -0.00119781494140625, -7.82012939453125e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0021543502807617188, -5.7220458984375e-05, -0.0009059906005859375, 0.0, -0.0009593963623046875, -0.0002117156982421875, -2.47955322265625e-05, -0.0033833980560302734, 0.0, -0.001194000244140625, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.010036468505859375, -7.62939453125e-06, -0.0001163482666015625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0006046295166015625, 0.0, -0.0012607574462890625, -7.62939453125e-06, -0.0025284287985414267, 0.0, -0.011909223161637783, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.7862887382507324, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001781463623046875, -3.4332275390625e-05, -0.000743865966796875, 0.0, -0.0001621246337890625, -9.72747802734375e-05, -0.07559776306152344, -1.9073486328125e-06, -0.000553131103515625, -0.0003681182861328125, -0.037102699279785156, -0.004727363586425781, -0.0002117156982421875, -3.24249267578125e-05, -0.024630069732666016, -1.9073486328125e-06, -0.02716350555419922, -0.000301361083984375, -0.0003681182861328125, -0.000125885009765625, 0.0, -0.000590205192565918, -1.1920928244535389e-07, -0.15009884536266327, 0.0, -0.000179290771484375, -0.0024709701538085938, -3.814697265625e-05, -0.00569276325404644, -3.814697265625e-06, -0.0024480819702148438, -0.0018672943115234375, -0.003015756607055664, -1.33514404296875e-05, -0.00058746337890625, -8.20159912109375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.0007823280175216496, -2.5272318453062326e-05, -0.00022912023996468633, -3.063678741455078e-05]}, {"score": -4.9493796122178395, "choice_history": [59, 125, "Eye", "for", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Eyefor(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for', 1, CHARACTER_CLASS.PALADIN, CARD_RARITY\n            .COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Eye for", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Eyefor", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -0.7699702978134155, -0.0007941678049974144, -0.0007146596326492727, -1.5139551578613464e-05, -1.990795135498047e-05, -0.004756927490234375, -4.9591064453125e-05, -2.86102294921875e-05, -0.0006256103515625, -9.34600830078125e-05, -3.862306402879767e-05, -0.000286102294921875, -0.10399627685546875, -0.35091209411621094, -0.0009292364120483398, -1.537799835205078e-05, -1.1420457363128662, -2.0265579223632812e-06, -3.6835670471191406e-05, 0.0, -0.007172584533691406, 0.0, -0.019612431526184082, 0.0, -0.00180816650390625, -0.00057220458984375, -7.62939453125e-06, -0.0042209625244140625, -4.1961669921875e-05, -0.015384674072265625, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0009441375732421875, 0.0, -0.0009881258010864258, -9.5367431640625e-06, -0.005050778388977051, -1.1920928244535389e-07, -0.03785204887390137, 0.0, -1.33514404296875e-05, -0.0001544952392578125, -3.814697265625e-06, -0.9243329763412476, 0.0, -3.24249267578125e-05, 0.0, -1.9073486328125e-05, 0.0, -0.0021104812622070312, -3.814697265625e-05, -0.0009212493896484375, 0.0, -0.0007839202880859375, -0.000247955322265625, -2.6702880859375e-05, -0.0033670663833618164, 0.0, -0.0012264251708984375, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.01102447509765625, -7.62939453125e-06, -9.72747802734375e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.00054168701171875, 0.0, -0.0012683868408203125, -7.62939453125e-06, -0.0026206967886537313, 0.0, -0.012518958188593388, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.7793973684310913, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0018053054809570312, -3.4332275390625e-05, -0.0007419586181640625, 0.0, -0.0001697540283203125, -9.34600830078125e-05, -0.07524394989013672, -1.9073486328125e-06, -0.0005512237548828125, -0.000370025634765625, -0.03685760498046875, -0.0047626495361328125, -0.000213623046875, -3.24249267578125e-05, -0.024712085723876953, -1.9073486328125e-06, -0.02694225311279297, -0.00029754638671875, -0.0003681182861328125, -0.0001277923583984375, 0.0, -0.0005826950073242188, -1.1920928244535389e-07, -0.15032821893692017, 0.0, -0.0001811981201171875, -0.0024576187133789062, -3.814697265625e-05, -0.0057146186009049416, -3.814697265625e-06, -0.002468109130859375, -0.001880645751953125, -0.003052949905395508, -1.33514404296875e-05, -0.000583648681640625, -8.20159912109375e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.0007836385630071163, -2.5153110982500948e-05, -0.00022912023996468633, -3.063678741455078e-05]}, {"score": -5.088131259927636, "choice_history": [59, 125, "Eye", "for", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Eyefor(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for', 1, CHARACTER_CLASS.PALADIN, CARD_RARITY\n            .COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Eye for", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Eyefor", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -0.7699702978134155, -0.0007941678049974144, -0.0007146596326492727, -1.5139551578613464e-05, -1.990795135498047e-05, -0.004756927490234375, -4.9591064453125e-05, -2.86102294921875e-05, -0.0006256103515625, -9.34600830078125e-05, -3.862306402879767e-05, -0.000286102294921875, -0.10399627685546875, -0.35091209411621094, -0.0009292364120483398, -1.537799835205078e-05, -1.1420457363128662, -2.0265579223632812e-06, -3.6835670471191406e-05, 0.0, -0.007172584533691406, 0.0, -0.019612431526184082, 0.0, -0.00180816650390625, -0.00057220458984375, -7.62939453125e-06, -0.0042209625244140625, -4.1961669921875e-05, -0.015384674072265625, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0009441375732421875, 0.0, -0.0009881258010864258, -9.5367431640625e-06, -0.005050778388977051, -1.1920928244535389e-07, -0.03785204887390137, 0.0, -1.33514404296875e-05, -0.0001544952392578125, -3.814697265625e-06, -0.8435310125350952, -0.00119781494140625, -7.82012939453125e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0021543502807617188, -5.7220458984375e-05, -0.0009059906005859375, 0.0, -0.0009593963623046875, -0.0002117156982421875, -2.47955322265625e-05, -0.0033833980560302734, 0.0, -0.001194000244140625, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.010036468505859375, -7.62939453125e-06, -0.0001163482666015625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0006046295166015625, 0.0, -0.0012607574462890625, -7.62939453125e-06, -0.0025284287985414267, 0.0, -0.011909223161637783, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.0139098167419434, -0.0012845993041992188, -4.57763671875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00182342529296875, -4.9591064453125e-05, -0.0007457733154296875, 0.0, -0.0001506805419921875, -8.20159912109375e-05, -0.06620979309082031, -1.9073486328125e-06, -0.0005855560302734375, -0.000438690185546875, -0.035538673400878906, -0.0053653717041015625, -0.000217437744140625, -2.86102294921875e-05, -0.02424752712249756, -1.9073486328125e-06, -0.024805068969726562, -0.0002994537353515625, -0.0003795623779296875, -0.0001239776611328125, 0.0, -0.000605463981628418, -1.1920928244535389e-07, -0.1472686231136322, 0.0, -0.000164031982421875, -0.002490997314453125, -3.814697265625e-05, -0.0055803582072257996, -3.814697265625e-06, -0.0023641586303710938, -0.00170135498046875, -0.002695322036743164, -1.1444091796875e-05, -0.0005340576171875, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0007875746232457459, -2.8610164008568972e-05, -0.00023484228586312383, -3.063678741455078e-05]}, {"score": -5.136598643513921, "choice_history": [59, 125, "Eye", "The", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class EyeTheEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Eye for Eye", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "EyeTheEye", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -1.6026833057403564, -0.00015318355872295797, -0.00010037422180175781, -0.00028908252716064453, -6.556507287314162e-06, -8.106231689453125e-06, -0.009698867797851562, -0.0001239776611328125, -1.9073486328125e-05, -0.0003910064697265625, -8.0108642578125e-05, -3.635817120084539e-05, -0.0003299713134765625, -0.08532142639160156, -0.20663928985595703, -0.00018298625946044922, -0.0003796815872192383, -0.00020039081573486328, -9.5367431640625e-06, -0.7238057851791382, 0.0, -1.5139577953959815e-05, 0.0, -0.008104324340820312, 0.0, -0.006391644477844238, 0.0, -0.002506256103515625, -0.000713348388671875, -7.62939453125e-06, -0.0034666061401367188, -5.340576171875e-05, -0.013292312622070312, -8.392333984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008449554443359375, 0.0, -0.0010319948196411133, -9.5367431640625e-06, -0.005050539970397949, -1.1920928244535389e-07, -0.03537893295288086, 0.0, -1.1444091796875e-05, -0.0001316070556640625, -3.814697265625e-06, -0.8647005558013916, -0.00133514404296875, -8.20159912109375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.002010345458984375, -5.7220458984375e-05, -0.00091552734375, 0.0, -0.0009784698486328125, -0.0002117156982421875, -2.47955322265625e-05, -0.0034177303314208984, 0.0, -0.0012302398681640625, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0099945068359375, -7.62939453125e-06, -0.0001163482666015625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0006008148193359375, 0.0, -0.001262664794921875, -7.62939453125e-06, -0.0025399920996278524, 0.0, -0.012003482319414616, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.7857661247253418, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001781463623046875, -3.4332275390625e-05, -0.000743865966796875, 0.0, -0.000164031982421875, -9.72747802734375e-05, -0.0754709243774414, -1.9073486328125e-06, -0.000553131103515625, -0.0003681182861328125, -0.03706932067871094, -0.004741668701171875, -0.000209808349609375, -3.24249267578125e-05, -0.024734973907470703, -1.9073486328125e-06, -0.02715301513671875, -0.0002994537353515625, -0.0003681182861328125, -0.000125885009765625, 0.0, -0.000590205192565918, -1.1920928244535389e-07, -0.1516181230545044, 0.0, -0.0001888275146484375, -0.0024700164794921875, -3.814697265625e-05, -0.005743187852203846, -3.814697265625e-06, -0.002483367919921875, -0.0019702911376953125, -0.003164529800415039, -1.33514404296875e-05, -0.0006160736083984375, -8.20159912109375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.0007824460626579821, -2.4557069991715252e-05, -0.00022721289133187383, -3.063678741455078e-05]}, {"score": -5.173222751083799, "choice_history": [59, 125, "Eye", "The", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class EyeTheEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Eye for Eye", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "EyeTheEye", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -1.6026833057403564, -0.00015318355872295797, -0.00010037422180175781, -0.00028908252716064453, -6.556507287314162e-06, -8.106231689453125e-06, -0.009698867797851562, -0.0001239776611328125, -1.9073486328125e-05, -0.0003910064697265625, -8.0108642578125e-05, -3.635817120084539e-05, -0.0003299713134765625, -0.08532142639160156, -0.20663928985595703, -0.00018298625946044922, -0.0003796815872192383, -0.00020039081573486328, -9.5367431640625e-06, -0.7238057851791382, 0.0, -1.5139577953959815e-05, 0.0, -0.008104324340820312, 0.0, -0.006391644477844238, 0.0, -0.002506256103515625, -0.000713348388671875, -7.62939453125e-06, -0.0034666061401367188, -5.340576171875e-05, -0.013292312622070312, -8.392333984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008449554443359375, 0.0, -0.0010319948196411133, -9.5367431640625e-06, -0.005050539970397949, -1.1920928244535389e-07, -0.03537893295288086, 0.0, -1.1444091796875e-05, -0.0001316070556640625, -3.814697265625e-06, -0.9089453220367432, 0.0, -3.24249267578125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019435882568359375, -3.814697265625e-05, -0.000934600830078125, 0.0, -0.0008029937744140625, -0.000247955322265625, -2.6702880859375e-05, -0.003372788429260254, 0.0, -0.0012722015380859375, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.010929107666015625, -7.62939453125e-06, -9.72747802734375e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.000537872314453125, 0.0, -0.001270294189453125, -7.62939453125e-06, -0.002636193996295333, 0.0, -0.012657737359404564, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.7786506414413452, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0018053054809570312, -3.4332275390625e-05, -0.0007419586181640625, 0.0, -0.0001697540283203125, -9.34600830078125e-05, -0.07515811920166016, -1.9073486328125e-06, -0.0005512237548828125, -0.000370025634765625, -0.03682899475097656, -0.004776954650878906, -0.000209808349609375, -3.24249267578125e-05, -0.024814128875732422, -1.9073486328125e-06, -0.026925086975097656, -0.0002956390380859375, -0.0003681182861328125, -0.0001277923583984375, 0.0, -0.0005826950073242188, -1.1920928244535389e-07, -0.15169210731983185, 0.0, -0.00019073486328125, -0.0024547576904296875, -3.814697265625e-05, -0.005761590786278248, -3.814697265625e-06, -0.0025014877319335938, -0.0019779205322265625, -0.003194093704223633, -1.33514404296875e-05, -0.0006103515625, -8.20159912109375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.0007839949103072286, -2.4437862521153875e-05, -0.00022721289133187383, -3.063678741455078e-05]}, {"score": -5.35052149196234, "choice_history": [59, 125, "Eye", "The", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class EyeTheEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Eye for Eye", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "EyeTheEye", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -1.6026833057403564, -0.00015318355872295797, -0.00010037422180175781, -0.00028908252716064453, -6.556507287314162e-06, -8.106231689453125e-06, -0.009698867797851562, -0.0001239776611328125, -1.9073486328125e-05, -0.0003910064697265625, -8.0108642578125e-05, -3.635817120084539e-05, -0.0003299713134765625, -0.08532142639160156, -0.20663928985595703, -0.00018298625946044922, -0.0003796815872192383, -0.00020039081573486328, -9.5367431640625e-06, -0.7238057851791382, 0.0, -1.5139577953959815e-05, 0.0, -0.008104324340820312, 0.0, -0.006391644477844238, 0.0, -0.002506256103515625, -0.000713348388671875, -7.62939453125e-06, -0.0034666061401367188, -5.340576171875e-05, -0.013292312622070312, -8.392333984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008449554443359375, 0.0, -0.0010319948196411133, -9.5367431640625e-06, -0.005050539970397949, -1.1920928244535389e-07, -0.03537893295288086, 0.0, -1.1444091796875e-05, -0.0001316070556640625, -3.814697265625e-06, -0.8647005558013916, -0.00133514404296875, -8.20159912109375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.002010345458984375, -5.7220458984375e-05, -0.00091552734375, 0.0, -0.0009784698486328125, -0.0002117156982421875, -2.47955322265625e-05, -0.0034177303314208984, 0.0, -0.0012302398681640625, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0099945068359375, -7.62939453125e-06, -0.0001163482666015625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0006008148193359375, 0.0, -0.001262664794921875, -7.62939453125e-06, -0.0025399920996278524, 0.0, -0.012003482319414616, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.0138554573059082, -0.0012826919555664062, -4.57763671875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00182342529296875, -4.9591064453125e-05, -0.0007457733154296875, 0.0, -0.0001506805419921875, -8.20159912109375e-05, -0.06600475311279297, -1.9073486328125e-06, -0.0005855560302734375, -0.000438690185546875, -0.035500526428222656, -0.005385398864746094, -0.0002155303955078125, -2.86102294921875e-05, -0.024337172508239746, -1.9073486328125e-06, -0.024796485900878906, -0.00029754638671875, -0.0003795623779296875, -0.0001239776611328125, 0.0, -0.000605463981628418, -1.1920928244535389e-07, -0.14975979924201965, 0.0, -0.0001773834228515625, -0.0024881362915039062, -3.814697265625e-05, -0.005652666091918945, -3.814697265625e-06, -0.0024080276489257812, -0.0018291473388671875, -0.0028755664825439453, -1.1444091796875e-05, -0.0005702972412109375, -8.20159912109375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.0007841173210181296, -2.5749151973286644e-05, -0.00023102758859749883, -3.063678741455078e-05]}, {"score": -5.393186325212795, "choice_history": [59, 125, "Eye", "The", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class EyeTheEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Eye for Eye", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "EyeTheEye", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -1.6026833057403564, -0.00015318355872295797, -0.00010037422180175781, -0.00028908252716064453, -6.556507287314162e-06, -8.106231689453125e-06, -0.009698867797851562, -0.0001239776611328125, -1.9073486328125e-05, -0.0003910064697265625, -8.0108642578125e-05, -3.635817120084539e-05, -0.0003299713134765625, -0.08532142639160156, -0.20663928985595703, -0.00018298625946044922, -0.0003796815872192383, -0.00020039081573486328, -9.5367431640625e-06, -0.7238057851791382, 0.0, -1.5139577953959815e-05, 0.0, -0.008104324340820312, 0.0, -0.006391644477844238, 0.0, -0.002506256103515625, -0.000713348388671875, -7.62939453125e-06, -0.0034666061401367188, -5.340576171875e-05, -0.013292312622070312, -8.392333984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008449554443359375, 0.0, -0.0010319948196411133, -9.5367431640625e-06, -0.005050539970397949, -1.1920928244535389e-07, -0.03537893295288086, 0.0, -1.1444091796875e-05, -0.0001316070556640625, -3.814697265625e-06, -0.9089453220367432, 0.0, -3.24249267578125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019435882568359375, -3.814697265625e-05, -0.000934600830078125, 0.0, -0.0008029937744140625, -0.000247955322265625, -2.6702880859375e-05, -0.003372788429260254, 0.0, -0.0012722015380859375, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.010929107666015625, -7.62939453125e-06, -9.72747802734375e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.000537872314453125, 0.0, -0.001270294189453125, -7.62939453125e-06, -0.002636193996295333, 0.0, -0.012657737359404564, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.0138276815414429, -0.0012645721435546875, -4.57763671875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0018253326416015625, -4.9591064453125e-05, -0.000743865966796875, 0.0, -0.0001583099365234375, -7.62939453125e-05, -0.06485939025878906, -1.9073486328125e-06, -0.0005817413330078125, -0.0004405975341796875, -0.035185813903808594, -0.005419731140136719, -0.0002155303955078125, -2.86102294921875e-05, -0.02441537380218506, -1.9073486328125e-06, -0.02457904815673828, -0.000293731689453125, -0.0003795623779296875, -0.000125885009765625, 0.0, -0.0005987882614135742, -1.1920928244535389e-07, -0.1497213989496231, 0.0, -0.0001773834228515625, -0.0024747848510742188, -3.814697265625e-05, -0.005671668332070112, -3.814697265625e-06, -0.0024251937866210938, -0.0018405914306640625, -0.002905130386352539, -1.1444091796875e-05, -0.0005664825439453125, -8.20159912109375e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.000783282273914665, -2.5629942683735862e-05, -0.00023102758859749883, -3.063678741455078e-05]}, {"score": -5.541570843311078, "choice_history": [59, 125, "Eye", "for", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Eyefor(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 1, "_type": "Template3", "hole0": "Eye for Eye", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Eyefor", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -0.7699702978134155, -0.0007941678049974144, -0.0007146596326492727, -1.5139551578613464e-05, -1.990795135498047e-05, -0.004756927490234375, -4.9591064453125e-05, -2.86102294921875e-05, -0.0006256103515625, -9.34600830078125e-05, -3.862306402879767e-05, -0.000286102294921875, -0.10399627685546875, -1.2223167419433594, -0.00021922588348388672, -6.306171417236328e-05, -0.00012993812561035156, -7.62939453125e-06, -0.9410792589187622, 0.0, -1.3470649719238281e-05, 0.0, -0.006831169128417969, 0.0, -0.009819984436035156, 0.0, -0.003139495849609375, -0.00061798095703125, -7.62939453125e-06, -0.0036020278930664062, -4.57763671875e-05, -0.006008148193359375, -7.2479248046875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0008392333984375, 0.0, -0.0010339021682739258, -1.1444091796875e-05, -0.004765033721923828, -1.1920928244535389e-07, -0.03457081317901611, 0.0, -1.1444091796875e-05, -0.00014495849609375, -3.814697265625e-06, -0.8554717302322388, -0.001369476318359375, -8.392333984375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0019178390502929688, -5.7220458984375e-05, -0.0008983612060546875, 0.0, -0.0009975433349609375, -0.000217437744140625, -2.6702880859375e-05, -0.003368973731994629, 0.0, -0.001186370849609375, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.010046005249023438, -5.7220458984375e-06, -0.0001201629638671875, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.000640869140625, 0.0, -0.0012569427490234375, -5.7220458984375e-06, -0.0024821755941957235, 0.0, -0.011588373221457005, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.7896906137466431, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.00177764892578125, -3.4332275390625e-05, -0.000743865966796875, 0.0, -0.00016021728515625, -9.918212890625e-05, -0.07689571380615234, -1.9073486328125e-06, -0.000553131103515625, -0.0003662109375, -0.03708839416503906, -0.004723548889160156, -0.000209808349609375, -3.24249267578125e-05, -0.024686336517333984, -1.9073486328125e-06, -0.027253150939941406, -0.000301361083984375, -0.000370025634765625, -0.0001239776611328125, 0.0, -0.000594019889831543, -1.1920928244535389e-07, -0.1517791599035263, 0.0, -0.0001888275146484375, -0.0024785995483398438, -3.814697265625e-05, -0.005731669720262289, -3.814697265625e-06, -0.0024747848510742188, -0.0019702911376953125, -0.0031502246856689453, -1.33514404296875e-05, -0.00061798095703125, -8.20159912109375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.0007816121215000749, -2.4557069991715252e-05, -0.00022721289133187383, -3.063678741455078e-05]}, {"score": -5.597424285252586, "choice_history": [59, 125, "Eye", "for", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Eyefor(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 1, "_type": "Template3", "hole0": "Eye for Eye", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Eyefor", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -0.7699702978134155, -0.0007941678049974144, -0.0007146596326492727, -1.5139551578613464e-05, -1.990795135498047e-05, -0.004756927490234375, -4.9591064453125e-05, -2.86102294921875e-05, -0.0006256103515625, -9.34600830078125e-05, -3.862306402879767e-05, -0.000286102294921875, -0.10399627685546875, -1.2223167419433594, -0.00021922588348388672, -6.306171417236328e-05, -0.00012993812561035156, -7.62939453125e-06, -0.9410792589187622, 0.0, -1.3470649719238281e-05, 0.0, -0.006831169128417969, 0.0, -0.009819984436035156, 0.0, -0.003139495849609375, -0.00061798095703125, -7.62939453125e-06, -0.0036020278930664062, -4.57763671875e-05, -0.006008148193359375, -7.2479248046875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0008392333984375, 0.0, -0.0010339021682739258, -1.1444091796875e-05, -0.004765033721923828, -1.1920928244535389e-07, -0.03457081317901611, 0.0, -1.1444091796875e-05, -0.00014495849609375, -3.814697265625e-06, -0.9185000658035278, 0.0, -3.24249267578125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0018262863159179688, -4.00543212890625e-05, -0.0009002685546875, 0.0, -0.0008106231689453125, -0.00025177001953125, -2.6702880859375e-05, -0.0033375024795532227, 0.0, -0.0012264251708984375, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.011007308959960938, -7.62939453125e-06, -9.918212890625e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0005702972412109375, 0.0, -0.001262664794921875, -7.62939453125e-06, -0.0025802848394960165, 0.0, -0.012192809954285622, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.7829421758651733, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001800537109375, -3.4332275390625e-05, -0.0007419586181640625, 0.0, -0.0001678466796875, -9.34600830078125e-05, -0.07676124572753906, -1.9073486328125e-06, -0.000553131103515625, -0.0003681182861328125, -0.036846160888671875, -0.0047607421875, -0.000209808349609375, -3.24249267578125e-05, -0.024759769439697266, -1.9073486328125e-06, -0.02703857421875, -0.00029754638671875, -0.0003681182861328125, -0.000125885009765625, 0.0, -0.0005865097045898438, -1.1920928244535389e-07, -0.15185865759849548, 0.0, -0.0001888275146484375, -0.00246429443359375, -3.814697265625e-05, -0.0057510267943143845, -3.814697265625e-06, -0.0024929046630859375, -0.0019779205322265625, -0.0031807422637939453, -1.33514404296875e-05, -0.0006103515625, -8.20159912109375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.0007830418180674314, -2.4437862521153875e-05, -0.00022721289133187383, -3.063678741455078e-05]}, {"score": -5.6474986365283115, "choice_history": [59, 125, "Eye", "The", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class EyeTheEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Eye for Eye", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "EyeTheEye", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -1.6026833057403564, -0.00015318355872295797, -0.00010037422180175781, -0.00028908252716064453, -6.556507287314162e-06, -8.106231689453125e-06, -0.009698867797851562, -0.0001239776611328125, -1.9073486328125e-05, -0.0003910064697265625, -8.0108642578125e-05, -3.635817120084539e-05, -0.0003299713134765625, -0.08532142639160156, -0.20663928985595703, -0.00018298625946044922, -0.0003796815872192383, -0.00020039081573486328, -9.5367431640625e-06, -1.2280324697494507, -2.0265579223632812e-06, -2.9206275939941406e-05, 0.0, -0.010265350341796875, 0.0, -0.01101982593536377, 0.0, -0.0020198822021484375, -0.0006275177001953125, -5.7220458984375e-06, -0.0040225982666015625, -4.57763671875e-05, -0.014263153076171875, -6.103515625e-05, -5.7220458984375e-06, 0.0, -0.0008792877197265625, 0.0, -0.0009995698928833008, -9.5367431640625e-06, -0.005099296569824219, -1.1920928244535389e-07, -0.03902232274413109, 0.0, -1.1444091796875e-05, -0.000156402587890625, -3.814697265625e-06, -0.8593858480453491, -0.001251220703125, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.0020599365234375, -5.53131103515625e-05, -0.00090789794921875, 0.0, -0.0009593963623046875, -0.000213623046875, -2.47955322265625e-05, -0.003389120101928711, 0.0, -0.0012111663818359375, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.010049819946289062, -7.62939453125e-06, -0.000118255615234375, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.00060272216796875, 0.0, -0.0012645721435546875, -7.62939453125e-06, -0.0025438067968934774, 0.0, -0.011963493190705776, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.7862381935119629, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001781463623046875, -3.4332275390625e-05, -0.000743865966796875, 0.0, -0.000164031982421875, -9.72747802734375e-05, -0.07524681091308594, -1.9073486328125e-06, -0.000553131103515625, -0.0003681182861328125, -0.037078857421875, -0.004734039306640625, -0.000209808349609375, -3.24249267578125e-05, -0.024730205535888672, -1.9073486328125e-06, -0.027151107788085938, -0.000301361083984375, -0.0003681182861328125, -0.000125885009765625, 0.0, -0.000590205192565918, -1.1920928244535389e-07, -0.1519145369529724, 0.0, -0.00019073486328125, -0.0024700164794921875, -3.814697265625e-05, -0.0057548414915800095, -3.814697265625e-06, -0.002490997314453125, -0.001995086669921875, -0.003197908401489258, -1.33514404296875e-05, -0.0006237030029296875, -8.20159912109375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.00078351836418733, -2.4318655050592497e-05, -0.00022721289133187383, -3.063678741455078e-05]}, {"score": -5.689100165000113, "choice_history": [59, 125, "Eye", "The", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 48, 117, "4", "<EOS>", 47, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class EyeTheEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, Null)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": "Null"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Eye for Eye", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "EyeTheEye", "hole3": "activate"}, "score_history": [-1.71661376953125e-05, -0.39749908447265625, -4.279521817807108e-05, -1.6026833057403564, -0.00015318355872295797, -0.00010037422180175781, -0.00028908252716064453, -6.556507287314162e-06, -8.106231689453125e-06, -0.009698867797851562, -0.0001239776611328125, -1.9073486328125e-05, -0.0003910064697265625, -8.0108642578125e-05, -3.635817120084539e-05, -0.0003299713134765625, -0.08532142639160156, -0.20663928985595703, -0.00018298625946044922, -0.0003796815872192383, -0.00020039081573486328, -9.5367431640625e-06, -1.2280324697494507, -2.0265579223632812e-06, -2.9206275939941406e-05, 0.0, -0.010265350341796875, 0.0, -0.01101982593536377, 0.0, -0.0020198822021484375, -0.0006275177001953125, -5.7220458984375e-06, -0.0040225982666015625, -4.57763671875e-05, -0.014263153076171875, -6.103515625e-05, -5.7220458984375e-06, 0.0, -0.0008792877197265625, 0.0, -0.0009995698928833008, -9.5367431640625e-06, -0.005099296569824219, -1.1920928244535389e-07, -0.03902232274413109, 0.0, -1.1444091796875e-05, -0.000156402587890625, -3.814697265625e-06, -0.9078668355941772, 0.0, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.0020723342895507812, -3.814697265625e-05, -0.0009250640869140625, 0.0, -0.000789642333984375, -0.000247955322265625, -2.6702880859375e-05, -0.00336611270904541, 0.0, -0.0012493133544921875, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.011060714721679688, -7.62939453125e-06, -9.72747802734375e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.00054168701171875, 0.0, -0.0012722015380859375, -7.62939453125e-06, -0.002636193996295333, 0.0, -0.012594157829880714, -2.1457672119140625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.7795470952987671, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0018053054809570312, -3.4332275390625e-05, -0.0007419586181640625, 0.0, -0.0001697540283203125, -9.34600830078125e-05, -0.07498455047607422, -1.9073486328125e-06, -0.0005512237548828125, -0.0003681182861328125, -0.03683662414550781, -0.0047702789306640625, -0.000209808349609375, -3.24249267578125e-05, -0.02480936050415039, -1.9073486328125e-06, -0.026927947998046875, -0.00029754638671875, -0.0003681182861328125, -0.0001277923583984375, 0.0, -0.0005826950073242188, -1.1920928244535389e-07, -0.15201778709888458, 0.0, -0.0001926422119140625, -0.0024557113647460938, -3.814697265625e-05, -0.005773485638201237, -3.814697265625e-06, -0.0025091171264648438, -0.002002716064453125, -0.0032274723052978516, -1.33514404296875e-05, -0.0006160736083984375, -8.20159912109375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.0007850672118365765, -2.4199445761041716e-05, -0.00022721289133187383, -3.063678741455078e-05]}], "gold_code": "class EyeForAnEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for an Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            character.player.opponent.hero.damage(amount, self)\n        super().reveal()\n\n    def activate(self, player):\n        player.bind('character_damaged', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_damaged', self._reveal)\n"}
{"beams": [{"score": -2.8865202836618664, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -0.5920791625976562, -6.4849853515625e-05, -3.814697265625e-06, -0.000576019287109375, -8.20159912109375e-05, -9.894371032714844e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001678466796875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.7180728912353516, -9.5367431640625e-06, -0.000484466552734375, -1.52587890625e-05, -0.0043659210205078125, 0.0, -0.15436649322509766, -3.814697265625e-06, -0.00066375732421875, 0.0, -0.0026751947589218616, 0.0, -7.62939453125e-06, -0.006191253662109375, 0.0, -0.0009670257568359375, -6.711483001708984e-05, -0.02907085418701172, -0.19391918182373047, -0.0019512176513671875, 0.0, -7.82012939453125e-05, 0.0, -0.006905555725097656, -0.0007781982421875]}, {"score": -2.94582150272754, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -0.5920791625976562, -6.4849853515625e-05, -3.814697265625e-06, -0.000576019287109375, -8.20159912109375e-05, -9.894371032714844e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001678466796875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.4863414764404297, 0.0, -5.7220458984375e-06, -0.000362396240234375, -1.9073486328125e-06, -0.2611992359161377, 0.0, -0.00551605224609375, -0.0002288818359375, -3.814697265625e-06, -3.814697265625e-06, -0.04196739196777344, 0.0, -0.011254191398620605, -1.71661376953125e-05, -0.0016393661499023438, -1.52587890625e-05, -4.9591064453125e-05, -0.017377853393554688, 0.0, -0.0040607452392578125, 0.0, -0.20434856414794922, 0.0, -0.11709022521972656, -5.7220458984375e-06, -0.0017523765563964844, 0.0, -0.05338704213500023, -5.7220458984375e-06, -0.33909130096435547, -0.0016231536865234375, -0.00026702880859375, 0.0, -0.2664656639099121, -0.0019390579545870423, -0.1584073156118393, -0.000835418701171875, -0.000423431396484375, -0.000293731689453125, 0.0, -1.52587890625e-05, 0.0, -0.15047073364257812, 0.0, -0.014666080474853516, 0.0, -0.007521629333496094, -0.00052642822265625, -9.5367431640625e-06, -1.9073486328125e-06, -0.018870830535888672, -2.300739288330078e-05, -2.09808349609375e-05, -0.00011444091796875, 0.0, -0.007663726806640625, 0.0, -5.9604644775390625e-06, 0.0, -0.004001736640930176, -1.9073486328125e-06]}, {"score": -5.32780883602527, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, player.game, len(player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -0.5920791625976562, -6.4849853515625e-05, -3.814697265625e-06, -0.000576019287109375, -8.20159912109375e-05, -9.894371032714844e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001678466796875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.4863414764404297, 0.0, -5.7220458984375e-06, -0.000362396240234375, -1.9073486328125e-06, -0.2611992359161377, 0.0, -0.00551605224609375, -0.0002288818359375, -3.814697265625e-06, -3.814697265625e-06, -0.04196739196777344, 0.0, -0.011254191398620605, -1.71661376953125e-05, -0.0016393661499023438, -1.52587890625e-05, -4.9591064453125e-05, -0.017377853393554688, 0.0, -0.0040607452392578125, 0.0, -0.20434856414794922, 0.0, -0.11709022521972656, -5.7220458984375e-06, -0.0017523765563964844, 0.0, -0.05338704213500023, -5.7220458984375e-06, -0.33909130096435547, -0.0016231536865234375, -0.00026702880859375, 0.0, -0.2664656639099121, -0.0019390579545870423, -0.1584073156118393, -0.000835418701171875, -0.000423431396484375, -0.000293731689453125, 0.0, -1.52587890625e-05, 0.0, -1.971022605895996, -8.20159912109375e-05, -7.62939453125e-05, 0.0, -3.814697265625e-06, 0.0, -0.5691003799438477, -1.9073486328125e-06, -0.0003757476806640625, -0.012689590454101562, -1.52587890625e-05, 0.0, -8.58306884765625e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000102996826171875, 0.0, -0.029592514038085938, 0.0, -3.933906555175781e-06, 0.0, -0.0027180910110473633, -1.9073486328125e-06]}, {"score": -5.396952635100654, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 57, 177, 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            <UNK>.summon(player, game, len(player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template19"}], "func": {"_type": "Name", "id": "range"}}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -0.5920791625976562, -6.4849853515625e-05, -3.814697265625e-06, -0.000576019287109375, -8.20159912109375e-05, -9.894371032714844e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001678466796875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.4863414764404297, 0.0, -5.7220458984375e-06, -0.000362396240234375, -1.9073486328125e-06, -0.2611992359161377, 0.0, -0.00551605224609375, -0.0002288818359375, -3.814697265625e-06, -3.814697265625e-06, -0.04196739196777344, 0.0, -0.011254191398620605, -1.71661376953125e-05, -0.0016393661499023438, -1.52587890625e-05, -4.9591064453125e-05, -0.017377853393554688, 0.0, -0.0040607452392578125, 0.0, -0.20434856414794922, 0.0, -0.11709022521972656, -5.7220458984375e-06, -0.0017523765563964844, 0.0, -0.05338704213500023, -5.7220458984375e-06, -1.4493999481201172, -3.0517578125e-05, 0.0, 0.0, -0.005632638931274414, -1.537799835205078e-05, -0.03223609924316406, -0.0001392364501953125, 0.0, 0.0, -0.00040602684020996094, -0.00018310546875, -0.012451171875, -8.58306884765625e-05, -3.4332275390625e-05, -0.00017523713177070022, -0.0006427764892578125, -0.046393394470214844, -0.0001697540283203125, -0.0009708404541015625, -0.01407623291015625, -0.0028429031372070312, 0.0, -1.3474445343017578, -0.0009089085506275296, -0.1344795972108841, -1.52587890625e-05, -5.91278076171875e-05, -7.62939453125e-06, 0.0, -1.3828277587890625e-05, 0.0, -0.3492870330810547, -1.9073486328125e-06, -0.0025246143341064453, 0.0, -0.006274223327636719, -0.002513885498046875, -1.52587890625e-05, 0.0, -0.004238486289978027, -1.52587890625e-05, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0069141387939453125, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.0037060976028442383, -1.9073486328125e-06]}, {"score": -5.931896084816792, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "Card", "<EOS>", "extend", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 24, 112, "targets", "<EOS>", 177, 76, 146, 24, 112, "card", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        Card.extend(player.minions)\n        for minion in targets:\n            card.summon(player, game, len(player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "Card"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "card"}}], "iter": {"_type": "Name", "id": "targets"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -1.6634454727172852, -0.0007114410400390625, -3.814697265625e-06, -0.0004425048828125, -9.5367431640625e-06, -1.5854835510253906e-05, -5.7220458984375e-06, -7.867813110351562e-06, 0.0, -0.00011444091796875, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0575103759765625, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.30087947845458984, 0.0, -0.0001239776611328125, -0.000247955322265625, -3.814697265625e-06, -1.9073486328125e-06, -0.020349502563476562, 0.0, -0.011860251426696777, -1.71661376953125e-05, -0.00174713134765625, -1.33514404296875e-05, -9.5367431640625e-05, -0.04253959655761719, 0.0, -0.0033941268920898438, 0.0, -0.17795562744140625, 0.0, -0.10338973999023438, -5.7220458984375e-06, -0.0015559196472167969, 0.0, -0.04907059296965599, -5.7220458984375e-06, -0.003131866455078125, -0.0029325485229492188, -0.000232696533203125, 0.0, -1.6002020835876465, -0.0020666122436523438, -0.21934103965759277, 0.0, -5.91278076171875e-05, -0.0026941299438476562, -3.814697265625e-06, -0.011656761169433594, 0.0, -2.6941299438476562e-05, 0.0, -0.01564502716064453, -1.9073486328125e-06, -0.21988868713378906, -9.34600830078125e-05, -1.9073486328125e-06, 0.0, -0.45617997646331787, -5.960462203802308e-06, -0.0018968582153320312, -3.814697265625e-05, -0.08648324012756348, 0.0, -6.866455078125e-05, -0.00017547607421875, -0.019225120544433594, -0.0008907318115234375, 0.0, -0.3868882656097412, -1.1920928244535389e-07, -0.11792480945587158, -1.9073486328125e-06, -0.0002231597900390625, -0.00012969970703125, 0.0, -7.62939453125e-06, 0.0, -0.14287757873535156, -3.814697265625e-06, -0.0004941225051879883, 0.0, -0.0013780593872070312, -0.00792694091796875, -7.62939453125e-05, -1.9073486328125e-06, -0.009806632995605469, -1.33514404296875e-05, -1.33514404296875e-05, -6.4849853515625e-05, 0.0, -0.0088958740234375, 0.0, -5.9604644775390625e-06, 0.0, -0.0037080049514770508, -1.9073486328125e-06]}, {"score": -5.975086791209364, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 57, 177, 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for i in range(0, 3):\n            <UNK>.summon(player, game, len(player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template19"}], "func": {"_type": "Name", "id": "range"}}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -1.6634454727172852, -0.0007114410400390625, -3.814697265625e-06, -0.0004425048828125, -9.5367431640625e-06, -1.5854835510253906e-05, -5.7220458984375e-06, -7.867813110351562e-06, 0.0, -0.00011444091796875, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0575103759765625, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.30087947845458984, 0.0, -0.0001239776611328125, -0.000247955322265625, -3.814697265625e-06, -1.9073486328125e-06, -0.020349502563476562, 0.0, -0.011860251426696777, -1.71661376953125e-05, -0.00174713134765625, -1.33514404296875e-05, -9.5367431640625e-05, -0.04253959655761719, 0.0, -0.0033941268920898438, 0.0, -0.17795562744140625, 0.0, -0.10338973999023438, -5.7220458984375e-06, -0.0015559196472167969, 0.0, -0.04907059296965599, -5.7220458984375e-06, -0.003131866455078125, -0.0029325485229492188, -0.000232696533203125, 0.0, -0.6636519432067871, -0.003742694854736328, -0.21085309982299805, -0.0005092620849609375, -0.00043487548828125, -0.001415252685546875, 0.0, -2.09808349609375e-05, 0.0, -0.01557159423828125, 0.0, -0.0037626028060913086, 0.0, -0.013437271118164062, -0.00041961669921875, -5.7220458984375e-06, -1.9073486328125e-06, -0.01631021499633789, -2.300739288330078e-05, -2.47955322265625e-05, -0.0001392364501953125, 0.0, -0.00974273681640625, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.004021763801574707, -1.9073486328125e-06, -0.13707733154296875, -0.0001583099365234375, -1.9073486328125e-06, 0.0, -0.37186598777770996, -2.1457672119140625e-06, -0.043486595153808594, -0.000244140625, 0.0, -3.814697265625e-06, -0.0006271600723266602, -0.000274658203125, -0.06020164489746094, -4.76837158203125e-05, -2.86102294921875e-05, -0.00016319727001246065, -0.0006302595138549805, -0.018030166625976562, -0.0001010894775390625, -0.000774383544921875, -0.03334522247314453, -0.004253387451171875, 0.0, -1.333494782447815, -0.001674685743637383, -0.08442707359790802, -8.58306884765625e-05, -4.1961669921875e-05, -9.5367431640625e-06, 0.0, -2.1576881408691406e-05, 0.0, -0.3008251190185547, -1.9073486328125e-06, -0.005046367645263672, -1.9073486328125e-06, -0.005268096923828125, -0.0009002685546875, -5.7220458984375e-06, 0.0, -0.003977179527282715, -1.919269561767578e-05, -9.5367431640625e-06, -0.00011444091796875, 0.0, -0.0048999786376953125, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.004033207893371582, -1.9073486328125e-06]}, {"score": -6.012934202225999, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 24, 112, "targets", "<EOS>", 177, 76, 146, 24, 112, "card", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for minion in targets:\n            card.summon(player, game, len(player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "card"}}], "iter": {"_type": "Name", "id": "targets"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -1.6634454727172852, -0.0007114410400390625, -3.814697265625e-06, -0.0004425048828125, -9.5367431640625e-06, -1.5854835510253906e-05, -5.7220458984375e-06, -7.867813110351562e-06, 0.0, -0.00011444091796875, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0575103759765625, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.30087947845458984, 0.0, -0.0001239776611328125, -0.000247955322265625, -3.814697265625e-06, -1.9073486328125e-06, -0.020349502563476562, 0.0, -0.011860251426696777, -1.71661376953125e-05, -0.00174713134765625, -1.33514404296875e-05, -9.5367431640625e-05, -0.04253959655761719, 0.0, -0.0033941268920898438, 0.0, -0.17795562744140625, 0.0, -0.10338973999023438, -5.7220458984375e-06, -0.0015559196472167969, 0.0, -0.04907059296965599, -5.7220458984375e-06, -0.003131866455078125, -0.0029325485229492188, -0.000232696533203125, 0.0, -0.6636519432067871, -0.003742694854736328, -0.21085309982299805, -0.0005092620849609375, -0.00043487548828125, -0.001415252685546875, 0.0, -2.09808349609375e-05, 0.0, -0.01557159423828125, 0.0, -0.0037626028060913086, 0.0, -0.013437271118164062, -0.00041961669921875, -5.7220458984375e-06, -1.9073486328125e-06, -0.01631021499633789, -2.300739288330078e-05, -2.47955322265625e-05, -0.0001392364501953125, 0.0, -0.00974273681640625, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.004021763801574707, -1.9073486328125e-06, -0.13707733154296875, -0.0001583099365234375, -1.9073486328125e-06, 0.0, -1.3895785808563232, -7.748602001811378e-06, -0.0033903121948242188, -3.24249267578125e-05, -0.2797926664352417, 0.0, -6.4849853515625e-05, -0.000213623046875, -0.06896114349365234, -0.0005397796630859375, 0.0, -0.2420719861984253, -2.2649765014648438e-06, -0.05041790008544922, -3.814697265625e-06, -0.000186920166015625, -0.0001316070556640625, 0.0, -7.62939453125e-06, 0.0, -0.25244998931884766, -5.7220458984375e-06, -0.0007058382034301758, 0.0, -0.0018491744995117188, -0.0058460235595703125, -6.103515625e-05, -1.9073486328125e-06, -0.008665084838867188, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-05, 0.0, -0.008153915405273438, 0.0, -5.9604644775390625e-06, 0.0, -0.0035582780838012695, -1.9073486328125e-06]}, {"score": -6.077243083987469, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "player", "<EOS>", "<UNK>", "<EOS>", 164, 46, 112, "player", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        player.<UNK>(player)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -0.5920791625976562, -6.4849853515625e-05, -3.814697265625e-06, -0.000576019287109375, -8.20159912109375e-05, -9.894371032714844e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001678466796875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.4863414764404297, 0.0, -5.7220458984375e-06, -0.000362396240234375, -1.9073486328125e-06, -0.2611992359161377, 0.0, -0.00551605224609375, -0.0002288818359375, -3.814697265625e-06, -3.814697265625e-06, -0.04196739196777344, 0.0, -0.011254191398620605, -1.71661376953125e-05, -0.0016393661499023438, -1.52587890625e-05, -4.9591064453125e-05, -0.017377853393554688, 0.0, -0.0040607452392578125, 0.0, -0.20434856414794922, 0.0, -0.11709022521972656, -5.7220458984375e-06, -0.0017523765563964844, 0.0, -0.05338704213500023, -5.7220458984375e-06, -0.33909130096435547, -0.0016231536865234375, -0.00026702880859375, 0.0, -2.009556293487549, 0.0, -0.7550822496414185, -3.814697265625e-06, -6.29425048828125e-05, -0.4437370300292969, 0.0, -0.55525803565979, 0.0]}, {"score": -6.246511215241746, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "extend", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 24, 112, "targets", "<EOS>", 177, 76, 146, 24, 112, "card", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in targets:\n            card.summon(player, game, len(player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "hole1": "extend", "_type": "Template9", "hole0": {"_type": "Name", "id": "targets"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "card"}}], "iter": {"_type": "Name", "id": "targets"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -1.6634454727172852, -0.0007114410400390625, -3.814697265625e-06, -0.0004425048828125, -9.5367431640625e-06, -1.5854835510253906e-05, -5.7220458984375e-06, -7.867813110351562e-06, 0.0, -0.00011444091796875, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0575103759765625, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.30087947845458984, 0.0, -0.0001239776611328125, -0.000247955322265625, -3.814697265625e-06, -1.9073486328125e-06, -0.020349502563476562, 0.0, -0.011860251426696777, -1.71661376953125e-05, -0.00174713134765625, -1.33514404296875e-05, -9.5367431640625e-05, -0.04253959655761719, 0.0, -0.0033941268920898438, 0.0, -0.17795562744140625, 0.0, -0.10338973999023438, -5.7220458984375e-06, -0.0015559196472167969, 0.0, -0.04907059296965599, -5.7220458984375e-06, -0.003131866455078125, -0.0029325485229492188, -0.000232696533203125, 0.0, -2.1867165565490723, 0.0, -0.0561060905456543, -1.9073486328125e-06, -2.47955322265625e-05, -0.0005655288696289062, -3.814697265625e-06, -0.060227394104003906, 0.0, -5.936622619628906e-05, 0.0, -0.012467384338378906, -1.9073486328125e-06, -0.15828800201416016, -7.82012939453125e-05, -1.9073486328125e-06, 0.0, -0.3815176486968994, -5.602834789897315e-06, -0.0019283294677734375, -3.4332275390625e-05, -0.0737220048904419, 0.0, -6.4849853515625e-05, -0.0001926422119140625, -0.020647048950195312, -0.0007953643798828125, 0.0, -0.390384316444397, -1.1920928244535389e-07, -0.12176799774169922, -1.9073486328125e-06, -0.000213623046875, -0.0001316070556640625, 0.0, -7.62939453125e-06, 0.0, -0.1328125, -3.814697265625e-06, -0.0004979372024536133, 0.0, -0.001361846923828125, -0.008182525634765625, -7.43865966796875e-05, -1.9073486328125e-06, -0.009989738464355469, -1.33514404296875e-05, -1.33514404296875e-05, -6.67572021484375e-05, 0.0, -0.008962631225585938, 0.0, -5.9604644775390625e-06, 0.0, -0.003758549690246582, -1.9073486328125e-06]}, {"score": -6.275369280848729, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -1.6634454727172852, -0.0007114410400390625, -3.814697265625e-06, -0.0004425048828125, -9.5367431640625e-06, -1.5854835510253906e-05, -5.7220458984375e-06, -7.867813110351562e-06, 0.0, -0.00011444091796875, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0575103759765625, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.30087947845458984, 0.0, -0.0001239776611328125, -0.000247955322265625, -3.814697265625e-06, -1.9073486328125e-06, -0.020349502563476562, 0.0, -0.011860251426696777, -1.71661376953125e-05, -0.00174713134765625, -1.33514404296875e-05, -9.5367431640625e-05, -0.04253959655761719, 0.0, -0.0033941268920898438, 0.0, -0.17795562744140625, 0.0, -0.10338973999023438, -5.7220458984375e-06, -0.0015559196472167969, 0.0, -0.04907059296965599, -5.7220458984375e-06, -0.003131866455078125, -0.0029325485229492188, -0.000232696533203125, 0.0, -0.6636519432067871, -0.003742694854736328, -0.21085309982299805, -0.0005092620849609375, -0.00043487548828125, -0.001415252685546875, 0.0, -2.09808349609375e-05, 0.0, -0.01557159423828125, 0.0, -0.0037626028060913086, 0.0, -0.013437271118164062, -0.00041961669921875, -5.7220458984375e-06, -1.9073486328125e-06, -0.01631021499633789, -2.300739288330078e-05, -2.47955322265625e-05, -0.0001392364501953125, 0.0, -0.00974273681640625, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.004021763801574707, -1.9073486328125e-06, -2.2732181549072266, -0.045922279357910156, -0.3847084045410156, 0.0, -0.000225067138671875, 0.0, -0.00104522705078125, -0.011347413063049316]}, {"score": -7.223162157229574, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 57, 177, 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for i in range(0, 3):\n            <UNK>.summon(player, player.game, len(player.minions))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template19"}], "func": {"_type": "Name", "id": "range"}}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -1.6634454727172852, -0.0007114410400390625, -3.814697265625e-06, -0.0004425048828125, -9.5367431640625e-06, -1.5854835510253906e-05, -5.7220458984375e-06, -7.867813110351562e-06, 0.0, -0.00011444091796875, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0575103759765625, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.30087947845458984, 0.0, -0.0001239776611328125, -0.000247955322265625, -3.814697265625e-06, -1.9073486328125e-06, -0.020349502563476562, 0.0, -0.011860251426696777, -1.71661376953125e-05, -0.00174713134765625, -1.33514404296875e-05, -9.5367431640625e-05, -0.04253959655761719, 0.0, -0.0033941268920898438, 0.0, -0.17795562744140625, 0.0, -0.10338973999023438, -5.7220458984375e-06, -0.0015559196472167969, 0.0, -0.04907059296965599, -5.7220458984375e-06, -0.003131866455078125, -0.0029325485229492188, -0.000232696533203125, 0.0, -0.6636519432067871, -0.003742694854736328, -0.21085309982299805, -0.0005092620849609375, -0.00043487548828125, -0.001415252685546875, 0.0, -2.09808349609375e-05, 0.0, -0.01557159423828125, 0.0, -0.0037626028060913086, 0.0, -0.013437271118164062, -0.00041961669921875, -5.7220458984375e-06, -1.9073486328125e-06, -0.01631021499633789, -2.300739288330078e-05, -2.47955322265625e-05, -0.0001392364501953125, 0.0, -0.00974273681640625, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.004021763801574707, -1.9073486328125e-06, -0.13707733154296875, -0.0001583099365234375, -1.9073486328125e-06, 0.0, -0.37186598777770996, -2.1457672119140625e-06, -0.043486595153808594, -0.000244140625, 0.0, -3.814697265625e-06, -0.0006271600723266602, -0.000274658203125, -0.06020164489746094, -4.76837158203125e-05, -2.86102294921875e-05, -0.00016319727001246065, -0.0006302595138549805, -0.018030166625976562, -0.0001010894775390625, -0.000774383544921875, -0.03334522247314453, -0.004253387451171875, 0.0, -1.333494782447815, -0.001674685743637383, -0.08442707359790802, -8.58306884765625e-05, -4.1961669921875e-05, -9.5367431640625e-06, 0.0, -2.1576881408691406e-05, 0.0, -1.3501653671264648, -3.24249267578125e-05, -2.288818359375e-05, 0.0, -3.933906555175781e-06, 0.0, -0.1168060302734375, -1.9073486328125e-06, -0.0006589889526367188, -0.07454872131347656, -5.7220458984375e-06, 0.0, -0.0002460479736328125, -5.7220458984375e-06, -5.7220458984375e-06, -0.00016021728515625, 0.0, -0.027421951293945312, 0.0, -3.933906555175781e-06, 0.0, -0.003094792366027832, -1.9073486328125e-06]}, {"score": -8.498184769980519, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 57, 177, 76, 146, 24, 112, "cards", "<EOS>", "<UNK>", "<EOS>", 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Attack", "<EOS>", 51, 130, "Turn", "Ended", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for i in range(0, 3):\n            cards.<UNK>(Effect(Attack(), TurnEnded()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Attack"}, {"_type": "Template10", "hole0": "TurnEnded"}], "func": {"_type": "Name", "id": "Effect"}}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Name", "id": "cards"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template19"}], "func": {"_type": "Name", "id": "range"}}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -1.6634454727172852, -0.0007114410400390625, -3.814697265625e-06, -0.0004425048828125, -9.5367431640625e-06, -1.5854835510253906e-05, -5.7220458984375e-06, -7.867813110351562e-06, 0.0, -0.00011444091796875, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0575103759765625, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.30087947845458984, 0.0, -0.0001239776611328125, -0.000247955322265625, -3.814697265625e-06, -1.9073486328125e-06, -0.020349502563476562, 0.0, -0.011860251426696777, -1.71661376953125e-05, -0.00174713134765625, -1.33514404296875e-05, -9.5367431640625e-05, -0.04253959655761719, 0.0, -0.0033941268920898438, 0.0, -0.17795562744140625, 0.0, -0.10338973999023438, -5.7220458984375e-06, -0.0015559196472167969, 0.0, -0.04907059296965599, -5.7220458984375e-06, -0.003131866455078125, -0.0029325485229492188, -0.000232696533203125, 0.0, -0.6636519432067871, -0.003742694854736328, -0.21085309982299805, -0.0005092620849609375, -0.00043487548828125, -0.001415252685546875, 0.0, -2.09808349609375e-05, 0.0, -0.01557159423828125, 0.0, -0.0037626028060913086, 0.0, -0.013437271118164062, -0.00041961669921875, -5.7220458984375e-06, -1.9073486328125e-06, -0.01631021499633789, -2.300739288330078e-05, -2.47955322265625e-05, -0.0001392364501953125, 0.0, -0.00974273681640625, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.004021763801574707, -1.9073486328125e-06, -0.13707733154296875, -0.0001583099365234375, -1.9073486328125e-06, 0.0, -0.37186598777770996, -2.1457672119140625e-06, -0.043486595153808594, -0.000244140625, 0.0, -3.814697265625e-06, -0.0006271600723266602, -0.000274658203125, -0.06020164489746094, -4.76837158203125e-05, -2.86102294921875e-05, -0.00016319727001246065, -0.0006302595138549805, -0.018030166625976562, -0.0001010894775390625, -0.000774383544921875, -0.03334522247314453, -0.004253387451171875, 0.0, -0.5289197564125061, -7.82012939453125e-05, -0.5191359519958496, -0.0002083778235828504, -3.4332275390625e-05, -0.055968284606933594, -0.0043239593505859375, -0.00060272216796875, 0.0, -1.662806510925293, -0.0021513495594263077, -0.000209808349609375, -0.012518882751464844, -1.9073486328125e-06, -0.8142693638801575, -0.006841778755187988, -0.4192695617675781, 0.0, -0.1886308193206787, -0.05198466405272484, -8.10622896096902e-06]}, {"score": -9.150781565892878, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 57, 177, 76, 146, 24, 112, "cards", "<EOS>", "<UNK>", "<EOS>", 164, 41, 89, 24, 112, "Attribute", "<EOS>", 165, 49, 121, "health", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for i in range(0, 3):\n            cards.<UNK>(Attribute('health', SelfSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Call", "args": [{"s": "health", "_type": "Str"}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Attribute"}}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Name", "id": "cards"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template19"}], "func": {"_type": "Name", "id": "range"}}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -1.6634454727172852, -0.0007114410400390625, -3.814697265625e-06, -0.0004425048828125, -9.5367431640625e-06, -1.5854835510253906e-05, -5.7220458984375e-06, -7.867813110351562e-06, 0.0, -0.00011444091796875, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0575103759765625, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.30087947845458984, 0.0, -0.0001239776611328125, -0.000247955322265625, -3.814697265625e-06, -1.9073486328125e-06, -0.020349502563476562, 0.0, -0.011860251426696777, -1.71661376953125e-05, -0.00174713134765625, -1.33514404296875e-05, -9.5367431640625e-05, -0.04253959655761719, 0.0, -0.0033941268920898438, 0.0, -0.17795562744140625, 0.0, -0.10338973999023438, -5.7220458984375e-06, -0.0015559196472167969, 0.0, -0.04907059296965599, -5.7220458984375e-06, -0.003131866455078125, -0.0029325485229492188, -0.000232696533203125, 0.0, -0.6636519432067871, -0.003742694854736328, -0.21085309982299805, -0.0005092620849609375, -0.00043487548828125, -0.001415252685546875, 0.0, -2.09808349609375e-05, 0.0, -0.01557159423828125, 0.0, -0.0037626028060913086, 0.0, -0.013437271118164062, -0.00041961669921875, -5.7220458984375e-06, -1.9073486328125e-06, -0.01631021499633789, -2.300739288330078e-05, -2.47955322265625e-05, -0.0001392364501953125, 0.0, -0.00974273681640625, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.004021763801574707, -1.9073486328125e-06, -0.13707733154296875, -0.0001583099365234375, -1.9073486328125e-06, 0.0, -0.37186598777770996, -2.1457672119140625e-06, -0.043486595153808594, -0.000244140625, 0.0, -3.814697265625e-06, -0.0006271600723266602, -0.000274658203125, -0.06020164489746094, -4.76837158203125e-05, -2.86102294921875e-05, -0.00016319727001246065, -0.0006302595138549805, -0.018030166625976562, -0.0001010894775390625, -0.000774383544921875, -0.03334522247314453, -0.004253387451171875, 0.0, -0.5289197564125061, -7.82012939453125e-05, -0.5191359519958496, -0.0002083778235828504, -3.4332275390625e-05, -0.055968284606933594, -0.0043239593505859375, -0.00060272216796875, 0.0, -1.3617115020751953, -1.5974022971931845e-05, -0.0001964569091796875, -0.0029077529907226562, -0.000270843505859375, -0.943088173866272, -2.86102294921875e-05, -0.42256736755371094, 0.0, -1.0804609060287476, -4.1961669921875e-05, 0.0]}, {"score": -9.1811551391961, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 57, 177, 76, 146, 24, 112, "cards", "<EOS>", "<UNK>", "<EOS>", 164, 41, 89, 24, 112, "Attribute", "<EOS>", 165, 49, 121, "health", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for i in range(0, 3):\n            cards.<UNK>(Attribute('health', WeaponSelector()))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Call", "args": [{"s": "health", "_type": "Str"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "Attribute"}}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Name", "id": "cards"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template19"}], "func": {"_type": "Name", "id": "range"}}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -1.6634454727172852, -0.0007114410400390625, -3.814697265625e-06, -0.0004425048828125, -9.5367431640625e-06, -1.5854835510253906e-05, -5.7220458984375e-06, -7.867813110351562e-06, 0.0, -0.00011444091796875, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0575103759765625, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.30087947845458984, 0.0, -0.0001239776611328125, -0.000247955322265625, -3.814697265625e-06, -1.9073486328125e-06, -0.020349502563476562, 0.0, -0.011860251426696777, -1.71661376953125e-05, -0.00174713134765625, -1.33514404296875e-05, -9.5367431640625e-05, -0.04253959655761719, 0.0, -0.0033941268920898438, 0.0, -0.17795562744140625, 0.0, -0.10338973999023438, -5.7220458984375e-06, -0.0015559196472167969, 0.0, -0.04907059296965599, -5.7220458984375e-06, -0.003131866455078125, -0.0029325485229492188, -0.000232696533203125, 0.0, -0.6636519432067871, -0.003742694854736328, -0.21085309982299805, -0.0005092620849609375, -0.00043487548828125, -0.001415252685546875, 0.0, -2.09808349609375e-05, 0.0, -0.01557159423828125, 0.0, -0.0037626028060913086, 0.0, -0.013437271118164062, -0.00041961669921875, -5.7220458984375e-06, -1.9073486328125e-06, -0.01631021499633789, -2.300739288330078e-05, -2.47955322265625e-05, -0.0001392364501953125, 0.0, -0.00974273681640625, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.004021763801574707, -1.9073486328125e-06, -0.13707733154296875, -0.0001583099365234375, -1.9073486328125e-06, 0.0, -0.37186598777770996, -2.1457672119140625e-06, -0.043486595153808594, -0.000244140625, 0.0, -3.814697265625e-06, -0.0006271600723266602, -0.000274658203125, -0.06020164489746094, -4.76837158203125e-05, -2.86102294921875e-05, -0.00016319727001246065, -0.0006302595138549805, -0.018030166625976562, -0.0001010894775390625, -0.000774383544921875, -0.03334522247314453, -0.004253387451171875, 0.0, -0.5289197564125061, -7.82012939453125e-05, -0.5191359519958496, -0.0002083778235828504, -3.4332275390625e-05, -0.055968284606933594, -0.0043239593505859375, -0.00060272216796875, 0.0, -1.3617115020751953, -1.5974022971931845e-05, -0.0001964569091796875, -0.0029077529907226562, -0.000270843505859375, -0.943088173866272, -2.86102294921875e-05, -0.42256736755371094, 0.0, -1.1108421087265015, -3.4332275390625e-05, 0.0]}, {"score": -13.687935544010081, "choice_history": [59, 126, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 182, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 64, 81, 164, 46, 112, "justice", "<EOS>", 28, 130, "<UNK>", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 57, 177, 76, 146, 24, 112, "cards", "<EOS>", "<UNK>", "<EOS>", 164, 41, 89, 24, 112, "Attribute", "<EOS>", 165, 49, 121, "health", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>", 64, 81, 164, 46, 112, "option", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 165, 46, 112, "cards", "<EOS>", 46, 112, "player", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        justice = <UNK>()\n        for i in range(0, 3):\n            cards.<UNK>(Attribute('health', WeaponSelector()))\n        option = player.agent.choose_option(cards, player)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "justice"}], "value": {"_type": "Template10", "hole0": "<UNK>"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Call", "args": [{"s": "health", "_type": "Str"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "Attribute"}}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Name", "id": "cards"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template19"}], "func": {"_type": "Name", "id": "range"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "option"}], "value": {"_type": "Call", "args": [{"_type": "Name", "id": "cards"}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "agent"}, "attr": "choose_option"}}}], "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Flare", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flare", "hole3": "use"}, "score_history": [-0.00064849853515625, -7.43865966796875e-05, -4.053113570989808e-06, -2.324580964341294e-05, -6.07810216024518e-06, -6.794917680963408e-06, -2.6702764444053173e-05, -5.7220458984375e-05, -7.82012939453125e-05, -0.0009632110595703125, -0.000102996826171875, -0.0001316070556640625, -4.291525328881107e-06, -8.58306884765625e-06, -2.2291887944447808e-05, -5.7220458984375e-06, -0.1626225709915161, 0.0, -0.0073070526123046875, 0.0, -7.748603820800781e-06, 0.0, -0.000718235969543457, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.3378591979271732e-06, -1.919269561767578e-05, -1.6763982772827148, -0.0031299591064453125, -1.9073486328125e-06, -0.0001087188720703125, -3.814697265625e-06, -1.1920928955078125e-05, -5.7220458984375e-06, -8.225440979003906e-06, 0.0, -4.00543212890625e-05, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.17250823974609375, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, 0.0, -0.33993959426879883, 0.0, -0.0001277923583984375, -0.0001773834228515625, -3.814697265625e-06, -1.9073486328125e-06, -0.019243240356445312, 0.0, -0.010689496994018555, -1.71661376953125e-05, -0.001445770263671875, -1.33514404296875e-05, -9.1552734375e-05, -0.03665924072265625, 0.0, -0.004189491271972656, 0.0, -0.1576366424560547, 0.0, -0.12532806396484375, -5.7220458984375e-06, -0.0015273094177246094, 0.0, -0.044782161712646484, -5.7220458984375e-06, -0.13610076904296875, -0.0003337860107421875, -1.1444091796875e-05, 0.0, -0.5814743041992188, -0.00029158592224121094, -0.3920172452926636, -0.001041412353515625, -0.00037384033203125, -0.00107574462890625, 0.0, -2.6702880859375e-05, 0.0, -0.0037136077880859375, 0.0, -0.0030034780502319336, -1.9073486328125e-06, -0.014547348022460938, -0.0006923675537109375, -7.62939453125e-06, -1.9073486328125e-06, -0.02505660057067871, -2.110004425048828e-05, -3.0517578125e-05, -0.0001392364501953125, 0.0, -0.011220932006835938, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0038367509841918945, -1.9073486328125e-06, -0.014563560485839844, -3.814697265625e-06, -4.38690185546875e-05, -1.33514404296875e-05, 0.0, -1.602445125579834, 0.0, -0.020757675170898438, -1.9073486328125e-06, -0.1261582225561142, -0.631705641746521, -0.6136484146118164, -0.0001220703125, -1.9073486328125e-06, 0.0, -0.006508827209472656, 0.0, -0.00144195556640625, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -0.0010949373245239258, -6.4849853515625e-05, -0.03902912139892578, -5.91278076171875e-05, -2.86102294921875e-05, -9.512896940577775e-05, -0.0003898143768310547, -0.024053573608398438, -0.0002002716064453125, -0.002033233642578125, -0.024265289306640625, -0.00298309326171875, 0.0, -0.3916862905025482, -6.103515625e-05, -0.48157477378845215, -0.0001097917411243543, -3.62396240234375e-05, -0.10323238372802734, -0.011023521423339844, -0.0012769699096679688, 0.0, -1.3713164329528809, -1.3709059203392826e-05, -0.0001468658447265625, -0.007172584533691406, -0.0004596710205078125, -0.9807881116867065, -1.728534698486328e-05, -0.5093784332275391, 0.0, -1.053794503211975, -3.4332275390625e-05, 0.0, -0.12139415740966797, -4.76837158203125e-05, -0.0001544952392578125, -9.5367431640625e-06, -2.09808349609375e-05, -0.9903696775436401, 0.0, -0.0003757476806640625, -0.000560760498046875, -3.814697265625e-06, -1.9073486328125e-06, -0.016759872436523438, 0.0, -0.00913238525390625, 0.0, -0.0223313570022583, 0.0, -0.02309560775756836, -5.841255187988281e-06, -0.018648982048034668, -7.62939453125e-06, -3.24249267578125e-05, -0.3271656036376953, 0.0, -0.12414765357971191, -1.71661376953125e-05, -0.001369476318359375, 0.0, -0.06629276275634766, 0.0]}], "gold_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_minion_spell_target(game,\n            lambda m: m.stealth):\n            minion.stealth = False\n        for secret in game.other_player.secrets:\n            secret.deactivate(game.other_player)\n        game.other_player.secrets = []\n        player.draw()\n"}
{"beams": [{"score": -1.7202324145955572, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Minion", "Summoned", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "<UNK>", "Durability", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(MinionSummoned(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionSummoned"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Durability"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -0.0610041618347168, 0.0, -0.1265113353729248, 0.0, -0.03292489051818848, 0.0, -0.0001022815631586127, 0.0, 0.0, -3.0517578125e-05, -0.05623435974121094, -6.866455078125e-05, -0.0012764210114255548, -5.7220458984375e-05, -2.741813204920618e-06, -0.013150335289537907, -9.894371032714844e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0004254579544067383, 0.0, -0.0006618499755859375, -2.47955322265625e-05, -0.016357421875, -0.000370025634765625, -7.62939453125e-06, 0.0, 0.0, -0.0001558065414428711, -3.8623758882749826e-05, -1.1444091796875e-05, -0.013883590698242188, 0.0, -0.3007397949695587, -0.04083442687988281, -0.0012270035222172737, -9.5367431640625e-06, 0.0, 0.0, 0.0, -1.4901160284352954e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.02644824981689453, 0.0, -0.4528946280479431, -0.024905119091272354, -0.0010309217032045126, -0.0002651214599609375, 0.0, -0.02127072587609291, -0.001324246870353818, 0.0]}, {"score": -2.790347450981244, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Minion", "Summoned", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(MinionSummoned(), ActionTag(\n            Draw(), PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionSummoned"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -0.0610041618347168, 0.0, -0.1265113353729248, 0.0, -0.03292489051818848, 0.0, -0.0001022815631586127, 0.0, 0.0, -3.0517578125e-05, -0.05623435974121094, -6.866455078125e-05, -0.0012764210114255548, -5.7220458984375e-05, -2.741813204920618e-06, -0.013150335289537907, -9.894371032714844e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0004254579544067383, 0.0, -0.0006618499755859375, -2.47955322265625e-05, -0.016357421875, -0.000370025634765625, -7.62939453125e-06, 0.0, 0.0, -0.0001558065414428711, -3.8623758882749826e-05, -1.1444091796875e-05, -0.013883590698242188, 0.0, -0.3007397949695587, -0.04083442687988281, -0.0012270035222172737, -9.5367431640625e-06, 0.0, 0.0, 0.0, -1.4901160284352954e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.02644824981689453, 0.0, -1.4901556968688965, -0.0002810601727105677, -0.01507568359375, 0.0, -0.06625699996948242, -3.6358829675009474e-05, 0.0]}, {"score": -3.285586464442531, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Did", "Damage", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "<UNK>", "Durability", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(DidDamage(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "DidDamage"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Durability"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -0.0610041618347168, 0.0, -0.1265113353729248, 0.0, -0.03292489051818848, 0.0, -0.0001022815631586127, 0.0, 0.0, -3.0517578125e-05, -0.05623435974121094, -6.866455078125e-05, -0.0012764210114255548, -5.7220458984375e-05, -2.741813204920618e-06, -0.013150335289537907, -9.894371032714844e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0004254579544067383, 0.0, -0.0006618499755859375, -2.47955322265625e-05, -0.016357421875, -0.000370025634765625, -7.62939453125e-06, 0.0, 0.0, -0.0001558065414428711, -3.8623758882749826e-05, -1.1444091796875e-05, -0.013883590698242188, 0.0, -1.9603838920593262, -0.009171008132398129, -0.0001257617841474712, -2.288818359375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.002716064453125e-05, -3.62396240234375e-05, -3.814697265625e-06, -2.288818359375e-05, -0.019746780395507812, 0.0, -0.3992692828178406, -0.024013701826334, -0.0012824531877413392, -0.0003490447998046875, 0.0, -0.02054668962955475, -0.0014253429835662246, 0.0]}, {"score": -3.549528039998222, "choice_history": [59, 124, "Gorehowl", "Bear", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Gorehowl", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "combo", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class GorehowlBear(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, combo=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Weapon(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Gorehowl", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon"}], "hole0": "GorehowlBear", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -1.5925099849700928, -0.22055436670780182, -6.103329360485077e-05, -1.3828227565682027e-05, -6.079655122448457e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0688629150390625, -0.008123397827148438, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.006134033203125, -7.62939453125e-06, -0.00012278789654374123, -1.931189763126895e-05, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -3.933906555175781e-06, -3.814697265625e-06, -0.28530311584472656, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000614166259765625, -0.04601478576660156, -4.971027374267578e-05, -0.000164031982421875, -5.7220458984375e-06, -0.5924892425537109, 0.0, -0.0007343292236328125, 0.0, -3.0517578125e-05, 0.0, -0.00013744831085205078, -1.71661376953125e-05, -5.91278076171875e-05, -0.042143821716308594, -3.4332275390625e-05, -0.6192048192024231, -0.00013517681509256363, -0.03204536437988281, 0.0, -0.022212743759155273, -0.00010538093920331448, 0.0, -0.001407623291015625, 0.0, -0.00023494537163060158, 0.0, 0.0, -5.340576171875e-05, -0.000293731689453125, -5.793571108370088e-05, -5.698169115930796e-05, -0.0032062530517578125, -3.4570680327306036e-06, -0.0023995637893676758, -2.384185791015625e-06]}, {"score": -3.6818774545187125, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -0.0610041618347168, 0.0, -0.1265113353729248, 0.0, -0.03292489051818848, 0.0, -0.0001022815631586127, 0.0, 0.0, -3.0517578125e-05, -2.932610511779785, -1.33514404296875e-05, -0.00017677879077382386, -0.00018513202667236328, -1.5497195136049413e-06, -0.002686142921447754, -4.41074053014745e-06]}, {"score": -4.018346348047999, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Damaged", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "<UNK>", "Durability", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(Damaged(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Damaged"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Durability"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -0.0610041618347168, 0.0, -0.1265113353729248, 0.0, -0.03292489051818848, 0.0, -0.0001022815631586127, 0.0, 0.0, -3.0517578125e-05, -0.05623435974121094, -6.866455078125e-05, -0.0012764210114255548, -5.7220458984375e-05, -2.741813204920618e-06, -0.013150335289537907, -9.894371032714844e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0004254579544067383, 0.0, -0.0006618499755859375, -2.47955322265625e-05, -0.016357421875, -0.000370025634765625, -7.62939453125e-06, 0.0, 0.0, -0.0001558065414428711, -3.8623758882749826e-05, -1.1444091796875e-05, -0.013883590698242188, 0.0, -2.6657214164733887, -0.04303896427154541, -4.1961669921875e-05, 0.0, 0.0, 0.0, -3.564349754014984e-05, -4.00543212890625e-05, -1.9073486328125e-06, -2.09808349609375e-05, -0.20419597625732422, 0.0, -0.19130250811576843, -0.04393748193979263, -0.0011721848277375102, -0.0003566741943359375, -1.9073486328125e-06, -0.018301894888281822, -0.001012050430290401, 0.0]}, {"score": -4.1092391584806975, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Gorehowl", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "combo", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, combo=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Weapon(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Gorehowl", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon"}], "hole0": "Gorehowl", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.1304569244384766, -0.0016803741455078125, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0071163177490234375, -5.7220458984375e-06, -0.00014398107305169106, -1.6808504369691946e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -3.933906555175781e-06, -1.9073486328125e-06, -0.185455322265625, -7.62939453125e-06, 0.0, 0.0, -0.0008831024169921875, -0.03789341449737549, -4.398822784423828e-05, -0.0001392364501953125, -7.62939453125e-06, -0.6316080093383789, 0.0, -0.0008373260498046875, 0.0, -2.86102294921875e-05, 0.0, -0.00014507770538330078, -1.71661376953125e-05, -6.103515625e-05, -0.042934417724609375, -3.4332275390625e-05, -0.6084693074226379, -0.00013088554260320961, -0.03215599060058594, 0.0, -0.022457122802734375, -0.0001052617299137637, 0.0, -0.001424551010131836, 0.0, -0.00023339592735283077, 0.0, 0.0, -5.340576171875e-05, -0.000293731689453125, -5.793571108370088e-05, -5.6862481869757175e-05, -0.00319671630859375, -3.4570680327306036e-06, -0.0024033784866333008, -2.384185791015625e-06]}, {"score": -4.241921350859229, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Minion", "Summoned", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "<UNK>", "Durability", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(MinionSummoned(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "EPIC"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionSummoned"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Durability"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -0.0610041618347168, 0.0, -2.620887517929077, 0.0, -0.008295536041259766, 0.0, -0.0001441240165149793, 0.0, 0.0, -4.38690185546875e-05, -0.10475730895996094, -6.866455078125e-05, -0.0015216345200315118, -6.866455078125e-05, -2.741813204920618e-06, -0.012799025513231754, -1.1801719665527344e-05, -0.0002155303955078125, -1.9073486328125e-06, -0.0003243684768676758, 0.0, -0.0007171630859375, -2.288818359375e-05, -0.016143798828125, -0.0004215240478515625, -9.5367431640625e-06, 0.0, 0.0, -0.0001652240753173828, -3.921979805454612e-05, -1.1444091796875e-05, -0.013762474060058594, 0.0, -0.30467692017555237, -0.040767669677734375, -0.0012100925669074059, -9.5367431640625e-06, 0.0, 0.0, 0.0, -1.4901160284352954e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.026609420776367188, 0.0, -0.4527556300163269, -0.024827133864164352, -0.0010318753775209188, -0.0002613067626953125, 0.0, -0.021261192858219147, -0.001324246870353818, 0.0]}, {"score": -4.31111808417063, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Minion", "Summoned", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Increase", "Durability", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(MinionSummoned(), ActionTag(\n            IncreaseDurability(), WeaponSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionSummoned"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "IncreaseDurability"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -0.0610041618347168, 0.0, -0.1265113353729248, 0.0, -0.03292489051818848, 0.0, -0.0001022815631586127, 0.0, 0.0, -3.0517578125e-05, -0.05623435974121094, -6.866455078125e-05, -0.0012764210114255548, -5.7220458984375e-05, -2.741813204920618e-06, -0.013150335289537907, -9.894371032714844e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0004254579544067383, 0.0, -0.0006618499755859375, -2.47955322265625e-05, -0.016357421875, -0.000370025634765625, -7.62939453125e-06, 0.0, 0.0, -0.0001558065414428711, -3.8623758882749826e-05, -1.1444091796875e-05, -0.013883590698242188, 0.0, -0.3007397949695587, -0.04083442687988281, -0.0012270035222172737, -9.5367431640625e-06, 0.0, 0.0, 0.0, -1.4901160284352954e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.02644824981689453, 0.0, -3.0533928871154785, -0.009477353654801846, -0.00010526180267333984, -7.62939453125e-05, -1.9073486328125e-06, -0.02892656810581684, -0.0005961606511846185, 0.0]}, {"score": -4.457866916718785, "choice_history": [59, 124, "Gorehowl", "Bear", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Gorehowl", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "combo", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "<UNK>", "Durability", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class GorehowlBear(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, combo=Battlecry(<UNK>Durability(),\n            WeaponSelector()))\n\n    def create_minion(self, player):\n        return Weapon(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Durability"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Gorehowl", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon"}], "hole0": "GorehowlBear", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -1.5925099849700928, -0.22055436670780182, -6.103329360485077e-05, -1.3828227565682027e-05, -6.079655122448457e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0688629150390625, -0.008123397827148438, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.006134033203125, -7.62939453125e-06, -0.00012278789654374123, -1.931189763126895e-05, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -3.933906555175781e-06, -3.814697265625e-06, -0.28530311584472656, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000614166259765625, -0.04601478576660156, -4.971027374267578e-05, -0.000164031982421875, -5.7220458984375e-06, -0.5924892425537109, 0.0, -0.0007343292236328125, 0.0, -3.0517578125e-05, 0.0, -0.00013744831085205078, -1.71661376953125e-05, -5.91278076171875e-05, -0.042143821716308594, -3.4332275390625e-05, -1.3711045980453491, -0.07593796402215958, -0.010027756914496422, -0.01911163330078125, 0.0, -0.08540640026330948, -0.0006271437159739435, 0.0, -0.018920063972473145, 0.0, -0.0003364883014000952, 0.0, 0.0, -6.103515625e-05, -0.000316619873046875, -6.73532485961914e-05, -6.24652166152373e-05, -0.005483508110046387, -3.933904736186378e-06, -0.0022891759872436523, -2.503394853192731e-06]}, {"score": -4.751003662357789, "choice_history": [59, 124, "Gorehowl", "Bot", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Gorehowl", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "combo", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class GorehowlBot(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, combo=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Weapon(7, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Gorehowl", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon"}], "hole0": "GorehowlBot", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -3.0573904514312744, -8.28489864943549e-05, -6.01988795096986e-05, -1.1086458471254446e-05, -1.7881377516459906e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.04804420471191406, -0.008392333984375, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0047130584716796875, -7.62939453125e-06, -0.00011517712846398354, -2.157687231374439e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -3.933906555175781e-06, -3.814697265625e-06, -0.2613697052001953, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0005931854248046875, -0.04727935791015625, -4.971027374267578e-05, -0.0001735687255859375, -3.814697265625e-06, -0.5977563858032227, 0.0, -0.0007724761962890625, 0.0, -3.0517578125e-05, 0.0, -0.00013744831085205078, -1.71661376953125e-05, -5.91278076171875e-05, -0.04190826416015625, -3.4332275390625e-05, -0.6158910393714905, -0.00013517681509256363, -0.031955718994140625, 0.0, -0.022285103797912598, -0.00010538093920331448, 0.0, -0.001386880874633789, 0.0, -0.0002384021645411849, 0.0, 0.0, -5.340576171875e-05, -0.0002956390380859375, -5.793571108370088e-05, -5.698169115930796e-05, -0.003208160400390625, -3.4570680327306036e-06, -0.0023957490921020508, -2.384185791015625e-06]}, {"score": -4.774329284607347, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Minion", "Summoned", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "<UNK>", "Durability", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.ROGUE, CARD_RARITY.FREE\n            )\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(MinionSummoned(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionSummoned"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Durability"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -3.155508518218994, 0.0, -0.0822441577911377, 0.0, -0.04017019271850586, 0.0, -0.0003299713134765625, 0.0, 0.0, -3.62396240234375e-05, -0.03920173645019531, -7.843971252441406e-05, -0.001328740967437625, -3.24249267578125e-05, -2.622604142743512e-06, -0.01397037599235773, -9.894371032714844e-06, -0.00012969970703125, -1.9073486328125e-06, -0.0004597902297973633, 0.0, -0.0005245208740234375, -2.47955322265625e-05, -0.016923904418945312, -0.00035858154296875, -7.62939453125e-06, 0.0, 0.0, -0.0001728534698486328, -3.898138311342336e-05, -1.1444091796875e-05, -0.01438140869140625, 0.0, -0.3140901029109955, -0.04080390930175781, -0.00123081065248698, -9.5367431640625e-06, 0.0, 0.0, 0.0, -1.4901160284352954e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.02655792236328125, 0.0, -0.45107370615005493, -0.024997398257255554, -0.0010318753775209188, -0.0002651214599609375, 0.0, -0.021245455369353294, -0.0013284190790727735, 0.0]}, {"score": -4.8705398379106555, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Minion", "Summoned", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "<UNK>", "Durability", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(MinionSummoned(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "RARE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionSummoned"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Durability"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -0.0610041618347168, 0.0, -3.3104875087738037, 0.0, -0.028554439544677734, 0.0, -0.00013244150613900274, 0.0, 0.0, -2.86102294921875e-05, -0.027144432067871094, -6.842613220214844e-05, -0.0013310771901160479, -8.96453857421875e-05, -2.861022494471399e-06, -0.011325598694384098, -9.894371032714844e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0005112886428833008, 0.0, -0.0006771087646484375, -2.6702880859375e-05, -0.016195297241210938, -0.0003414154052734375, -7.62939453125e-06, 0.0, 0.0, -0.0001443624496459961, -3.826613465207629e-05, -1.1444091796875e-05, -0.013781547546386719, 0.0, -0.301320880651474, -0.040813446044921875, -0.0012343890266492963, -9.5367431640625e-06, 0.0, 0.0, 0.0, -1.4901160284352954e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.026541709899902344, 0.0, -0.4539610743522644, -0.024859117344021797, -0.0010299680288881063, -0.0002651214599609375, 0.0, -0.021297190338373184, -0.0013238893589004874, 0.0]}, {"score": -5.099971212640412, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Minion", "Summoned", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Target", "Selector", "<EOS>", 164, 51, 130, "Is", "Durability", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(MinionSummoned(), ActionTag(\n            Kill(), TargetSelector(IsDurability())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionSummoned"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "IsDurability"}], "func": {"_type": "Name", "id": "TargetSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -0.0610041618347168, 0.0, -0.1265113353729248, 0.0, -0.03292489051818848, 0.0, -0.0001022815631586127, 0.0, 0.0, -3.0517578125e-05, -0.05623435974121094, -6.866455078125e-05, -0.0012764210114255548, -5.7220458984375e-05, -2.741813204920618e-06, -0.013150335289537907, -9.894371032714844e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0004254579544067383, 0.0, -0.0006618499755859375, -2.47955322265625e-05, -0.016357421875, -0.000370025634765625, -7.62939453125e-06, 0.0, 0.0, -0.0001558065414428711, -3.8623758882749826e-05, -1.1444091796875e-05, -0.013883590698242188, 0.0, -0.3007397949695587, -0.04083442687988281, -0.0012270035222172737, -9.5367431640625e-06, 0.0, 0.0, 0.0, -1.4901160284352954e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.02644824981689453, 0.0, -2.4491562843322754, -0.003660456044599414, -0.019632339477539062, -9.5367431640625e-06, 0.0, 0.0, -0.481292188167572, -0.00038254252285696566, 0.0, -0.000186920166015625, -0.0018253326416015625, -1.9073486328125e-06, -0.08644562214612961, -0.8388364315032959, 0.0]}, {"score": -5.391225613847382, "choice_history": [59, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 144, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Minion", "Summoned", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Target", "Selector", "<EOS>", 164, 51, 130, "Is", "Weapon", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(MinionSummoned(), ActionTag(\n            Kill(), TargetSelector(IsWeapon())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole0": "Gorehowl", "hole3": "FREE"}}], "hole1": "WeaponCard", "hole6": [{"hole2": 7, "hole1": 7, "_type": "Template8", "hole0": "Weapon", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "MinionSummoned"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "IsWeapon"}], "func": {"_type": "Name", "id": "TargetSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Gorehowl", "hole3": "create_weapon"}, "score_history": [-1.9073486328125e-06, -0.003177642822265625, -0.0006375167286023498, -0.39468973875045776, -5.4835247283335775e-05, -3.0040489946259186e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.1268787384033203, -3.814697265625e-06, -1.311301275563892e-06, -1.668929871811997e-05, -9.326636791229248e-05, -1.5497207641601562e-05, -0.0610041618347168, 0.0, -0.1265113353729248, 0.0, -0.03292489051818848, 0.0, -0.0001022815631586127, 0.0, 0.0, -3.0517578125e-05, -0.05623435974121094, -6.866455078125e-05, -0.0012764210114255548, -5.7220458984375e-05, -2.741813204920618e-06, -0.013150335289537907, -9.894371032714844e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0004254579544067383, 0.0, -0.0006618499755859375, -2.47955322265625e-05, -0.016357421875, -0.000370025634765625, -7.62939453125e-06, 0.0, 0.0, -0.0001558065414428711, -3.8623758882749826e-05, -1.1444091796875e-05, -0.013883590698242188, 0.0, -0.3007397949695587, -0.04083442687988281, -0.0012270035222172737, -9.5367431640625e-06, 0.0, 0.0, 0.0, -1.4901160284352954e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.02644824981689453, 0.0, -2.4491562843322754, -0.003660456044599414, -0.019632339477539062, -9.5367431640625e-06, 0.0, 0.0, -0.481292188167572, -0.00038254252285696566, 0.0, -0.000186920166015625, -0.0018253326416015625, -1.9073486328125e-06, -0.08644562214612961, -1.1300908327102661, 0.0]}], "gold_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(And(IsHero(),\n            TargetIsMinion())), [ActionTag(IncreaseDurability(),\n            WeaponSelector()), ActionTag(IncreaseWeaponAttack(-1),\n            WeaponSelector()), ActionTag(Give(BuffUntil(ChangeAttack(1),\n            AttackCompleted())), HeroSelector())])])\n"}
{"beams": [{"score": -0.6397320457049815, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Hound", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -0.20952606201171875, -2.288818359375e-05, -0.00926971435546875, -4.76837158203125e-05, -9.5367431640625e-06, -3.099440846199286e-06, -0.00014065760478843004, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.816032014787197e-05, -3.814697265625e-06, -0.030595779418945312, 0.0, -0.10572242736816406, -1.33514404296875e-05, -1.9073486328125e-06, -4.756441921927035e-05, -5.841255187988281e-06, -0.0001773834228515625, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -5.91278076171875e-05, 0.0, -3.814697265625e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -0.00052642822265625, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.2400972843170166, -3.814697265625e-06, -9.918212890625e-05, -0.0031385421752929688, -0.0006351470947265625, 0.0, -2.622604142743512e-06, 0.0, -1.5497195136049413e-06, -2.2172796889208257e-05, -3.576278118089249e-07, -0.0004863739013671875, -1.9073486328125e-06, -0.0343095064163208, 0.0, -2.86102294921875e-05, -0.0021991729736328125, -0.0003509521484375, 0.0]}, {"score": -1.9842238851868998, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Hound", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -0.20952606201171875, -2.288818359375e-05, -0.00926971435546875, -4.76837158203125e-05, -9.5367431640625e-06, -3.099440846199286e-06, -0.00014065760478843004, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.816032014787197e-05, -3.814697265625e-06, -0.030595779418945312, 0.0, -0.10572242736816406, -1.33514404296875e-05, -1.9073486328125e-06, -4.756441921927035e-05, -5.841255187988281e-06, -0.0001773834228515625, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -5.91278076171875e-05, 0.0, -3.814697265625e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -0.00052642822265625, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.5926449298858643, 0.0, -1.52587890625e-05, -2.47955322265625e-05, -0.000789642333984375, 0.0, -9.536738616588991e-07, 0.0, -3.4570634852570947e-06, -1.561636418045964e-05, -8.344646857949556e-07, -0.0003986358642578125, -1.9073486328125e-06, -0.029300808906555176, 0.0, -2.6702880859375e-05, -0.0023746490478515625, -0.000270843505859375, 0.0]}, {"score": -3.2482277924024743, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 89, 35, 169, 49, 121, "Hound", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 47, 113, "False", "<EOS>", 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 0, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -1.6662979125976562, -0.0009098052978515625, -0.05494213104248047, -0.0027446746826171875, -0.0005207061767578125, -5.006777428206988e-06, -0.028131017461419106, -0.05360889434814453, -0.000988006591796875, -0.045461855828762054, -8.844937838148326e-05, 0.0, 0.0, 0.0, 0.0, -0.00013959407806396484, -3.814697265625e-06, -0.6307363510131836, 0.0, -0.7081079483032227, -1.9073486328125e-06, -3.814697265625e-06, -0.00011539459228515625, -5.9604644775390625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00014495849609375, 0.0, -0.0014536380767822266, -5.7220458984375e-06, -0.01992511749267578, -3.814697265625e-06, -0.000171661376953125, 0.0, -0.00946944672614336, 0.0, -0.0001373291015625, -0.0010204315185546875, -0.0010614395141601562, 0.0, -2.1457672119140625e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -3.349747566971928e-05, -9.536738616588991e-07, -0.000431060791015625, -1.9073486328125e-06, -0.01764976978302002, 0.0, -2.6702880859375e-05, -0.0016078948974609375, -0.0003204345703125, 0.0]}, {"score": -3.2721452355349925, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 89, 35, 169, 49, 121, "Hound", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 52, 47, 113, "False", "<EOS>", 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 0, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -1.6662979125976562, -0.0009098052978515625, -0.05494213104248047, -0.0027446746826171875, -0.0005207061767578125, -5.006777428206988e-06, -0.028131017461419106, -0.05360889434814453, -0.000988006591796875, -0.045461855828762054, -8.844937838148326e-05, 0.0, 0.0, 0.0, 0.0, -0.00013959407806396484, -3.814697265625e-06, -1.3516674041748047, 0.0, -0.013841629028320312, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001577138900756836, -5.9604644775390625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.002264261245727539, -5.7220458984375e-06, -0.016000747680664062, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.009564105421304703, 0.0, -0.0001430511474609375, -0.0009918212890625, -0.0011758804321289062, -1.1920838005607948e-07, -2.2649765014648438e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -3.278223448432982e-05, -1.0728830375228426e-06, -0.0004329681396484375, -1.9073486328125e-06, -0.017831921577453613, 0.0, -2.6702880859375e-05, -0.0015869140625, -0.00032806396484375, 0.0]}, {"score": -3.329239589616968, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Hound", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -0.20952606201171875, -2.288818359375e-05, -0.00926971435546875, -4.76837158203125e-05, -9.5367431640625e-06, -3.099440846199286e-06, -0.00014065760478843004, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.816032014787197e-05, -3.814697265625e-06, -0.030595779418945312, 0.0, -2.3004627227783203, -1.9073486328125e-06, -7.62939453125e-06, -0.4307746887207031, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.00011265256034675986, -2.0265579223632812e-06, -0.0001220703125, -1.9073486328125e-05, -8.58306884765625e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -0.00052642822265625, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -0.3097129464149475, -1.9073486328125e-06, -0.0001621246337890625, -0.0020151138305664062, -0.000492095947265625, 0.0, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.4305104514278355e-06, -2.026545007538516e-05, -3.576278118089249e-07, -0.0004291534423828125, -1.9073486328125e-06, -0.0299149751663208, 0.0, -2.6702880859375e-05, -0.002162933349609375, -0.000354766845703125, 0.0]}, {"score": -3.3511177102705574, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 89, 35, 169, 49, 121, "Hound", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 47, 113, "False", "<EOS>", 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 0, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -1.6662979125976562, -0.0009098052978515625, -0.05494213104248047, -0.0027446746826171875, -0.0005207061767578125, -5.006777428206988e-06, -0.028131017461419106, -0.05360889434814453, -0.000988006591796875, -0.045461855828762054, -8.844937838148326e-05, 0.0, 0.0, 0.0, 0.0, -0.00013959407806396484, -3.814697265625e-06, -0.6307363510131836, 0.0, -0.7690696716308594, -1.9073486328125e-06, -0.000133514404296875, -0.0024154186248779297, -2.09808349609375e-05, -0.0002193450927734375, -3.814697265625e-06, -0.0002123117446899414, -2.0265579223632812e-06, -2.86102294921875e-05, -1.9073486328125e-06, -6.103515625e-05, 0.0, -0.0018311738967895508, -3.814697265625e-06, -0.058838844299316406, -3.814697265625e-06, -0.0001888275146484375, 0.0, -0.009806354530155659, 0.0, -0.000164031982421875, -0.00052642822265625, -0.0002269744873046875, 0.0, -2.1457672119140625e-06, -3.576278118089249e-07, -1.311301275563892e-06, -3.075573840760626e-05, -8.344646857949556e-07, -0.0006351470947265625, -1.9073486328125e-06, -0.018340229988098145, 0.0, -2.86102294921875e-05, -0.0012722015380859375, -0.0005359649658203125, 0.0]}, {"score": -3.9670874598448833, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Hound", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -0.20952606201171875, -2.288818359375e-05, -0.00926971435546875, -4.76837158203125e-05, -9.5367431640625e-06, -3.099440846199286e-06, -0.00014065760478843004, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.816032014787197e-05, -3.814697265625e-06, -0.030595779418945312, 0.0, -2.3004627227783203, -1.9073486328125e-06, -7.62939453125e-06, -1.0529470443725586, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -0.00015032233204692602, -2.0265579223632812e-06, -0.0001392364501953125, -2.47955322265625e-05, -7.62939453125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -0.00054931640625, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.325307160615921, -1.9073486328125e-06, -0.00016021728515625, -0.0016384124755859375, -0.0005474090576171875, 0.0, -2.1457672119140625e-06, -1.1920928244535389e-07, -1.5497195136049413e-06, -2.0146244423813187e-05, -3.576278118089249e-07, -0.0004730224609375, -1.9073486328125e-06, -0.030014991760253906, 0.0, -2.6702880859375e-05, -0.0022106170654296875, -0.0003566741943359375, 0.0]}, {"score": -4.066797805665885, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Hound", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -0.20952606201171875, -2.288818359375e-05, -0.00926971435546875, -4.76837158203125e-05, -9.5367431640625e-06, -3.099440846199286e-06, -0.00014065760478843004, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.816032014787197e-05, -3.814697265625e-06, -3.534853935241699, 0.0, -0.01781463623046875, -3.814697265625e-06, -1.9073486328125e-06, -5.376337139750831e-05, -5.7220458984375e-06, -0.0001888275146484375, -1.1444091796875e-05, -6.103515625e-05, 0.0, -6.4849853515625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -1.1444091796875e-05, -0.0005359649658203125, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.25108006596565247, -3.814697265625e-06, -9.34600830078125e-05, -0.0031557083129882812, -0.0006256103515625, 0.0, -2.622604142743512e-06, 0.0, -1.5497195136049413e-06, -2.062307066807989e-05, -3.576278118089249e-07, -0.0004711151123046875, -1.9073486328125e-06, -0.03405296802520752, 0.0, -2.86102294921875e-05, -0.00217437744140625, -0.0003528594970703125, 0.0]}, {"score": -4.191161338788959, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 89, 35, 169, 49, 121, "Hound", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "BEAST", "<EOS>", 52, 47, 113, "False", "<EOS>", 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 0, CHARACTER_CLASS.BEAST, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "BEAST"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -1.6662979125976562, -0.0009098052978515625, -0.05494213104248047, -0.0027446746826171875, -0.0005207061767578125, -5.006777428206988e-06, -0.028131017461419106, -0.05360889434814453, -0.000988006591796875, -0.045461855828762054, -8.844937838148326e-05, 0.0, 0.0, 0.0, 0.0, -0.00013959407806396484, -3.814697265625e-06, -1.7855224609375, -1.9073486328125e-06, -0.49880027770996094, -3.814697265625e-06, -1.1444091796875e-05, -0.00020802021026611328, -5.9604644775390625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0001201629638671875, 0.0, -0.0017931461334228516, -5.7220458984375e-06, -0.016752243041992188, -1.9073486328125e-06, -0.00016224384307861328, 0.0, -0.009468241594731808, 0.0, -0.0001316070556640625, -0.0011539459228515625, -0.0020799636840820312, 0.0, -2.1457672119140625e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -3.302064578747377e-05, -9.536738616588991e-07, -0.000396728515625, -1.9073486328125e-06, -0.016771435737609863, 0.0, -2.6702880859375e-05, -0.0016040802001953125, -0.000308990478515625, 0.0]}, {"score": -4.354038757781893, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Hound", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -0.20952606201171875, -2.288818359375e-05, -0.00926971435546875, -4.76837158203125e-05, -9.5367431640625e-06, -3.099440846199286e-06, -0.00014065760478843004, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.816032014787197e-05, -3.814697265625e-06, -0.030595779418945312, 0.0, -2.3004627227783203, -1.9073486328125e-06, -7.62939453125e-06, -0.4307746887207031, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.00011265256034675986, -2.0265579223632812e-06, -0.0001220703125, -1.9073486328125e-05, -8.58306884765625e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -0.00052642822265625, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -1.3415913581848145, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -0.0010967254638671875, 0.0, -2.2649765014648438e-06, 0.0, -2.145764938177308e-06, -1.549713488202542e-05, -5.960462772236497e-07, -0.000308990478515625, -1.9073486328125e-06, -0.02455151081085205, 0.0, -2.47955322265625e-05, -0.002201080322265625, -0.00026702880859375, 0.0]}, {"score": -4.62948660331454, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Hound", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, spell_damage=1)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -0.20952606201171875, -2.288818359375e-05, -0.00926971435546875, -4.76837158203125e-05, -9.5367431640625e-06, -3.099440846199286e-06, -0.00014065760478843004, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.816032014787197e-05, -3.814697265625e-06, -0.030595779418945312, 0.0, -0.10572242736816406, -1.33514404296875e-05, -1.9073486328125e-06, -4.756441921927035e-05, -5.841255187988281e-06, -0.0001773834228515625, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -5.91278076171875e-05, 0.0, -3.814697265625e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -0.00052642822265625, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.2400972843170166, -3.814697265625e-06, -9.918212890625e-05, -0.0031385421752929688, -0.0006351470947265625, 0.0, -2.622604142743512e-06, 0.0, -1.5497195136049413e-06, -2.2172796889208257e-05, -3.576278118089249e-07, -0.0004863739013671875, -1.9073486328125e-06, -4.001392364501953, 0.0, -0.02525043487548828]}, {"score": -4.933375281427793, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Hound", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -0.20952606201171875, -2.288818359375e-05, -0.00926971435546875, -4.76837158203125e-05, -9.5367431640625e-06, -3.099440846199286e-06, -0.00014065760478843004, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.816032014787197e-05, -3.814697265625e-06, -0.030595779418945312, 0.0, -2.3004627227783203, -1.9073486328125e-06, -7.62939453125e-06, -1.0529470443725586, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -0.00015032233204692602, -2.0265579223632812e-06, -0.0001392364501953125, -2.47955322265625e-05, -7.62939453125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -0.00054931640625, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -1.2982189655303955, 0.0, -2.09808349609375e-05, -9.5367431640625e-06, -0.00125885009765625, 0.0, -2.1457672119140625e-06, -1.1920928244535389e-07, -2.145764938177308e-06, -1.5616344171576202e-05, -5.960462772236497e-07, -0.0003299713134765625, -1.9073486328125e-06, -0.024628758430480957, 0.0, -2.47955322265625e-05, -0.0022754669189453125, -0.0002613067626953125, 0.0]}, {"score": -5.045088150218646, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 89, 35, 169, 49, 121, "Hound", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "BEAST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 47, 113, "False", "<EOS>", 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 0, CHARACTER_CLASS.BEAST, CARD_RARITY.\n            FREE, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "BEAST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -1.6662979125976562, -0.0009098052978515625, -0.05494213104248047, -0.0027446746826171875, -0.0005207061767578125, -5.006777428206988e-06, -0.028131017461419106, -0.05360889434814453, -0.000988006591796875, -0.045461855828762054, -8.844937838148326e-05, 0.0, 0.0, 0.0, 0.0, -0.00013959407806396484, -3.814697265625e-06, -1.7855224609375, -1.9073486328125e-06, -1.3073863983154297, -1.1444091796875e-05, -0.00058746337890625, -0.0011749267578125, -3.0517578125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.00021588802337646484, -2.0265579223632812e-06, -2.09808349609375e-05, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -0.0019665956497192383, -3.814697265625e-06, -0.06118202209472656, -3.814697265625e-06, -0.0001888275146484375, 0.0, -0.009901243261992931, 0.0, -0.0001583099365234375, -0.0005340576171875, -0.00032806396484375, 0.0, -2.1457672119140625e-06, -3.576278118089249e-07, -1.4305104514278355e-06, -3.0755731131648645e-05, -9.536738616588991e-07, -0.0005741119384765625, -1.9073486328125e-06, -0.017377018928527832, 0.0, -2.86102294921875e-05, -0.001270294189453125, -0.000514984130859375, 0.0]}, {"score": -5.2974121995944685, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Hound", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "Minion", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, Minion):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "Minion", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -0.20952606201171875, -2.288818359375e-05, -0.00926971435546875, -4.76837158203125e-05, -9.5367431640625e-06, -3.099440846199286e-06, -0.00014065760478843004, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.816032014787197e-05, -3.814697265625e-06, -0.030595779418945312, 0.0, -0.10572242736816406, -1.33514404296875e-05, -1.9073486328125e-06, -4.756441921927035e-05, -5.841255187988281e-06, -0.0001773834228515625, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -5.91278076171875e-05, 0.0, -3.814697265625e-06, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -0.00052642822265625, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.860783576965332, -0.04319000244140625, -1.52587890625e-05, -9.918212890625e-05, -0.0005016326904296875, -1.1920565157197416e-07, -3.576278118089249e-07, 0.0, -2.145764938177308e-06, -1.7762100469553843e-05, -4.768370445162873e-07, -0.0003452301025390625, -1.9073486328125e-06, -0.031627774238586426, 0.0, -2.6702880859375e-05, -0.002132415771484375, -0.00031280517578125, 0.0]}, {"score": -5.361150665001787, "choice_history": [59, 124, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Hound", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Hound", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -0.000156402587890625, -0.0001646144810365513, -0.00034970726119354367, -4.410190740600228e-06, -1.9073486328125e-06, -8.583057933719829e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0008563995361328125, -0.20952606201171875, -2.288818359375e-05, -0.00926971435546875, -4.76837158203125e-05, -9.5367431640625e-06, -3.099440846199286e-06, -0.00014065760478843004, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.816032014787197e-05, -3.814697265625e-06, -3.534853935241699, 0.0, -0.01781463623046875, -3.814697265625e-06, -1.9073486328125e-06, -5.376337139750831e-05, -5.7220458984375e-06, -0.0001888275146484375, -1.1444091796875e-05, -6.103515625e-05, 0.0, -6.4849853515625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -1.1444091796875e-05, -0.0005359649658203125, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.5535626411437988, 0.0, -1.52587890625e-05, -2.47955322265625e-05, -0.0007457733154296875, 0.0, -9.536738616588991e-07, 0.0, -3.3378546504536644e-06, -1.573557165102102e-05, -7.152555099310121e-07, -0.0003986358642578125, -1.9073486328125e-06, -0.0290147066116333, 0.0, -2.6702880859375e-05, -0.0023326873779296875, -0.000274658203125, 0.0]}], "gold_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}
{"beams": [{"score": -0.5041222306708093, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "7", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(7), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 7}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -0.3271970748901367, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, -3.576278118089249e-07, -0.0016450876137241721, 0.0, -4.1961669921875e-05, 0.0, -0.0002346038818359375, -0.0023592570796608925, -3.576272320060525e-06, -0.005496978759765625, -1.9073486328125e-06, -0.06999599933624268, -1.1920928244535389e-07, -0.011226654052734375, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0001195669174194336, -1.9073486328125e-06, -0.0001125335693359375, -0.000274658203125, -1.9073486328125e-06, -1.1444091796875e-05, -0.000217437744140625, -0.0011976163368672132, -0.00029583368450403214, -1.9073486328125e-05, -0.00054168701171875, -9.5367431640625e-06, -0.030707716941833496, -0.0003976280859205872, -0.030355453491210938, 0.0, -0.00778444018214941, -0.000531792058609426, 0.0, -0.001202744897454977, 0.0, -0.006874082610011101, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.4570680327306036e-06, -0.000102996826171875, -7.152555099310121e-07, -8.225440979003906e-06, -3.588141771615483e-05]}, {"score": -2.0047692429352537, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 48, 117, "3", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "7", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(7), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 7}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -1.2804279327392578, -7.62939453125e-06, -0.4780503511428833, -1.2040087312925607e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-05, -4.41074053014745e-06, 0.0, -0.005051970481872559, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.000110626220703125, -0.014324360527098179, -3.814689989667386e-06, -0.001644134521484375, -1.52587890625e-05, -0.03984546661376953, 0.0, -0.003688812255859375, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00014483928680419922, -1.9073486328125e-06, -0.00018310546875, -0.000579833984375, -3.814697265625e-06, -1.1444091796875e-05, -0.0002460479736328125, -0.001182153238914907, -0.00024005869636312127, -1.52587890625e-05, -0.000499725341796875, -1.1444091796875e-05, -0.1078491136431694, -0.0003028801584150642, -0.04732513427734375, 0.0, -0.009255021810531616, -0.0005267855012789369, 0.0, -0.0009722783579491079, 0.0, -0.00689668208360672, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.4570680327306036e-06, -9.72747802734375e-05, -7.152555099310121e-07, -8.225440979003906e-06, -3.588141771615483e-05]}, {"score": -2.9000523470426742, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "7", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(7), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 7}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -1.2804279327392578, -7.62939453125e-06, -1.3533822298049927, -5.4477262892760336e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -2.86102294921875e-05, -3.4570680327306036e-06, 0.0, -0.001086115837097168, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0002040863037109375, -0.0413663312792778, -2.861018856492592e-06, -0.0018482208251953125, -2.288818359375e-05, -0.028779983520507812, 0.0, -0.0032892227172851562, -1.71661376953125e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00014293193817138672, -1.9073486328125e-06, -0.0002002716064453125, -0.0006008148193359375, -3.814697265625e-06, -9.5367431640625e-06, -0.000225067138671875, -0.0011467583244666457, -0.00023266946664080024, -1.52587890625e-05, -0.0004901885986328125, -1.1444091796875e-05, -0.11995863169431686, -0.00028869722154922783, -0.04361152648925781, 0.0, -0.009165258146822453, -0.0005133148515596986, 0.0, -0.0009515546262264252, 0.0, -0.006800150964409113, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.4570680327306036e-06, -9.72747802734375e-05, -7.152555099310121e-07, -8.225440979003906e-06, -3.588141771615483e-05]}, {"score": -3.5666452325630758, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "combo", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "7", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, combo=Battlecry(Damage(7), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 7}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -0.3271970748901367, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, -3.576278118089249e-07, -0.0016450876137241721, 0.0, -4.1961669921875e-05, 0.0, -0.0002346038818359375, -0.0023592570796608925, -3.576272320060525e-06, -0.005496978759765625, -1.9073486328125e-06, -3.1296119689941406, 0.0, -0.010889053344726562, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00021827220916748047, -1.9073486328125e-06, -0.000133514404296875, -0.000354766845703125, -3.814697265625e-06, -7.62939453125e-06, -0.0002613067626953125, -0.0009096766589209437, -0.0002076410164590925, -3.4332275390625e-05, -0.0005779266357421875, -9.5367431640625e-06, -0.0314936637878418, -0.000401440222049132, -0.03333091735839844, 0.0, -0.007605872582644224, -0.0005140298744663596, 0.0, -0.0011040213285014033, 0.0, -0.00673345010727644, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.4570680327306036e-06, -0.000102996826171875, -7.152555099310121e-07, -8.225440979003906e-06, -3.588141771615483e-05]}, {"score": -3.7685970753400397, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "7", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(7), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 7}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -1.2804279327392578, -7.62939453125e-06, -2.2137579917907715, -1.3589766240329482e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.38690185546875e-05, -6.866455078125e-05, -1.03711727206246e-05, 0.0, -0.026897788047790527, 0.0, -0.0001888275146484375, 0.0, -7.2479248046875e-05, -0.005926147568970919, -8.4638240878121e-06, -0.002643585205078125, -1.9073486328125e-05, -0.034857869148254395, 0.0, -0.0027685165405273438, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.00012958049774169922, -1.9073486328125e-06, -0.0002002716064453125, -0.000579833984375, -3.814697265625e-06, -7.62939453125e-06, -0.0002269744873046875, -0.0011306614615023136, -0.0002479245886206627, -1.1444091796875e-05, -0.0005855560302734375, -1.33514404296875e-05, -0.14263151586055756, -0.00023518234957009554, -0.03265953063964844, 0.0, -0.008805728517472744, -0.0005099769914522767, 0.0, -0.0009274966432712972, 0.0, -0.0068891835398972034, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.3378591979271732e-06, -9.5367431640625e-05, -7.152555099310121e-07, -8.225440979003906e-06, -3.5762212064582855e-05]}, {"score": -4.335369208092224, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -0.3271970748901367, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, -3.576278118089249e-07, -0.0016450876137241721, 0.0, -4.1961669921875e-05, 0.0, -0.0002346038818359375, -0.0023592570796608925, -3.576272320060525e-06, -0.005496978759765625, -1.9073486328125e-06, -0.06999599933624268, -1.1920928244535389e-07, -0.011226654052734375, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0001195669174194336, -1.9073486328125e-06, -0.0001125335693359375, -0.000274658203125, -1.9073486328125e-06, -1.1444091796875e-05, -0.000217437744140625, -0.0011976163368672132, -0.00029583368450403214, -1.9073486328125e-05, -0.00054168701171875, -9.5367431640625e-06, -3.4997143745422363, -0.0009213052107952535, -0.4001626968383789, 0.0, -0.004189252853393555, -0.0004165172576904297, 0.0, -0.0004590576281771064, 0.0, -0.0032420421484857798, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.218649908376392e-06, -9.72747802734375e-05, -7.152555099310121e-07, -8.344650268554688e-06, -3.731188189703971e-05]}, {"score": -4.616348410519549, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 48, 117, "3", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -1.2804279327392578, -7.62939453125e-06, -0.4780503511428833, -1.2040087312925607e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-05, -4.41074053014745e-06, 0.0, -0.005051970481872559, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.000110626220703125, -0.014324360527098179, -3.814689989667386e-06, -0.001644134521484375, -1.52587890625e-05, -0.03984546661376953, 0.0, -0.003688812255859375, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00014483928680419922, -1.9073486328125e-06, -0.00018310546875, -0.000579833984375, -3.814697265625e-06, -1.1444091796875e-05, -0.0002460479736328125, -0.001182153238914907, -0.00024005869636312127, -1.52587890625e-05, -0.000499725341796875, -1.1444091796875e-05, -2.281815528869629, -0.0008387639536522329, -0.49347591400146484, 0.0, -0.004644513130187988, -0.0003955364227294922, 0.0, -0.0004192450433038175, 0.0, -0.003125906689092517, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.218649908376392e-06, -8.96453857421875e-05, -7.152555099310121e-07, -8.344650268554688e-06, -3.719267624546774e-05]}, {"score": -5.349915697543956, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "7", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", 41, 89, 24, 112, "Hero", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=(Battlecry(Damage(7), HeroSelector(\n            )), HeroSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 7}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "HeroSelector"}}]}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -0.3271970748901367, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, -3.576278118089249e-07, -0.0016450876137241721, 0.0, -4.1961669921875e-05, 0.0, -0.0002346038818359375, -0.0023592570796608925, -3.576272320060525e-06, -0.005496978759765625, -1.9073486328125e-06, -0.06999599933624268, -1.1920928244535389e-07, -4.549522399902344, -0.01761341094970703, -6.866455078125e-05, -6.103515625e-05, -5.91278076171875e-05, 0.0, -1.9073486328125e-06, -0.0034408560022711754, -1.9550323486328125e-05, -0.0001239776611328125, -0.001308441162109375, -3.4332275390625e-05, -4.57763671875e-05, -5.7220458984375e-06, -0.0030624556820839643, -0.00027998394216410816, -5.7220458984375e-06, -0.0005207061767578125, -3.814697265625e-06, -0.027546405792236328, -0.0001808300439734012, -0.023598670959472656, 0.0, -0.005317187402397394, -0.0002751343708951026, 0.0, -0.006512641906738281, -3.0517578125e-05, 0.0, 0.0, -0.23235219717025757, -0.005118727684020996, 0.0, -0.04496192932128906, -0.0009288787841796875, -1.9073486328125e-06, -0.014305556192994118, -0.00031733509968034923, -2.0265579223632812e-06, -7.450580596923828e-05, 0.0, -7.617341179866344e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -2.09808349609375e-05, -1.9073485191256623e-06, -2.384185791015625e-06, -4.70876730105374e-05, -1.0728830375228426e-06, -8.70227722771233e-06, -3.457015918684192e-05]}, {"score": -5.379196599803436, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -1.2804279327392578, -7.62939453125e-06, -1.3533822298049927, -5.4477262892760336e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -2.86102294921875e-05, -3.4570680327306036e-06, 0.0, -0.001086115837097168, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0002040863037109375, -0.0413663312792778, -2.861018856492592e-06, -0.0018482208251953125, -2.288818359375e-05, -0.028779983520507812, 0.0, -0.0032892227172851562, -1.71661376953125e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00014293193817138672, -1.9073486328125e-06, -0.0002002716064453125, -0.0006008148193359375, -3.814697265625e-06, -9.5367431640625e-06, -0.000225067138671875, -0.0011467583244666457, -0.00023266946664080024, -1.52587890625e-05, -0.0004901885986328125, -1.1444091796875e-05, -2.181333541870117, -0.000836858176626265, -0.4698200225830078, 0.0, -0.004556536674499512, -0.0003821849822998047, 0.0, -0.00041936454363167286, 0.0, -0.003093103412538767, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.218649908376392e-06, -8.96453857421875e-05, -7.152555099310121e-07, -8.344650268554688e-06, -3.731188189703971e-05]}, {"score": -5.438170189669954, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "7", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(7), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 7}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -0.3271970748901367, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, -3.576278118089249e-07, -0.0016450876137241721, 0.0, -4.1961669921875e-05, 0.0, -0.0002346038818359375, -0.0023592570796608925, -3.576272320060525e-06, -0.005496978759765625, -1.9073486328125e-06, -0.06999599933624268, -1.1920928244535389e-07, -0.011226654052734375, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0001195669174194336, -1.9073486328125e-06, -0.0001125335693359375, -0.000274658203125, -1.9073486328125e-06, -1.1444091796875e-05, -0.000217437744140625, -0.0011976163368672132, -0.00029583368450403214, -1.9073486328125e-05, -0.00054168701171875, -9.5367431640625e-06, -0.030707716941833496, -0.0003976280859205872, -0.030355453491210938, 0.0, -4.946493625640869, -8.010857709450647e-05, 0.0, -0.00041597118251957, 0.0, -0.0034069675020873547, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.09808349609375e-05, -2.0265579223632812e-06, -3.4570680327306036e-06, -0.000156402587890625, -7.152555099310121e-07, -8.225440979003906e-06, -3.623903467087075e-05]}, {"score": -5.6518237187598785, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "7", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Random", "Amount", "<EOS>", 165, 56, 48, 117, "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(7), MinionSelector\n            (RandomAmount(1, 4))))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 7}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}, {"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "RandomAmount"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -0.3271970748901367, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, -3.576278118089249e-07, -0.0016450876137241721, 0.0, -4.1961669921875e-05, 0.0, -0.0002346038818359375, -0.0023592570796608925, -3.576272320060525e-06, -0.005496978759765625, -1.9073486328125e-06, -0.06999599933624268, -1.1920928244535389e-07, -0.011226654052734375, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0001195669174194336, -1.9073486328125e-06, -0.0001125335693359375, -0.000274658203125, -1.9073486328125e-06, -1.1444091796875e-05, -0.000217437744140625, -0.0011976163368672132, -0.00029583368450403214, -1.9073486328125e-05, -0.00054168701171875, -9.5367431640625e-06, -0.030707716941833496, -0.0003976280859205872, -3.526195526123047, -0.07355499267578125, -1.9073486328125e-06, -1.9073486328125e-06, -0.14857891201972961, -0.00017821788787841797, -2.1457668481161818e-05, -0.1249856948852539, -0.012201309204101562, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.5205156803131104, -0.020744169130921364, -0.007605068851262331, -0.0028209686279296875, -0.5944032669067383, -0.007947921752929688, -6.866455078125e-05, -0.10998664051294327, -2.396090167167131e-05, -0.01684260368347168, -3.814697265625e-06, -0.027243630960583687, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.000347137451171875, -1.9073486328125e-06, -5.352455627871677e-05, -0.0002205371856689453, -1.0132780516869389e-05, -8.106231689453125e-06, -5.45965667697601e-05]}, {"score": -6.3947339524881315, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "4", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Random", "Amount", "<EOS>", 165, 56, 48, 117, "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (RandomAmount(1, 4))))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}, {"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "RandomAmount"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -0.3271970748901367, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, -3.576278118089249e-07, -0.0016450876137241721, 0.0, -4.1961669921875e-05, 0.0, -0.0002346038818359375, -0.0023592570796608925, -3.576272320060525e-06, -0.005496978759765625, -1.9073486328125e-06, -0.06999599933624268, -1.1920928244535389e-07, -0.011226654052734375, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0001195669174194336, -1.9073486328125e-06, -0.0001125335693359375, -0.000274658203125, -1.9073486328125e-06, -1.1444091796875e-05, -0.000217437744140625, -0.0011976163368672132, -0.00029583368450403214, -1.9073486328125e-05, -0.00054168701171875, -9.5367431640625e-06, -3.4997143745422363, -0.0009213052107952535, -1.1096010208129883, -0.0262603759765625, -1.9073486328125e-06, -1.9073486328125e-06, -0.06324107944965363, -0.0003094673156738281, -1.8954275219584815e-05, -0.1425180435180664, -0.01390838623046875, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.4891648292541504, -0.02088518813252449, -0.005882853642106056, -0.00370025634765625, -0.4369964599609375, -0.011021614074707031, -6.866455078125e-05, -0.10049968957901001, -2.5152970920316875e-05, -0.014913439750671387, -3.814697265625e-06, -0.028277745470404625, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.3643765568267554e-05, -0.0002243518829345703, -1.0251987987430766e-05, -8.106231689453125e-06, -5.590779983322136e-05]}, {"score": -6.447618296543396, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 48, 117, "3", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "4", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Random", "Amount", "<EOS>", 165, 56, 48, 117, "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (RandomAmount(1, 4))))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}, {"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "RandomAmount"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -1.2804279327392578, -7.62939453125e-06, -0.4780503511428833, -1.2040087312925607e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-05, -4.41074053014745e-06, 0.0, -0.005051970481872559, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.000110626220703125, -0.014324360527098179, -3.814689989667386e-06, -0.001644134521484375, -1.52587890625e-05, -0.03984546661376953, 0.0, -0.003688812255859375, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00014483928680419922, -1.9073486328125e-06, -0.00018310546875, -0.000579833984375, -3.814697265625e-06, -1.1444091796875e-05, -0.0002460479736328125, -0.001182153238914907, -0.00024005869636312127, -1.52587890625e-05, -0.000499725341796875, -1.1444091796875e-05, -2.281815528869629, -0.0008387639536522329, -0.9431591033935547, -0.021427154541015625, -1.9073486328125e-06, -1.9073486328125e-06, -0.06813134253025055, -0.0003224611282348633, -1.978873842745088e-05, -0.13103294372558594, -0.009099960327148438, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.45250675082206726, -0.01841590367257595, -0.005339259281754494, -0.0038776397705078125, -0.4789085388183594, -0.010872840881347656, -6.103515625e-05, -0.14404340088367462, -3.5762335755862296e-05, -0.01126480009406805, -3.814697265625e-06, -0.03428231179714203, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0003414154052734375, -1.9073486328125e-06, -5.316694296197966e-05, -0.0002186298370361328, -8.225431884056889e-06, -8.106231689453125e-06, -5.4834970796946436e-05]}, {"score": -6.757107615975428, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 48, 117, "3", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 48, 117, "7", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Random", "Amount", "<EOS>", 165, 56, 48, 117, "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(7), MinionSelector\n            (RandomAmount(1, 4))))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 7}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}, {"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "RandomAmount"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -1.2804279327392578, -7.62939453125e-06, -0.4780503511428833, -1.2040087312925607e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-05, -4.41074053014745e-06, 0.0, -0.005051970481872559, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.000110626220703125, -0.014324360527098179, -3.814689989667386e-06, -0.001644134521484375, -1.52587890625e-05, -0.03984546661376953, 0.0, -0.003688812255859375, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00014483928680419922, -1.9073486328125e-06, -0.00018310546875, -0.000579833984375, -3.814697265625e-06, -1.1444091796875e-05, -0.0002460479736328125, -0.001182153238914907, -0.00024005869636312127, -1.52587890625e-05, -0.000499725341796875, -1.1444091796875e-05, -0.1078491136431694, -0.0003028801584150642, -3.0832901000976562, -0.06345939636230469, -1.9073486328125e-06, -1.9073486328125e-06, -0.17404843866825104, -0.0002028942108154297, -2.0742409105878323e-05, -0.12897014617919922, -0.008263587951660156, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.500752866268158, -0.01905098371207714, -0.007623189128935337, -0.0028858184814453125, -0.6281757354736328, -0.008049964904785156, -6.29425048828125e-05, -0.14707913994789124, -3.159012703690678e-05, -0.012888788245618343, -3.814697265625e-06, -0.03193986788392067, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.000339508056640625, -1.9073486328125e-06, -5.1140385039616376e-05, -0.0002167224884033203, -8.106222594506107e-06, -8.106231689453125e-06, -5.34045320819132e-05]}, {"score": -6.828105919352936, "choice_history": [59, 124, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Injured", " ", "Blademaster", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "overload", "<EOS>", 31, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, overload=2)\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template17"}}], "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "InjuredBlademaster", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.003503740532323718, -0.0010986251290887594, -8.344629350176547e-06, 0.0, -7.748603820800781e-06, -2.1457441107486375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -7.152555099310121e-07, -7.832050323486328e-05, -6.9141146923357155e-06, -7.62939453125e-06, -0.3271970748901367, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, -3.576278118089249e-07, -0.0016450876137241721, 0.0, -4.1961669921875e-05, 0.0, -0.0002346038818359375, -0.0023592570796608925, -3.576272320060525e-06, -0.005496978759765625, -1.9073486328125e-06, -5.670928478240967, -3.731250762939453e-05, -0.5469207763671875, -0.00014269351959228516, -1.9073486328125e-06, -0.0008519452530890703, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.2666282653808594, -1.9073486328125e-06, -2.7179445169167593e-05, -0.0004374980926513672, -6.198873961693607e-06, -1.5616416931152344e-05, -4.9351521738572046e-05]}], "gold_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}
{"beams": [{"score": -0.4820621350797296, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 174, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), CharacterSelector(players=\n            EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}, {"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -0.04570038616657257, -0.0009236335754394531, -2.47955322265625e-05, -0.21977710723876953, -0.00014495849609375, -0.014481663703918457, -0.0011785030364990234, -0.003482818603515625, 0.0, -0.010493993759155273, -1.3828277587890625e-05, 0.0, -9.5367431640625e-06, -0.03477287292480469, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -0.01731860637664795, -0.000597714853938669, 0.0, -9.918212890625e-05, -0.014504432678222656, -0.000598907470703125, -0.00316619873046875, -0.00086212158203125, -2.47955322265625e-05, -1.9073486328125e-06]}, {"score": -2.14418510002605, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), CharacterSelector(players=\n            EnemyPlayer(), picker=RandomPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -0.04570038616657257, -0.0009236335754394531, -2.47955322265625e-05, -1.8042736053466797, -3.0517578125e-05, -0.11328744888305664, -3.0875205993652344e-05, -0.00084686279296875, -1.9073486328125e-06, -0.015006661415100098, -8.404254913330078e-05, 0.0, -5.7220458984375e-06, -0.0070972442626953125, -5.7220458984375e-06, -6.103515625e-05, 0.0, -0.042583584785461426, -0.00039029077743180096, 0.0]}, {"score": -3.9757105810264406, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "Damaged", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 174, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CharacterDamaged(player=\n            BothPlayer()), ActionTag(Damage(1), CharacterSelector(players=\n            EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}, {"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -3.469158887863159, -1.1920928244535389e-07, -0.00316619873046875, -0.0001392364501953125, -0.049463868141174316, -2.3841855067985307e-07, -0.0001239776611328125, 0.0, -0.0246884822845459, -0.00016987323760986328, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0006273984909057617, -4.1961669921875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -9.5367431640625e-05, -9.1552734375e-05, -0.00019073486328125, -1.1444091796875e-05, -0.0003840923309326172, -6.210765423020348e-05, -3.24249267578125e-05, -7.05718994140625e-05, -0.0001277923583984375, -0.008581161499023438, -1.9073486328125e-06, 0.0, -0.04498312994837761, -0.0009179115295410156, -2.47955322265625e-05, -0.2230224609375, -0.0001430511474609375, -0.014466404914855957, -0.0011917352676391602, -0.0035991668701171875, 0.0, -0.010501623153686523, -1.3828277587890625e-05, 0.0, -9.5367431640625e-06, -0.034557342529296875, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -0.017314791679382324, -0.000597714853938669, 0.0, -9.918212890625e-05, -0.014543533325195312, -0.0005970001220703125, -0.0031566619873046875, -0.0008602142333984375, -2.47955322265625e-05, -1.9073486328125e-06]}, {"score": -4.213305194147949, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 174, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), MinionSelector(players=\n            EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}, {"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -3.112088441848755, -0.0032329559326171875, -2.47955322265625e-05, -0.7922658920288086, -0.0001583099365234375, -0.10915577411651611, -0.0003893375105690211, -0.0018596649169921875, -1.9073486328125e-06, -0.009513020515441895, -1.3947486877441406e-05, 0.0, -9.5367431640625e-06, -0.03732490539550781, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -0.017812728881835938, -0.0005456204526126385, 0.0, -8.7738037109375e-05, -0.008646011352539062, -0.000545501708984375, -0.00457000732421875, -0.0011539459228515625, -2.288818359375e-05, -1.9073486328125e-06]}, {"score": -4.295477424063108, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 174, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), CharacterSelector(players=\n            EnemyPlayer(), condition=Null, picker=RandomPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -0.04570038616657257, -0.0009236335754394531, -2.47955322265625e-05, -0.21977710723876953, -0.00014495849609375, -0.014481663703918457, -0.0011785030364990234, -0.003482818603515625, 0.0, -0.010493993759155273, -1.3828277587890625e-05, 0.0, -9.5367431640625e-06, -3.4449472427368164, -0.0005645751953125, -0.15792179107666016, -0.000949859619140625, -3.814697265625e-05, -1.9073486328125e-06, -0.0038127899169921875, -0.26354503631591797, -3.814697265625e-06, -0.0011005401611328125, 0.0, -0.011866211891174316, -0.0006635184399783611, 0.0]}, {"score": -4.38562661847817, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Minion", "Summoned", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 174, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(player=\n            BothPlayer()), ActionTag(Damage(1), CharacterSelector(players=\n            EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionSummoned"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}, {"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -3.600367546081543, -0.18399333953857422, -2.2172722310642712e-05, -0.00049591064453125, -4.1961669921875e-05, -0.14497792720794678, 0.0, -0.0001049041748046875, 0.0, -0.0370793342590332, -0.000186920166015625, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00037086009979248047, -3.24249267578125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.72747802734375e-05, -9.72747802734375e-05, -0.0001773834228515625, -9.5367431640625e-06, -0.00039374828338623047, -6.163078069221228e-05, -3.24249267578125e-05, -8.20159912109375e-05, -0.0001277923583984375, -0.008927345275878906, -1.9073486328125e-06, 0.0, -0.05668185278773308, -0.0009293556213378906, -2.47955322265625e-05, -0.23114013671875, -0.0001392364501953125, -0.014556288719177246, -0.0011508464813232422, -0.003513336181640625, 0.0, -0.010534048080444336, -1.3828277587890625e-05, 0.0, -9.5367431640625e-06, -0.034564971923828125, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -0.017243266105651855, -0.0005992645747028291, 0.0, -9.72747802734375e-05, -0.014479637145996094, -0.000591278076171875, -0.0031223297119140625, -0.00086212158203125, -2.47955322265625e-05, -1.9073486328125e-06]}, {"score": -4.618162949350051, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>", 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), MinionSelector(condition=\n            Null, players=EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -3.112088441848755, -0.0032329559326171875, -2.47955322265625e-05, -0.6412878036499023, -5.7220458984375e-06, -0.228987455368042, -7.081031799316406e-05, -0.11489582061767578, -0.0001354217529296875, -1.728534698486328e-05, -3.4332275390625e-05, -0.0001544952392578125, -0.0018358230590820312, -1.71661376953125e-05, -0.0009822845458984375, 0.0, -0.400529146194458, -3.24249267578125e-05, 0.0]}, {"score": -5.039857183363608, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>", 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), CharacterSelector(condition\n            =Null, players=EnemyPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -0.04570038616657257, -0.0009236335754394531, -2.47955322265625e-05, -1.8042736053466797, -3.0517578125e-05, -2.3030343055725098, -5.161762237548828e-05, -0.33866024017333984, -0.0001201629638671875, -2.1338462829589844e-05, -3.24249267578125e-05, -0.000141143798828125, -0.0033283233642578125, -7.62939453125e-06, -0.000972747802734375, 0.0, -0.4286768436431885, -2.6702880859375e-05, 0.0]}, {"score": -5.167981419725663, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 174, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), CharacterSelector(players=\n            BothPlayer(), picker=RandomPicker(), condition=Null)))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}, {"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -0.04570038616657257, -0.0009236335754394531, -2.47955322265625e-05, -0.21977710723876953, -0.00014495849609375, -0.014481663703918457, -0.0011785030364990234, -0.003482818603515625, 0.0, -4.6768059730529785, -4.2319297790527344e-05, 0.0, -7.62939453125e-06, -0.055873870849609375, -1.9073486328125e-05, -4.00543212890625e-05, 0.0, -0.017212629318237305, -0.0005881779361516237, 0.0, -8.58306884765625e-05, -0.013452529907226562, -0.0006103515625, -0.0027561187744140625, -0.0009174346923828125, -2.288818359375e-05, -1.9073486328125e-06]}, {"score": -5.291725787987787, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 174, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), CharacterSelector(players=\n            EnemyPlayer(), picker=RandomPicker(), picker=RandomPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -0.04570038616657257, -0.0009236335754394531, -2.47955322265625e-05, -0.21977710723876953, -0.00014495849609375, -0.014481663703918457, -0.0011785030364990234, -0.003482818603515625, 0.0, -0.010493993759155273, -1.3828277587890625e-05, 0.0, -9.5367431640625e-06, -0.03477287292480469, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -0.01731860637664795, -0.000597714853938669, 0.0, -9.918212890625e-05, -4.803468704223633, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.024725794792175293, -0.0004901881329715252, 0.0]}, {"score": -5.415225823190383, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>", 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), MinionSelector(condition=\n            Null, players=BothPlayer())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -3.112088441848755, -0.0032329559326171875, -2.47955322265625e-05, -0.6412878036499023, -5.7220458984375e-06, -0.228987455368042, -7.081031799316406e-05, -0.11489582061767578, -0.0001354217529296875, -1.728534698486328e-05, -3.4332275390625e-05, -0.0001544952392578125, -0.0018358230590820312, -1.71661376953125e-05, -0.0009822845458984375, 0.0, -1.1976091861724854, -1.52587890625e-05, 0.0]}, {"score": -5.582635121433384, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), CharacterSelector(players=\n            EnemyPlayer(), picker=UserPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -0.04570038616657257, -0.0009236335754394531, -2.47955322265625e-05, -1.8042736053466797, -3.0517578125e-05, -0.11328744888305664, -3.0875205993652344e-05, -0.00084686279296875, -1.9073486328125e-06, -0.015006661415100098, -8.404254913330078e-05, 0.0, -5.7220458984375e-06, -0.0070972442626953125, -5.7220458984375e-06, -6.103515625e-05, 0.0, -3.4807567596435547, -0.0006671373266726732, 0.0]}, {"score": -5.611583072996552, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "<UNK>", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Damage(1), MinionSelector(players=\n            EnemyPlayer(), picker=RandomPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -0.03623366355895996, -0.00017034003394655883, -0.0040435791015625, -0.00011444091796875, -0.00586700439453125, 0.0, -0.0002536773681640625, 0.0, -0.008562326431274414, -0.00019073486328125, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007137060165405273, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.000102996826171875, -8.96453857421875e-05, -0.0001621246337890625, -1.1444091796875e-05, -0.0003802776336669922, -6.15116223343648e-05, -3.24249267578125e-05, -7.2479248046875e-05, -0.0001316070556640625, -0.008753776550292969, -1.9073486328125e-06, 0.0, -3.112088441848755, -0.0032329559326171875, -2.47955322265625e-05, -0.6412878036499023, -5.7220458984375e-06, -1.6827991008758545, -2.2292137145996094e-05, -0.00038909912109375, -1.9073486328125e-06, -0.01633131504058838, -5.555152893066406e-05, 0.0, -5.7220458984375e-06, -0.01074981689453125, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.030300140380859375, -0.0003832574584521353, 0.0]}, {"score": -5.622445176412519, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "Damaged", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CharacterDamaged(player=\n            BothPlayer()), ActionTag(Damage(1), CharacterSelector(players=\n            EnemyPlayer(), picker=RandomPicker())))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -0.00017547607421875, -2.0026876882184297e-05, -3.6954863844584906e-06, -1.4066696166992188e-05, -7.510169325541938e-06, -1.9669532775878906e-05, -2.992119152622763e-05, -3.814697265625e-05, 0.0, -3.6716461181640625e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0028629302978515625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004031658172607422, -3.218649908376392e-06, -5.7220458984375e-06, -0.00350189208984375, -0.0077667236328125, -0.0002689361572265625, 0.0, -0.03015328012406826, -3.469158887863159, -1.1920928244535389e-07, -0.00316619873046875, -0.0001392364501953125, -0.049463868141174316, -2.3841855067985307e-07, -0.0001239776611328125, 0.0, -0.0246884822845459, -0.00016987323760986328, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0006273984909057617, -4.1961669921875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -9.5367431640625e-05, -9.1552734375e-05, -0.00019073486328125, -1.1444091796875e-05, -0.0003840923309326172, -6.210765423020348e-05, -3.24249267578125e-05, -7.05718994140625e-05, -0.0001277923583984375, -0.008581161499023438, -1.9073486328125e-06, 0.0, -0.04498312994837761, -0.0009179115295410156, -2.47955322265625e-05, -1.7912368774414062, -2.86102294921875e-05, -0.11411988735198975, -3.0875205993652344e-05, -0.0008544921875, -1.9073486328125e-06, -0.014963746070861816, -8.404254913330078e-05, 0.0, -5.7220458984375e-06, -0.007114410400390625, -5.7220458984375e-06, -6.103515625e-05, 0.0, -0.04258930683135986, -0.00039231733535416424, 0.0]}, {"score": -9.398468340394913, "choice_history": [59, 124, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Knife Juggler", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 2, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "KnifeJuggler", "hole3": "create_minion"}, "score_history": [-7.62939453125e-06, -2.47955322265625e-05, -4.136476854910143e-05, -0.0002543602604418993, -5.161638546269387e-05, 0.0, -2.3841855067985307e-07, -3.8146954466355965e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0010833740234375, -2.6702880859375e-05, -1.1801649634435307e-05, -3.254413604736328e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -0.0004069802525918931, 0.0, -5.030632019042969e-05, 0.0, -9.667872654972598e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9366222558310255e-05, 0.0, 0.0, -3.0517578125e-05, -9.396075248718262, 0.0, -3.933906555175781e-06, -4.5299530029296875e-05, -2.3841830625315197e-06, -7.712840306339785e-05, -1.4305104514278355e-06]}], "gold_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(AfterAdded(), ActionTag(Damage(\n            1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=None)))])\n"}
{"beams": [{"score": -1.9246327555802623, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(5\n            ), HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -0.44621777534484863, 0.0, -0.0006142854690551758, 0.0, -3.075599670410156e-05, 0.0, -0.0006910562515258789, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -0.000164031982421875, -6.198875780683011e-06, 0.0, -8.404254913330078e-05, -5.960462772236497e-07, -1.2993727978027891e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00018322467803955078, 0.0, -0.00018310546875, -2.47955322265625e-05, -0.00727081298828125, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0007045269012451172, -0.0033016204833984375, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.000278472900390625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015047073364257812, -0.08946990966796875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.3356741666793823, -0.001189112663269043, -1.9073486328125e-06, -0.1987142562866211, -3.814697265625e-06, -0.04391440749168396, -1.1920922133867862e-06, -0.0072917938232421875, 0.0, -0.5148906707763672, -0.0001697540283203125, 0.0]}, {"score": -2.3296410716203013, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(5\n            ), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -0.44621777534484863, 0.0, -0.0006142854690551758, 0.0, -3.075599670410156e-05, 0.0, -0.0006910562515258789, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -0.000164031982421875, -6.198875780683011e-06, 0.0, -8.404254913330078e-05, -5.960462772236497e-07, -1.2993727978027891e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00018322467803955078, 0.0, -0.00018310546875, -2.47955322265625e-05, -0.00727081298828125, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0007045269012451172, -0.0033016204833984375, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.000278472900390625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015047073364257812, -0.08946990966796875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.3356741666793823, -0.001189112663269043, -1.9073486328125e-06, -0.1987142562866211, -3.814697265625e-06, -0.04391440749168396, -1.1920922133867862e-06, -0.0072917938232421875, 0.0, -0.9200572967529297, -1.1444091796875e-05, 0.0]}, {"score": -2.6711294624508923, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Give([\n            Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -0.44621777534484863, 0.0, -0.0006142854690551758, 0.0, -3.075599670410156e-05, 0.0, -0.0006910562515258789, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -0.000164031982421875, -6.198875780683011e-06, 0.0, -8.404254913330078e-05, -5.960462772236497e-07, -1.2993727978027891e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00018322467803955078, 0.0, -0.00018310546875, -2.47955322265625e-05, -0.00727081298828125, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0007045269012451172, -0.0033016204833984375, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.000278472900390625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015047073364257812, -0.08946990966796875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.4115113019943237, -3.457069396972656e-05, 0.0, -0.14803504943847656, -7.62939453125e-06, -0.04924774169921875, -3.814697265625e-06, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.005422711372375488, -5.7220458984375e-06, -3.0517578125e-05, -0.0003299713134765625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0004723071469925344, -0.1408998966217041, -7.987022399902344e-06, 0.0, -0.05005645751953125, -3.0517578125e-05, 0.0, 0.0, 0.0, -0.002899765968322754, -1.9073486328125e-06, -1.1444091796875e-05, -0.00458526611328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0022112128790467978, -0.02917611598968506, -8.940656698541716e-06, -3.814697265625e-06, -0.0019073486328125, -0.0010223388671875, 0.0, -0.0003337860107421875, -3.0517578125e-05, 0.0]}, {"score": -3.0215522735223317, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(5\n            ), HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -1.5527422428131104, 0.0, -0.0004845857620239258, 0.0, -7.748603820800781e-06, 0.0, -0.0007992982864379883, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -0.0001735687255859375, -2.1457635739352554e-06, 0.0, -8.785724639892578e-05, -5.960462772236497e-07, -1.490105023549404e-05, -2.7418097943154862e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.00017750263214111328, 0.0, -0.00018310546875, -2.47955322265625e-05, -0.0075702667236328125, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0006874799728393555, -0.0032987594604492188, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0002803802490234375, -4.00543212890625e-05, -1.1444091796875e-05, -0.01515960693359375, -0.08937644958496094, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.3270453214645386, -0.0011749267578125, -1.9073486328125e-06, -0.19829273223876953, -3.814697265625e-06, -0.043829869478940964, -1.1920922133867862e-06, -0.007289886474609375, 0.0, -0.5141830444335938, -0.0001697540283203125, 0.0]}, {"score": -3.4283296554193043, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(5\n            ), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -1.5527422428131104, 0.0, -0.0004845857620239258, 0.0, -7.748603820800781e-06, 0.0, -0.0007992982864379883, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -0.0001735687255859375, -2.1457635739352554e-06, 0.0, -8.785724639892578e-05, -5.960462772236497e-07, -1.490105023549404e-05, -2.7418097943154862e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.00017750263214111328, 0.0, -0.00018310546875, -2.47955322265625e-05, -0.0075702667236328125, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0006874799728393555, -0.0032987594604492188, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0002803802490234375, -4.00543212890625e-05, -1.1444091796875e-05, -0.01515960693359375, -0.08937644958496094, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.3270453214645386, -0.0011749267578125, -1.9073486328125e-06, -0.19829273223876953, -3.814697265625e-06, -0.043829869478940964, -1.1920922133867862e-06, -0.007289886474609375, 0.0, -0.9211187362670898, -1.1444091796875e-05, 0.0]}, {"score": -3.601371438661374, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(5\n            ), HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -2.128217935562134, 0.0, -0.0008736848831176758, 0.0, -1.3470649719238281e-05, 0.0, -0.0007555484771728516, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001811981201171875, -4.410732799442485e-06, 0.0, -8.785724639892578e-05, -5.960462772236497e-07, -1.645074735279195e-05, -2.861018856492592e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.00018703937530517578, 0.0, -0.00019073486328125, -2.47955322265625e-05, -0.007274627685546875, -3.814697265625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0007064342498779297, -0.0033025741577148438, 0.0, -7.62939453125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.00028228759765625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015054702758789062, -0.08956718444824219, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.33146750926971436, -0.0011835098266601562, -1.9073486328125e-06, -0.19863319396972656, -3.814697265625e-06, -0.043750081211328506, -1.1920922133867862e-06, -0.0073032379150390625, 0.0, -0.513615608215332, -0.0001697540283203125, 0.0]}, {"score": -3.801352736659794, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Give([\n            Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -1.5527422428131104, 0.0, -0.0004845857620239258, 0.0, -7.748603820800781e-06, 0.0, -0.0007992982864379883, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -0.0001735687255859375, -2.1457635739352554e-06, 0.0, -8.785724639892578e-05, -5.960462772236497e-07, -1.490105023549404e-05, -2.7418097943154862e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.00017750263214111328, 0.0, -0.00018310546875, -2.47955322265625e-05, -0.0075702667236328125, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0006874799728393555, -0.0032987594604492188, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0002803802490234375, -4.00543212890625e-05, -1.1444091796875e-05, -0.01515960693359375, -0.08937644958496094, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.433604121208191, -3.457069396972656e-05, 0.0, -0.14931488037109375, -7.62939453125e-06, -0.0494232177734375, -3.814697265625e-06, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.005361676216125488, -5.7220458984375e-06, -3.0517578125e-05, -0.0003299713134765625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0004703997983597219, -0.1407911777496338, -7.987022399902344e-06, 0.0, -0.050047874450683594, -3.0517578125e-05, 0.0, 0.0, 0.0, -0.0028978586196899414, -1.9073486328125e-06, -1.1444091796875e-05, -0.0045871734619140625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0022112128790467978, -0.029260993003845215, -8.940656698541716e-06, -3.814697265625e-06, -0.0019054412841796875, -0.00101470947265625, 0.0, -0.000335693359375, -3.0517578125e-05, 0.0]}, {"score": -3.9303351617489284, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -0.44621777534484863, 0.0, -0.0006142854690551758, 0.0, -3.075599670410156e-05, 0.0, -0.0006910562515258789, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -0.000164031982421875, -6.198875780683011e-06, 0.0, -8.404254913330078e-05, -5.960462772236497e-07, -1.2993727978027891e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00018322467803955078, 0.0, -0.00018310546875, -2.47955322265625e-05, -0.00727081298828125, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0007045269012451172, -0.0033016204833984375, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.000278472900390625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015047073364257812, -0.08946990966796875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.3356741666793823, -0.001189112663269043, -1.9073486328125e-06, -2.706538200378418, -0.03423881530761719, -1.9073486328125e-06, -0.02990555763244629, -3.814697265625e-06, 0.0]}, {"score": -4.009562165895261, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(5\n            ), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -2.128217935562134, 0.0, -0.0008736848831176758, 0.0, -1.3470649719238281e-05, 0.0, -0.0007555484771728516, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001811981201171875, -4.410732799442485e-06, 0.0, -8.785724639892578e-05, -5.960462772236497e-07, -1.645074735279195e-05, -2.861018856492592e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.00018703937530517578, 0.0, -0.00019073486328125, -2.47955322265625e-05, -0.007274627685546875, -3.814697265625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0007064342498779297, -0.0033025741577148438, 0.0, -7.62939453125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.00028228759765625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015054702758789062, -0.08956718444824219, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.33146750926971436, -0.0011835098266601562, -1.9073486328125e-06, -0.19863319396972656, -3.814697265625e-06, -0.043750081211328506, -1.1920922133867862e-06, -0.0073032379150390625, 0.0, -0.9219646453857422, -1.1444091796875e-05, 0.0]}, {"score": -4.134844144347028, "choice_history": [59, 124, "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class <UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(5\n            ), HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "<UNK>", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -2.3331902027130127, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -0.44621777534484863, 0.0, -0.0006142854690551758, 0.0, -3.075599670410156e-05, 0.0, -0.0006910562515258789, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -0.000164031982421875, -6.198875780683011e-06, 0.0, -8.404254913330078e-05, -5.960462772236497e-07, -1.2993727978027891e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00018322467803955078, 0.0, -0.00018310546875, -2.47955322265625e-05, -0.00727081298828125, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0007045269012451172, -0.0033016204833984375, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.000278472900390625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015047073364257812, -0.08946990966796875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.3356741666793823, -0.001189112663269043, -1.9073486328125e-06, -0.1987142562866211, -3.814697265625e-06, -0.04391440749168396, -1.1920922133867862e-06, -0.0072917938232421875, 0.0, -0.5148906707763672, -0.0001697540283203125, 0.0]}, {"score": -4.207327244285636, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Draw(),\n            PlayerSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -0.44621777534484863, 0.0, -0.0006142854690551758, 0.0, -3.075599670410156e-05, 0.0, -0.0006910562515258789, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -0.000164031982421875, -6.198875780683011e-06, 0.0, -8.404254913330078e-05, -5.960462772236497e-07, -1.2993727978027891e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00018322467803955078, 0.0, -0.00018310546875, -2.47955322265625e-05, -0.00727081298828125, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0007045269012451172, -0.0033016204833984375, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.000278472900390625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015047073364257812, -2.4591751098632812, 0.0, -1.0127352476119995, -1.2755334864777979e-05, -0.0014133453369140625, 0.0, -0.0005321502685546875, -0.0001544952392578125, 0.0]}, {"score": -4.366771099246137, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Give([\n            Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -2.128217935562134, 0.0, -0.0008736848831176758, 0.0, -1.3470649719238281e-05, 0.0, -0.0007555484771728516, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001811981201171875, -4.410732799442485e-06, 0.0, -8.785724639892578e-05, -5.960462772236497e-07, -1.645074735279195e-05, -2.861018856492592e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.00018703937530517578, 0.0, -0.00019073486328125, -2.47955322265625e-05, -0.007274627685546875, -3.814697265625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0007064342498779297, -0.0033025741577148438, 0.0, -7.62939453125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.00028228759765625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015054702758789062, -0.08956718444824219, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.4226645231246948, -3.457069396972656e-05, 0.0, -0.14981842041015625, -7.62939453125e-06, -0.049297332763671875, -3.814697265625e-06, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.005397915840148926, -5.7220458984375e-06, -3.0517578125e-05, -0.0003299713134765625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0004703997983597219, -0.14100289344787598, -7.987022399902344e-06, 0.0, -0.05005931854248047, -3.0517578125e-05, 0.0, 0.0, 0.0, -0.002899765968322754, -1.9073486328125e-06, -1.1444091796875e-05, -0.0045948028564453125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0022112128790467978, -0.02928292751312256, -8.940656698541716e-06, -3.814697265625e-06, -0.0019054412841796875, -0.0010204315185546875, 0.0, -0.0003376007080078125, -3.0517578125e-05, 0.0]}, {"score": -4.545628425749612, "choice_history": [59, 124, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Give([\n            Buff(ChangeHealth(1)), Buff(ChangeHealth(1))]), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "Lightwell", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -0.12198972702026367, -2.1686428226530552e-05, -1.1444091796875e-05, -2.7179718017578125e-05, -1.9073486328125e-06, -0.0001659393310546875, -2.288818359375e-05, -0.00034332275390625, -6.67572021484375e-05, -5.006777428206988e-06, -4.971027374267578e-05, -0.011224031448364258, -9.5367431640625e-06, -0.44621777534484863, 0.0, -0.0006142854690551758, 0.0, -3.075599670410156e-05, 0.0, -0.0006910562515258789, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -0.000164031982421875, -6.198875780683011e-06, 0.0, -8.404254913330078e-05, -5.960462772236497e-07, -1.2993727978027891e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00018322467803955078, 0.0, -0.00018310546875, -2.47955322265625e-05, -0.00727081298828125, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0007045269012451172, -0.0033016204833984375, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.000278472900390625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015047073364257812, -0.08946990966796875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.4115113019943237, -3.457069396972656e-05, 0.0, -0.14803504943847656, -7.62939453125e-06, -0.04924774169921875, -3.814697265625e-06, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.005422711372375488, -5.7220458984375e-06, -3.0517578125e-05, -0.0003299713134765625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0004723071469925344, -2.052044153213501, -9.059865078597795e-06, -1.9073486328125e-06, -0.0021686553955078125, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.002577543258666992, 0.0, -1.1444091796875e-05, -0.0126190185546875, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0025389192160218954, -0.032483458518981934, -1.0609570381348021e-05, -3.814697265625e-06, -0.001819610595703125, -0.0010013580322265625, 0.0, -0.0002994537353515625, -3.0517578125e-05, 0.0]}, {"score": -4.901997201386962, "choice_history": [59, 124, "Lightwell", "Bear", "Cat", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class LightwellBearCat(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(5\n            ), HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "LightwellBearCat", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -3.044610023498535, -0.03822244703769684, -0.00823115836828947, -2.3101805709302425e-05, -9.5367431640625e-06, -3.8504600524902344e-05, -1.9073486328125e-06, -0.0003299713134765625, -1.1444091796875e-05, -0.013317108154296875, -4.1961669921875e-05, -2.9802276912960224e-06, -0.0012418031692504883, -0.011324524879455566, -1.33514404296875e-05, -0.4364892244338989, 0.0, -0.0004159212112426758, 0.0, -3.075599670410156e-05, 0.0, -0.0034346580505371094, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.00020599365234375, -3.087517325184308e-05, 0.0, -0.0001201629638671875, -4.768370445162873e-07, -1.1444026313256472e-05, -2.622600959512056e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00017750263214111328, 0.0, -0.00017547607421875, -2.47955322265625e-05, -0.0066890716552734375, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.00014495849609375, -1.9073486328125e-06, -0.0007159709930419922, -0.0033121109008789062, 0.0, -7.62939453125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0002841949462890625, -4.00543212890625e-05, -1.1444091796875e-05, -0.015048980712890625, -0.08993911743164062, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.33578765392303467, -0.0011957883834838867, -1.9073486328125e-06, -0.19894123077392578, -3.814697265625e-06, -0.04384315013885498, -1.1920922133867862e-06, -0.007305145263671875, 0.0, -0.5156564712524414, -0.000171661376953125, 0.0]}, {"score": -4.991636823177373, "choice_history": [59, 124, "Lightwell", "Bot", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "5", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Started", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "5", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class LightwellBot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(5\n            ), HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Lightwell", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TurnStarted"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "LightwellBot", "hole3": "create_minion"}, "score_history": [0.0, -0.0010662078857421875, -0.1229788139462471, -3.1647744178771973, -0.0014681816101074219, -9.647919796407223e-06, -1.33514404296875e-05, -3.6597251892089844e-05, -1.9073486328125e-06, -0.0002002716064453125, -7.62939453125e-06, -0.02004528045654297, -4.57763671875e-05, -2.861018856492592e-06, -0.0001583099365234375, -0.00945281982421875, -1.1444091796875e-05, -0.44803154468536377, 0.0, -0.0003663301467895508, 0.0, -3.266334533691406e-05, 0.0, -0.0014252662658691406, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001850128173828125, -2.0146355382166803e-05, 0.0, -9.357929229736328e-05, -4.768370445162873e-07, -1.2636104656849056e-05, -2.7418097943154862e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00018131732940673828, 0.0, -0.0001773834228515625, -2.47955322265625e-05, -0.00682830810546875, -4.00543212890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.0007140636444091797, -0.0033063888549804688, 0.0, -7.62939453125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0002803802490234375, -4.00543212890625e-05, -1.1444091796875e-05, -0.015045166015625, -0.09014129638671875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.33758437633514404, -0.001196742057800293, -1.9073486328125e-06, -0.19896316528320312, -3.814697265625e-06, -0.04385633394122124, -1.1920922133867862e-06, -0.007297515869140625, 0.0, -0.5149021148681641, -0.0001697540283203125, 0.0]}], "gold_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(condition=IsDamaged(), picker=RandomPicker\n            ())))])\n"}
{"beams": [{"score": -2.4246298889601903, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Minion", "Died", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionDied(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionDied"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -0.9521927833557129, 0.0, -0.0004912614822387695, 0.0, -4.589557647705078e-05, 0.0, -9.822844731388614e-05, 0.0, 0.0, -2.47955322265625e-05, -0.000125885009765625, -1.9073486328125e-06, -6.318082796497038e-06, -2.3841855067985307e-07, -2.2768945200368762e-05, -6.1034850659780204e-05, -5.1379160140641034e-05, -2.09808349609375e-05, -3.814697265625e-06, -2.872943878173828e-05, 0.0, -0.0001068115234375, -0.0001068115234375, -0.05886650085449219, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.00044810769031755626, -0.0003764628490898758, -2.09808349609375e-05, -0.0005645751953125, -0.430816650390625, -3.62396240234375e-05, 0.0, -0.606484591960907, -0.12444019317626953, -0.0001282634329982102, -0.001445770263671875, -0.000438690185546875, -0.0038013458251953125, 0.0, -3.814697265625e-06, 0.0, -0.1479731798171997, -0.0002422332763671875, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0003069638623856008, -9.1552734375e-05, -3.62396240234375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.0007914301822893322, -8.976459503173828e-05, -1.9073486328125e-05, -0.0005321502685546875, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, -0.0006381752318702638, -0.001130223274230957, -1.1682510375976562e-05, -3.0517578125e-05, -9.34600830078125e-05, -4.76837158203125e-05, 0.0, -0.00223135226406157, -0.0001093149185180664, 0.0]}, {"score": -2.71353982615161, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -0.9521927833557129, 0.0, -0.0004912614822387695, 0.0, -4.589557647705078e-05, 0.0, -9.822844731388614e-05, 0.0, 0.0, -2.47955322265625e-05, -0.000125885009765625, -1.9073486328125e-06, -6.318082796497038e-06, -2.3841855067985307e-07, -2.2768945200368762e-05, -6.1034850659780204e-05, -5.1379160140641034e-05, -2.09808349609375e-05, -3.814697265625e-06, -2.872943878173828e-05, 0.0, -0.0001068115234375, -0.0001068115234375, -0.05886650085449219, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.00044810769031755626, -0.0003764628490898758, -2.09808349609375e-05, -0.0005645751953125, -0.430816650390625, -3.62396240234375e-05, 0.0, -0.8421268463134766, -0.0023775100708007812, -2.396098898316268e-05, -0.0008792877197265625, -0.0002574920654296875, -0.0031108856201171875, 0.0, -3.814697265625e-06, 0.0, -0.32506293058395386, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00024008746549952775, -7.05718994140625e-05, -4.38690185546875e-05, -4.00543212890625e-05, -6.866455078125e-05, -5.7220458984375e-06, 0.0, 0.0, -0.0007869002874940634, -9.167194366455078e-05, -1.9073486328125e-05, -0.000568389892578125, -5.340576171875e-05, 0.0, -1.9073486328125e-06, -0.0006060080486349761, -0.0011359453201293945, -1.1682510375976562e-05, -3.0517578125e-05, -9.34600830078125e-05, -4.76837158203125e-05, 0.0, -0.002186648780480027, -0.0001093149185180664, 0.0]}, {"score": -2.7634291869057606, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Minion", "Died", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionDied(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionDied"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -1.2625021934509277, 0.0, -0.0004235505766700953, 0.0, -4.017353057861328e-05, 0.0, -0.00011444091069279239, 0.0, 0.0, -1.52587890625e-05, -0.0001983642578125, -1.9073486328125e-06, -4.0531076592742465e-06, -2.3841855067985307e-07, -3.19480495818425e-05, -5.8054727560374886e-05, -6.139273318694904e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.063678741455078e-05, 0.0, -0.0001220703125, -0.0001163482666015625, -0.060100555419921875, -1.9073486328125e-06, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00047862526844255626, -0.0003784894070122391, -2.288818359375e-05, -0.000576019287109375, -0.4552888870239258, -3.62396240234375e-05, 0.0, -0.6106977462768555, -0.12381935119628906, -0.00012766745931003243, -0.0014286041259765625, -0.000438690185546875, -0.003780364990234375, 0.0, -3.814697265625e-06, 0.0, -0.14711642265319824, -0.0002422332763671875, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0003089904203079641, -9.1552734375e-05, -3.62396240234375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.0007933375309221447, -8.976459503173828e-05, -1.9073486328125e-05, -0.0005321502685546875, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, -0.0006381752318702638, -0.001130223274230957, -1.1682510375976562e-05, -3.0517578125e-05, -9.34600830078125e-05, -4.76837158203125e-05, 0.0, -0.002231471473351121, -0.0001093149185180664, 0.0]}, {"score": -2.8975084040634655, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Minion", "Died", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionDied(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionDied"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -1.404430866241455, 0.0, -0.00021135756105650216, 0.0, -8.594989776611328e-05, 0.0, -0.0001463889639126137, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -0.0001468658447265625, -1.9073486328125e-06, -5.006785613659304e-06, -2.3841855067985307e-07, -2.2768945200368762e-05, -5.8293098845751956e-05, -4.875656304648146e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.063678741455078e-05, 0.0, -0.000118255615234375, -0.0001125335693359375, -0.06023597717285156, -1.9073486328125e-06, -7.82012939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000465154618723318, -0.0003708600124809891, -2.288818359375e-05, -0.0005626678466796875, -0.45944881439208984, -3.4332275390625e-05, 0.0, -0.6002645492553711, -0.12352466583251953, -0.00012754826457239687, -0.0014438629150390625, -0.000438690185546875, -0.00382232666015625, 0.0, -3.814697265625e-06, 0.0, -0.145882248878479, -0.0002422332763671875, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0003088712110184133, -9.1552734375e-05, -3.62396240234375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.0007914301822893322, -8.976459503173828e-05, -1.9073486328125e-05, -0.0005321502685546875, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, -0.0006385326269082725, -0.001130223274230957, -1.1682510375976562e-05, -3.0517578125e-05, -9.34600830078125e-05, -4.76837158203125e-05, 0.0, -0.002232425147667527, -0.0001093149185180664, 0.0]}, {"score": -3.0395467749899225, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -1.2625021934509277, 0.0, -0.0004235505766700953, 0.0, -4.017353057861328e-05, 0.0, -0.00011444091069279239, 0.0, 0.0, -1.52587890625e-05, -0.0001983642578125, -1.9073486328125e-06, -4.0531076592742465e-06, -2.3841855067985307e-07, -3.19480495818425e-05, -5.8054727560374886e-05, -6.139273318694904e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.063678741455078e-05, 0.0, -0.0001220703125, -0.0001163482666015625, -0.060100555419921875, -1.9073486328125e-06, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00047862526844255626, -0.0003784894070122391, -2.288818359375e-05, -0.000576019287109375, -0.4552888870239258, -3.62396240234375e-05, 0.0, -0.836840808391571, -0.0023832321166992188, -2.38417815126013e-05, -0.0008792877197265625, -0.0002574920654296875, -0.0030841827392578125, 0.0, -3.814697265625e-06, 0.0, -0.3202744126319885, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00024211402342189103, -7.05718994140625e-05, -4.38690185546875e-05, -4.00543212890625e-05, -6.866455078125e-05, -5.7220458984375e-06, 0.0, 0.0, -0.0007886884268373251, -9.167194366455078e-05, -1.9073486328125e-05, -0.000568389892578125, -5.340576171875e-05, 0.0, -1.9073486328125e-06, -0.0006063655018806458, -0.0011359453201293945, -1.1682510375976562e-05, -3.0517578125e-05, -9.34600830078125e-05, -4.76837158203125e-05, 0.0, -0.002186648780480027, -0.0001093149185180664, 0.0]}, {"score": -3.1960459811802693, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -1.404430866241455, 0.0, -0.00021135756105650216, 0.0, -8.594989776611328e-05, 0.0, -0.0001463889639126137, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -0.0001468658447265625, -1.9073486328125e-06, -5.006785613659304e-06, -2.3841855067985307e-07, -2.2768945200368762e-05, -5.8293098845751956e-05, -4.875656304648146e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.063678741455078e-05, 0.0, -0.000118255615234375, -0.0001125335693359375, -0.06023597717285156, -1.9073486328125e-06, -7.82012939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000465154618723318, -0.0003708600124809891, -2.288818359375e-05, -0.0005626678466796875, -0.45944881439208984, -3.4332275390625e-05, 0.0, -0.8514795303344727, -0.0024166107177734375, -2.4080196453724056e-05, -0.0009002685546875, -0.0002574920654296875, -0.003124237060546875, 0.0, -3.814697265625e-06, 0.0, -0.3160547614097595, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00024211402342189103, -7.05718994140625e-05, -4.38690185546875e-05, -4.00543212890625e-05, -6.866455078125e-05, -5.7220458984375e-06, 0.0, 0.0, -0.0007869002874940634, -9.167194366455078e-05, -1.9073486328125e-05, -0.0005702972412109375, -5.340576171875e-05, 0.0, -1.9073486328125e-06, -0.0006068420480005443, -0.0011359453201293945, -1.1682510375976562e-05, -3.0517578125e-05, -9.34600830078125e-05, -4.76837158203125e-05, 0.0, -0.002186648780480027, -0.0001093149185180664, 0.0]}, {"score": -3.4346628635512033, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Minion", "Summoned", "<EOS>", 164, 51, 130, "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(Mana<UNK>()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Mana<UNK>"}], "func": {"_type": "Name", "id": "MinionSummoned"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -0.9521927833557129, 0.0, -0.0004912614822387695, 0.0, -4.589557647705078e-05, 0.0, -9.822844731388614e-05, 0.0, 0.0, -2.47955322265625e-05, -0.000125885009765625, -1.9073486328125e-06, -6.318082796497038e-06, -2.3841855067985307e-07, -2.2768945200368762e-05, -6.1034850659780204e-05, -5.1379160140641034e-05, -2.09808349609375e-05, -3.814697265625e-06, -2.872943878173828e-05, 0.0, -0.0001068115234375, -0.0001068115234375, -0.05886650085449219, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.00044810769031755626, -0.0003764628490898758, -2.09808349609375e-05, -0.0005645751953125, -1.059478759765625, -6.866455078125e-05, -3.814697265625e-06, -0.09138920903205872, -0.2275228500366211, -0.0006259524379856884, -0.003688812255859375, -0.05582237243652344, -1.9073486328125e-06, -0.29117336869239807, -0.5906365513801575, -0.004032705910503864, -0.0001049041748046875, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -0.0007658642716705799, -4.38690185546875e-05, -5.7220458984375e-06, -3.24249267578125e-05, -0.00019073486328125, -1.9073486328125e-06, 0.0, 0.0, -0.0006951090763323009, -5.543231964111328e-05, -3.0517578125e-05, -0.00064849853515625, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.0009515740093775094, -0.0009260177612304688, -1.5616416931152344e-05, -3.0517578125e-05, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -0.002881754422560334, -0.0001304149627685547, 0.0]}, {"score": -3.70000185765317, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Minion", "Summoned", "<EOS>", 164, 51, 130, "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(Mana<UNK>()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Mana<UNK>"}], "func": {"_type": "Name", "id": "MinionSummoned"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -1.2625021934509277, 0.0, -0.0004235505766700953, 0.0, -4.017353057861328e-05, 0.0, -0.00011444091069279239, 0.0, 0.0, -1.52587890625e-05, -0.0001983642578125, -1.9073486328125e-06, -4.0531076592742465e-06, -2.3841855067985307e-07, -3.19480495818425e-05, -5.8054727560374886e-05, -6.139273318694904e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.063678741455078e-05, 0.0, -0.0001220703125, -0.0001163482666015625, -0.060100555419921875, -1.9073486328125e-06, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00047862526844255626, -0.0003784894070122391, -2.288818359375e-05, -0.000576019287109375, -1.0154104232788086, -7.05718994140625e-05, -3.814697265625e-06, -0.09285245090723038, -0.22754478454589844, -0.0006255949847400188, -0.003772735595703125, -0.055222511291503906, -1.9073486328125e-06, -0.2915553152561188, -0.5870522260665894, -0.004041855689138174, -0.000102996826171875, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -0.0007752805249765515, -4.38690185546875e-05, -5.7220458984375e-06, -3.24249267578125e-05, -0.0001888275146484375, -1.9073486328125e-06, 0.0, 0.0, -0.0006951090763323009, -5.543231964111328e-05, -3.0517578125e-05, -0.0006465911865234375, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.0009514549165032804, -0.0009260177612304688, -1.5616416931152344e-05, -3.0517578125e-05, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -0.002881754422560334, -0.0001304149627685547, 0.0]}, {"score": -3.791306981459421, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -0.9521927833557129, 0.0, -0.0004912614822387695, 0.0, -4.589557647705078e-05, 0.0, -9.822844731388614e-05, 0.0, 0.0, -2.47955322265625e-05, -0.000125885009765625, -1.9073486328125e-06, -6.318082796497038e-06, -2.3841855067985307e-07, -2.2768945200368762e-05, -6.1034850659780204e-05, -5.1379160140641034e-05, -2.09808349609375e-05, -3.814697265625e-06, -2.872943878173828e-05, 0.0, -0.0001068115234375, -0.0001068115234375, -0.05886650085449219, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.00044810769031755626, -0.0003764628490898758, -2.09808349609375e-05, -0.0005645751953125, -0.430816650390625, -3.62396240234375e-05, 0.0, -0.8421268463134766, -0.0023775100708007812, -2.396098898316268e-05, -0.0008792877197265625, -0.0002574920654296875, -0.0031108856201171875, 0.0, -3.814697265625e-06, 0.0, -1.4027577638626099, -2.09808349609375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00024271006986964494, -7.2479248046875e-05, -4.76837158203125e-05, -4.1961669921875e-05, -0.0001010894775390625, -5.7220458984375e-06, 0.0, 0.0, -0.000809430901426822, -8.976459503173828e-05, -1.9073486328125e-05, -0.000591278076171875, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, -0.0006671248120255768, -0.001149296760559082, -9.775161743164062e-06, -3.0517578125e-05, -9.5367431640625e-05, -4.38690185546875e-05, 0.0, -0.0021841449197381735, -0.0001074075698852539, 0.0]}, {"score": -3.836867182623301, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 89, 24, 112, "Minion", "Summoned", "<EOS>", 164, 51, 130, "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(Mana<UNK>()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Mana<UNK>"}], "func": {"_type": "Name", "id": "MinionSummoned"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -1.404430866241455, 0.0, -0.00021135756105650216, 0.0, -8.594989776611328e-05, 0.0, -0.0001463889639126137, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -0.0001468658447265625, -1.9073486328125e-06, -5.006785613659304e-06, -2.3841855067985307e-07, -2.2768945200368762e-05, -5.8293098845751956e-05, -4.875656304648146e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.063678741455078e-05, 0.0, -0.000118255615234375, -0.0001125335693359375, -0.06023597717285156, -1.9073486328125e-06, -7.82012939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000465154618723318, -0.0003708600124809891, -2.288818359375e-05, -0.0005626678466796875, -1.0080995559692383, -6.866455078125e-05, -3.814697265625e-06, -0.09082504361867905, -0.22899532318115234, -0.0006223779637366533, -0.003704071044921875, -0.055336952209472656, -1.9073486328125e-06, -0.29176566004753113, -0.5897244215011597, -0.004037345293909311, -0.0001049041748046875, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -0.0007713480154052377, -4.57763671875e-05, -5.7220458984375e-06, -3.24249267578125e-05, -0.00019073486328125, -1.9073486328125e-06, 0.0, 0.0, -0.0006949898670427501, -5.543231964111328e-05, -2.86102294921875e-05, -0.000652313232421875, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.0009514549165032804, -0.0009241104125976562, -1.5616416931152344e-05, -3.0517578125e-05, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -0.00288568832911551, -0.0001304149627685547, 0.0]}, {"score": -4.055071758243052, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Minion", "Died", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionDied(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 3, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "MinionDied"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -2.551656723022461, -1.9073486328125e-06, -0.21148240566253662, 0.0, -0.00019776808039750904, 0.0, -0.000286102294921875, 0.0, -9.52482150751166e-05, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -0.000102996826171875, -1.9073486328125e-06, -3.218649908376392e-06, -5.960462772236497e-07, -1.9192688341718167e-05, -0.00011240981257287785, -5.3286508773453534e-05, -2.288818359375e-05, -3.814697265625e-06, -2.682209014892578e-05, 0.0, -0.0001068115234375, -9.918212890625e-05, -0.05640602111816406, -1.9073486328125e-06, -8.392333984375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004239082336425781, -0.0003198384656570852, -1.9073486328125e-05, -0.00046539306640625, -0.33847522735595703, -3.24249267578125e-05, 0.0, -0.5952635407447815, -0.12306022644042969, -0.00013851473340764642, -0.0014801025390625, -0.000453948974609375, -0.0039215087890625, 0.0, -3.814697265625e-06, 0.0, -0.16188228130340576, -0.0002422332763671875, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0003069638623856008, -9.1552734375e-05, -3.62396240234375e-05, -3.4332275390625e-05, -4.38690185546875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.0007895228336565197, -8.976459503173828e-05, -1.9073486328125e-05, -0.0005321502685546875, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, -0.0006381752318702638, -0.0011283159255981445, -1.1682510375976562e-05, -3.0517578125e-05, -9.34600830078125e-05, -4.76837158203125e-05, 0.0, -0.002231471473351121, -0.0001093149185180664, 0.0]}, {"score": -4.133734532848813, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -1.2625021934509277, 0.0, -0.0004235505766700953, 0.0, -4.017353057861328e-05, 0.0, -0.00011444091069279239, 0.0, 0.0, -1.52587890625e-05, -0.0001983642578125, -1.9073486328125e-06, -4.0531076592742465e-06, -2.3841855067985307e-07, -3.19480495818425e-05, -5.8054727560374886e-05, -6.139273318694904e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.063678741455078e-05, 0.0, -0.0001220703125, -0.0001163482666015625, -0.060100555419921875, -1.9073486328125e-06, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00047862526844255626, -0.0003784894070122391, -2.288818359375e-05, -0.000576019287109375, -0.4552888870239258, -3.62396240234375e-05, 0.0, -0.836840808391571, -0.0023832321166992188, -2.38417815126013e-05, -0.0008792877197265625, -0.0002574920654296875, -0.0030841827392578125, 0.0, -3.814697265625e-06, 0.0, -1.4143896102905273, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000244736613240093, -7.2479248046875e-05, -4.76837158203125e-05, -4.1961669921875e-05, -0.0001010894775390625, -5.7220458984375e-06, 0.0, 0.0, -0.0008093116921372712, -8.976459503173828e-05, -1.9073486328125e-05, -0.000591278076171875, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, -0.0006677204510197043, -0.001149296760559082, -9.775161743164062e-06, -3.0517578125e-05, -9.5367431640625e-05, -4.38690185546875e-05, 0.0, -0.0021841449197381735, -0.0001074075698852539, 0.0]}, {"score": -4.306715615004997, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -1.404430866241455, 0.0, -0.00021135756105650216, 0.0, -8.594989776611328e-05, 0.0, -0.0001463889639126137, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -0.0001468658447265625, -1.9073486328125e-06, -5.006785613659304e-06, -2.3841855067985307e-07, -2.2768945200368762e-05, -5.8293098845751956e-05, -4.875656304648146e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.063678741455078e-05, 0.0, -0.000118255615234375, -0.0001125335693359375, -0.06023597717285156, -1.9073486328125e-06, -7.82012939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000465154618723318, -0.0003708600124809891, -2.288818359375e-05, -0.0005626678466796875, -0.45944881439208984, -3.4332275390625e-05, 0.0, -0.8514795303344727, -0.0024166107177734375, -2.4080196453724056e-05, -0.0009002685546875, -0.0002574920654296875, -0.003124237060546875, 0.0, -3.814697265625e-06, 0.0, -1.4266475439071655, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0002428292646072805, -7.2479248046875e-05, -4.76837158203125e-05, -4.1961669921875e-05, -0.000102996826171875, -5.7220458984375e-06, 0.0, 0.0, -0.0008093116921372712, -8.976459503173828e-05, -1.9073486328125e-05, -0.0005931854248046875, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, -0.0006687926361337304, -0.001149296760559082, -9.775161743164062e-06, -3.0517578125e-05, -9.5367431640625e-05, -4.38690185546875e-05, 0.0, -0.0021841449197381735, -0.0001074075698852539, 0.0]}, {"score": -4.332774663399469, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Minion", "Died", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionDied(player=EnemyPlayer()\n            ), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 1, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "MinionDied"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -0.08698049187660217, 0.0, -0.9521927833557129, 0.0, -0.0004912614822387695, 0.0, -4.589557647705078e-05, 0.0, -9.822844731388614e-05, 0.0, 0.0, -2.47955322265625e-05, -0.000125885009765625, -1.9073486328125e-06, -6.318082796497038e-06, -2.3841855067985307e-07, -2.2768945200368762e-05, -6.1034850659780204e-05, -5.1379160140641034e-05, -2.09808349609375e-05, -3.814697265625e-06, -2.872943878173828e-05, 0.0, -0.0001068115234375, -0.0001068115234375, -0.05886650085449219, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.00044810769031755626, -0.0003764628490898758, -2.09808349609375e-05, -0.0005645751953125, -0.430816650390625, -3.62396240234375e-05, 0.0, -0.606484591960907, -0.12444019317626953, -0.0001282634329982102, -0.001445770263671875, -0.000438690185546875, -0.0038013458251953125, 0.0, -3.814697265625e-06, 0.0, -2.0561742782592773, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00025892251869663596, -9.34600830078125e-05, -3.24249267578125e-05, -3.814697265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, 0.0, -0.0008296964224427938, -8.785724639892578e-05, -1.9073486328125e-05, -0.0005512237548828125, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, -0.0007260948768816888, -0.0011435747146606445, -1.1682510375976562e-05, -3.0517578125e-05, -9.72747802734375e-05, -4.38690185546875e-05, 0.0, -0.002270452445372939, -0.0001074075698852539, 0.0]}, {"score": -4.386539264294974, "choice_history": [59, 124, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mana", " ", "Wyrm", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Spell", "Cast", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "WARRIOR", "hole1": 3, "_type": "Template3", "hole0": "Mana Wyrm", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "ManaWyrm", "hole3": "create_minion"}, "score_history": [-0.0003566741943359375, -9.5367431640625e-05, -8.344646857949556e-07, -4.088873174623586e-05, -9.894321920000948e-06, -5.960409907856956e-07, -1.1920928244535389e-07, -1.6093217709567398e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -0.000274658203125, -0.0004119873046875, -0.00017105070583056659, -0.00034198423963971436, -4.768370445162873e-07, -2.0265579223632812e-06, -2.551656723022461, -1.9073486328125e-06, -0.21148240566253662, 0.0, -0.00019776808039750904, 0.0, -0.000286102294921875, 0.0, -9.52482150751166e-05, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -0.000102996826171875, -1.9073486328125e-06, -3.218649908376392e-06, -5.960462772236497e-07, -1.9192688341718167e-05, -0.00011240981257287785, -5.3286508773453534e-05, -2.288818359375e-05, -3.814697265625e-06, -2.682209014892578e-05, 0.0, -0.0001068115234375, -9.918212890625e-05, -0.05640602111816406, -1.9073486328125e-06, -8.392333984375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004239082336425781, -0.0003198384656570852, -1.9073486328125e-05, -0.00046539306640625, -0.33847522735595703, -3.24249267578125e-05, 0.0, -0.8572044372558594, -0.0024127960205078125, -2.4795443096081726e-05, -0.000865936279296875, -0.000255584716796875, -0.003223419189453125, 0.0, -3.814697265625e-06, 0.0, -0.3538956940174103, -0.0001239776611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00023996825620997697, -7.05718994140625e-05, -4.38690185546875e-05, -4.00543212890625e-05, -6.67572021484375e-05, -5.7220458984375e-06, 0.0, 0.0, -0.0007849929388612509, -9.167194366455078e-05, -1.9073486328125e-05, -0.0005664825439453125, -5.340576171875e-05, 0.0, -1.9073486328125e-06, -0.0006042209570296109, -0.0011359453201293945, -1.1682510375976562e-05, -3.0517578125e-05, -9.34600830078125e-05, -4.76837158203125e-05, 0.0, -0.002188675105571747, -0.0001093149185180664, 0.0]}], "gold_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n"}
{"beams": [{"score": -0.01089559986257882, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -0.006535649299621582, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.001964569091796875, 0.0, -1.9073468138230965e-06, -6.330013275146484e-05, -2.503394853192731e-06, -0.0007190635660663247, -2.0265579223632812e-06, -0.000125885009765625, -3.814697265625e-06, -0.000800013542175293, -5.7220458984375e-06, -5.91278076171875e-05, -1.1444091796875e-05, -4.9591064453125e-05, -5.7220458984375e-06]}, {"score": -5.425189525140468, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 7, taunt=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -5.421496391296387, -4.1961669921875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0009698867797851562, 0.0, -1.9073468138230965e-06, -4.6133995056152344e-05, -2.503394853192731e-06, -0.0008277032757177949, -2.0265579223632812e-06, -8.392333984375e-05, -3.814697265625e-06, -0.0010459423065185547, -5.7220458984375e-06, -5.340576171875e-05, -1.1444091796875e-05, -5.340576171875e-05, -5.7220458984375e-06]}, {"score": -6.7421488742302245, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(1, 7, taunt=True)\n", "model_output": {"hole4": "_", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -6.736955642700195, -0.000118255615234375, -3.814697265625e-06, -1.9073486328125e-06, -0.0029344558715820312, 0.0, -1.6689286894688848e-06, -8.237361907958984e-05, -2.622604142743512e-06, -0.0005009185988456011, -2.0265579223632812e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008378028869628906, -3.814697265625e-06, -4.9591064453125e-05, -1.1444091796875e-05, -4.1961669921875e-05, -5.7220458984375e-06]}, {"score": -7.430579182361242, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -0.006535649299621582, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.001964569091796875, 0.0, -1.9073468138230965e-06, -6.330013275146484e-05, -2.503394853192731e-06, -7.420288562774658, -2.3841855067985307e-07, -0.0004425048828125, -1.9073486328125e-06, -0.0005840063095092773, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06]}, {"score": -8.11512768154057, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "Minion", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, Minion):\n        return Minion(1, 7, taunt=True)\n", "model_output": {"hole4": "Minion", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -8.111593246459961, -7.05718994140625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0010395050048828125, 0.0, -1.7881377516459906e-06, -9.572505950927734e-05, -2.503394853192731e-06, -0.000702502322383225, -2.0265579223632812e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.0008685588836669922, -5.7220458984375e-06, -5.53131103515625e-05, -1.1444091796875e-05, -4.9591064453125e-05, -5.7220458984375e-06]}, {"score": -8.471823117423924, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "create_weapon", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, create_weapon):\n        return Minion(1, 7, taunt=True)\n", "model_output": {"hole4": "create_weapon", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -8.468562126159668, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0008907318115234375, 0.0, -1.5497195136049413e-06, -5.3763389587402344e-05, -2.622604142743512e-06, -0.0006730799213983119, -2.0265579223632812e-06, -8.58306884765625e-05, -3.814697265625e-06, -0.0008592605590820312, -5.7220458984375e-06, -5.340576171875e-05, -1.1444091796875e-05, -4.9591064453125e-05, -5.7220458984375e-06]}, {"score": -8.508949269792083, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "divine_shield", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, divine_shield=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -0.006535649299621582, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.001964569091796875, 0.0, -1.9073468138230965e-06, -6.330013275146484e-05, -2.503394853192731e-06, -0.0007190635660663247, -2.0265579223632812e-06, -0.000125885009765625, -3.814697265625e-06, -8.498443603515625, -3.0517578125e-05, -0.000438690185546875, -2.47955322265625e-05, -4.1961669921875e-05, -5.7220458984375e-06]}, {"score": -9.292099823495391, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 173, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>", 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -0.006535649299621582, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.001964569091796875, 0.0, -1.9073468138230965e-06, -6.330013275146484e-05, -2.503394853192731e-06, -0.0007190635660663247, -2.0265579223632812e-06, -9.244879722595215, -7.62939453125e-06, -0.006572604179382324, -9.34600830078125e-05, -6.103515625e-05, -3.4332275390625e-05, -3.0517578125e-05, -1.52587890625e-05, -0.000110626220703125, -0.029567718505859375, 0.0, -2.86102294921875e-05, -0.0003147125244140625, -0.00054168701171875, -7.62939453125e-06]}, {"score": -9.476874341508392, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "find_spell_target", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, find_spell_target=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "find_spell_target", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -0.006535649299621582, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.001964569091796875, 0.0, -1.9073468138230965e-06, -6.330013275146484e-05, -2.503394853192731e-06, -0.0007190635660663247, -2.0265579223632812e-06, -0.000125885009765625, -3.814697265625e-06, -9.062642097473145, -1.1444091796875e-05, -0.3965749740600586, -5.14984130859375e-05, -0.007626533508300781, -3.814697265625e-06]}, {"score": -9.513204065541629, "choice_history": [59, 124, "Mogu'shan", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shan(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shan", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -9.504264831542969, -0.0001363004557788372, -6.794924956921022e-06, -1.0132789611816406e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -0.0001201629638671875, -1.1444091796875e-05, -9.179100743494928e-06, -2.110004425048828e-05, -3.576278118089249e-07, -9.5367431640625e-06, -3.087517325184308e-05, 0.0, -0.00010538101196289062, -1.9073486328125e-06, -2.1338462829589844e-05, 0.0, -7.748603820800781e-06, 0.0, -0.004306793212890625, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -0.0020494461059570312, 0.0, -1.9073468138230965e-06, -6.532669067382812e-05, -2.384185791015625e-06, -0.0008100699633359909, -2.0265579223632812e-06, -0.00012969970703125, -3.814697265625e-06, -0.000803828239440918, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -4.76837158203125e-05, -5.7220458984375e-06]}, {"score": -9.534487840279823, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -0.006535649299621582, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -9.527364730834961, 0.0, -1.1920928244535389e-07, -1.8715774785960093e-05, -5.960462772236497e-07, -2.2649737729807384e-05, -1.1920928244535389e-07]}, {"score": -9.722523543201191, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "Minion", "<EOS>", "7", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 7, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -0.006535649299621582, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.001964569091796875, 0.0, -1.9073468138230965e-06, -9.71211051940918, -1.311301275563892e-06, -0.00022361289302352816, -4.768370445162873e-07, -3.0517578125e-05, -1.9073486328125e-06, -0.0009628534317016602, -5.7220458984375e-06, -4.38690185546875e-05, -3.0517578125e-05, -5.7220458984375e-05, -7.62939453125e-06]}, {"score": -9.848904599687103, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, windfury=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -0.006535649299621582, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.001964569091796875, 0.0, -1.9073468138230965e-06, -6.330013275146484e-05, -2.503394853192731e-06, -0.0007190635660663247, -2.0265579223632812e-06, -0.000125885009765625, -3.814697265625e-06, -9.838202476501465, -2.09808349609375e-05, -0.0006046295166015625, -4.38690185546875e-05, -6.29425048828125e-05, -5.7220458984375e-06]}, {"score": -9.911425818940643, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "spell_targetable", "<EOS>", 25, 113, "False", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, spell_targetable=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -0.006535649299621582, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.001964569091796875, 0.0, -1.9073468138230965e-06, -6.330013275146484e-05, -2.503394853192731e-06, -0.0007190635660663247, -2.0265579223632812e-06, -0.000125885009765625, -3.814697265625e-06, -9.656529426574707, -1.1682510375976562e-05, -0.003909111022949219, -5.7220458984375e-05, -0.24094867706298828, -5.7220458984375e-06]}, {"score": -10.81636869255135, "choice_history": [59, 124, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 172, 154, "deathrattle", "<EOS>", 19, 89, 24, 112, "Deathrattle", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, deathrattle=Deathrattle(Give([Buff(ChangeAttack\n            (2)), Buff(ChangeHealth(2))]), MinionSelector(IsType(\n            MINION_TYPE.PIRATE))))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Mogu'shan Warden", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 7, "hole1": 1, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}]}], "hole0": "Mogu'shanWarden", "hole3": "create_minion"}, "score_history": [-5.7220458984375e-06, -6.29425048828125e-05, -1.0371186363045126e-05, -7.784063927829266e-05, -2.9802276912960224e-06, 0.0, -4.768370445162873e-07, -5.9604644775390625e-06, -1.9073486328125e-06, -3.814697265625e-05, -2.47955322265625e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.106198947643861e-06, -1.728534698486328e-05, -4.768370445162873e-07, -9.5367431640625e-06, -4.0650331357028335e-05, 0.0, -7.68899917602539e-05, -1.9073486328125e-06, -3.504753112792969e-05, 0.0, -7.867813110351562e-06, 0.0, -0.006535649299621582, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.001964569091796875, 0.0, -1.9073468138230965e-06, -6.330013275146484e-05, -2.503394853192731e-06, -0.0007190635660663247, -2.0265579223632812e-06, -0.000125885009765625, -3.814697265625e-06, -8.629288673400879, 0.0, -0.012217521667480469, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0010668039321899414, -7.62939453125e-06, -0.04313468933105469, -0.0020885467529296875, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.007547378074377775, -0.0019729137420654297, -3.814697265625e-05, -0.33541202545166016, -3.814697265625e-06, -0.02873992919921875, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, 0.0, -0.43070197105407715, -3.814697265625e-06, -0.0003795623779296875, -0.008893966674804688, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0029442308004945517, -0.058756113052368164, -3.4689903259277344e-05, -1.9073486328125e-06, -0.02918720245361328, -9.1552734375e-05, 0.0, 0.0, 0.0, -0.004091739654541016, 0.0, -7.82012939453125e-05, -0.15822219848632812, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0007135859341360629, -0.32317376136779785, -1.9788545614574105e-05, -2.47955322265625e-05, -0.048309326171875, -0.08973312377929688, -0.051830291748046875, -3.814697265625e-06, 0.0, -0.001056199660524726, -1.9073486328125e-06, -3.814697265625e-06, -0.004619598388671875, -0.030702590942382812, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.012592673301696777, -0.0014821289805695415, -6.079673767089844e-06, -0.0003414154052734375, -0.000141143798828125, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0005707740783691406, -1.9073486328125e-06, -0.48601245880126953, 0.0]}], "gold_code": "class MogushanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n"}
{"beams": [{"score": -5.665170045261469, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Increase", "<UNK>", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 57, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "5", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(Increase<UNK>(), Give([Buff(ChangeAttack(\n            2)), Buff(ChangeHealth(2))]), SelfSelector()), Choice(\n            ManaMana<UNK>(), Draw(3), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(5, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Increase<UNK>"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "ManaMana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 5, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9503562450408936, -0.03939918056130409, -1.0339304208755493, -0.03526782989501953, -0.02274036407470703, -1.9073486328125e-06, -1.52587890625e-05, -0.03069862350821495, -0.00024020668934099376, -9.72747802734375e-05, -0.014024734497070312, -1.52587890625e-05, -0.21133708953857422, -2.288818359375e-05, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.00888073444366455, -1.1920928244535389e-07, -3.4332275390625e-05, -0.0001163482666015625, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -0.10319066047668457, -0.04826509952545166, -3.063678013859317e-05, -5.7220458984375e-06, -0.026513099670410156, -0.0001850128173828125, -1.9073486328125e-06, 0.0, 0.0, -0.0012608766555786133, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0067234039306640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.016378283500671387, -0.25254368782043457, -1.6093124941107817e-05, -3.0517578125e-05, -0.012810707092285156, -0.02759552001953125, 0.0, -0.013816451653838158, -2.682209014892578e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.009691238403320312, -0.0009654760360717773, -0.0051403045654296875, -0.00286102294921875, 0.0, -0.10317392647266388, -0.5727688074111938, -0.005599076859652996, -0.14580261707305908, -0.1555919647216797, -0.0019321441650390625, -1.9073486328125e-06, -1.1444091796875e-05, -0.3426169157028198, -5.960462772236497e-07, -0.0038967132568359375, -0.33530616760253906, -0.000885009765625, -1.52587890625e-05, -0.0005555196548812091, -2.8491012926679105e-05, 0.0, -0.005053281784057617, 0.0, -5.102151772007346e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -8.296866144519299e-05, -2.1696090698242188e-05, -0.728172242641449, 0.0, -0.005879998207092285, 0.0]}, {"score": -5.828762126027414, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "<UNK>", "Of", "<UNK>", "<EOS>", 51, 130, "Draw", "<EOS>", 41, 88, 24, 112, "Player", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "<UNK>", "<EOS>", 51, 130, "Draw", "<EOS>", 41, 88, 24, 112, "Player", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "5", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(<UNK>Of<UNK>(), Draw(), PlayerSelector(\n            players=BothPlayer())), Choice(Mana<UNK>(), Draw(),\n            PlayerSelector(players=BothPlayer()))])\n\n    def create_minion(self, player):\n        return Spell(5, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Of<UNK>"}, {"_type": "Template10", "hole0": "Draw"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Mana<UNK>"}, {"_type": "Template10", "hole0": "Draw"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 5, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9448239803314209, -0.056910526007413864, -0.2699980139732361, -0.01523447036743164, -0.48334312438964844, 0.0, -0.5256022214889526, -0.00086246058344841, -0.00238800048828125, -1.0798521041870117, -1.1444091796875e-05, -1.9073486328125e-06, -0.004872515331953764, -4.1961669921875e-05, 0.0, -0.004199981689453125, -2.86102294921875e-05, -0.000957489013671875, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.01177060604095459, -7.62939453125e-06, 0.0, -0.0002193450927734375, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0041561126708984375, -0.002758026123046875, -0.0373077392578125, -0.0017747879028320312, -1.9073486328125e-06, -0.31021833419799805, -0.0648941919207573, -0.19922709465026855, -0.34279537200927734, 0.0, -0.14372311532497406, -0.0002905070723500103, -0.00246429443359375, -0.04672813415527344, -1.1444091796875e-05, 0.0, -0.004996411502361298, -3.0517578125e-05, 0.0, -0.004360198974609375, -7.2479248046875e-05, -0.000858306884765625, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.04280686378479004, -1.33514404296875e-05, 0.0, -0.0031337738037109375, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -7.831906987121329e-05, -2.7298927307128906e-05, -0.8275631070137024, 0.0, -0.004880070686340332, 0.0]}, {"score": -6.242278607254114, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Increase", "<UNK>", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 57, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(Increase<UNK>(), Give([Buff(ChangeAttack(\n            2)), Buff(ChangeHealth(2))]), SelfSelector()), Choice(\n            ManaMana<UNK>(), Draw(3), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Increase<UNK>"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "ManaMana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9503562450408936, -0.03939918056130409, -1.0339304208755493, -0.03526782989501953, -0.02274036407470703, -1.9073486328125e-06, -1.52587890625e-05, -0.03069862350821495, -0.00024020668934099376, -9.72747802734375e-05, -0.014024734497070312, -1.52587890625e-05, -0.21133708953857422, -2.288818359375e-05, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.00888073444366455, -1.1920928244535389e-07, -3.4332275390625e-05, -0.0001163482666015625, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -0.10319066047668457, -0.04826509952545166, -3.063678013859317e-05, -5.7220458984375e-06, -0.026513099670410156, -0.0001850128173828125, -1.9073486328125e-06, 0.0, 0.0, -0.0012608766555786133, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0067234039306640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.016378283500671387, -0.25254368782043457, -1.6093124941107817e-05, -3.0517578125e-05, -0.012810707092285156, -0.02759552001953125, 0.0, -0.013816451653838158, -2.682209014892578e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.009691238403320312, -0.0009654760360717773, -0.0051403045654296875, -0.00286102294921875, 0.0, -0.10317392647266388, -0.5727688074111938, -0.005599076859652996, -0.14580261707305908, -0.1555919647216797, -0.0019321441650390625, -1.9073486328125e-06, -1.1444091796875e-05, -0.3426169157028198, -5.960462772236497e-07, -0.0038967132568359375, -0.33530616760253906, -0.000885009765625, -1.52587890625e-05, -0.0005555196548812091, -2.8491012926679105e-05, 0.0, -0.005053281784057617, 0.0, -5.102151772007346e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -8.296866144519299e-05, -2.1696090698242188e-05, -1.3024539947509766, 0.0, -0.008706808090209961, 0.0]}, {"score": -6.258181677717658, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "<UNK>", "Of", "<UNK>", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 57, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "5", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(<UNK>Of<UNK>(), Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()), Choice(\n            ManaMana<UNK>(), Draw(3), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(5, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Of<UNK>"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "ManaMana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 5, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9448239803314209, -0.056910526007413864, -0.2699980139732361, -0.01523447036743164, -0.967768669128418, -0.0917520523071289, 0.0, -1.33514404296875e-05, -0.05909895524382591, -0.00012195108865853399, -0.0001354217529296875, -0.014528274536132812, -1.33514404296875e-05, -0.4962272644042969, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -0.011468887329101562, 0.0, -3.24249267578125e-05, -0.00012969970703125, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -0.12110483646392822, -0.047348856925964355, -3.087519871769473e-05, -5.7220458984375e-06, -0.02675342559814453, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0011121034622192383, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0065479278564453125, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.016918063163757324, -0.24970471858978271, -1.6331539882230572e-05, -2.86102294921875e-05, -0.012800216674804688, -0.0277557373046875, 0.0, -0.01366172730922699, -2.682209014892578e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.009601593017578125, -0.0009559392929077148, -0.0050945281982421875, -0.0028543472290039062, 0.0, -0.10299676656723022, -0.5744763612747192, -0.005584367550909519, -0.14537250995635986, -0.1553640365600586, -0.0019359588623046875, -1.9073486328125e-06, -1.1444091796875e-05, -0.3426626920700073, -5.960462772236497e-07, -0.003917694091796875, -0.33185768127441406, -0.000881195068359375, -1.52587890625e-05, -0.0005557579570449889, -2.8491012926679105e-05, 0.0, -0.005045652389526367, 0.0, -5.102151772007346e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -8.296866144519299e-05, -2.1696090698242188e-05, -0.7281515002250671, 0.0, -0.005881905555725098, 0.0]}, {"score": -6.451790553958993, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Increase", "<UNK>", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 57, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "Mana", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(Increase<UNK>(), Give([Buff(ChangeAttack(\n            2)), Buff(ChangeHealth(2))]), SelfSelector()), Choice(\n            ManaMana<UNK>(), Draw(3), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(0, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Increase<UNK>"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "ManaMana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9503562450408936, -0.03939918056130409, -1.0339304208755493, -0.03526782989501953, -0.02274036407470703, -1.9073486328125e-06, -1.52587890625e-05, -0.03069862350821495, -0.00024020668934099376, -9.72747802734375e-05, -0.014024734497070312, -1.52587890625e-05, -0.21133708953857422, -2.288818359375e-05, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.00888073444366455, -1.1920928244535389e-07, -3.4332275390625e-05, -0.0001163482666015625, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -0.10319066047668457, -0.04826509952545166, -3.063678013859317e-05, -5.7220458984375e-06, -0.026513099670410156, -0.0001850128173828125, -1.9073486328125e-06, 0.0, 0.0, -0.0012608766555786133, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0067234039306640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.016378283500671387, -0.25254368782043457, -1.6093124941107817e-05, -3.0517578125e-05, -0.012810707092285156, -0.02759552001953125, 0.0, -0.013816451653838158, -2.682209014892578e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.009691238403320312, -0.0009654760360717773, -0.0051403045654296875, -0.00286102294921875, 0.0, -0.10317392647266388, -0.5727688074111938, -0.005599076859652996, -0.14580261707305908, -0.1555919647216797, -0.0019321441650390625, -1.9073486328125e-06, -1.1444091796875e-05, -0.3426169157028198, -5.960462772236497e-07, -0.0038967132568359375, -0.33530616760253906, -0.000885009765625, -1.52587890625e-05, -0.0005555196548812091, -2.8491012926679105e-05, 0.0, -0.005053281784057617, 0.0, -5.102151772007346e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -8.296866144519299e-05, -2.1696090698242188e-05, -1.5036239624023438, -7.152352918637916e-05, -0.01697726361453533, 0.0]}, {"score": -6.452830487364984, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Increase", "<UNK>", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 57, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "5", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(Increase<UNK>(), Give([Buff(ChangeAttack(\n            2)), Buff(ChangeHealth(2))]), SelfSelector()), Choice(Mana<UNK>\n            (), Draw(3), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(5, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Increase<UNK>"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Mana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 5, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9503562450408936, -0.03939918056130409, -1.0339304208755493, -0.03526782989501953, -0.02274036407470703, -1.9073486328125e-06, -1.52587890625e-05, -0.03069862350821495, -0.00024020668934099376, -9.72747802734375e-05, -0.014024734497070312, -1.52587890625e-05, -0.21133708953857422, -2.288818359375e-05, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.00888073444366455, -1.1920928244535389e-07, -3.4332275390625e-05, -0.0001163482666015625, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -0.10319066047668457, -0.04826509952545166, -3.063678013859317e-05, -5.7220458984375e-06, -0.026513099670410156, -0.0001850128173828125, -1.9073486328125e-06, 0.0, 0.0, -0.0012608766555786133, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0067234039306640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.016378283500671387, -0.25254368782043457, -1.6093124941107817e-05, -3.0517578125e-05, -0.012810707092285156, -0.02759552001953125, 0.0, -0.013816451653838158, -2.682209014892578e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.009691238403320312, -0.0009654760360717773, -0.0051403045654296875, -0.00286102294921875, 0.0, -0.10317392647266388, -0.8634136319160461, -0.16746294498443604, -0.14151763916015625, -0.039539337158203125, -1.9073486328125e-06, -3.0517578125e-05, -0.2787362337112427, -5.960462772236497e-07, -0.0029449462890625, -0.8367633819580078, -0.001033782958984375, -1.52587890625e-05, -0.0005176285048946738, -3.206729161320254e-05, 0.0, -0.006007194519042969, 0.0, -5.328648694558069e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, -8.04653755039908e-05, -2.181529998779297e-05, -0.7483350038528442, 0.0, -0.0054285526275634766, 0.0]}, {"score": -6.455257432008949, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "<UNK>", "Of", "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 57, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "5", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(<UNK>OfMana<UNK>(), Give([Buff(\n            ChangeAttack(2)), Buff(ChangeHealth(2))]), SelfSelector()),\n            Choice(ManaMana<UNK>(), Draw(3), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(5, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>OfMana<UNK>"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "ManaMana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 5, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9448239803314209, -0.056910526007413864, -1.4429640769958496, -0.05587175861001015, -0.008842825889587402, -0.2692708969116211, -0.026368141174316406, 0.0, -5.7220458984375e-06, -0.023808598518371582, -0.0001929998106788844, -8.0108642578125e-05, -0.014862060546875, -1.71661376953125e-05, -0.2932701110839844, -2.09808349609375e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -0.006015777587890625, 0.0, -3.24249267578125e-05, -0.0001316070556640625, -6.103515625e-05, -1.9073486328125e-06, 0.0, -0.10024058818817139, -0.0479205846786499, -3.5047520213993266e-05, -5.7220458984375e-06, -0.024919509887695312, -0.0001735687255859375, -3.814697265625e-06, 0.0, 0.0, -0.0009272098541259766, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0061187744140625, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.01602351665496826, -0.2530008554458618, -1.490105023549404e-05, -2.86102294921875e-05, -0.01251983642578125, -0.028585433959960938, 0.0, -0.013897878117859364, -2.682209014892578e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.00966644287109375, -0.0009559392929077148, -0.0050983428955078125, -0.0028486251831054688, 0.0, -0.10302923619747162, -0.5743155479431152, -0.005577463656663895, -0.14572250843048096, -0.1554851531982422, -0.0019311904907226562, -1.9073486328125e-06, -1.1444091796875e-05, -0.34314048290252686, -5.960462772236497e-07, -0.0039234161376953125, -0.33244991302490234, -0.0008831024169921875, -1.52587890625e-05, -0.0005559962592087686, -2.8491012926679105e-05, 0.0, -0.00504755973815918, 0.0, -5.102151772007346e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -8.296866144519299e-05, -2.1696090698242188e-05, -0.7281040549278259, 0.0, -0.00588381290435791, 0.0]}, {"score": -6.611479184216726, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Increase", "<UNK>", "<UNK>", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 57, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "5", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(Increase<UNK><UNK>(), Give([Buff(\n            ChangeAttack(2)), Buff(ChangeHealth(2))]), SelfSelector()),\n            Choice(ManaMana<UNK>(), Draw(3), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(5, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Increase<UNK><UNK>"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "ManaMana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 5, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9503562450408936, -0.03939918056130409, -0.6939817667007446, -0.7563315033912659, -0.4242668151855469, -0.07751178741455078, 0.0, -9.5367431640625e-06, -0.05850839614868164, -0.00019383427570573986, -0.0001506805419921875, -0.01598072052001953, -1.52587890625e-05, -0.2674751281738281, -2.288818359375e-05, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.009195446968078613, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001277923583984375, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -0.10603523254394531, -0.04781162738800049, -3.278254735050723e-05, -5.7220458984375e-06, -0.026641845703125, -0.00020599365234375, -1.9073486328125e-06, 0.0, 0.0, -0.0012170076370239258, -2.3841855067985307e-07, -1.71661376953125e-05, -0.00669097900390625, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.016693949699401855, -0.2516578435897827, -1.6569954823353328e-05, -3.0517578125e-05, -0.012946128845214844, -0.027540206909179688, 0.0, -0.013725260272622108, -2.682209014892578e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.009649276733398438, -0.0009635686874389648, -0.0051326751708984375, -0.0028600692749023438, 0.0, -0.1031302958726883, -0.5731222033500671, -0.005597420036792755, -0.14558136463165283, -0.15549945831298828, -0.0019350051879882812, -1.9073486328125e-06, -1.1444091796875e-05, -0.3424900770187378, -5.960462772236497e-07, -0.00390625, -0.3335857391357422, -0.0008831024169921875, -1.52587890625e-05, -0.000555638805963099, -2.8491012926679105e-05, 0.0, -0.005049467086791992, 0.0, -5.102151772007346e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -8.296866144519299e-05, -2.1696090698242188e-05, -0.7281152606010437, 0.0, -0.005881905555725098, 0.0]}, {"score": -6.641337001777423, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Increase", "<UNK>", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 55, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "5", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(Increase<UNK>(), Give([Buff(ChangeAttack(\n            2)), Buff(ChangeHealth(2))]), SelfSelector()), Choice(Mana<UNK>\n            (), Draw(2), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(5, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Increase<UNK>"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Mana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 5, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9503562450408936, -0.03939918056130409, -1.0339304208755493, -0.03526782989501953, -0.02274036407470703, -1.9073486328125e-06, -1.52587890625e-05, -0.03069862350821495, -0.00024020668934099376, -9.72747802734375e-05, -0.014024734497070312, -1.52587890625e-05, -0.21133708953857422, -2.288818359375e-05, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.00888073444366455, -1.1920928244535389e-07, -3.4332275390625e-05, -0.0001163482666015625, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -0.10319066047668457, -0.04826509952545166, -3.063678013859317e-05, -5.7220458984375e-06, -0.026513099670410156, -0.0001850128173828125, -1.9073486328125e-06, 0.0, 0.0, -0.0012608766555786133, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0067234039306640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.016378283500671387, -0.25254368782043457, -1.6093124941107817e-05, -3.0517578125e-05, -0.012810707092285156, -0.02759552001953125, 0.0, -0.013816451653838158, -2.682209014892578e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.009691238403320312, -0.0009654760360717773, -0.0051403045654296875, -0.00286102294921875, 0.0, -0.10317392647266388, -0.8634136319160461, -0.16746294498443604, -0.14151763916015625, -0.039539337158203125, -1.9073486328125e-06, -3.0517578125e-05, -0.2787362337112427, -5.960462772236497e-07, -0.0029449462890625, -0.5928010940551758, -0.14228153228759766, -1.9073486328125e-06, -0.0012168210232630372, -1.8239017663290724e-05, 0.0, -0.007662534713745117, 0.0, -5.5909084039740264e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -6.544535426655784e-05, -2.205371856689453e-05, -1.0389429330825806, 0.0, -0.0037245750427246094, 0.0]}, {"score": -6.670483081056531, "choice_history": [59, 127, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 40, 85, 6, 165, 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 177, 70, 96, "use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 7 or\n            len(player.minions) < 7)\n\n    def use(self, player, game):\n        return len(player.minions) < 7\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"values": [{"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}], "op": {"_type": "Or"}, "_type": "BoolOp"}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "name": "use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 5, "_type": "Template3", "hole0": "Nourish", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Nourish", "hole3": "can_use"}, "score_history": [-3.814697265625e-06, -3.1415138244628906, -0.00013743899762630463, -0.0007862016791477799, -0.000668734370265156, -8.106231689453125e-06, -0.0008144378662109375, -6.866455078125e-05, -0.0003662109375, -5.7220458984375e-06, -0.0015201568603515625, -0.000244140625, -9.679325739853084e-05, -7.05718994140625e-05, -3.099436753473128e-06, -1.9073486328125e-06, -0.08356690406799316, 0.0, -0.009739041328430176, 0.0, -0.6229419708251953, 0.0, -0.000729680061340332, 0.0, -0.0007305145263671875, -0.0002384185791015625, -0.0003795623779296875, -0.0004889965057373047, -4.589557647705078e-05, -0.028215408325195312, -0.040485382080078125, -0.0001163482666015625, -0.0018396377563476562, -0.000102996826171875, -8.392333984375e-05, -0.000431060791015625, -0.0005130767822265625, -0.0004730224609375, -0.008005142211914062, 0.0, -2.288818359375e-05, -3.0517578125e-05, -4.613332566805184e-05, -4.0531158447265625e-06, -0.004869699478149414, 0.0, 0.0, -0.000293731689453125, 0.0, -8.58306884765625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -0.20106983184814453, -0.0011539459228515625, -0.0022869110107421875, -5.91278076171875e-05, -0.00048828125, -5.7220458984375e-06, -0.0006275177001953125, -0.00014495849609375, -1.52587890625e-05, 0.0, -0.0005229711532592773, -1.9073486328125e-06, -6.67572021484375e-05, -4.38690185546875e-05, 0.0, -0.0002384185791015625, 0.0, -1.33514404296875e-05, 0.0, -0.0017156600952148438, -1.9073486328125e-06, -7.62939453125e-05, -0.000400543212890625, -0.0001010894775390625, -4.57763671875e-05, -5.7220458984375e-06, -0.05042677000164986, -1.1920928244535389e-07, -0.0016422271728515625, -0.000469207763671875, -0.00067901611328125, -0.001964569091796875, -0.00115203857421875, -1.9073486328125e-06, -0.0033725500106811523, 0.0, -0.000156402587890625, -2.86102294921875e-05, 0.0, -0.010302543640136719, 0.0, -2.872943878173828e-05, 0.0, -0.004109382629394531, -3.814697265625e-06, -0.00042724609375, -0.0003299713134765625, -8.58306884765625e-05, -2.6702880859375e-05, -3.4332275390625e-05, -0.002698042429983616, 0.0, -0.04945087432861328, -0.009798049926757812, -0.0003948211669921875, -0.0014828442363068461, -1.9073486328125e-06, -0.0002040863037109375, -0.00067901611328125, -7.62939453125e-05, -0.000141143798828125, -0.0001049041748046875, -9.5367431640625e-06, -3.647772973636165e-05, 0.0, 0.0, -3.0517578125e-05, -1.740450898068957e-05, -7.033342626527883e-06, -1.2999858856201172, -0.015478134155273438, -0.0001583099365234375, -0.4411811828613281, -0.10941505432128906, -5.7220458984375e-05, -3.814697265625e-06, -0.017507553100585938, -1.9073486328125e-06, -0.01837921142578125, -1.9073486328125e-06, -0.0001220703125, -0.0005474090576171875, 0.0, -0.0011444091796875, 0.0, -3.0517578125e-05, 0.0, -0.012254714965820312, -1.9073486328125e-06, -0.000274658203125, -0.0002899169921875, -0.00035858154296875, -7.82012939453125e-05, -1.9073486328125e-06, -0.45291611552238464, -1.1920928244535389e-07]}, {"score": -6.741656365716402, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Moonfire", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 57, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "5", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(Moonfire(), Give([Buff(ChangeAttack(2)),\n            Buff(ChangeHealth(2))]), SelfSelector()), Choice(ManaMana<UNK>(\n            ), Draw(3), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(5, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Moonfire"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "ManaMana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 5, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -3.0189034938812256, -0.2767764925956726, -0.03409290313720703, -0.005482673645019531, 0.0, -1.9073486328125e-06, -0.02355104312300682, -0.00042223907075822353, -0.0003376007080078125, -0.015893936157226562, -5.7220458984375e-06, -0.09190654754638672, -1.71661376953125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.007219433784484863, -1.1920928244535389e-07, -3.62396240234375e-05, -9.72747802734375e-05, -5.14984130859375e-05, -1.9073486328125e-06, 0.0, -0.05629241466522217, -0.0528184175491333, -3.0517570849042386e-05, -5.7220458984375e-06, -0.024466514587402344, -0.0001201629638671875, -1.9073486328125e-06, 0.0, 0.0, -0.001020669937133789, -2.3841855067985307e-07, -1.9073486328125e-05, -0.006290435791015625, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.014662504196166992, -0.24615693092346191, -1.4543427823809907e-05, -2.86102294921875e-05, -0.012885093688964844, -0.028003692626953125, 0.0, -0.013630012050271034, -2.682209014892578e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.009746551513671875, -0.0009673833847045898, -0.0051212310791015625, -0.0028514862060546875, 0.0, -0.10320447385311127, -0.5726814866065979, -0.005594905931502581, -0.14618313312530518, -0.15561866760253906, -0.0019283294677734375, -1.9073486328125e-06, -1.1444091796875e-05, -0.3431137800216675, -5.960462772236497e-07, -0.0038928985595703125, -0.3363351821899414, -0.000885009765625, -1.52587890625e-05, -0.000555638805963099, -2.8491012926679105e-05, 0.0, -0.005057096481323242, 0.0, -5.102151772007346e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -8.308786345878616e-05, -2.1696090698242188e-05, -0.7281301617622375, 0.0, -0.005877137184143066, 0.0]}, {"score": -6.83527784194419, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "<UNK>", "Of", "<UNK>", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 57, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(<UNK>Of<UNK>(), Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()), Choice(\n            ManaMana<UNK>(), Draw(3), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(2, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Of<UNK>"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "ManaMana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 2, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9448239803314209, -0.056910526007413864, -0.2699980139732361, -0.01523447036743164, -0.967768669128418, -0.0917520523071289, 0.0, -1.33514404296875e-05, -0.05909895524382591, -0.00012195108865853399, -0.0001354217529296875, -0.014528274536132812, -1.33514404296875e-05, -0.4962272644042969, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -0.011468887329101562, 0.0, -3.24249267578125e-05, -0.00012969970703125, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -0.12110483646392822, -0.047348856925964355, -3.087519871769473e-05, -5.7220458984375e-06, -0.02675342559814453, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0011121034622192383, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0065479278564453125, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.016918063163757324, -0.24970471858978271, -1.6331539882230572e-05, -2.86102294921875e-05, -0.012800216674804688, -0.0277557373046875, 0.0, -0.01366172730922699, -2.682209014892578e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.009601593017578125, -0.0009559392929077148, -0.0050945281982421875, -0.0028543472290039062, 0.0, -0.10299676656723022, -0.5744763612747192, -0.005584367550909519, -0.14537250995635986, -0.1553640365600586, -0.0019359588623046875, -1.9073486328125e-06, -1.1444091796875e-05, -0.3426626920700073, -5.960462772236497e-07, -0.003917694091796875, -0.33185768127441406, -0.000881195068359375, -1.52587890625e-05, -0.0005557579570449889, -2.8491012926679105e-05, 0.0, -0.005045652389526367, 0.0, -5.102151772007346e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -8.296866144519299e-05, -2.1696090698242188e-05, -1.3024218082427979, 0.0, -0.008707761764526367, 0.0]}, {"score": -6.985121636796485, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nourish", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "Mana", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE\n            )\n\n    def create_weapon(self, player):\n        return Spell(0, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 5, "_type": "Template3", "hole0": "Nourish", "hole3": "RARE"}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 0, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_weapon"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -3.307612419128418, -5.91278076171875e-05, -6.6756979322235566e-06, -0.00011444091796875, -2.3841855067985307e-07, -1.3470649719238281e-05, -0.16503643989562988, 0.0, -0.005599260330200195, 0.0, -0.06148409843444824, 0.0, -0.002669929526746273, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, -2.7328033447265625, -1.9431114196777344e-05, -0.00026976820663549006, -0.5728120803833008, -0.011922468431293964, -0.0013265609741210938, -1.1920928244535389e-07]}, {"score": -7.5731029158380565, "choice_history": [59, 124, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Nourish", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "choices", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "<UNK>", "Of", "<UNK>", "<EOS>", 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 166, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Choice", "<EOS>", 166, 51, 130, "Mana", "Mana", "<UNK>", "<EOS>", 41, 89, 24, 112, "Draw", "<EOS>", 164, 57, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Spell", "<EOS>", "5", "<EOS>", "5", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, choices=[Choice(<UNK>Of<UNK>(), Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2)), Buff(ChangeHealth(2))]),\n            SelfSelector()), Choice(ManaMana<UNK>(), Draw(3),\n            PlayerSelector())])\n\n    def create_minion(self, player):\n        return Spell(5, 5)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Of<UNK>"}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "ManaMana<UNK>"}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole6": [{"hole2": 5, "hole1": 5, "_type": "Template8", "hole0": "Spell"}], "hole0": "Nourish", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.048193931579589844, -0.05878405272960663, -0.016201138496398926, -6.472857057815418e-05, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.03738594055175781, -0.0044231414794921875, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.884823152271565e-05, -0.0011464357376098633, -0.001483917236328125, -7.05718994140625e-05, -3.4570634852570947e-06, -4.6491513785440475e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00194549560546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.05842018127441406, -1.33514404296875e-05, -4.57763671875e-05, -3.0517578125e-05, -0.06485843658447266, -2.47955322265625e-05, -0.0007038116455078125, -0.0009021759033203125, -0.030645370483398438, -0.02181529998779297, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -0.0028896331787109375, -0.02728748321533203, -0.00363922119140625, -0.000995635986328125, -2.09808349609375e-05, -0.9448239803314209, -0.056910526007413864, -0.2699980139732361, -0.01523447036743164, -0.967768669128418, -0.0917520523071289, 0.0, -1.33514404296875e-05, -0.05909895524382591, -0.00012195108865853399, -0.0001354217529296875, -0.014528274536132812, -1.33514404296875e-05, -0.9474306106567383, -9.918212890625e-05, -0.00035858154296875, 0.0, 0.0, -0.018616676330566406, 0.0, -6.103515625e-05, -0.0001220703125, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -0.038587212562561035, -0.04474663734436035, -4.434584843693301e-05, -7.62939453125e-06, -0.012285232543945312, -0.001003265380859375, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.047881126403808594, -1.1920928244535389e-07, -6.103515625e-05, -0.026363372802734375, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.022605061531066895, -0.3704160451889038, -7.271740287251305e-06, -2.288818359375e-05, -0.00452423095703125, -0.00058746337890625, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.05438518524169922, -2.3841855067985307e-07, -8.58306884765625e-05, -0.24923324584960938, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.04251241683959961, -0.3831756114959717, -8.702239938429557e-06, -2.288818359375e-05, -0.004093170166015625, -0.014738082885742188, 0.0, -0.01422098372131586, -2.872943878173828e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.00865936279296875, -0.0009310245513916016, -0.0052814483642578125, -0.0029363632202148438, 0.0, -0.10088588297367096, -0.6175504922866821, -0.005415546242147684, -0.14148998260498047, -0.15605926513671875, -0.0018968582153320312, -1.9073486328125e-06, -1.1444091796875e-05, -0.3480881452560425, -5.960462772236497e-07, -0.00388336181640625, -0.3380126953125, -0.0008487701416015625, -1.52587890625e-05, -0.0005595708498731256, -2.8610222216229886e-05, 0.0, -0.00497889518737793, 0.0, -5.102151772007346e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -8.296866144519299e-05, -2.1696090698242188e-05, -0.7283087372779846, 0.0, -0.005884766578674316, 0.0]}, {"score": -10.56673720322555, "choice_history": [59, 127, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 40, 85, 6, 165, 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 177, 70, 96, "use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "option", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 165, 44, 108, 165, 51, 130, "Damage", "<UNK>", "<EOS>", 51, 130, "<UNK>", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 24, 112, "option", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 7 or\n            len(player.minions) < 7)\n\n    def use(self, player, game):\n        super().use(player, game)\n        option = player.agent.choose_option([Damage<UNK>(), <UNK>()], player)\n        option.use(player, game)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"values": [{"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}], "op": {"_type": "Or"}, "_type": "BoolOp"}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "option"}], "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Template10", "hole0": "Damage<UNK>"}, {"_type": "Template10", "hole0": "<UNK>"}]}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "agent"}, "attr": "choose_option"}}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Name", "id": "option"}}], "name": "use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "DRUID", "hole1": 5, "_type": "Template3", "hole0": "Nourish", "hole3": "RARE"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Nourish", "hole3": "can_use"}, "score_history": [-3.814697265625e-06, -3.1415138244628906, -0.00013743899762630463, -0.0007862016791477799, -0.000668734370265156, -8.106231689453125e-06, -0.0008144378662109375, -6.866455078125e-05, -0.0003662109375, -5.7220458984375e-06, -0.0015201568603515625, -0.000244140625, -9.679325739853084e-05, -7.05718994140625e-05, -3.099436753473128e-06, -1.9073486328125e-06, -0.08356690406799316, 0.0, -0.009739041328430176, 0.0, -0.6229419708251953, 0.0, -0.000729680061340332, 0.0, -0.0007305145263671875, -0.0002384185791015625, -0.0003795623779296875, -0.0004889965057373047, -4.589557647705078e-05, -0.028215408325195312, -0.040485382080078125, -0.0001163482666015625, -0.0018396377563476562, -0.000102996826171875, -8.392333984375e-05, -0.000431060791015625, -0.0005130767822265625, -0.0004730224609375, -0.008005142211914062, 0.0, -2.288818359375e-05, -3.0517578125e-05, -4.613332566805184e-05, -4.0531158447265625e-06, -0.004869699478149414, 0.0, 0.0, -0.000293731689453125, 0.0, -8.58306884765625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -0.20106983184814453, -0.0011539459228515625, -0.0022869110107421875, -5.91278076171875e-05, -0.00048828125, -5.7220458984375e-06, -0.0006275177001953125, -0.00014495849609375, -1.52587890625e-05, 0.0, -0.0005229711532592773, -1.9073486328125e-06, -6.67572021484375e-05, -4.38690185546875e-05, 0.0, -0.0002384185791015625, 0.0, -1.33514404296875e-05, 0.0, -0.0017156600952148438, -1.9073486328125e-06, -7.62939453125e-05, -0.000400543212890625, -0.0001010894775390625, -4.57763671875e-05, -5.7220458984375e-06, -0.05042677000164986, -1.1920928244535389e-07, -0.0016422271728515625, -0.000469207763671875, -0.00067901611328125, -0.001964569091796875, -0.00115203857421875, -1.9073486328125e-06, -0.0033725500106811523, 0.0, -0.000156402587890625, -2.86102294921875e-05, 0.0, -0.010302543640136719, 0.0, -2.872943878173828e-05, 0.0, -0.004109382629394531, -3.814697265625e-06, -0.00042724609375, -0.0003299713134765625, -8.58306884765625e-05, -2.6702880859375e-05, -3.4332275390625e-05, -0.002698042429983616, 0.0, -0.04945087432861328, -0.009798049926757812, -0.0003948211669921875, -0.0014828442363068461, -1.9073486328125e-06, -0.0002040863037109375, -0.00067901611328125, -7.62939453125e-05, -0.000141143798828125, -0.0001049041748046875, -9.5367431640625e-06, -3.647772973636165e-05, 0.0, 0.0, -3.0517578125e-05, -1.740450898068957e-05, -7.033342626527883e-06, -0.6291360855102539, -0.014723777770996094, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -7.748573807475623e-06, -4.017353057861328e-05, -0.00022602081298828125, 0.0, -4.00543212890625e-05, -0.0003261566162109375, 0.0, -1.33514404296875e-05, 0.0, -0.0001735687255859375, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.021280288696289062, -2.09808349609375e-05, -1.52587890625e-05, -0.0519256591796875, -5.7220458984375e-06, -1.706311583518982, 0.0, -0.0052204132080078125, -7.2479248046875e-05, -3.814697265625e-06, 0.0, -0.0007610321044921875, 0.0, -0.11327362060546875, 0.0, -0.0069179534912109375, 0.0, -0.09511756896972656, -1.1444091796875e-05, -0.01697838306427002, -9.548664093017578e-05, -0.0002040863037109375, -0.06501197814941406, -9.1552734375e-05, -5.53131103515625e-05, -0.0002918243408203125, -3.814697265625e-06, -0.7132508158683777, -0.0847005546092987, -0.0007123946561478078, -0.3471088409423828, -3.814697265625e-06, -0.49993062019348145, -0.5557336807250977, -0.5830898284912109, 0.0, -0.00115966796875, 0.0, -0.0058307647705078125, -0.5900020599365234, -0.0046710968017578125, 0.0, -0.06524372100830078, 0.0, -0.008620142936706543, 0.0, -0.000179290771484375, -0.07739543914794922, 0.0, -8.678436279296875e-05, 0.0, -0.0002803802490234375, 0.0, -1.71661376953125e-05, -3.814697265625e-06]}], "gold_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n\n        class Gain2(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Gain 2 mana crystals', 0, CHARACTER_CLASS\n                    .DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                if player.max_mana < 8:\n                    player.max_mana += 2\n                    player.mana += 2\n                else:\n                    player.max_mana = 10\n                    player.mana += 2\n\n\n        class Draw3(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Draw three cards', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                player.draw()\n                player.draw()\n                player.draw()\n        option = player.agent.choose_option([Gain2(), Draw3()], player)\n        option.use(player, game)\n"}
{"beams": [{"score": -2.8505060109050575, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -0.9303147792816162, 0.0, -0.008702516555786133, 0.0, -2.4199480321840383e-05, 0.0, -7.6293927122605965e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -0.0011449564481154084, -2.372257222305052e-05, -0.9661617279052734, -1.1444091796875e-05, -7.62939453125e-06, -0.0021953582763671875, 0.0, -2.4437878892058507e-05, -0.000110626220703125, -3.24249267578125e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.6098365783691406, -4.38690185546875e-05, -0.030757904052734375, 0.0, -0.0008983612060546875, 0.0, -0.20146751403808594, -2.47955322265625e-05, -0.0061435699462890625, -1.9073486328125e-06, -0.044948481023311615, 0.0, -0.00031280517578125, -0.00045013427734375, -1.9073486328125e-06, -0.00113677978515625, -8.535384404240176e-05]}, {"score": -3.426045483538921, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -1.3379113674163818, -1.9073486328125e-06, -0.015532493591308594, 0.0, -2.372264498262666e-05, 0.0, -1.1205666851310525e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.0108642578125e-05, -0.0011410291772335768, -1.895421155495569e-05, -1.1420888900756836, -1.1444091796875e-05, -7.62939453125e-06, -0.0020313262939453125, 0.0, -2.4676293833181262e-05, -0.0001068115234375, -3.24249267578125e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -0.5933780670166016, -4.1961669921875e-05, -0.030414581298828125, 0.0, -0.000873565673828125, 0.0, -0.2046194076538086, -2.47955322265625e-05, -0.006039619445800781, -1.9073486328125e-06, -0.044098515063524246, 0.0, -0.000308990478515625, -0.00045013427734375, -1.9073486328125e-06, -0.0011396408081054688, -8.535384404240176e-05]}, {"score": -3.707548207435586, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "SHAMAN", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -1.162963628768921, -1.728534698486328e-05, -0.008121728897094727, 0.0, -6.461142766056582e-05, 0.0, -1.2397744285408407e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.0016580400988459587, -1.800052632461302e-05, -1.49249267578125, -1.33514404296875e-05, -7.62939453125e-06, -0.0020046234130859375, 0.0, -2.4914712412282825e-05, -0.00011444091796875, -3.24249267578125e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -0.6854839324951172, -4.1961669921875e-05, -0.03678321838378906, 0.0, -0.000835418701171875, 0.0, -0.21974945068359375, -2.47955322265625e-05, -0.006043434143066406, -1.9073486328125e-06, -0.04343583062291145, 0.0, -0.0003108978271484375, -0.000457763671875, -1.9073486328125e-06, -0.001148223876953125, -8.535384404240176e-05]}, {"score": -5.271618511047095, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 164, 57], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template19"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -0.9303147792816162, 0.0, -0.008702516555786133, 0.0, -2.4199480321840383e-05, 0.0, -7.6293927122605965e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -0.0011449564481154084, -2.372257222305052e-05, -0.9334888458251953, -0.0005321502685546875, -1.33514404296875e-05, -0.0031681060791015625, -1.9073486328125e-06, -1.7642971215536818e-05, -0.00012600421905517578, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -0.055823326110839844, -3.814697265625e-06, -0.14357566833496094, -1.9073486328125e-06, -0.002216339111328125, 0.0, -0.8549041748046875, -3.24249267578125e-05, -0.007857322692871094, -1.9073486328125e-06, -0.04161547124385834, -1.1920928244535389e-07, -0.0003643035888671875, -0.000446319580078125, -1.9073486328125e-06, -0.00127410888671875, -8.809565770206973e-05, -1.0233345031738281, -0.00030517578125, 0.0, -1.9073486328125e-06, -0.15221905708312988, -2.7537334972294047e-05, -0.015172958374023438, -1.9073486328125e-06, -0.00357818603515625, 0.0, -0.00022327899932861328, 0.0, -0.0018911361694335938, -2.09808349609375e-05, -0.001331329345703125, -0.0035076141357421875, -0.00659942626953125, -3.814697265625e-06, 0.0, -0.05016326904296875, -2.8848648071289062e-05, -0.37481582164764404, 0.0, -3.814697265625e-06, -0.6069440841674805]}, {"score": -5.295249870837765, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "SHAMAN", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 57], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.change_temp_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -1.162963628768921, -1.728534698486328e-05, -0.008121728897094727, 0.0, -6.461142766056582e-05, 0.0, -1.2397744285408407e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.0016580400988459587, -1.800052632461302e-05, -0.6182441711425781, -0.00041961669921875, -1.33514404296875e-05, -0.003307342529296875, -1.9073486328125e-06, -1.752376374497544e-05, -0.00015270709991455078, -2.09808349609375e-05, 0.0, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -0.05562305450439453, -3.814697265625e-06, -0.15064144134521484, -1.9073486328125e-06, -0.0022792816162109375, 0.0, -0.9409494400024414, -3.24249267578125e-05, -0.007770538330078125, -1.9073486328125e-06, -0.0417327918112278, -1.1920928244535389e-07, -0.0003566741943359375, -0.0004444122314453125, -1.9073486328125e-06, -0.0012674331665039062, -8.618830906925723e-05, -0.5019388198852539, -0.00054931640625, -0.013614654541015625, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -0.03138446807861328, -3.4332275390625e-05, -0.48936009407043457, -0.0005064010620117188, -1.9073486328125e-06, -1.2159795761108398]}, {"score": -5.331235434390223, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 57], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.change_temp_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -0.9303147792816162, 0.0, -0.008702516555786133, 0.0, -2.4199480321840383e-05, 0.0, -7.6293927122605965e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -0.0011449564481154084, -2.372257222305052e-05, -0.9334888458251953, -0.0005321502685546875, -1.33514404296875e-05, -0.0031681060791015625, -1.9073486328125e-06, -1.7642971215536818e-05, -0.00012600421905517578, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -0.055823326110839844, -3.814697265625e-06, -0.14357566833496094, -1.9073486328125e-06, -0.002216339111328125, 0.0, -0.8549041748046875, -3.24249267578125e-05, -0.007857322692871094, -1.9073486328125e-06, -0.04161547124385834, -1.1920928244535389e-07, -0.0003643035888671875, -0.000446319580078125, -1.9073486328125e-06, -0.00127410888671875, -8.809565770206973e-05, -0.5570249557495117, -0.0005474090576171875, -0.015422821044921875, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -0.03151226043701172, -3.4332275390625e-05, -0.489487886428833, -0.00051116943359375, -1.9073486328125e-06, -1.2052125930786133]}, {"score": -5.3605779920121535, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "SHAMAN", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 164, 57], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template19"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -1.162963628768921, -1.728534698486328e-05, -0.008121728897094727, 0.0, -6.461142766056582e-05, 0.0, -1.2397744285408407e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.0016580400988459587, -1.800052632461302e-05, -0.6182441711425781, -0.00041961669921875, -1.33514404296875e-05, -0.003307342529296875, -1.9073486328125e-06, -1.752376374497544e-05, -0.00015270709991455078, -2.09808349609375e-05, 0.0, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -0.05562305450439453, -3.814697265625e-06, -0.15064144134521484, -1.9073486328125e-06, -0.0022792816162109375, 0.0, -0.9409494400024414, -3.24249267578125e-05, -0.007770538330078125, -1.9073486328125e-06, -0.0417327918112278, -1.1920928244535389e-07, -0.0003566741943359375, -0.0004444122314453125, -1.9073486328125e-06, -0.0012674331665039062, -8.618830906925723e-05, -1.0996971130371094, -0.00029754638671875, 0.0, -3.814697265625e-06, -0.15186524391174316, -2.765654426184483e-05, -0.0147857666015625, -1.9073486328125e-06, -0.00360107421875, 0.0, -0.00021851062774658203, 0.0, -0.0019178390502929688, -2.09808349609375e-05, -0.001316070556640625, -0.003498077392578125, -0.006510734558105469, -3.814697265625e-06, 0.0, -0.051115989685058594, -2.8848648071289062e-05, -0.37536823749542236, 0.0, -3.814697265625e-06, -0.6084508895874023]}, {"score": -5.541762235220162, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 164, 57], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template19"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -1.3379113674163818, -1.9073486328125e-06, -0.015532493591308594, 0.0, -2.372264498262666e-05, 0.0, -1.1205666851310525e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.0108642578125e-05, -0.0011410291772335768, -1.895421155495569e-05, -0.7563724517822266, -0.0004367828369140625, -1.52587890625e-05, -0.0030078887939453125, -1.9073486328125e-06, -1.931190308823716e-05, -0.0001430511474609375, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -0.05727195739746094, -3.814697265625e-06, -0.1316061019897461, -1.9073486328125e-06, -0.0021839141845703125, 0.0, -0.8310251235961914, -3.24249267578125e-05, -0.007778167724609375, -1.9073486328125e-06, -0.041125014424324036, -1.1920928244535389e-07, -0.0003604888916015625, -0.0004482269287109375, -1.9073486328125e-06, -0.0012664794921875, -8.618830906925723e-05, -1.0919971466064453, -0.0003070831298828125, 0.0, -1.9073486328125e-06, -0.15188908576965332, -2.765654426184483e-05, -0.014436721801757812, -1.9073486328125e-06, -0.0037078857421875, 0.0, -0.00022804737091064453, 0.0, -0.0018978118896484375, -2.09808349609375e-05, -0.001331329345703125, -0.0034942626953125, -0.00653839111328125, -3.814697265625e-06, 0.0, -0.050167083740234375, -2.8848648071289062e-05, -0.37442469596862793, 0.0, -3.814697265625e-06, -0.6077632904052734]}, {"score": -6.223620346606808, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "SHAMAN", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.change_temp_attack(player.game.current_player)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -1.162963628768921, -1.728534698486328e-05, -0.008121728897094727, 0.0, -6.461142766056582e-05, 0.0, -1.2397744285408407e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.0016580400988459587, -1.800052632461302e-05, -0.6182441711425781, -0.00041961669921875, -1.33514404296875e-05, -0.003307342529296875, -1.9073486328125e-06, -1.752376374497544e-05, -0.00015270709991455078, -2.09808349609375e-05, 0.0, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -0.05562305450439453, -3.814697265625e-06, -0.15064144134521484, -1.9073486328125e-06, -0.0022792816162109375, 0.0, -0.9409494400024414, -3.24249267578125e-05, -0.007770538330078125, -1.9073486328125e-06, -0.0417327918112278, -1.1920928244535389e-07, -0.0003566741943359375, -0.0004444122314453125, -1.9073486328125e-06, -0.0012674331665039062, -8.618830906925723e-05, -0.5019388198852539, -0.00054931640625, -0.013614654541015625, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -0.03138446807861328, -3.4332275390625e-05, -0.48936009407043457, -0.0005064010620117188, -1.9073486328125e-06, -0.48961830139160156, -1.9073486328125e-06, -0.5564985275268555, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.027983665466308594, 0.0, -0.23418903350830078, -0.00074005126953125, -0.8353071212768555, -1.9073486328125e-06]}, {"score": -6.2817750233184455, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.change_temp_attack(player.game.current_player)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -0.9303147792816162, 0.0, -0.008702516555786133, 0.0, -2.4199480321840383e-05, 0.0, -7.6293927122605965e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -0.0011449564481154084, -2.372257222305052e-05, -0.9334888458251953, -0.0005321502685546875, -1.33514404296875e-05, -0.0031681060791015625, -1.9073486328125e-06, -1.7642971215536818e-05, -0.00012600421905517578, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -0.055823326110839844, -3.814697265625e-06, -0.14357566833496094, -1.9073486328125e-06, -0.002216339111328125, 0.0, -0.8549041748046875, -3.24249267578125e-05, -0.007857322692871094, -1.9073486328125e-06, -0.04161547124385834, -1.1920928244535389e-07, -0.0003643035888671875, -0.000446319580078125, -1.9073486328125e-06, -0.00127410888671875, -8.809565770206973e-05, -0.5570249557495117, -0.0005474090576171875, -0.015422821044921875, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -0.03151226043701172, -3.4332275390625e-05, -0.489487886428833, -0.00051116943359375, -1.9073486328125e-06, -0.49585819244384766, -1.9073486328125e-06, -0.5641841888427734, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.02834606170654297, 0.0, -0.23153400421142578, -0.0007371902465820312, -0.8350791931152344, -1.9073486328125e-06]}, {"score": -6.436692001886044, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.change_temp_attack(player.game.current_player)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}], "hole1": "change_temp_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "ROGUE", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -1.3379113674163818, -1.9073486328125e-06, -0.015532493591308594, 0.0, -2.372264498262666e-05, 0.0, -1.1205666851310525e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.0108642578125e-05, -0.0011410291772335768, -1.895421155495569e-05, -0.7563724517822266, -0.0004367828369140625, -1.52587890625e-05, -0.0030078887939453125, -1.9073486328125e-06, -1.931190308823716e-05, -0.0001430511474609375, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -0.05727195739746094, -3.814697265625e-06, -0.1316061019897461, -1.9073486328125e-06, -0.0021839141845703125, 0.0, -0.8310251235961914, -3.24249267578125e-05, -0.007778167724609375, -1.9073486328125e-06, -0.041125014424324036, -1.1920928244535389e-07, -0.0003604888916015625, -0.0004482269287109375, -1.9073486328125e-06, -0.0012664794921875, -8.618830906925723e-05, -0.5147790908813477, -0.0005321502685546875, -0.013933181762695312, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -0.03128623962402344, -3.4332275390625e-05, -0.4883310794830322, -0.000507354736328125, -1.9073486328125e-06, -0.49453067779541016, -1.9073486328125e-06, -0.5581998825073242, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.028075218200683594, 0.0, -0.2350320816040039, -0.0007352828979492188, -0.8371734619140625, -1.9073486328125e-06]}, {"score": -8.635446027122718, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "SHAMAN", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 89, 24, 112, "Aura", "Until", "<EOS>", 166, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 33, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 51, 130, "Minion", "Placed", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 24, 112, "player", "<EOS>", "<UNK>", "<EOS>", 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Turn", "Started", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "Aura", "<EOS>", 164, 41, 89, 24, 112, "Aura", "Until", "<EOS>", 166, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 32, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 51, 130, "Minion", "Placed", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(AuraUntil(ManaChange(-\n            3), CardSelector(condition=IsMinion()), MinionPlaced())), player)\n        player.<UNK>(Effect(TurnStarted(player=BothPlayer()), ActionTag(\n            GiveAura(AuraUntil(ManaChange(-1), CardSelector(condition=\n            IsMinion()), MinionPlaced())), PlayerSelector())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template19"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CardSelector"}}, {"_type": "Template10", "hole0": "MinionPlaced"}], "func": {"_type": "Name", "id": "AuraUntil"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "player"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CardSelector"}}, {"_type": "Template10", "hole0": "MinionPlaced"}], "func": {"_type": "Name", "id": "AuraUntil"}}], "func": {"_type": "Name", "id": "GiveAura"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -1.162963628768921, -1.728534698486328e-05, -0.008121728897094727, 0.0, -6.461142766056582e-05, 0.0, -1.2397744285408407e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.0016580400988459587, -1.800052632461302e-05, -0.6182441711425781, -0.00041961669921875, -1.33514404296875e-05, -0.003307342529296875, -1.9073486328125e-06, -1.752376374497544e-05, -0.00015270709991455078, -2.09808349609375e-05, 0.0, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -0.05562305450439453, -3.814697265625e-06, -0.15064144134521484, -1.9073486328125e-06, -0.0022792816162109375, 0.0, -0.4980783462524414, 0.0, -0.008100032806396484, -2.6702880859375e-05, -0.30443790555000305, -7.15252390364185e-05, -0.012113571166992188, -0.012235641479492188, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.20411717891693115, -1.1444091796875e-05, -2.6702880859375e-05, -0.013139724731445312, -0.17145538330078125, -8.58306884765625e-05, -0.0003795623779296875, -0.5529196262359619, -0.0057898759841918945, -0.00031125545501708984, -0.06334686279296875, -0.0014657974243164062, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0032421350479125977, -0.0018717048224061728, -0.0001354217529296875, -1.71661376953125e-05, -0.0021343231201171875, -5.53131103515625e-05, -0.000125885009765625, -1.00616455078125, -0.0012216567993164062, -0.00199127197265625, -3.4332275390625e-05, -2.6702880859375e-05, -0.004120349884033203, -0.0450592041015625, 0.0, -1.52587890625e-05, -0.0002460479736328125, -0.05764198303222656, -0.00054931640625, -0.0005645751953125, -1.33514404296875e-05, -0.00019538402557373047, -0.11853325366973877, -3.814697265625e-06, -0.0022029876708984375, 0.0, -0.07172501087188721, -0.049072265625, -4.57763671875e-05, -0.0814981460571289, 0.0, -0.4176025390625, 0.0, -0.0016660690307617188, -0.029693603515625, -0.0069332122802734375, 0.0, -0.004238128662109375, 0.0, -0.128662109375, -5.53131103515625e-05, -0.08458518981933594, -0.14676284790039062, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.094573974609375, -0.00013017465244047344, -4.57763671875e-05, -0.005984306335449219, -0.3361177444458008, 0.0, 0.0, -0.08609950542449951, -0.05680429935455322, -3.4332275390625e-05, -0.0003108978271484375, -0.0001773834228515625, -0.09852790832519531, 0.0, -0.0002384185791015625, -7.62939453125e-06, -0.7171773910522461, -0.000820159912109375, 0.0, -0.0004863739013671875, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -0.0002765655517578125, -0.0002269744873046875, -1.52587890625e-05, -0.04075431823730469, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.4193000793457031, -0.001097559928894043, -0.0037876367568969727, -9.5367431640625e-06, -0.03324317932128906, -1.33514404296875e-05, 0.0, 0.0, -0.11713027954101562, -0.003379344940185547, -6.16312026977539e-05, -0.029449462890625, -0.00028228759765625, -2.288818359375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.0015164613723754883, -0.0018458366394042969, -0.000118255615234375, -2.47955322265625e-05, -0.0002956390380859375, -7.2479248046875e-05, -4.57763671875e-05, -0.13388538360595703, -0.0005245208740234375, -0.001529693603515625, -2.6702880859375e-05, -4.76837158203125e-05, -0.0002551078796386719, -0.0072852373123168945, 0.0, -1.33514404296875e-05, -8.7738037109375e-05, -0.0013065338134765625, -0.0004138946533203125, -0.0006961822509765625, -9.5367431640625e-06, -0.000213623046875, -0.13290667533874512, -3.814697265625e-06, -0.00213623046875, -1.9073486328125e-06, -0.06963980197906494, -0.04721641540527344, -4.57763671875e-05, -0.0047626495361328125, -2.09808349609375e-05, -0.015572786331176758, -7.43865966796875e-05, 0.0]}, {"score": -8.978852108322364, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "SHAMAN", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 89, 24, 112, "Aura", "Until", "<EOS>", 166, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 33, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 51, 130, "Minion", "Placed", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 24, 112, "player", "<EOS>", "<UNK>", "<EOS>", 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Turn", "Started", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Current", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "Aura", "<EOS>", 164, 41, 89, 24, 112, "Aura", "Until", "<EOS>", 166, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 32, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 51, 130, "Minion", "Placed", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(AuraUntil(ManaChange(-\n            3), CardSelector(condition=IsMinion()), MinionPlaced())), player)\n        player.<UNK>(Effect(TurnStarted(player=CurrentPlayer()), ActionTag(\n            GiveAura(AuraUntil(ManaChange(-1), CardSelector(condition=\n            IsMinion()), MinionPlaced())), PlayerSelector())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template19"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CardSelector"}}, {"_type": "Template10", "hole0": "MinionPlaced"}], "func": {"_type": "Name", "id": "AuraUntil"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "player"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "CurrentPlayer"}}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CardSelector"}}, {"_type": "Template10", "hole0": "MinionPlaced"}], "func": {"_type": "Name", "id": "AuraUntil"}}], "func": {"_type": "Name", "id": "GiveAura"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -1.162963628768921, -1.728534698486328e-05, -0.008121728897094727, 0.0, -6.461142766056582e-05, 0.0, -1.2397744285408407e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.0016580400988459587, -1.800052632461302e-05, -0.6182441711425781, -0.00041961669921875, -1.33514404296875e-05, -0.003307342529296875, -1.9073486328125e-06, -1.752376374497544e-05, -0.00015270709991455078, -2.09808349609375e-05, 0.0, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -0.05562305450439453, -3.814697265625e-06, -0.15064144134521484, -1.9073486328125e-06, -0.0022792816162109375, 0.0, -0.4980783462524414, 0.0, -0.008100032806396484, -2.6702880859375e-05, -0.30443790555000305, -7.15252390364185e-05, -0.012113571166992188, -0.012235641479492188, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.20411717891693115, -1.1444091796875e-05, -2.6702880859375e-05, -0.013139724731445312, -0.17145538330078125, -8.58306884765625e-05, -0.0003795623779296875, -0.5529196262359619, -0.0057898759841918945, -0.00031125545501708984, -0.06334686279296875, -0.0014657974243164062, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0032421350479125977, -0.0018717048224061728, -0.0001354217529296875, -1.71661376953125e-05, -0.0021343231201171875, -5.53131103515625e-05, -0.000125885009765625, -1.00616455078125, -0.0012216567993164062, -0.00199127197265625, -3.4332275390625e-05, -2.6702880859375e-05, -0.004120349884033203, -0.0450592041015625, 0.0, -1.52587890625e-05, -0.0002460479736328125, -0.05764198303222656, -0.00054931640625, -0.0005645751953125, -1.33514404296875e-05, -0.00019538402557373047, -0.11853325366973877, -3.814697265625e-06, -0.0022029876708984375, 0.0, -0.07172501087188721, -0.049072265625, -4.57763671875e-05, -0.0814981460571289, 0.0, -0.4176025390625, 0.0, -0.0016660690307617188, -0.029693603515625, -0.0069332122802734375, 0.0, -0.004238128662109375, 0.0, -0.128662109375, -5.53131103515625e-05, -0.08458518981933594, -0.14676284790039062, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.094573974609375, -0.00013017465244047344, -4.57763671875e-05, -0.005984306335449219, -0.3361177444458008, 0.0, 0.0, -0.08609950542449951, -0.05680429935455322, -3.4332275390625e-05, -0.0003108978271484375, -0.0001773834228515625, -0.09852790832519531, 0.0, -0.0002384185791015625, -7.62939453125e-06, -1.112889289855957, -0.00015473365783691406, -1.9073486328125e-06, -0.0007915496826171875, -0.0001811981201171875, 0.0, 0.0, -3.0517578125e-05, -0.0001659393310546875, -0.0002880096435546875, -1.52587890625e-05, -0.056235313415527344, -3.0517578125e-05, -3.814697265625e-06, 0.0, -0.3582019805908203, -0.0011490583419799805, -0.0034101009368896484, -9.5367431640625e-06, -0.03375720977783203, -1.33514404296875e-05, 0.0, 0.0, -0.10927200317382812, -0.0033077001571655273, -6.16312026977539e-05, -0.029542922973632812, -0.00028228759765625, -2.288818359375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.0015336275100708008, -0.0018544197082519531, -0.000118255615234375, -2.47955322265625e-05, -0.0002956390380859375, -7.2479248046875e-05, -4.57763671875e-05, -0.13419818878173828, -0.0005283355712890625, -0.001537322998046875, -2.6702880859375e-05, -4.76837158203125e-05, -0.00025522708892822266, -0.0072470903396606445, 0.0, -1.33514404296875e-05, -8.7738037109375e-05, -0.0013065338134765625, -0.000415802001953125, -0.00069427490234375, -9.5367431640625e-06, -0.000213623046875, -0.13272547721862793, -3.814697265625e-06, -0.002132415771484375, -1.9073486328125e-06, -0.06960070133209229, -0.04749584197998047, -4.57763671875e-05, -0.004337310791015625, -2.09808349609375e-05, -0.01683831214904785, -7.2479248046875e-05, 0.0]}, {"score": -9.515009746913499, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "SHAMAN", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 89, 24, 112, "Aura", "Until", "<EOS>", 166, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 26, 117, "4", "<EOS>", 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 51, 130, "Minion", "Placed", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 24, 112, "player", "<EOS>", "<UNK>", "<EOS>", 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Turn", "Started", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "Aura", "<EOS>", 164, 41, 89, 24, 112, "Aura", "Until", "<EOS>", 166, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 32, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 51, 130, "Minion", "Placed", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(AuraUntil(ManaChange(-\n            4), CardSelector(condition=IsMinion()), MinionPlaced())), player)\n        player.<UNK>(Effect(TurnStarted(player=BothPlayer()), ActionTag(\n            GiveAura(AuraUntil(ManaChange(-1), CardSelector(condition=\n            IsMinion()), MinionPlaced())), PlayerSelector())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 4}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CardSelector"}}, {"_type": "Template10", "hole0": "MinionPlaced"}], "func": {"_type": "Name", "id": "AuraUntil"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "player"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CardSelector"}}, {"_type": "Template10", "hole0": "MinionPlaced"}], "func": {"_type": "Name", "id": "AuraUntil"}}], "func": {"_type": "Name", "id": "GiveAura"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "SHAMAN", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -1.162963628768921, -1.728534698486328e-05, -0.008121728897094727, 0.0, -6.461142766056582e-05, 0.0, -1.2397744285408407e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.91278076171875e-05, -0.0016580400988459587, -1.800052632461302e-05, -0.6182441711425781, -0.00041961669921875, -1.33514404296875e-05, -0.003307342529296875, -1.9073486328125e-06, -1.752376374497544e-05, -0.00015270709991455078, -2.09808349609375e-05, 0.0, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -0.05562305450439453, -3.814697265625e-06, -0.15064144134521484, -1.9073486328125e-06, -0.0022792816162109375, 0.0, -0.4980783462524414, 0.0, -0.008100032806396484, -2.6702880859375e-05, -0.30443790555000305, -7.15252390364185e-05, -0.012113571166992188, -0.012235641479492188, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.20411717891693115, -1.1444091796875e-05, -2.6702880859375e-05, -0.013139724731445312, -0.17145538330078125, -8.58306884765625e-05, -0.0003795623779296875, -0.5529196262359619, -0.0057898759841918945, -0.00031125545501708984, -0.06334686279296875, -0.0014657974243164062, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0032421350479125977, -0.0018717048224061728, -0.0001354217529296875, -1.71661376953125e-05, -0.0021343231201171875, -5.53131103515625e-05, -0.000125885009765625, -0.6287555694580078, -0.0001392364501953125, -0.21477404236793518, -4.768370445162873e-07, -0.48116111755371094, -0.41486263275146484, -1.9073486328125e-06, -9.918212890625e-05, -0.0030128955841064453, -0.015939712524414062, 0.0, -1.33514404296875e-05, -7.05718994140625e-05, -0.04194164276123047, -0.0014925003051757812, -0.001850128173828125, -9.5367431640625e-06, -0.00030875205993652344, -0.16940736770629883, -3.814697265625e-06, -0.0018329620361328125, 0.0, -0.07269454002380371, -0.04550457000732422, -5.14984130859375e-05, -0.08899688720703125, 0.0, -0.40010643005371094, 0.0, -0.0015239715576171875, -0.023590087890625, -0.0053005218505859375, 0.0, -0.004149436950683594, 0.0, -0.13145923614501953, -3.24249267578125e-05, -0.08339691162109375, -0.1546792984008789, -2.288818359375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.08190250396728516, -8.773690205998719e-05, -4.00543212890625e-05, -0.007534027099609375, -0.4723243713378906, 0.0, 0.0, -0.08341765403747559, -0.05527925491333008, -3.62396240234375e-05, -0.00032806396484375, -0.0001735687255859375, -0.10268211364746094, 0.0, -0.000247955322265625, -7.62939453125e-06, -0.7419166564941406, -0.00086212158203125, 0.0, -0.0004100799560546875, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -0.0002765655517578125, -0.0002269744873046875, -1.52587890625e-05, -0.04150962829589844, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.42291927337646484, -0.0010994672775268555, -0.0037904977798461914, -9.5367431640625e-06, -0.032958030700683594, -1.33514404296875e-05, 0.0, 0.0, -0.11679649353027344, -0.003380298614501953, -6.16312026977539e-05, -0.029428482055664062, -0.00028228759765625, -2.288818359375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.0015183687210083008, -0.0018450021743774414, -0.000118255615234375, -2.47955322265625e-05, -0.0002956390380859375, -7.2479248046875e-05, -4.57763671875e-05, -0.13390445709228516, -0.0005245208740234375, -0.001529693603515625, -2.6702880859375e-05, -4.76837158203125e-05, -0.0002551078796386719, -0.007278561592102051, 0.0, -1.33514404296875e-05, -8.7738037109375e-05, -0.0013065338134765625, -0.0004138946533203125, -0.0006961822509765625, -9.5367431640625e-06, -0.000213623046875, -0.1328904628753662, -3.814697265625e-06, -0.0021381378173828125, -1.9073486328125e-06, -0.06963503360748291, -0.04722118377685547, -4.57763671875e-05, -0.0047435760498046875, -2.09808349609375e-05, -0.01567864418029785, -7.43865966796875e-05, 0.0]}, {"score": -9.653446713159944, "choice_history": [59, 126, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 89, 24, 112, "Aura", "Until", "<EOS>", 166, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 26, 117, "4", "<EOS>", 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 51, 130, "Minion", "Placed", "<EOS>", 46, 112, "player", "<EOS>", 76, 146, 24, 112, "player", "<EOS>", "<UNK>", "<EOS>", 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Turn", "Started", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "Aura", "<EOS>", 164, 41, 89, 24, 112, "Aura", "Until", "<EOS>", 166, 41, 89, 24, 112, "Mana", "Change", "<EOS>", 164, 58, 149, 78, 32, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Is", "Minion", "<EOS>", 51, 130, "Minion", "Placed", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(AuraUntil(ManaChange(-\n            4), CardSelector(condition=IsMinion()), MinionPlaced())), player)\n        player.<UNK>(Effect(TurnStarted(player=BothPlayer()), ActionTag(\n            GiveAura(AuraUntil(ManaChange(-1), CardSelector(condition=\n            IsMinion()), MinionPlaced())), PlayerSelector())))\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 4}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CardSelector"}}, {"_type": "Template10", "hole0": "MinionPlaced"}], "func": {"_type": "Name", "id": "AuraUntil"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}}, {"_type": "Name", "id": "player"}], "hole1": "heal", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template10", "hole0": "IsMinion"}}], "func": {"_type": "Name", "id": "CardSelector"}}, {"_type": "Template10", "hole0": "MinionPlaced"}], "func": {"_type": "Name", "id": "AuraUntil"}}], "func": {"_type": "Name", "id": "GiveAura"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}], "hole1": "<UNK>", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Preparation", "hole3": "EPIC"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Preparation", "hole3": "use"}, "score_history": [-4.38690185546875e-05, -0.0006771087646484375, -0.0024117964785546064, -0.034439776092767715, -0.0010283472947776318, -0.00044977664947509766, -1.1920928244535389e-07, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.001514434814453125, -1.52587890625e-05, -0.00324272527359426, -0.0015459060668945312, -2.741813204920618e-06, -9.059880540007725e-06, -0.9303147792816162, 0.0, -0.008702516555786133, 0.0, -2.4199480321840383e-05, 0.0, -7.6293927122605965e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -0.0011449564481154084, -2.372257222305052e-05, -0.9334888458251953, -0.0005321502685546875, -1.33514404296875e-05, -0.0031681060791015625, -1.9073486328125e-06, -1.7642971215536818e-05, -0.00012600421905517578, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -0.055823326110839844, -3.814697265625e-06, -0.14357566833496094, -1.9073486328125e-06, -0.002216339111328125, 0.0, -0.5575923919677734, 0.0, -0.007954120635986328, -2.6702880859375e-05, -0.304511696100235, -7.10484164301306e-05, -0.012041091918945312, -0.012671470642089844, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.20495069026947021, -1.1444091796875e-05, -2.6702880859375e-05, -0.013260841369628906, -0.17399978637695312, -8.7738037109375e-05, -0.0003795623779296875, -0.5531389713287354, -0.005796551704406738, -0.00031125545501708984, -0.06342506408691406, -0.00147247314453125, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0032373666763305664, -0.001872658496722579, -0.0001354217529296875, -1.71661376953125e-05, -0.002132415771484375, -5.53131103515625e-05, -0.000125885009765625, -0.6289119720458984, -0.0001392364501953125, -0.2149476706981659, -4.768370445162873e-07, -0.48125743865966797, -0.414703369140625, -1.9073486328125e-06, -9.918212890625e-05, -0.0030167102813720703, -0.015938758850097656, 0.0, -1.33514404296875e-05, -7.05718994140625e-05, -0.04194355010986328, -0.0014867782592773438, -0.001850128173828125, -9.5367431640625e-06, -0.00030684471130371094, -0.16976213455200195, -3.814697265625e-06, -0.0018329620361328125, 0.0, -0.07269728183746338, -0.045505523681640625, -5.14984130859375e-05, -0.08912944793701172, 0.0, -0.40069103240966797, 0.0, -0.0015020370483398438, -0.025836944580078125, -0.0047740936279296875, 0.0, -0.003971099853515625, 0.0, -0.13163280487060547, -3.24249267578125e-05, -0.08332061767578125, -0.1519489288330078, -2.288818359375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.08113384246826172, -8.80945153767243e-05, -4.00543212890625e-05, -0.0075244903564453125, -0.4736595153808594, 0.0, 0.0, -0.08338034152984619, -0.05525541305541992, -3.62396240234375e-05, -0.00032806396484375, -0.00017547607421875, -0.10278701782226562, 0.0, -0.0002460479736328125, -7.62939453125e-06, -0.740300178527832, -0.0008535385131835938, 0.0, -0.000408172607421875, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -0.0002765655517578125, -0.0002269744873046875, -1.52587890625e-05, -0.041472434997558594, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.42294883728027344, -0.001097559928894043, -0.003789544105529785, -9.5367431640625e-06, -0.032958030700683594, -1.33514404296875e-05, 0.0, 0.0, -0.11678695678710938, -0.003380298614501953, -6.16312026977539e-05, -0.029430389404296875, -0.00028228759765625, -2.288818359375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.0015183687210083008, -0.0018450021743774414, -0.000118255615234375, -2.47955322265625e-05, -0.0002956390380859375, -7.2479248046875e-05, -4.57763671875e-05, -0.13389873504638672, -0.0005245208740234375, -0.001529693603515625, -2.6702880859375e-05, -4.76837158203125e-05, -0.0002551078796386719, -0.007278561592102051, 0.0, -1.33514404296875e-05, -8.7738037109375e-05, -0.0013065338134765625, -0.0004138946533203125, -0.0006961822509765625, -9.5367431640625e-06, -0.000213623046875, -0.13289237022399902, -3.814697265625e-06, -0.0021381378173828125, -1.9073486328125e-06, -0.06963598728179932, -0.04722023010253906, -4.57763671875e-05, -0.004741668701171875, -2.09808349609375e-05, -0.015670061111450195, -7.43865966796875e-05, 0.0]}], "gold_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(ManaChange(-3), CardSelector(condition=\n            IsSpell()), SpellCast()))\n"}
{"beams": [{"score": -3.6632160644073792, "choice_history": [59, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "Secret", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.Secret(4)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}], "hole1": "Secret", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Repentance", "hole3": "activate"}, "score_history": [-2.47955322265625e-05, -0.9841403961181641, -0.0007913587032817304, -6.127192318672314e-05, -0.00010967117123072967, -4.5299530029296875e-06, -9.942054748535156e-05, -0.0010700225830078125, -3.0517578125e-05, -7.62939453125e-06, -0.000949859619140625, -1.71661376953125e-05, -1.8954131519421935e-05, -5.841255187988281e-06, -0.0001088386052288115, -2.586841583251953e-05, -0.35053086280822754, -7.152555099310121e-07, -5.435943603515625e-05, 0.0, -0.0075817108154296875, 0.0, -0.003098607063293457, 0.0, -0.0054111480712890625, -0.000362396240234375, -1.33514404296875e-05, -0.00022125244140625, -1.1444091796875e-05, -0.0001468658447265625, -9.918212890625e-05, -2.288818359375e-05, -1.71661376953125e-05, -0.001239776611328125, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.002295732032507658, 0.0, -0.009174346923828125, 0.0, -3.0517578125e-05, -0.0001220703125, -1.9073486328125e-06, -0.48783087730407715, -0.0002689361572265625, -0.0002288818359375, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.001346588134765625, -7.2479248046875e-05, -0.0007953643798828125, 0.0, -0.001308441162109375, -0.0004901885986328125, -3.24249267578125e-05, -0.003717184066772461, 0.0, -0.0003147125244140625, -9.34600830078125e-05, 0.0, -3.814697265625e-06, -0.01055908203125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.0005893707275390625, -5.7220458984375e-06, -0.0005985492607578635, 0.0, -0.00841197744011879, -1.9073486328125e-06, -1.52587890625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -0.6430115699768066, -0.0007123947143554688, -0.0004215240478515625, 0.0, -3.814697265625e-06, 0.0, -0.0023212432861328125, -7.62939453125e-05, -0.0010585784912109375, 0.0, -0.0001392364501953125, -0.0001316070556640625, -0.032245755195617676, -5.7220458984375e-06, -0.0001049041748046875, -0.0006847381591796875, -0.022416114807128906, -0.008194923400878906, -7.82012939453125e-05, -0.0002079010009765625, -0.016388654708862305, -1.9073486328125e-06, -0.007848739624023438, -0.00041961669921875, -0.00147247314453125, -5.7220458984375e-05, 0.0, -0.001263737678527832, 0.0, -0.9244722127914429, -1.5735626220703125e-05, -0.000804901123046875, -0.040630340576171875, 0.0, -0.05566411465406418, -5.53131103515625e-05, -0.015058517456054688, -0.000499725341796875, -0.00020599365234375, -5.7220458984375e-06, -8.916830120142549e-05, -1.1563301086425781e-05, -0.00045013427734375, -1.9073486328125e-06]}, {"score": -4.0991684645917985, "choice_history": [59, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.increase_health(4)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Repentance", "hole3": "activate"}, "score_history": [-2.47955322265625e-05, -0.9841403961181641, -0.0007913587032817304, -6.127192318672314e-05, -0.00010967117123072967, -4.5299530029296875e-06, -9.942054748535156e-05, -0.0010700225830078125, -3.0517578125e-05, -7.62939453125e-06, -0.000949859619140625, -1.71661376953125e-05, -1.8954131519421935e-05, -5.841255187988281e-06, -0.0001088386052288115, -2.586841583251953e-05, -0.35053086280822754, -7.152555099310121e-07, -5.435943603515625e-05, 0.0, -0.0075817108154296875, 0.0, -0.003098607063293457, 0.0, -0.0054111480712890625, -0.000362396240234375, -1.33514404296875e-05, -0.00022125244140625, -1.1444091796875e-05, -0.0001468658447265625, -9.918212890625e-05, -2.288818359375e-05, -1.71661376953125e-05, -0.001239776611328125, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.002295732032507658, 0.0, -0.009174346923828125, 0.0, -3.0517578125e-05, -0.0001220703125, -1.9073486328125e-06, -0.48783087730407715, -0.0002689361572265625, -0.0002288818359375, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.001346588134765625, -7.2479248046875e-05, -0.0007953643798828125, 0.0, -0.001308441162109375, -0.0004901885986328125, -3.24249267578125e-05, -0.003717184066772461, 0.0, -0.0003147125244140625, -9.34600830078125e-05, 0.0, -3.814697265625e-06, -0.01055908203125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.0005893707275390625, -5.7220458984375e-06, -0.0005985492607578635, 0.0, -0.00841197744011879, -1.9073486328125e-06, -1.52587890625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -0.6430115699768066, -0.0007123947143554688, -0.0004215240478515625, 0.0, -3.814697265625e-06, 0.0, -0.0023212432861328125, -7.62939453125e-05, -0.0010585784912109375, 0.0, -0.0001392364501953125, -0.0001316070556640625, -0.032245755195617676, -5.7220458984375e-06, -0.0001049041748046875, -0.0006847381591796875, -0.022416114807128906, -0.008194923400878906, -7.82012939453125e-05, -0.0002079010009765625, -0.016388654708862305, -1.9073486328125e-06, -0.007848739624023438, -0.00041961669921875, -0.00147247314453125, -5.7220458984375e-05, 0.0, -0.001263737678527832, 0.0, -0.9813687801361084, -8.344646857949556e-07, -6.67572021484375e-05, -0.0956716537475586, 0.0, -0.051403552293777466, -0.0001049041748046875, -0.3443307876586914, -0.000431060791015625, -0.0001354217529296875, -1.33514404296875e-05, -0.00011181559966644272, -4.8041343688964844e-05, -0.000225067138671875, -5.7220458984375e-06]}, {"score": -4.340837514682562, "choice_history": [59, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "Secret", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.Secret(4)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}], "hole1": "Secret", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Repentance", "hole3": "activate"}, "score_history": [-2.47955322265625e-05, -0.9841403961181641, -0.0007913587032817304, -6.127192318672314e-05, -0.00010967117123072967, -4.5299530029296875e-06, -9.942054748535156e-05, -0.0010700225830078125, -3.0517578125e-05, -7.62939453125e-06, -0.000949859619140625, -1.71661376953125e-05, -1.8954131519421935e-05, -5.841255187988281e-06, -0.0001088386052288115, -2.586841583251953e-05, -0.35053086280822754, -7.152555099310121e-07, -5.435943603515625e-05, 0.0, -0.0075817108154296875, 0.0, -0.003098607063293457, 0.0, -0.0054111480712890625, -0.000362396240234375, -1.33514404296875e-05, -0.00022125244140625, -1.1444091796875e-05, -0.0001468658447265625, -9.918212890625e-05, -2.288818359375e-05, -1.71661376953125e-05, -0.001239776611328125, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.002295732032507658, 0.0, -0.009174346923828125, 0.0, -3.0517578125e-05, -0.0001220703125, -1.9073486328125e-06, -0.48783087730407715, -0.0002689361572265625, -0.0002288818359375, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.001346588134765625, -7.2479248046875e-05, -0.0007953643798828125, 0.0, -0.001308441162109375, -0.0004901885986328125, -3.24249267578125e-05, -0.003717184066772461, 0.0, -0.0003147125244140625, -9.34600830078125e-05, 0.0, -3.814697265625e-06, -0.01055908203125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.0005893707275390625, -5.7220458984375e-06, -0.0005985492607578635, 0.0, -0.00841197744011879, -1.9073486328125e-06, -1.52587890625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -1.3267908096313477, 0.0, -0.0001811981201171875, 0.0, -1.9073486328125e-06, 0.0, -0.0009250640869140625, -6.29425048828125e-05, -0.0007953643798828125, 0.0, -0.000274658203125, -0.000156402587890625, -0.024909138679504395, -7.62939453125e-06, -0.0001049041748046875, -0.0007781982421875, -0.02148914337158203, -0.008210182189941406, -8.0108642578125e-05, -0.0002155303955078125, -0.016925454139709473, -1.9073486328125e-06, -0.0076236724853515625, -0.000415802001953125, -0.00153350830078125, -5.91278076171875e-05, 0.0, -0.0012532472610473633, 0.0, -0.9280193448066711, -1.5735626220703125e-05, -0.000774383544921875, -0.04101085662841797, 0.0, -0.05597289279103279, -5.53131103515625e-05, -0.014933586120605469, -0.000507354736328125, -0.000209808349609375, -5.7220458984375e-06, -8.916830120142549e-05, -1.1563301086425781e-05, -0.00045013427734375, -1.9073486328125e-06]}, {"score": -4.66492846114852, "choice_history": [59, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "Secret", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.Secret(4)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}], "hole1": "Secret", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Repentance", "hole3": "activate"}, "score_history": [-2.47955322265625e-05, -0.9841403961181641, -0.0007913587032817304, -6.127192318672314e-05, -0.00010967117123072967, -4.5299530029296875e-06, -9.942054748535156e-05, -0.0010700225830078125, -3.0517578125e-05, -7.62939453125e-06, -0.000949859619140625, -1.71661376953125e-05, -1.8954131519421935e-05, -5.841255187988281e-06, -0.0001088386052288115, -2.586841583251953e-05, -1.3565924167633057, 0.0, -0.0003508329391479492, 0.0, -0.007483482360839844, 0.0, -0.001912236213684082, 0.0, -0.0056934356689453125, -0.00026702880859375, -1.52587890625e-05, -0.0001964569091796875, -1.33514404296875e-05, -0.000148773193359375, -0.0001392364501953125, -3.24249267578125e-05, -2.288818359375e-05, -0.0011959075927734375, 0.0, -0.000270843505859375, -9.5367431640625e-06, -0.0023046727292239666, 0.0, -0.007854104042053223, 0.0, -2.47955322265625e-05, -0.00011444091796875, -1.9073486328125e-06, -0.4914432764053345, -0.000274658203125, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0013303756713867188, -7.2479248046875e-05, -0.0008029937744140625, 0.0, -0.00130462646484375, -0.0004730224609375, -3.24249267578125e-05, -0.0037086009979248047, 0.0, -0.0003147125244140625, -9.34600830078125e-05, 0.0, -3.814697265625e-06, -0.010534286499023438, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.0008907318115234375, 0.0, -0.000579833984375, -5.7220458984375e-06, -0.0005925887962803245, 0.0, -0.008397791534662247, -1.9073486328125e-06, -1.52587890625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -0.6431375741958618, -0.0007123947143554688, -0.000423431396484375, 0.0, -3.814697265625e-06, 0.0, -0.002323150634765625, -7.82012939453125e-05, -0.0010585784912109375, 0.0, -0.0001392364501953125, -0.0001316070556640625, -0.03245556354522705, -5.7220458984375e-06, -0.0001049041748046875, -0.0006847381591796875, -0.022423744201660156, -0.008189201354980469, -7.82012939453125e-05, -0.0002079010009765625, -0.016375303268432617, -1.9073486328125e-06, -0.007854461669921875, -0.0004215240478515625, -0.00147247314453125, -5.7220458984375e-05, 0.0, -0.001262664794921875, 0.0, -0.9184401631355286, -1.5735626220703125e-05, -0.0008106231689453125, -0.04077911376953125, 0.0, -0.055543847382068634, -5.53131103515625e-05, -0.015044212341308594, -0.000499725341796875, -0.0002079010009765625, -5.7220458984375e-06, -8.904909191187471e-05, -1.1563301086425781e-05, -0.00045013427734375, -1.9073486328125e-06]}, {"score": -4.754446409634738, "choice_history": [59, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.increase_health(4)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Repentance", "hole3": "activate"}, "score_history": [-2.47955322265625e-05, -0.9841403961181641, -0.0007913587032817304, -6.127192318672314e-05, -0.00010967117123072967, -4.5299530029296875e-06, -9.942054748535156e-05, -0.0010700225830078125, -3.0517578125e-05, -7.62939453125e-06, -0.000949859619140625, -1.71661376953125e-05, -1.8954131519421935e-05, -5.841255187988281e-06, -0.0001088386052288115, -2.586841583251953e-05, -0.35053086280822754, -7.152555099310121e-07, -5.435943603515625e-05, 0.0, -0.0075817108154296875, 0.0, -0.003098607063293457, 0.0, -0.0054111480712890625, -0.000362396240234375, -1.33514404296875e-05, -0.00022125244140625, -1.1444091796875e-05, -0.0001468658447265625, -9.918212890625e-05, -2.288818359375e-05, -1.71661376953125e-05, -0.001239776611328125, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.002295732032507658, 0.0, -0.009174346923828125, 0.0, -3.0517578125e-05, -0.0001220703125, -1.9073486328125e-06, -0.48783087730407715, -0.0002689361572265625, -0.0002288818359375, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.001346588134765625, -7.2479248046875e-05, -0.0007953643798828125, 0.0, -0.001308441162109375, -0.0004901885986328125, -3.24249267578125e-05, -0.003717184066772461, 0.0, -0.0003147125244140625, -9.34600830078125e-05, 0.0, -3.814697265625e-06, -0.01055908203125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.0005893707275390625, -5.7220458984375e-06, -0.0005985492607578635, 0.0, -0.00841197744011879, -1.9073486328125e-06, -1.52587890625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -1.3267908096313477, 0.0, -0.0001811981201171875, 0.0, -1.9073486328125e-06, 0.0, -0.0009250640869140625, -6.29425048828125e-05, -0.0007953643798828125, 0.0, -0.000274658203125, -0.000156402587890625, -0.024909138679504395, -7.62939453125e-06, -0.0001049041748046875, -0.0007781982421875, -0.02148914337158203, -0.008210182189941406, -8.0108642578125e-05, -0.0002155303955078125, -0.016925454139709473, -1.9073486328125e-06, -0.0076236724853515625, -0.000415802001953125, -0.00153350830078125, -5.91278076171875e-05, 0.0, -0.0012532472610473633, 0.0, -0.9723995327949524, -9.536738616588991e-07, -6.4849853515625e-05, -0.10080337524414062, 0.0, -0.05179101973772049, -0.000110626220703125, -0.3295135498046875, -0.0004425048828125, -0.0001373291015625, -1.33514404296875e-05, -0.00011265000648563728, -4.8041343688964844e-05, -0.0002231597900390625, -5.7220458984375e-06]}, {"score": -4.825383320683358, "choice_history": [59, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "change_attack", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.change_attack(4)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Repentance", "hole3": "activate"}, "score_history": [-2.47955322265625e-05, -0.9841403961181641, -0.0007913587032817304, -6.127192318672314e-05, -0.00010967117123072967, -4.5299530029296875e-06, -9.942054748535156e-05, -0.0010700225830078125, -3.0517578125e-05, -7.62939453125e-06, -0.000949859619140625, -1.71661376953125e-05, -1.8954131519421935e-05, -5.841255187988281e-06, -0.0001088386052288115, -2.586841583251953e-05, -0.35053086280822754, -7.152555099310121e-07, -5.435943603515625e-05, 0.0, -0.0075817108154296875, 0.0, -0.003098607063293457, 0.0, -0.0054111480712890625, -0.000362396240234375, -1.33514404296875e-05, -0.00022125244140625, -1.1444091796875e-05, -0.0001468658447265625, -9.918212890625e-05, -2.288818359375e-05, -1.71661376953125e-05, -0.001239776611328125, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.002295732032507658, 0.0, -0.009174346923828125, 0.0, -3.0517578125e-05, -0.0001220703125, -1.9073486328125e-06, -0.48783087730407715, -0.0002689361572265625, -0.0002288818359375, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.001346588134765625, -7.2479248046875e-05, -0.0007953643798828125, 0.0, -0.001308441162109375, -0.0004901885986328125, -3.24249267578125e-05, -0.003717184066772461, 0.0, -0.0003147125244140625, -9.34600830078125e-05, 0.0, -3.814697265625e-06, -0.01055908203125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.0005893707275390625, -5.7220458984375e-06, -0.0005985492607578635, 0.0, -0.00841197744011879, -1.9073486328125e-06, -1.52587890625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -0.6430115699768066, -0.0007123947143554688, -0.0004215240478515625, 0.0, -3.814697265625e-06, 0.0, -0.0023212432861328125, -7.62939453125e-05, -0.0010585784912109375, 0.0, -0.0001392364501953125, -0.0001316070556640625, -0.032245755195617676, -5.7220458984375e-06, -0.0001049041748046875, -0.0006847381591796875, -0.022416114807128906, -0.008194923400878906, -7.82012939453125e-05, -0.0002079010009765625, -0.016388654708862305, -1.9073486328125e-06, -0.007848739624023438, -0.00041961669921875, -0.00147247314453125, -5.7220458984375e-05, 0.0, -0.001263737678527832, 0.0, -2.158874273300171, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0020542144775390625, 0.0, -0.009815691038966179, -0.0002727508544921875, -0.02769184112548828, -0.0008487701416015625, -0.000141143798828125, -7.62939453125e-06, -6.723336991854012e-05, -2.5033950805664062e-05, -0.0003108978271484375, -1.9073486328125e-06]}, {"score": -4.904662484957726, "choice_history": [59, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "Secret", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.Secret(4)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}], "hole1": "Secret", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Repentance", "hole3": "activate"}, "score_history": [-2.47955322265625e-05, -0.9841403961181641, -0.0007913587032817304, -6.127192318672314e-05, -0.00010967117123072967, -4.5299530029296875e-06, -9.942054748535156e-05, -0.0010700225830078125, -3.0517578125e-05, -7.62939453125e-06, -0.000949859619140625, -1.71661376953125e-05, -1.8954131519421935e-05, -5.841255187988281e-06, -0.0001088386052288115, -2.586841583251953e-05, -0.35053086280822754, -7.152555099310121e-07, -5.435943603515625e-05, 0.0, -0.0075817108154296875, 0.0, -0.003098607063293457, 0.0, -0.0054111480712890625, -0.000362396240234375, -1.33514404296875e-05, -0.00022125244140625, -1.1444091796875e-05, -0.0001468658447265625, -9.918212890625e-05, -2.288818359375e-05, -1.71661376953125e-05, -0.001239776611328125, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.002295732032507658, 0.0, -0.009174346923828125, 0.0, -3.0517578125e-05, -0.0001220703125, -1.9073486328125e-06, -1.7400267124176025, 0.0, -0.0001506805419921875, 0.0, -3.814697265625e-06, 0.0, -0.0005092620849609375, -6.866455078125e-05, -0.0008449554443359375, 0.0, -0.001705169677734375, -0.000858306884765625, -3.24249267578125e-05, -0.003634333610534668, 0.0, -0.00030517578125, -8.392333984375e-05, 0.0, -3.814697265625e-06, -0.010015487670898438, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0007152557373046875, 0.0, -0.000583648681640625, -5.7220458984375e-06, -0.0006166690727695823, 0.0, -0.009832233190536499, -1.9073486328125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.09808349609375e-05, -0.6361591815948486, -0.0007028579711914062, -0.0004024505615234375, 0.0, -3.814697265625e-06, 0.0, -0.0022754669189453125, -7.82012939453125e-05, -0.001056671142578125, 0.0, -0.000152587890625, -0.00012969970703125, -0.031149983406066895, -5.7220458984375e-06, -0.0001010894775390625, -0.0006923675537109375, -0.022284507751464844, -0.008174896240234375, -7.82012939453125e-05, -0.0002079010009765625, -0.016388654708862305, -1.9073486328125e-06, -0.007758140563964844, -0.000423431396484375, -0.00147247314453125, -5.7220458984375e-05, 0.0, -0.0012627840042114258, 0.0, -0.9208773970603943, -1.5735626220703125e-05, -0.0008029937744140625, -0.040816307067871094, 0.0, -0.05630950257182121, -5.53131103515625e-05, -0.015106201171875, -0.0005016326904296875, -0.00020599365234375, -5.7220458984375e-06, -8.916830120142549e-05, -1.1563301086425781e-05, -0.00045013427734375, -1.9073486328125e-06]}, {"score": -5.112929623639161, "choice_history": [59, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.increase_health(4)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Repentance", "hole3": "activate"}, "score_history": [-2.47955322265625e-05, -0.9841403961181641, -0.0007913587032817304, -6.127192318672314e-05, -0.00010967117123072967, -4.5299530029296875e-06, -9.942054748535156e-05, -0.0010700225830078125, -3.0517578125e-05, -7.62939453125e-06, -0.000949859619140625, -1.71661376953125e-05, -1.8954131519421935e-05, -5.841255187988281e-06, -0.0001088386052288115, -2.586841583251953e-05, -1.3565924167633057, 0.0, -0.0003508329391479492, 0.0, -0.007483482360839844, 0.0, -0.001912236213684082, 0.0, -0.0056934356689453125, -0.00026702880859375, -1.52587890625e-05, -0.0001964569091796875, -1.33514404296875e-05, -0.000148773193359375, -0.0001392364501953125, -3.24249267578125e-05, -2.288818359375e-05, -0.0011959075927734375, 0.0, -0.000270843505859375, -9.5367431640625e-06, -0.0023046727292239666, 0.0, -0.007854104042053223, 0.0, -2.47955322265625e-05, -0.00011444091796875, -1.9073486328125e-06, -0.4914432764053345, -0.000274658203125, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0013303756713867188, -7.2479248046875e-05, -0.0008029937744140625, 0.0, -0.00130462646484375, -0.0004730224609375, -3.24249267578125e-05, -0.0037086009979248047, 0.0, -0.0003147125244140625, -9.34600830078125e-05, 0.0, -3.814697265625e-06, -0.010534286499023438, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.0008907318115234375, 0.0, -0.000579833984375, -5.7220458984375e-06, -0.0005925887962803245, 0.0, -0.008397791534662247, -1.9073486328125e-06, -1.52587890625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -0.6431375741958618, -0.0007123947143554688, -0.000423431396484375, 0.0, -3.814697265625e-06, 0.0, -0.002323150634765625, -7.82012939453125e-05, -0.0010585784912109375, 0.0, -0.0001392364501953125, -0.0001316070556640625, -0.03245556354522705, -5.7220458984375e-06, -0.0001049041748046875, -0.0006847381591796875, -0.022423744201660156, -0.008189201354980469, -7.82012939453125e-05, -0.0002079010009765625, -0.016375303268432617, -1.9073486328125e-06, -0.007854461669921875, -0.0004215240478515625, -0.00147247314453125, -5.7220458984375e-05, 0.0, -0.001262664794921875, 0.0, -0.9867947697639465, -8.344646857949556e-07, -6.67572021484375e-05, -0.0955352783203125, 0.0, -0.05128094181418419, -0.0001049041748046875, -0.3452024459838867, -0.000431060791015625, -0.0001354217529296875, -1.33514404296875e-05, -0.00011157719563925639, -4.8041343688964844e-05, -0.000225067138671875, -5.7220458984375e-06]}, {"score": -5.292334845936921, "choice_history": [59, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 178, 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "_reveal", "<EOS>", 4, 152, 159, 0, 1, 151, "minion", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "Secret", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, minion):\n        minion.Secret(4)\n        super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"hole2": [{"_type": "Num", "n": 4}], "hole1": "Secret", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "name": "_reveal"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole6": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "hole0": "Repentance", "hole3": "activate"}, "score_history": [-2.47955322265625e-05, -0.9841403961181641, -0.0007913587032817304, -6.127192318672314e-05, -0.00010967117123072967, -4.5299530029296875e-06, -9.942054748535156e-05, -0.0010700225830078125, -3.0517578125e-05, -7.62939453125e-06, -0.000949859619140625, -1.71661376953125e-05, -1.8954131519421935e-05, -5.841255187988281e-06, -0.0001088386052288115, -2.586841583251953e-05, -0.35053086280822754, -7.152555099310121e-07, -5.435943603515625e-05, 0.0, -0.0075817108154296875, 0.0, -0.003098607063293457, 0.0, -0.0054111480712890625, -0.000362396240234375, -1.33514404296875e-05, -0.00022125244140625, -1.1444091796875e-05, -0.0001468658447265625, -9.918212890625e-05, -2.288818359375e-05, -1.71661376953125e-05, -0.001239776611328125, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.002295732032507658, 0.0, -0.009174346923828125, 0.0, -3.0517578125e-05, -0.0001220703125, -1.9073486328125e-06, -0.48783087730407715, -0.0002689361572265625, -0.0002288818359375, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.001346588134765625, -7.2479248046875e-05, -0.0007953643798828125, 0.0, -0.001308441162109375, -0.0004901885986328125, -3.24249267578125e-05, -0.003717184066772461, 0.0, -0.0003147125244140625, -9.34600830078125e-05, 0.0, -3.814697265625e-06, -0.01055908203125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.0005893707275390625, -5.7220458984375e-06, -0.0005985492607578635, 0.0, -0.00841197744011879, -1.9073486328125e-06, -1.52587890625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -2.259892463684082, 0.0, -4.1961669921875e-05, 0.0, -3.814697265625e-06, 0.0, -0.001567840576171875, -6.103515625e-05, -0.0010890960693359375, 0.0, -0.000286102294921875, -0.0002002716064453125, -0.03045189380645752, -7.62939453125e-06, -0.0001068115234375, -0.0006389617919921875, -0.02278423309326172, -0.008257865905761719, -8.0108642578125e-05, -0.0002117156982421875, -0.016535520553588867, -1.9073486328125e-06, -0.007981300354003906, -0.000423431396484375, -0.0014972686767578125, -5.7220458984375e-05, 0.0, -0.0013190507888793945, 0.0, -0.9393877983093262, -1.5735626220703125e-05, -0.0007686614990234375, -0.039689064025878906, 0.0, -0.056852374225854874, -5.53131103515625e-05, -0.014829635620117188, -0.0005035400390625, -0.0001983642578125, -5.7220458984375e-06, -8.940671250456944e-05, -1.1563301086425781e-05, -0.0004444122314453125, -1.9073486328125e-06]}, {"score": -6.64369766090109, "choice_history": [59, 127, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 158, 1, 151, "attacker", "<EOS>", 177, 71, 99, 18, 85, 5, 165, 42, 92, 24, 112, "target", "<EOS>", 161, 11, 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "hero", "<EOS>", 58, 149, 77, 16, 82, 24, 112, "minion", "<EOS>", "<UNK>", "<EOS>", 178, 65, 83, 16, 82, 16, 82, 16, 82, 16, 82, 24, 112, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", 60, 26, 117, "Health", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 178, 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if target is self.player.hero and not minion.<UNK>:\n            attacker.player.game.other_player.<UNK> += 0\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "model_output": {"hole4": "<UNK>", "_type": "Template0", "hole6": [{"_type": "If", "body": [{"op": {"_type": "Add"}, "_type": "AugAssign", "target": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "attacker"}, "attr": "player"}, "attr": "game"}, "attr": "other_player"}, "attr": "<UNK>"}, "value": {"_type": "Num", "n": 0}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "hero"}], "left": {"_type": "Name", "id": "target"}, "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "attacker"}], "hole0": "Repentance", "hole3": "_reveal"}, "score_history": [-2.47955322265625e-05, -0.4886598587036133, -3.60006233677268e-05, -0.00047638514661230147, -0.0007663576398044825, -5.9843041526619345e-05, -7.62939453125e-06, -0.0003414154052734375, -5.91278076171875e-05, -1.52587890625e-05, -0.0006542205810546875, -1.1444091796875e-05, -2.753696753643453e-05, -3.933906555175781e-06, -2.777580448309891e-05, -3.170967102050781e-05, -0.25183260440826416, -2.3841830625315197e-06, -5.0067850679624826e-05, 0.0, -0.011880636215209961, -6.4849853515625e-05, -0.021008729934692383, -3.814697265625e-06, -0.0007495880126953125, -0.0005035400390625, -1.1444091796875e-05, -0.012186169624328613, -5.340576171875e-05, -9.5367431640625e-06, -0.0002574920654296875, -8.20159912109375e-05, -0.9838075637817383, -4.1961669921875e-05, -0.000194549560546875, -0.03854942321777344, -0.005023956298828125, -0.0001316070556640625, -0.0013942718505859375, -1.9073486328125e-06, -0.09841060638427734, 0.0, -1.71661376953125e-05, -0.06169700622558594, -5.14984130859375e-05, -0.008814811706542969, 0.0, -0.0013523101806640625, -1.9073486328125e-06, -0.0004596710205078125, -3.814697265625e-06, -0.00165557861328125, -0.0002595186233520508, -0.000667572021484375, 0.0, -0.1443864107131958, -6.318092346191406e-06, -0.30252647399902344, -0.0003910064697265625, -0.001873016357421875, -9.918212890625e-05, 0.0, -0.0007839202880859375, 0.0, -0.1610337495803833, -1.1920928244535389e-07, -0.0068405866622924805, 0.0, -0.3469371795654297, -0.04962158203125, -0.005881309509277344, -0.0011138916015625, -9.5367431640625e-06, -0.00054168701171875, -3.814697265625e-06, -0.0006465911865234375, -4.00543212890625e-05, -0.00814056396484375, -1.33514404296875e-05, -0.41942787170410156, -1.1444091796875e-05, -0.020169496536254883, -0.022777557373046875, -0.0016813278198242188, 0.0, -0.00017392633890267462, -2.3841855067985307e-07, -0.20121273398399353, 0.0, -0.0542154498398304, -4.0411898226011544e-05, -0.019193649291992188, -0.04289436340332031, -1.71661376953125e-05, -0.8157172203063965, -1.5973946574376896e-05, -0.0007610321044921875, -0.0003833770751953125, -6.67572021484375e-05, 0.0, -0.00017630099318921566, -0.0002001523826038465, -0.00019276142120361328, -2.86102294921875e-05, -0.0010995864868164062, -0.00019073486328125, -0.0001735687255859375, -0.0013464660150930285, -7.62939453125e-05, -0.0013828277587890625, -0.00348663330078125, -7.62939453125e-06, -1.1444091796875e-05, -0.22601890563964844, -3.814697265625e-06, -0.0044879913330078125, -1.33514404296875e-05, -8.0108642578125e-05, -3.814697265625e-06, -0.0001888275146484375, 0.0, -0.0002918243408203125, -3.24249267578125e-05, -0.0038367509841918945, 0.0, -0.0073624844662845135, 0.0, -2.47955322265625e-05, -0.000255584716796875, -8.392333984375e-05, -0.5384331941604614, -0.0006418228149414062, -0.000110626220703125, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0010976791381835938, -0.000125885009765625, -0.0008716583251953125, 0.0, -1.9073486328125e-05, -5.14984130859375e-05, -0.16898643970489502, 0.0, -0.00093841552734375, -0.0001087188720703125, 0.0, -7.62939453125e-06, -0.3744850158691406, -3.814697265625e-06, -0.0007915496826171875, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.001438140869140625, 0.0, -0.0006122589111328125, -9.5367431640625e-06, -0.0006865260656923056, 0.0, -0.01158877369016409, -1.1563301086425781e-05, -2.47955322265625e-05, -2.288818359375e-05, -2.6702880859375e-05, -0.6648129224777222, -0.0008831024169921875, -0.0004940032958984375, 0.0, -3.814697265625e-06, 0.0, -0.00215911865234375, -7.82012939453125e-05, -0.0010013580322265625, 0.0]}, {"score": -7.252018373944303, "choice_history": [59, 127, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 158, 1, 151, "attacker", "<EOS>", 177, 71, 99, 18, 85, 5, 165, 42, 92, 24, 112, "target", "<EOS>", 161, 11, 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "hero", "<EOS>", 58, 149, 77, 16, 82, 24, 112, "minion", "<EOS>", "<UNK>", "<EOS>", 178, 65, 83, 16, 82, 16, 82, 16, 82, 16, 82, 24, 112, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", 60, 26, 117, "Health", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 178, 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if target is self.player.hero and not minion.<UNK>:\n            attacker.player.game.other_player.<UNK> += 0\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "<UNK>", "_type": "Template0", "hole6": [{"_type": "If", "body": [{"op": {"_type": "Add"}, "_type": "AugAssign", "target": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "attacker"}, "attr": "player"}, "attr": "game"}, "attr": "other_player"}, "attr": "<UNK>"}, "value": {"_type": "Num", "n": 0}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "hero"}], "left": {"_type": "Name", "id": "target"}, "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "attacker"}], "hole0": "Repentance", "hole3": "_reveal"}, "score_history": [-2.47955322265625e-05, -0.4886598587036133, -3.60006233677268e-05, -0.00047638514661230147, -0.0007663576398044825, -5.9843041526619345e-05, -7.62939453125e-06, -0.0003414154052734375, -5.91278076171875e-05, -1.52587890625e-05, -0.0006542205810546875, -1.1444091796875e-05, -2.753696753643453e-05, -3.933906555175781e-06, -2.777580448309891e-05, -3.170967102050781e-05, -0.25183260440826416, -2.3841830625315197e-06, -5.0067850679624826e-05, 0.0, -0.011880636215209961, -6.4849853515625e-05, -0.021008729934692383, -3.814697265625e-06, -0.0007495880126953125, -0.0005035400390625, -1.1444091796875e-05, -0.012186169624328613, -5.340576171875e-05, -9.5367431640625e-06, -0.0002574920654296875, -8.20159912109375e-05, -0.9838075637817383, -4.1961669921875e-05, -0.000194549560546875, -0.03854942321777344, -0.005023956298828125, -0.0001316070556640625, -0.0013942718505859375, -1.9073486328125e-06, -0.09841060638427734, 0.0, -1.71661376953125e-05, -0.06169700622558594, -5.14984130859375e-05, -0.008814811706542969, 0.0, -0.0013523101806640625, -1.9073486328125e-06, -0.0004596710205078125, -3.814697265625e-06, -0.00165557861328125, -0.0002595186233520508, -0.000667572021484375, 0.0, -0.1443864107131958, -6.318092346191406e-06, -0.30252647399902344, -0.0003910064697265625, -0.001873016357421875, -9.918212890625e-05, 0.0, -0.0007839202880859375, 0.0, -0.1610337495803833, -1.1920928244535389e-07, -0.0068405866622924805, 0.0, -0.3469371795654297, -0.04962158203125, -0.005881309509277344, -0.0011138916015625, -9.5367431640625e-06, -0.00054168701171875, -3.814697265625e-06, -0.0006465911865234375, -4.00543212890625e-05, -0.00814056396484375, -1.33514404296875e-05, -0.41942787170410156, -1.1444091796875e-05, -0.020169496536254883, -0.022777557373046875, -0.0016813278198242188, 0.0, -0.00017392633890267462, -2.3841855067985307e-07, -0.20121273398399353, 0.0, -0.0542154498398304, -4.0411898226011544e-05, -0.019193649291992188, -0.04289436340332031, -1.71661376953125e-05, -0.8157172203063965, -1.5973946574376896e-05, -0.0007610321044921875, -0.0003833770751953125, -6.67572021484375e-05, 0.0, -0.00017630099318921566, -0.0002001523826038465, -0.00019276142120361328, -2.86102294921875e-05, -0.0010995864868164062, -0.00019073486328125, -0.0001735687255859375, -0.0013464660150930285, -7.62939453125e-05, -0.0013828277587890625, -0.00348663330078125, -7.62939453125e-06, -1.1444091796875e-05, -0.22601890563964844, -3.814697265625e-06, -0.0044879913330078125, -1.33514404296875e-05, -8.0108642578125e-05, -3.814697265625e-06, -0.0001888275146484375, 0.0, -0.0002918243408203125, -3.24249267578125e-05, -0.0038367509841918945, 0.0, -0.0073624844662845135, 0.0, -2.47955322265625e-05, -0.000255584716796875, -8.392333984375e-05, -0.5384331941604614, -0.0006418228149414062, -0.000110626220703125, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0010976791381835938, -0.000125885009765625, -0.0008716583251953125, 0.0, -1.9073486328125e-05, -5.14984130859375e-05, -0.16898643970489502, 0.0, -0.00093841552734375, -0.0001087188720703125, 0.0, -7.62939453125e-06, -0.3744850158691406, -3.814697265625e-06, -0.0007915496826171875, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.001438140869140625, 0.0, -0.0006122589111328125, -9.5367431640625e-06, -0.0006865260656923056, 0.0, -0.01158877369016409, -1.1563301086425781e-05, -2.47955322265625e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.2759431600570679, -1.9073486328125e-06, -0.00019073486328125, 0.0, -1.9073486328125e-06, 0.0, -0.000762939453125, -6.29425048828125e-05, -0.000789642333984375, 0.0]}, {"score": -7.928373007913464, "choice_history": [59, 127, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 158, 1, 151, "attacker", "<EOS>", 177, 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 45, 109, 24, 112, "minion", "<EOS>", 162, 153, 24, 112, "minion", "<EOS>", 16, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 164, 58, 149, 77, 16, 82, 24, 112, "minion", "<EOS>", "<UNK>", "<EOS>", 161, 8, 164, 48, 117, "0", "<EOS>", 180, 64, 81, 164, 46, 112, "target", "<EOS>", 19, 89, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "game", "<EOS>", "random_choice", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "target", "<EOS>", "change_attack", "<EOS>", 164, 57, 76, 146, 24, 112, "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 178, 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 24, 112, "player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_died", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 24, 112, "player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_died", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len([minion for minion in self.player.minions if not minion.<UNK>]\n            ) > 0:\n            target = self.player.game.random_choice(self.player.minions)\n            target.change_attack(3)\n            target.increase_health(2)\n            super().reveal()\n\n    def activate(self, player):\n        player.bind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('minion_died', self._reveal)\n", "model_output": {"hole4": "<UNK>", "_type": "Template0", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "game"}, "attr": "random_choice"}}}, {"hole2": [{"_type": "Template19"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Name", "id": "target"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Call", "args": [{"_type": "ListComp", "elt": {"_type": "Name", "id": "minion"}, "generators": [{"ifs": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "<UNK>"}}], "_type": "comprehension", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}}]}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Gt"}]}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_died", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_died", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "attacker"}], "hole0": "Repentance", "hole3": "_reveal"}, "score_history": [-2.47955322265625e-05, -0.4886598587036133, -3.60006233677268e-05, -0.00047638514661230147, -0.0007663576398044825, -5.9843041526619345e-05, -7.62939453125e-06, -0.0003414154052734375, -5.91278076171875e-05, -1.52587890625e-05, -0.0006542205810546875, -1.1444091796875e-05, -2.753696753643453e-05, -3.933906555175781e-06, -2.777580448309891e-05, -3.170967102050781e-05, -0.25183260440826416, -2.3841830625315197e-06, -5.0067850679624826e-05, 0.0, -0.011880636215209961, -6.4849853515625e-05, -0.021008729934692383, -3.814697265625e-06, -0.0007495880126953125, -0.0005035400390625, -1.1444091796875e-05, -0.012186169624328613, -5.340576171875e-05, -9.5367431640625e-06, -0.0002574920654296875, -8.20159912109375e-05, -0.4762125015258789, -0.00029754638671875, -0.008489608764648438, -0.00055694580078125, -1.1444091796875e-05, -9.5367431640625e-06, -0.026208877563476562, -1.9073486328125e-06, -0.00035858154296875, -0.6570491790771484, -0.018105506896972656, -0.000164031982421875, -1.9073486328125e-06, -0.0004408355162013322, -3.6477376852417365e-05, -0.015453338623046875, -0.0021963119506835938, -0.18166255950927734, 0.0, -0.0035639198031276464, -2.0265373677830212e-05, -0.000156402587890625, 0.0, -0.0004425048828125, -7.62939453125e-06, -0.000133514404296875, 0.0, -0.011610031127929688, -1.7642974853515625e-05, -0.00014495849609375, 0.0, -0.00040924549102783203, 0.0, -0.000659942626953125, -0.011843681335449219, -0.0016231536865234375, -0.03229808807373047, -0.0026073455810546875, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -0.0030690431594848633, -1.1920922133867862e-06, -0.0760117620229721, -1.1920928244535389e-07, -7.62939453125e-06, -0.008115768432617188, -5.7220458984375e-06, -7.05718994140625e-05, -2.09808349609375e-05, -0.00019132750458084047, -3.4928310924442485e-05, -0.29976558685302734, -0.0003452301025390625, -0.00016021728515625, -2.86102294921875e-05, -0.000179290771484375, 0.0, -0.053676486015319824, -4.0531158447265625e-06, -0.00130462646484375, -0.0544586181640625, -1.9073486328125e-05, 0.0, -7.43865966796875e-05, 0.0, -0.00638580322265625, -1.71661376953125e-05, -0.05623435974121094, 0.0, -0.033945322036743164, -0.0009088516235351562, -0.017525672912597656, 0.0, -0.0005437135696411133, -1.9073486328125e-06, -0.2957831621170044, -5.340576171875e-05, -0.004978179931640625, -0.005215644836425781, 0.0, -0.0006809234619140625, 0.0, -2.6702880859375e-05, 0.0, -0.0015708208084106445, -0.0005295276641845703, -0.000392913818359375, 0.0, -0.00067138671875, -1.9073486328125e-06, -0.005709648132324219, -5.53131103515625e-05, -0.02541351318359375, 0.0, -0.14426052570343018, 0.0, -0.003432631492614746, -1.9073486328125e-06, -1.9073486328125e-06, -1.6728901863098145, -0.0001468658447265625, -2.86102294921875e-05, -0.000659942626953125, 0.0, -0.16095411777496338, 0.0, -0.4899613559246063, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0017185211181640625, -1.1444091796875e-05, -0.5218324661254883, -9.5367431640625e-06, -9.5367431640625e-06, -5.2450905059231445e-05, -1.7523765563964844e-05, -9.000301361083984e-05, -4.76837158203125e-05, -0.000461578369140625, -0.00023651123046875, -0.0003376007080078125, -0.0007207380840554833, -3.814697265625e-05, -0.000732421875, -0.00106048583984375, -9.5367431640625e-06, -1.9073486328125e-05, -0.26895713806152344, -4.38690185546875e-05, -0.0022188425064086914, 0.0, -0.010381086729466915, 0.0, -5.14984130859375e-05, -8.392333984375e-05, -1.1444091796875e-05, -0.288814514875412, 0.0, -5.14984130859375e-05, -7.62939453125e-06, -4.57763671875e-05, 0.0, -0.0030183792114257812, -0.00013363361358642578, -0.0017299652099609375, 0.0, -3.24249267578125e-05, -0.0001201629638671875, -0.0359959602355957, 0.0, -0.0004940032958984375, -8.392333984375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.6506109237670898, -0.000423431396484375, -0.02427387237548828, 0.0, -0.00969277136027813, 0.0, -0.0001583099365234375, -1.33514404296875e-05, -7.62939453125e-06, -0.4303460121154785, 0.0, -0.0001678466796875, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0019292831420898438, -6.866455078125e-05, -0.0015544891357421875, 0.0]}, {"score": -8.505459008251648, "choice_history": [59, 127, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 158, 1, 151, "attacker", "<EOS>", 177, 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 181, 64, 81, 164, 46, 112, "mirror", "<EOS>", 19, 89, 16, 82, 24, 112, "minion", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 76, 146, 16, 82, 24, 112, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 165, 49, 121, "<UNK>", "<EOS>", 46, 112, "mirror", "<EOS>", 76, 146, 16, 82, 24, 112, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 165, 49, 121, "<UNK>", "<EOS>", 46, 112, "mirror", "<EOS>", 76, 146, 16, 82, 24, 112, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 165, 49, 121, "<UNK>", "<EOS>", 46, 112, "mirror", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 178, 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player.minions)\n            minion.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "model_output": {"hole4": "<UNK>", "_type": "Template0", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}}}, {"hole2": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Name", "id": "mirror"}], "hole1": "trigger", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}}, {"hole2": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Name", "id": "mirror"}], "hole1": "trigger", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}}, {"hole2": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Name", "id": "mirror"}], "hole1": "trigger", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "attacker"}], "hole0": "Repentance", "hole3": "_reveal"}, "score_history": [-2.47955322265625e-05, -0.4886598587036133, -3.60006233677268e-05, -0.00047638514661230147, -0.0007663576398044825, -5.9843041526619345e-05, -7.62939453125e-06, -0.0003414154052734375, -5.91278076171875e-05, -1.52587890625e-05, -0.0006542205810546875, -1.1444091796875e-05, -2.753696753643453e-05, -3.933906555175781e-06, -2.777580448309891e-05, -3.170967102050781e-05, -0.25183260440826416, -2.3841830625315197e-06, -5.0067850679624826e-05, 0.0, -0.011880636215209961, -6.4849853515625e-05, -0.021008729934692383, -3.814697265625e-06, -0.0007495880126953125, -0.0005035400390625, -1.1444091796875e-05, -0.012186169624328613, -5.340576171875e-05, -9.5367431640625e-06, -0.0002574920654296875, -8.20159912109375e-05, -0.4762125015258789, -0.00029754638671875, -0.008489608764648438, -0.00055694580078125, -1.1444091796875e-05, -9.5367431640625e-06, -0.026208877563476562, -1.9073486328125e-06, -0.00035858154296875, -1.0730867385864258, 0.0, -0.0008411407470703125, 0.0, -7.05718994140625e-05, 0.0, -0.009637832641601562, -0.0003300905227661133, -9.1552734375e-05, 0.0, -0.0008182525634765625, -1.9073486328125e-06, -1.52587890625e-05, -0.0814199447631836, -1.9073486328125e-05, -0.0004558563232421875, -1.9073486328125e-05, -0.0009430646896362305, -0.0013343095779418945, -0.11670589447021484, -0.0007114410400390625, -0.0011119842529296875, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.3575868606567383, -0.0020961761474609375, -0.0012521743774414062, -0.009145736694335938, -0.003299713134765625, -2.09808349609375e-05, -0.026563644409179688, -9.5367431640625e-06, -0.006672263145446777, -5.960462772236497e-07, -0.031420350074768066, -3.814697265625e-06, -0.0005016326904296875, -9.72747802734375e-05, 0.0, -0.14483165740966797, -3.814697265625e-06, -0.0009860992431640625, 0.0, -0.0010118484497070312, -0.000786900520324707, -0.00029754638671875, 0.0, -0.0023221969604492188, -3.814697265625e-06, -0.0005645751953125, -3.814697265625e-06, -1.3363113403320312, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.02896881103515625, -9.655952453613281e-06, -0.0001201629638671875, 0.0, -0.05631732940673828, -3.814697265625e-06, -0.09236335754394531, -0.0064525604248046875, -1.1444091796875e-05, -0.02617812156677246, -1.9073486328125e-06, -0.0006933212280273438, 0.0, -0.11355161666870117, -0.000244140625, -0.0001277923583984375, -0.0013904571533203125, -0.008083343505859375, 0.0, -0.0001316070556640625, 0.0, -0.00035381317138671875, -3.814697265625e-06, -0.000118255615234375, 0.0, -0.010992050170898438, -1.9073486328125e-06, -0.009809494018554688, -0.018738746643066406, -7.62939453125e-06, -0.05938911437988281, -1.9073486328125e-06, -0.000274658203125, 0.0, -0.11021757125854492, -0.0002193450927734375, -0.0001583099365234375, -0.0181732177734375, -0.0045452117919921875, 0.0, -0.000102996826171875, 0.0, -0.00045108795166015625, -3.814697265625e-06, -0.0001373291015625, 0.0, -0.012813568115234375, 0.0, -0.010166168212890625, -0.022934913635253906, -5.7220458984375e-06, -0.08243584632873535, -1.9073486328125e-06, -0.000400543212890625, 0.0, -0.08910799026489258, -0.00031280517578125, -0.0001583099365234375, -1.0291805267333984, -0.0005016326904296875, -1.9073486328125e-06, -7.140544767025858e-05, -9.655952453613281e-06, -0.00047326087951660156, -0.001272439956665039, -0.004749298095703125, -0.000152587890625, -0.00018310546875, -0.0011147259501740336, -5.340576171875e-05, -0.0006046295166015625, -0.0045032501220703125, -1.33514404296875e-05, -5.7220458984375e-06, -0.3988151550292969, -3.814697265625e-06, -0.010509490966796875, -2.09808349609375e-05, -0.0001392364501953125, 0.0, -0.0001354217529296875, 0.0, -0.0003873109817504883, -1.1444091796875e-05, -0.002025127410888672, 0.0, -0.022191643714904785, 0.0, -1.1444091796875e-05, -0.0001468658447265625, -2.47955322265625e-05, -0.6120309829711914, -0.00017547607421875, -0.0001373291015625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0011749267578125, -0.0001316070556640625, -0.0016078948974609375, 0.0, -2.47955322265625e-05, -0.000110626220703125, -0.10715293884277344, 0.0, -0.0007381439208984375, -7.82012939453125e-05, 0.0, -9.5367431640625e-06, -0.3336343765258789, -1.9073486328125e-06, -0.0009670257568359375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.001190185546875, 0.0, -0.0004596710205078125, -3.814697265625e-06, -0.0005425212439149618, 0.0, -0.009883238933980465, -3.814697265625e-06, -1.52587890625e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.6512318849563599, -0.0006799697875976562, -0.0004730224609375, 0.0, -3.814697265625e-06, 0.0, -0.0022411346435546875, -7.43865966796875e-05, -0.0010528564453125, 0.0]}, {"score": -9.160715756451111, "choice_history": [59, 127, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 158, 1, 151, "attacker", "<EOS>", 177, 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 181, 64, 81, 164, 46, 112, "mirror", "<EOS>", 19, 89, 16, 82, 24, 112, "minion", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 76, 146, 16, 82, 24, 112, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 165, 49, 121, "<UNK>", "<EOS>", 46, 112, "mirror", "<EOS>", 76, 146, 16, 82, 24, 112, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 165, 49, 121, "<UNK>", "<EOS>", 46, 112, "mirror", "<EOS>", 76, 146, 16, 82, 24, 112, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 165, 49, 121, "<UNK>", "<EOS>", 46, 112, "mirror", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 178, 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "minion_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player.minions)\n            minion.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "<UNK>", "_type": "Template0", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}}}, {"hole2": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Name", "id": "mirror"}], "hole1": "trigger", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}}, {"hole2": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Name", "id": "mirror"}], "hole1": "trigger", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}}, {"hole2": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Name", "id": "mirror"}], "hole1": "trigger", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "attacker"}], "hole0": "Repentance", "hole3": "_reveal"}, "score_history": [-2.47955322265625e-05, -0.4886598587036133, -3.60006233677268e-05, -0.00047638514661230147, -0.0007663576398044825, -5.9843041526619345e-05, -7.62939453125e-06, -0.0003414154052734375, -5.91278076171875e-05, -1.52587890625e-05, -0.0006542205810546875, -1.1444091796875e-05, -2.753696753643453e-05, -3.933906555175781e-06, -2.777580448309891e-05, -3.170967102050781e-05, -0.25183260440826416, -2.3841830625315197e-06, -5.0067850679624826e-05, 0.0, -0.011880636215209961, -6.4849853515625e-05, -0.021008729934692383, -3.814697265625e-06, -0.0007495880126953125, -0.0005035400390625, -1.1444091796875e-05, -0.012186169624328613, -5.340576171875e-05, -9.5367431640625e-06, -0.0002574920654296875, -8.20159912109375e-05, -0.4762125015258789, -0.00029754638671875, -0.008489608764648438, -0.00055694580078125, -1.1444091796875e-05, -9.5367431640625e-06, -0.026208877563476562, -1.9073486328125e-06, -0.00035858154296875, -1.0730867385864258, 0.0, -0.0008411407470703125, 0.0, -7.05718994140625e-05, 0.0, -0.009637832641601562, -0.0003300905227661133, -9.1552734375e-05, 0.0, -0.0008182525634765625, -1.9073486328125e-06, -1.52587890625e-05, -0.0814199447631836, -1.9073486328125e-05, -0.0004558563232421875, -1.9073486328125e-05, -0.0009430646896362305, -0.0013343095779418945, -0.11670589447021484, -0.0007114410400390625, -0.0011119842529296875, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.3575868606567383, -0.0020961761474609375, -0.0012521743774414062, -0.009145736694335938, -0.003299713134765625, -2.09808349609375e-05, -0.026563644409179688, -9.5367431640625e-06, -0.006672263145446777, -5.960462772236497e-07, -0.031420350074768066, -3.814697265625e-06, -0.0005016326904296875, -9.72747802734375e-05, 0.0, -0.14483165740966797, -3.814697265625e-06, -0.0009860992431640625, 0.0, -0.0010118484497070312, -0.000786900520324707, -0.00029754638671875, 0.0, -0.0023221969604492188, -3.814697265625e-06, -0.0005645751953125, -3.814697265625e-06, -1.3363113403320312, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.02896881103515625, -9.655952453613281e-06, -0.0001201629638671875, 0.0, -0.05631732940673828, -3.814697265625e-06, -0.09236335754394531, -0.0064525604248046875, -1.1444091796875e-05, -0.02617812156677246, -1.9073486328125e-06, -0.0006933212280273438, 0.0, -0.11355161666870117, -0.000244140625, -0.0001277923583984375, -0.0013904571533203125, -0.008083343505859375, 0.0, -0.0001316070556640625, 0.0, -0.00035381317138671875, -3.814697265625e-06, -0.000118255615234375, 0.0, -0.010992050170898438, -1.9073486328125e-06, -0.009809494018554688, -0.018738746643066406, -7.62939453125e-06, -0.05938911437988281, -1.9073486328125e-06, -0.000274658203125, 0.0, -0.11021757125854492, -0.0002193450927734375, -0.0001583099365234375, -0.0181732177734375, -0.0045452117919921875, 0.0, -0.000102996826171875, 0.0, -0.00045108795166015625, -3.814697265625e-06, -0.0001373291015625, 0.0, -0.012813568115234375, 0.0, -0.010166168212890625, -0.022934913635253906, -5.7220458984375e-06, -0.08243584632873535, -1.9073486328125e-06, -0.000400543212890625, 0.0, -0.08910799026489258, -0.00031280517578125, -0.0001583099365234375, -1.0291805267333984, -0.0005016326904296875, -1.9073486328125e-06, -7.140544767025858e-05, -9.655952453613281e-06, -0.00047326087951660156, -0.001272439956665039, -0.004749298095703125, -0.000152587890625, -0.00018310546875, -0.0011147259501740336, -5.340576171875e-05, -0.0006046295166015625, -0.0045032501220703125, -1.33514404296875e-05, -5.7220458984375e-06, -0.3988151550292969, -3.814697265625e-06, -0.010509490966796875, -2.09808349609375e-05, -0.0001392364501953125, 0.0, -0.0001354217529296875, 0.0, -0.0003873109817504883, -1.1444091796875e-05, -0.002025127410888672, 0.0, -0.022191643714904785, 0.0, -1.1444091796875e-05, -0.0001468658447265625, -2.47955322265625e-05, -0.6120309829711914, -0.00017547607421875, -0.0001373291015625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0011749267578125, -0.0001316070556640625, -0.0016078948974609375, 0.0, -2.47955322265625e-05, -0.000110626220703125, -0.10715293884277344, 0.0, -0.0007381439208984375, -7.82012939453125e-05, 0.0, -9.5367431640625e-06, -0.3336343765258789, -1.9073486328125e-06, -0.0009670257568359375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.001190185546875, 0.0, -0.0004596710205078125, -3.814697265625e-06, -0.0005425212439149618, 0.0, -0.009883238933980465, -3.814697265625e-06, -1.52587890625e-05, -1.71661376953125e-05, -2.288818359375e-05, -1.3091036081314087, 0.0, -0.000186920166015625, 0.0, -1.9073486328125e-06, 0.0, -0.0008516311645507812, -6.103515625e-05, -0.0008087158203125, 0.0]}, {"score": -13.120738605436877, "choice_history": [59, 127, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 158, 1, 151, "attacker", "<EOS>", 177, 71, 99, 20, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 181, 64, 81, 164, 46, 112, "mirror", "<EOS>", 19, 89, 16, 82, 24, 112, "minion", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 76, 146, 16, 82, 24, 112, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 165, 49, 121, "<UNK>", "<EOS>", 46, 112, "mirror", "<EOS>", 76, 146, 16, 82, 24, 112, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 165, 49, 121, "<UNK>", "<EOS>", 46, 112, "mirror", "<EOS>", 76, 146, 16, 82, 24, 112, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 165, 49, 121, "<UNK>", "<EOS>", 46, 112, "mirror", "<EOS>", 76, 146, 16, 82, 24, 112, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 165, 49, 121, "<UNK>", "<EOS>", 46, 112, "mirror", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "minion", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 18, 85, 5, 165, 41, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 42, 92, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 161, 7, 164, 38, 82, 24, 112, "minion", "<EOS>", "card", "<EOS>", 178, 76, 146, 24, 112, "minion", "<EOS>", "change_attack", "<EOS>", 164, 57, 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player.minions)\n            minion.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n\n    def can_use(self, minion, index):\n        if card.<UNK>() and card.<UNK> == minion.card:\n            minion.change_attack(3)\n            super().reveal()\n", "model_output": {"hole4": "<UNK>", "_type": "Template0", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}}}, {"hole2": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Name", "id": "mirror"}], "hole1": "trigger", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}}, {"hole2": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Name", "id": "mirror"}], "hole1": "trigger", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}}, {"hole2": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Name", "id": "mirror"}], "hole1": "trigger", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}}, {"hole2": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Name", "id": "mirror"}], "hole1": "trigger", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "minion"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"hole2": [{"_type": "Template19"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Name", "id": "minion"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}, "ops": [{"_type": "Eq"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole0": "Repentance", "hole3": "COMMON"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "attacker"}], "hole0": "Repentance", "hole3": "_reveal"}, "score_history": [-2.47955322265625e-05, -0.4886598587036133, -3.60006233677268e-05, -0.00047638514661230147, -0.0007663576398044825, -5.9843041526619345e-05, -7.62939453125e-06, -0.0003414154052734375, -5.91278076171875e-05, -1.52587890625e-05, -0.0006542205810546875, -1.1444091796875e-05, -2.753696753643453e-05, -3.933906555175781e-06, -2.777580448309891e-05, -3.170967102050781e-05, -0.25183260440826416, -2.3841830625315197e-06, -5.0067850679624826e-05, 0.0, -0.011880636215209961, -6.4849853515625e-05, -0.021008729934692383, -3.814697265625e-06, -0.0007495880126953125, -0.0005035400390625, -1.1444091796875e-05, -0.012186169624328613, -5.340576171875e-05, -9.5367431640625e-06, -0.0002574920654296875, -8.20159912109375e-05, -0.4762125015258789, -0.00029754638671875, -0.008489608764648438, -0.00055694580078125, -1.1444091796875e-05, -9.5367431640625e-06, -0.026208877563476562, -1.9073486328125e-06, -0.00035858154296875, -1.0730867385864258, 0.0, -0.0008411407470703125, 0.0, -7.05718994140625e-05, 0.0, -0.009637832641601562, -0.0003300905227661133, -9.1552734375e-05, 0.0, -0.0008182525634765625, -1.9073486328125e-06, -1.52587890625e-05, -0.0814199447631836, -1.9073486328125e-05, -0.0004558563232421875, -1.9073486328125e-05, -0.0009430646896362305, -0.0013343095779418945, -0.11670589447021484, -0.0007114410400390625, -0.0011119842529296875, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.3575868606567383, -0.0020961761474609375, -0.0012521743774414062, -0.009145736694335938, -0.003299713134765625, -2.09808349609375e-05, -0.026563644409179688, -9.5367431640625e-06, -0.006672263145446777, -5.960462772236497e-07, -0.031420350074768066, -3.814697265625e-06, -0.0005016326904296875, -9.72747802734375e-05, 0.0, -0.14483165740966797, -3.814697265625e-06, -0.0009860992431640625, 0.0, -0.0010118484497070312, -0.000786900520324707, -0.00029754638671875, 0.0, -0.0023221969604492188, -3.814697265625e-06, -0.0005645751953125, -3.814697265625e-06, -1.3363113403320312, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.02896881103515625, -9.655952453613281e-06, -0.0001201629638671875, 0.0, -0.05631732940673828, -3.814697265625e-06, -0.09236335754394531, -0.0064525604248046875, -1.1444091796875e-05, -0.02617812156677246, -1.9073486328125e-06, -0.0006933212280273438, 0.0, -0.11355161666870117, -0.000244140625, -0.0001277923583984375, -0.0013904571533203125, -0.008083343505859375, 0.0, -0.0001316070556640625, 0.0, -0.00035381317138671875, -3.814697265625e-06, -0.000118255615234375, 0.0, -0.010992050170898438, -1.9073486328125e-06, -0.009809494018554688, -0.018738746643066406, -7.62939453125e-06, -0.05938911437988281, -1.9073486328125e-06, -0.000274658203125, 0.0, -0.11021757125854492, -0.0002193450927734375, -0.0001583099365234375, -0.0181732177734375, -0.0045452117919921875, 0.0, -0.000102996826171875, 0.0, -0.00045108795166015625, -3.814697265625e-06, -0.0001373291015625, 0.0, -0.012813568115234375, 0.0, -0.010166168212890625, -0.022934913635253906, -5.7220458984375e-06, -0.08243584632873535, -1.9073486328125e-06, -0.000400543212890625, 0.0, -0.08910799026489258, -0.00031280517578125, -0.0001583099365234375, -0.44365978240966797, -0.0003871917724609375, 0.0, -0.0001049041748046875, 0.0, -0.000676274299621582, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.01844024658203125, -1.1920928244535389e-07, -0.013471603393554688, -0.06330490112304688, -5.7220458984375e-06, -0.07991456985473633, 0.0, -0.0005407333374023438, 0.0, -0.09006929397583008, -0.00029468536376953125, -3.4332275390625e-05, -0.06396961212158203, -0.0001201629638671875, -0.07367265224456787, 0.0, -0.0055942535400390625, -0.000278472900390625, -0.08975982666015625, -0.0002269744873046875, -3.814697265625e-05, -1.1444091796875e-05, -1.014229655265808, -1.9073468138230965e-06, -2.6702880859375e-05, -4.1961669921875e-05, -0.08412051200866699, -1.8239017663290724e-05, -1.71661376953125e-05, -0.0402984619140625, -0.0004711151123046875, -0.01436614990234375, -8.7738037109375e-05, -9.5367431640625e-05, -0.047806739807128906, -0.18107128143310547, -0.2552680969238281, -6.866455078125e-05, -1.9073486328125e-05, -4.38690185546875e-05, 0.0, -0.15672969818115234, -1.9073486328125e-06, -0.3822101354598999, 0.0, -0.0006008148193359375, -6.67572021484375e-05, -0.015501976013183594, 0.0, -0.043987274169921875, 0.0, -0.6666994094848633, -1.9073486328125e-06, -0.33605968952178955, 0.0, -1.9073486328125e-06, -0.13147640228271484, -3.814697265625e-06, -0.30539894104003906, 0.0, -0.0025310516357421875, 0.0, -0.22587013244628906, -1.3709068298339844e-05, -0.5143529176712036, 0.0, -0.18118667602539062, -0.5072364807128906, -0.0879354476928711, -0.1625356674194336, 0.0, -0.0135573148727417, -5.960446742392378e-06, -0.15028715133666992, 0.0, -5.7220458984375e-06, -0.9288015365600586, -5.14984130859375e-05, -0.4220418930053711, -0.0002231597900390625, -0.0001354217529296875, -0.00010585283598629758, -1.7523765563964844e-05, -4.76837158203125e-05, -2.47955322265625e-05]}], "gold_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n        minion.set_health_to(1)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}
{"beams": [{"score": -2.214412791328833, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "<UNK>", "Spell", "Target", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Adjacent", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>SpellTarget"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Adjacent"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.6658819913864136, 0.0, -0.0033998489379882812, 0.0, -0.017604827880859375, 0.0, -0.0006151199340820312, 0.0, 0.0, -0.0020885467529296875, -0.003589630126953125, -9.5367431640625e-06, -1.0609614946588408e-05, -2.3841855067985307e-07, -0.00010918975021922961, -0.0003546467632986605, -5.245207830739673e-06, -0.0078582763671875, -4.1961669921875e-05, -0.00353240966796875, 0.0, -0.0004291534423828125, -4.76837158203125e-05, -0.006084442138671875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0021572113037109375, -0.0004711151123046875, -0.001468658447265625, -0.20606708526611328, -1.1444091796875e-05, -0.0038408623076975346, -0.5117596387863159, -0.09930729866027832, -0.0007241964340209961, -0.00472259521484375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.03010094165802002, -0.0004119873046875, -1.33514404296875e-05, -0.04089164733886719, -0.0154571533203125, -0.0002193450927734375, -0.35030338168144226, -0.011232486926019192]}, {"score": -2.3374896629220174, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "<UNK>", "Spell", "Target", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Adjacent", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>SpellTarget"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Adjacent"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.7743548154830933, 0.0, -0.0011348724365234375, 0.0, -0.02526676654815674, 0.0, -0.001341104507446289, 0.0, 0.0, -0.0020198822021484375, -0.0032739639282226562, -9.5367431640625e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -9.822363062994555e-05, -0.00031161209335550666, -5.125998541188892e-06, -0.0115966796875, -4.00543212890625e-05, -0.003930091857910156, 0.0, -0.0004177093505859375, -4.57763671875e-05, -0.0060863494873046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0022144317626953125, -0.000457763671875, -0.001468658447265625, -0.2105550765991211, -1.1444091796875e-05, -0.003838343545794487, -0.5099074840545654, -0.10077977180480957, -0.0007261037826538086, -0.0047397613525390625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.030429840087890625, -0.0004062652587890625, -1.33514404296875e-05, -0.040958404541015625, -0.015511512756347656, -0.0002193450927734375, -0.3504951596260071, -0.011224976740777493]}, {"score": -2.369195482367978, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "<UNK>", "Deathrattle", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>Deathrattle(), PlayerSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Deathrattle"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.6658819913864136, 0.0, -0.0033998489379882812, 0.0, -0.017604827880859375, 0.0, -0.0006151199340820312, 0.0, 0.0, -0.0020885467529296875, -0.003589630126953125, -9.5367431640625e-06, -1.0609614946588408e-05, -2.3841855067985307e-07, -0.00010918975021922961, -0.0003546467632986605, -5.245207830739673e-06, -0.0078582763671875, -4.1961669921875e-05, -0.00353240966796875, 0.0, -0.0004291534423828125, -4.76837158203125e-05, -0.006084442138671875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0021572113037109375, -0.0004711151123046875, -0.001468658447265625, -0.20606708526611328, -1.1444091796875e-05, -0.0038408623076975346, -1.1493700742721558, -0.0001010894775390625, -0.06950187683105469, -1.71661376953125e-05, -0.00092315673828125, -1.9073486328125e-05, 0.0]}, {"score": -2.494382865025692, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "<UNK>", "Deathrattle", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>Deathrattle(), PlayerSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Deathrattle"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.7743548154830933, 0.0, -0.0011348724365234375, 0.0, -0.02526676654815674, 0.0, -0.001341104507446289, 0.0, 0.0, -0.0020198822021484375, -0.0032739639282226562, -9.5367431640625e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -9.822363062994555e-05, -0.00031161209335550666, -5.125998541188892e-06, -0.0115966796875, -4.00543212890625e-05, -0.003930091857910156, 0.0, -0.0004177093505859375, -4.57763671875e-05, -0.0060863494873046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0022144317626953125, -0.000457763671875, -0.001468658447265625, -0.2105550765991211, -1.1444091796875e-05, -0.003838343545794487, -1.1513526439666748, -9.918212890625e-05, -0.06991767883300781, -1.71661376953125e-05, -0.000905156135559082, -1.9073486328125e-05, 0.0]}, {"score": -3.266450129589394, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "<UNK>", "Spell", "Damage", "<EOS>", 164, 55, 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(2), PlayerSelector())]\n            )\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "<UNK>SpellDamage"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.6658819913864136, 0.0, -0.0033998489379882812, 0.0, -0.017604827880859375, 0.0, -0.0006151199340820312, 0.0, 0.0, -0.0020885467529296875, -0.003589630126953125, -9.5367431640625e-06, -1.0609614946588408e-05, -2.3841855067985307e-07, -0.00010918975021922961, -0.0003546467632986605, -5.245207830739673e-06, -0.0078582763671875, -4.1961669921875e-05, -0.00353240966796875, 0.0, -0.0004291534423828125, -4.76837158203125e-05, -0.006084442138671875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0021572113037109375, -0.0004711151123046875, -0.001468658447265625, -1.6927108764648438, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.04471707344055176, -0.151594877243042, -0.004674077033996582, -0.00034165382385253906, -0.0009288787841796875, -0.04678630828857422, -0.000396728515625, 0.0, -0.3848450183868408, -0.00010335445404052734, 0.0]}, {"score": -3.3655529853394555, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "<UNK>", "Spell", "Damage", "<EOS>", 164, 55, 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(2), PlayerSelector())]\n            )\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "<UNK>SpellDamage"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.7743548154830933, 0.0, -0.0011348724365234375, 0.0, -0.02526676654815674, 0.0, -0.001341104507446289, 0.0, 0.0, -0.0020198822021484375, -0.0032739639282226562, -9.5367431640625e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -9.822363062994555e-05, -0.00031161209335550666, -5.125998541188892e-06, -0.0115966796875, -4.00543212890625e-05, -0.003930091857910156, 0.0, -0.0004177093505859375, -4.57763671875e-05, -0.0060863494873046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0022144317626953125, -0.000457763671875, -0.001468658447265625, -1.6731195449829102, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.04482674598693848, -0.1521207094192505, -0.004657864570617676, -0.00034165382385253906, -0.0009250640869140625, -0.046382904052734375, -0.000396728515625, 0.0, -0.3850036859512329, -0.00010335445404052734, 0.0]}, {"score": -4.116675994033322, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "<UNK>", "Spell", "Target", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            EnemyPlayer()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>SpellTarget"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.6658819913864136, 0.0, -0.0033998489379882812, 0.0, -0.017604827880859375, 0.0, -0.0006151199340820312, 0.0, 0.0, -0.0020885467529296875, -0.003589630126953125, -9.5367431640625e-06, -1.0609614946588408e-05, -2.3841855067985307e-07, -0.00010918975021922961, -0.0003546467632986605, -5.245207830739673e-06, -0.0078582763671875, -4.1961669921875e-05, -0.00353240966796875, 0.0, -0.0004291534423828125, -4.76837158203125e-05, -0.006084442138671875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0021572113037109375, -0.0004711151123046875, -0.001468658447265625, -0.20606708526611328, -1.1444091796875e-05, -0.0038408623076975346, -0.5117596387863159, -0.09930729866027832, -0.0007241964340209961, -0.00472259521484375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.03010094165802002, -0.0004119873046875, -1.33514404296875e-05, -0.04089164733886719, -0.0154571533203125, -0.0002193450927734375, -2.1886775493621826, -0.07511568069458008, -5.841255187988281e-06]}, {"score": -4.221786035830483, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "<UNK>", "Spell", "Target", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Has", "Shadow", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            HasShadow()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>SpellTarget"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "HasShadow"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.6658819913864136, 0.0, -0.0033998489379882812, 0.0, -0.017604827880859375, 0.0, -0.0006151199340820312, 0.0, 0.0, -0.0020885467529296875, -0.003589630126953125, -9.5367431640625e-06, -1.0609614946588408e-05, -2.3841855067985307e-07, -0.00010918975021922961, -0.0003546467632986605, -5.245207830739673e-06, -0.0078582763671875, -4.1961669921875e-05, -0.00353240966796875, 0.0, -0.0004291534423828125, -4.76837158203125e-05, -0.006084442138671875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0021572113037109375, -0.0004711151123046875, -0.001468658447265625, -0.20606708526611328, -1.1444091796875e-05, -0.0038408623076975346, -0.5117596387863159, -0.09930729866027832, -0.0007241964340209961, -0.00472259521484375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.03010094165802002, -0.0004119873046875, -1.33514404296875e-05, -0.04089164733886719, -0.0154571533203125, -0.0002193450927734375, -2.3061978816986084, -0.021555021405220032, -0.041156210005283356]}, {"score": -4.238131410672359, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "<UNK>", "Spell", "Target", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            EnemyPlayer()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>SpellTarget"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.7743548154830933, 0.0, -0.0011348724365234375, 0.0, -0.02526676654815674, 0.0, -0.001341104507446289, 0.0, 0.0, -0.0020198822021484375, -0.0032739639282226562, -9.5367431640625e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -9.822363062994555e-05, -0.00031161209335550666, -5.125998541188892e-06, -0.0115966796875, -4.00543212890625e-05, -0.003930091857910156, 0.0, -0.0004177093505859375, -4.57763671875e-05, -0.0060863494873046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0022144317626953125, -0.000457763671875, -0.001468658447265625, -0.2105550765991211, -1.1444091796875e-05, -0.003838343545794487, -0.5099074840545654, -0.10077977180480957, -0.0007261037826538086, -0.0047397613525390625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.030429840087890625, -0.0004062652587890625, -1.33514404296875e-05, -0.040958404541015625, -0.015511512756347656, -0.0002193450927734375, -2.1872241497039795, -0.07513189315795898, -5.841255187988281e-06]}, {"score": -4.3456901491126345, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "<UNK>", "Spell", "Target", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Has", "Shadow", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            HasShadow()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>SpellTarget"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "HasShadow"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.7743548154830933, 0.0, -0.0011348724365234375, 0.0, -0.02526676654815674, 0.0, -0.001341104507446289, 0.0, 0.0, -0.0020198822021484375, -0.0032739639282226562, -9.5367431640625e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -9.822363062994555e-05, -0.00031161209335550666, -5.125998541188892e-06, -0.0115966796875, -4.00543212890625e-05, -0.003930091857910156, 0.0, -0.0004177093505859375, -4.57763671875e-05, -0.0060863494873046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0022144317626953125, -0.000457763671875, -0.001468658447265625, -0.2105550765991211, -1.1444091796875e-05, -0.003838343545794487, -0.5099074840545654, -0.10077977180480957, -0.0007261037826538086, -0.0047397613525390625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.030429840087890625, -0.0004062652587890625, -1.33514404296875e-05, -0.040958404541015625, -0.015511512756347656, -0.0002193450927734375, -2.3071706295013428, -0.021574880927801132, -0.04117511212825775]}, {"score": -4.604491925699222, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "<UNK>", "Spell", "Target", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Adjacent", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 1, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>SpellTarget"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Adjacent"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -2.1334543228149414, -1.71661376953125e-05, -1.0647039413452148, 0.0, -0.00186920166015625, 0.0, -0.012884140014648438, 0.0, -0.0013695955276489258, 0.0, -1.9073486328125e-06, -0.0003643035888671875, -0.01990222930908203, -1.9073486328125e-06, -7.510183422709815e-06, -3.4570680327306036e-06, -9.691245941212401e-05, -0.00023710302775725722, -7.390974587906385e-06, -0.017269134521484375, -6.866455078125e-05, -0.0026886463165283203, 0.0, -0.0006732940673828125, -4.38690185546875e-05, -0.0054988861083984375, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0019474029541015625, -0.000469207763671875, -0.0012664794921875, -0.20525646209716797, -1.1444091796875e-05, -0.00404774583876133, -0.4811168611049652, -0.09488129615783691, -0.0006574392318725586, -0.0044155120849609375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.029356837272644043, -0.00040435791015625, -1.33514404296875e-05, -0.04275703430175781, -0.01589488983154297, -0.0002193450927734375, -0.3533511459827423, -0.011240116320550442]}, {"score": -4.6945870035796915, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "<UNK>", "Spell", "Damage", "<EOS>", 164, 55, 51, 130, "Is", "Minion", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(2), IsMinion())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "<UNK>SpellDamage"}}, {"_type": "Template10", "hole0": "IsMinion"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.6658819913864136, 0.0, -0.0033998489379882812, 0.0, -0.017604827880859375, 0.0, -0.0006151199340820312, 0.0, 0.0, -0.0020885467529296875, -0.003589630126953125, -9.5367431640625e-06, -1.0609614946588408e-05, -2.3841855067985307e-07, -0.00010918975021922961, -0.0003546467632986605, -5.245207830739673e-06, -0.0078582763671875, -4.1961669921875e-05, -0.00353240966796875, 0.0, -0.0004291534423828125, -4.76837158203125e-05, -0.006084442138671875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0021572113037109375, -0.0004711151123046875, -0.001468658447265625, -1.6927108764648438, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.04471707344055176, -0.151594877243042, -0.004674077033996582, -0.00034165382385253906, -0.0009288787841796875, -0.04678630828857422, -0.000396728515625, 0.0, -1.7524311542510986, -0.06061594560742378, -3.814697265625e-05]}, {"score": -4.792946503727727, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "<UNK>", "Spell", "Damage", "<EOS>", 164, 55, 51, 130, "Is", "Minion", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(2), IsMinion())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "<UNK>SpellDamage"}}, {"_type": "Template10", "hole0": "IsMinion"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -0.1275617778301239, -1.1920928244535389e-07, -0.7743548154830933, 0.0, -0.0011348724365234375, 0.0, -0.02526676654815674, 0.0, -0.001341104507446289, 0.0, 0.0, -0.0020198822021484375, -0.0032739639282226562, -9.5367431640625e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -9.822363062994555e-05, -0.00031161209335550666, -5.125998541188892e-06, -0.0115966796875, -4.00543212890625e-05, -0.003930091857910156, 0.0, -0.0004177093505859375, -4.57763671875e-05, -0.0060863494873046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0022144317626953125, -0.000457763671875, -0.001468658447265625, -1.6731195449829102, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.04482674598693848, -0.1521207094192505, -0.004657864570617676, -0.00034165382385253906, -0.0009250640869140625, -0.046382904052734375, -0.000396728515625, 0.0, -1.7520357370376587, -0.06042667478322983, -3.814697265625e-05]}, {"score": -4.8446823208532805, "choice_history": [59, 124, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 51, 130, "<UNK>", "Deathrattle", "<EOS>", 51, 130, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>Deathrattle(), PlayerSelector())])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "HUNTER", "hole1": 1, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 0, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>Deathrattle"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Aura"}}]}}]}], "hole0": "ShadowOfNothing", "hole3": "create_minion"}, "score_history": [-5.91278076171875e-05, -0.0771646499633789, -0.0015448967460542917, -0.011661818251013756, -0.0025474107824265957, -0.0003970652469433844, -2.0026593119837344e-05, -5.924701690673828e-05, -9.179100743494928e-06, -5.7220458984375e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.000179290771484375, -0.0003032684326171875, -0.0011554956436157227, -0.00013494380982592702, -0.000492095947265625, -4.267692565917969e-05, -1.9431114196777344e-05, -0.0001010894775390625, -2.1334543228149414, -1.71661376953125e-05, -1.0647039413452148, 0.0, -0.00186920166015625, 0.0, -0.012884140014648438, 0.0, -0.0013695955276489258, 0.0, -1.9073486328125e-06, -0.0003643035888671875, -0.01990222930908203, -1.9073486328125e-06, -7.510183422709815e-06, -3.4570680327306036e-06, -9.691245941212401e-05, -0.00023710302775725722, -7.390974587906385e-06, -0.017269134521484375, -6.866455078125e-05, -0.0026886463165283203, 0.0, -0.0006732940673828125, -4.38690185546875e-05, -0.0054988861083984375, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0019474029541015625, -0.000469207763671875, -0.0012664794921875, -0.20525646209716797, -1.1444091796875e-05, -0.00404774583876133, -1.2035824060440063, -9.5367431640625e-05, -0.06988143920898438, -1.71661376953125e-05, -0.0009069442749023438, -2.09808349609375e-05, 0.0]}, {"score": -8.745035495692719, "choice_history": [59, 127, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 57, 178, 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 28, 130, "<UNK>", "Justice", "<EOS>", 76, 146, 24, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>"], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            <UNK> = <UNK>Justice()\n            <UNK>.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Template10", "hole0": "<UNK>Justice"}}, {"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Name", "id": "<UNK>"}}], "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template19"}], "func": {"_type": "Name", "id": "range"}}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "can_use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 1, "_type": "Template3", "hole0": "Shadow of Nothing", "hole3": "EPIC"}}], "hole1": "MinionCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ShadowOfNothing", "hole3": "use"}, "score_history": [-5.91278076171875e-05, -2.836419105529785, -0.00015532673569396138, -0.149867445230484, -0.002409873530268669, -0.002061191713437438, -0.006975833792239428, -0.0005030632019042969, -1.3113007298670709e-05, -0.0022487640380859375, -0.000514984130859375, -2.288818359375e-05, -6.29425048828125e-05, -0.001544952392578125, -0.000640988175291568, -0.00018179135804530233, -0.00046980351908132434, -3.8266178307821974e-05, -6.794929504394531e-05, -1.33514404296875e-05, -0.3030526638031006, -5.7220458984375e-06, -0.3867521286010742, 0.0, -0.0044994354248046875, 0.0, -0.014362335205078125, 0.0, -0.0001544952392578125, 0.0, -6.103515625e-05, -4.9591064453125e-05, -0.000911712646484375, -6.151199340820312e-05, -0.00023651123046875, -0.29250049591064453, -0.0006389617919921875, -4.1961669921875e-05, -0.0011348724365234375, 0.0, -0.0008318413747474551, -0.00016021728515625, -0.00043487548828125, 0.0, -2.6702880859375e-05, -0.0001392364501953125, 0.0, -0.0001506805419921875, 0.0, -0.0006256103515625, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0020618438720703125, -0.001445770263671875, -1.9073486328125e-06, 0.0, -0.027381420135498047, -7.82012939453125e-05, -0.0003719329833984375, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -0.008755921386182308, -3.814697265625e-06, -0.0008602142333984375, -6.4849853515625e-05, -7.62939453125e-06, -0.0001446008391212672, -0.00013971328735351562, -0.007649421691894531, -0.33670902252197266, -0.22186946868896484, -0.0019855499267578125, -0.00040435791015625, -0.013469696044921875, 0.0, -0.5569194555282593, -5.4596661357209086e-05, -0.2225351333618164, -0.0051593780517578125, -0.4859428405761719, -1.1433734893798828, -0.0001475811004638672, -0.0904693603515625, -0.16743946075439453, -1.9073486328125e-06, 0.0, -0.045084476470947266, -8.046627044677734e-05, -0.018453598022460938, -0.000408172607421875, -0.0001239776611328125, -8.0108642578125e-05, 0.0, -1.52587890625e-05, 0.0, -0.4803962707519531, -0.000213623046875, -4.76837158203125e-05, 0.0, -1.7404556274414062e-05, 0.0, -0.5077571868896484, -2.47955322265625e-05, -0.0002155303955078125, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.0028573274612426758, -1.9073486328125e-06, -5.7220458984375e-06, -0.0003833770751953125, -1.9073486328125e-06, -0.0015773773193359375, 0.0, -9.655952453613281e-06, 0.0, -0.0039626359939575195, -0.0003757476806640625, -3.24249267578125e-05, -0.0011386871337890625, -0.000431060791015625, -0.029953718185424805, -3.814697265625e-06, -0.0004596710205078125, -0.0015125274658203125, -0.0002422332763671875, -0.000797271728515625, -0.038010597229003906, -0.011243820190429688, -5.3882598876953125e-05, 0.0, -0.0012569427490234375, -0.0002765655517578125, -0.00012814998626708984, -3.814697265625e-06, -0.09519672393798828, -0.007578849792480469, -0.0036468505859375, -0.005847930908203125, -0.0022487640380859375, -0.0013637542724609375, -0.006220817565917969, -0.000232696533203125, -0.00020599365234375, -0.0035762786865234375, -1.33514404296875e-05, -0.0001354217529296875, -7.62939453125e-06, -0.0014113187789916992, -0.0004431009292602539, -0.04294109344482422, -1.9073486328125e-06, -1.9073486328125e-06, -0.003345489501953125, -1.9073486328125e-06, -0.00030517578125, 0.0, -5.340576171875e-05, -7.62939453125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.011013031005859375, -0.000423431396484375, -0.0031099319458007812, -3.4332275390625e-05, -3.24249267578125e-05, 0.0, -0.0002696514129638672, -2.6702880859375e-05, -2.6702880859375e-05, -0.00072479248046875, -1.9073486328125e-06, -0.06143665313720703, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0021572113037109375, -1.9073486328125e-05, -0.0006694793701171875, -0.00144195556640625, -8.392333984375e-05, -0.000179290771484375, -7.62939453125e-06, -0.03418624401092529, -2.491474151611328e-05]}], "gold_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, False)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n"}
{"beams": [{"score": -2.184350663603368, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.20238494873046875, -3.814697265625e-06, -7.62939453125e-06, -0.0001220703125, 0.0, -0.029026150703430176, 0.0, -0.0007305145263671875, -0.001079559326171875, -2.47955322265625e-05, 0.0, -0.6722316741943359, 0.0, -0.0020220279693603516, -1.9073486328125e-06, -0.0008462667465209961, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.003368377685546875, 0.0, -0.0027904510498046875, -9.5367431640625e-06, -0.000942230224609375, 0.0, -0.052512168884277344, 0.0, -0.00011849403381347656, -0.000156402587890625, -0.028081893920898438, 0.0, -0.03923916816711426, -3.814697265625e-06, -0.04038429260253906, -0.001110076904296875, -0.001453399658203125, -0.00087738037109375, -0.0006237030029296875, -0.0006656646728515625, -0.005786895751953125, -1.1444091796875e-05, -0.00014495849609375, -0.000701904296875, -3.814697265625e-06, -2.09808349609375e-05, -0.0039920806884765625, -5.340576171875e-05, -0.015428543090820312, 0.0, -0.006047248840332031, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.0013489637058228254, -4.38690185546875e-05, -0.015651334077119827, -2.9325485229492188e-05, -0.0027875900268554688, -0.07088851928710938, -0.000179290771484375, -0.0003757476806640625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.001689910888671875, -1.71661376953125e-05, -0.1211390495300293, -1.9073486328125e-06, -0.0018558502197265625, -1.33514404296875e-05, -0.000247955322265625, 0.0, -0.00070953369140625, 0.0, -0.03255176544189453, -4.768370445162873e-07, -0.0002536773681640625, 0.0, -1.33514404296875e-05, -0.006714820861816406, -0.0001773834228515625, -0.0019922256469726562, -3.814697265625e-06, -0.0014606714248657227, 0.0, -0.003574371337890625, -0.028571128845214844, -5.91278076171875e-05, -0.03576946258544922, 0.0, -8.392333984375e-05, 0.0, -9.72747802734375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0027004277799278498, 0.0, -3.814697265625e-06, -0.0007266998291015625, -0.000301361083984375, -0.000347137451171875, -0.01233673095703125, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -6.866455078125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.020802106708288193, 0.0, -9.5367431640625e-06, -0.0003108978271484375, -0.0002193450927734375, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -4.9591064453125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.03976323455572128, 0.0, -4.9591064453125e-05, -0.005244255065917969, -0.0006237030029296875, -5.7220458984375e-06, 0.0, -0.000171661376953125, 0.0, -0.0001926422119140625, 0.0, -0.0003499984450172633, 0.0, -3.814697265625e-06, -0.025450706481933594, -1.52587890625e-05, 0.0, -0.0018267631530761719, -2.861022494471399e-06]}, {"score": -3.106741494277344, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -1.3581782579421997, 0.0, -8.20159912109375e-05, -0.00028228759765625, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.58306884765625e-05, -7.62939453125e-06, -0.0007266998291015625, 0.0, -3.814697265625e-06, 0.0, -0.0001697540283203125, 0.0, -9.5367431640625e-06, 0.0, -0.006773471832275391, 0.0, -5.53131103515625e-05, 0.0, -0.0004845857620239258, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.019268035888671875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00016987293201964349, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.1963043212890625, -3.814697265625e-06, -7.62939453125e-06, -0.000125885009765625, -1.9073486328125e-06, -0.0287858247756958, 0.0, -0.00074005126953125, -0.0010929107666015625, -2.47955322265625e-05, 0.0, -0.6763105392456055, 0.0, -0.0020220279693603516, -1.9073486328125e-06, -0.0008462667465209961, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.003387451171875, 0.0, -0.002780914306640625, -9.5367431640625e-06, -0.000942230224609375, 0.0, -0.052722930908203125, 0.0, -0.00011849403381347656, -0.0001583099365234375, -0.028024673461914062, 0.0, -0.039224863052368164, -3.814697265625e-06, -0.040287017822265625, -0.0011119842529296875, -0.0014629364013671875, -0.0008640289306640625, -0.0006198883056640625, -0.0006580352783203125, -0.0057830810546875, -1.1444091796875e-05, -0.00014495849609375, -0.000701904296875, -3.814697265625e-06, -2.09808349609375e-05, -0.0040187835693359375, -5.340576171875e-05, -0.015192031860351562, 0.0, -0.0060214996337890625, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.0013499173801392317, -4.57763671875e-05, -0.015589823946356773, -2.9325485229492188e-05, -0.002780914306640625, -0.07103347778320312, -0.000179290771484375, -0.0003757476806640625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0016880035400390625, -1.71661376953125e-05, -0.1207880973815918, -1.9073486328125e-06, -0.001857757568359375, -1.33514404296875e-05, -0.000247955322265625, 0.0, -0.00070953369140625, 0.0, -0.0324554443359375, -4.768370445162873e-07, -0.0002536773681640625, 0.0, -1.33514404296875e-05, -0.0067138671875, -0.0001773834228515625, -0.0019903182983398438, -3.814697265625e-06, -0.0014606714248657227, 0.0, -0.0035600662231445312, -0.02849578857421875, -5.91278076171875e-05, -0.0357208251953125, 0.0, -8.392333984375e-05, 0.0, -9.72747802734375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.002704709069803357, 0.0, -3.814697265625e-06, -0.0007266998291015625, -0.000301361083984375, -0.000347137451171875, -0.012332916259765625, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -6.866455078125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.020813429728150368, 0.0, -9.5367431640625e-06, -0.0003108978271484375, -0.0002193450927734375, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -4.9591064453125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.03979198634624481, 0.0, -4.9591064453125e-05, -0.005237579345703125, -0.0006256103515625, -5.7220458984375e-06, 0.0, -0.000171661376953125, 0.0, -0.0001926422119140625, 0.0, -0.0003499984450172633, 0.0, -3.814697265625e-06, -0.025449752807617188, -1.52587890625e-05, 0.0, -0.0018267631530761719, -2.861022494471399e-06]}, {"score": -3.6403706701923895, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -1.7567634582519531, -6.103515625e-05, -3.4332275390625e-05, -3.62396240234375e-05, -0.00067901611328125, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0002904708089772612, -1.1920928244535389e-07, -7.62939453125e-06, -0.04046344757080078, -0.009305953979492188, -1.1444091796875e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0001239776611328125, 0.0, -0.0002509355254005641, 0.0, -1.9073486328125e-06, -0.2876577377319336, -3.0517578125e-05, 0.0, -0.002912163734436035, -5.483625955093885e-06, -0.003475189208984375, -0.7678146362304688, -0.118316650390625, 0.0, -0.00036346912384033203, 0.0, -0.020680904388427734, -0.00012791156768798828]}, {"score": -4.056599594139001, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -1.7567634582519531, -6.103515625e-05, -3.4332275390625e-05, -3.62396240234375e-05, -0.00067901611328125, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0002904708089772612, -1.1920928244535389e-07, -7.62939453125e-06, -0.04046344757080078, -0.009305953979492188, -1.1444091796875e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0001239776611328125, 0.0, -0.0002509355254005641, 0.0, -1.9073486328125e-06, -0.2876577377319336, -3.0517578125e-05, 0.0, -0.002912163734436035, -5.483625955093885e-06, -0.003475189208984375, -0.6275501251220703, -5.91278076171875e-05, 0.0, -0.0003662109375, 0.0, -0.5951070785522461, 0.0, -9.918212890625e-05, 0.0, -0.06159142032265663, -1.1920928244535389e-07, -1.9073486328125e-06, -0.03875732421875]}, {"score": -4.275022688737174, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole1": "draw", "_type": "Template9", "hole0": {"_type": "Name", "id": "player"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -1.7567634582519531, -6.103515625e-05, -3.4332275390625e-05, -3.62396240234375e-05, -0.00067901611328125, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0002904708089772612, -1.1920928244535389e-07, -7.62939453125e-06, -0.04046344757080078, -0.009305953979492188, -1.1444091796875e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0001239776611328125, 0.0, -0.0002509355254005641, 0.0, -1.9073486328125e-06, -1.708395004272461, -5.14984130859375e-05, 0.0, -0.05229997634887695, -8.463855920126662e-06, -0.03652667999267578, -0.01702117919921875, -0.009698867797851562, 0.0, -0.000809788703918457, 0.0, -0.011131763458251953, -9.34600830078125e-05]}, {"score": -4.448161090290341, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Slam", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole0": "Slam", "hole3": "COMMON"}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.8775463104248047, -9.5367431640625e-06, -8.344646857949556e-07, -9.775161743164062e-06, -2.50339189733495e-06, 0.0, -1.0729458332061768, 0.0, -0.002846240997314453, 0.0, -0.00022518634796142578, 0.0, -0.00030994415283203125, 0.0, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -0.03357505798339844, -0.0001621246337890625, -1.9073486328125e-06, -1.1444091796875e-05, -4.1961669921875e-05, -7.975061453180388e-05, -3.0517578125e-05, -6.4373016357421875e-06, 0.0, -1.71661376953125e-05, -3.24249267578125e-05, 0.0, -3.0517578125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.05566692352294922, -3.814697265625e-06, -1.52587890625e-05, -0.00011444091796875, 0.0, -0.022391438484191895, 0.0, -0.00067138671875, -0.0012645721435546875, -2.288818359375e-05, 0.0, -0.7256813049316406, 0.0, -0.0020791292190551758, -1.9073486328125e-06, -0.0008518695831298828, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.002960205078125, 0.0, -0.0030975341796875, -9.5367431640625e-06, -0.0008678436279296875, 0.0, -0.047934532165527344, 0.0, -0.00012040138244628906, -0.0001468658447265625, -0.0309295654296875, 0.0, -0.04002499580383301, -3.814697265625e-06, -0.049904823303222656, -0.001068115234375, -0.0015850067138671875, -0.0008029937744140625, -0.0005645751953125, -0.000682830810546875, -0.006107330322265625, -1.1444091796875e-05, -0.000156402587890625, -0.0006923675537109375, -3.814697265625e-06, -2.288818359375e-05, -0.003551483154296875, -5.14984130859375e-05, -0.014619827270507812, 0.0, -0.006669044494628906, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.0013775733532384038, -4.57763671875e-05, -0.015148035250604153, -2.9206275939941406e-05, -0.0027132034301757812, -0.07095527648925781, -0.000179290771484375, -0.0003719329833984375, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.001708984375, -1.71661376953125e-05, -0.11947774887084961, -1.9073486328125e-06, -0.001850128173828125, -1.33514404296875e-05, -0.0002460479736328125, 0.0, -0.0007114410400390625, 0.0, -0.032013893127441406, -4.768370445162873e-07, -0.00025463104248046875, 0.0, -1.33514404296875e-05, -0.0067729949951171875, -0.00017547607421875, -0.0019922256469726562, -3.814697265625e-06, -0.0014520883560180664, 0.0, -0.0036649703979492188, -0.02936553955078125, -6.103515625e-05, -0.03460979461669922, 0.0, -8.392333984375e-05, 0.0, -9.72747802734375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0026766459923237562, 0.0, -3.814697265625e-06, -0.00072479248046875, -0.000301361083984375, -0.000347137451171875, -0.012086868286132812, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -6.866455078125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.020797232165932655, 0.0, -9.5367431640625e-06, -0.000308990478515625, -0.000225067138671875, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -4.76837158203125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.03985319286584854, 0.0, -4.9591064453125e-05, -0.00528717041015625, -0.0006275177001953125, -5.7220458984375e-06, 0.0, -0.000171661376953125, 0.0, -0.0001926422119140625, 0.0, -0.0003480910963844508, 0.0, -3.814697265625e-06, -0.025404930114746094, -1.52587890625e-05, 0.0, -0.0018258094787597656, -2.861022494471399e-06]}, {"score": -4.804641290593395, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -3.0572781562805176, 0.0, -0.0006771087646484375, -0.000164031982421875, -5.7220458984375e-06, -0.0001373291015625, 0.0, -8.0108642578125e-05, -5.7220458984375e-06, -0.0005626678466796875, 0.0, -1.9073486328125e-06, 0.0, -0.0001544952392578125, 0.0, -9.5367431640625e-06, 0.0, -0.006544947624206543, 0.0, -5.340576171875e-05, 0.0, -0.0004884004592895508, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.01890850067138672, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.00017082662088796496, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.194793701171875, -3.814697265625e-06, -7.62939453125e-06, -0.0001239776611328125, -1.9073486328125e-06, -0.028764843940734863, 0.0, -0.00074005126953125, -0.0010929107666015625, -2.47955322265625e-05, 0.0, -0.6766901016235352, 0.0, -0.002022981643676758, -1.9073486328125e-06, -0.0008462667465209961, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.003383636474609375, 0.0, -0.0027828216552734375, -9.5367431640625e-06, -0.000942230224609375, 0.0, -0.052710533142089844, 0.0, -0.00011849403381347656, -0.0001583099365234375, -0.028036117553710938, 0.0, -0.03923153877258301, -3.814697265625e-06, -0.04067802429199219, -0.0011119842529296875, -0.00146484375, -0.0008640289306640625, -0.00061798095703125, -0.0006580352783203125, -0.0057773590087890625, -1.1444091796875e-05, -0.00014495849609375, -0.0007038116455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.0040225982666015625, -5.340576171875e-05, -0.01519012451171875, 0.0, -0.0060100555419921875, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.001349798170849681, -4.57763671875e-05, -0.01556205004453659, -2.9325485229492188e-05, -0.0027780532836914062, -0.07107925415039062, -0.000179290771484375, -0.0003757476806640625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0016880035400390625, -1.71661376953125e-05, -0.12073469161987305, -1.9073486328125e-06, -0.001857757568359375, -1.33514404296875e-05, -0.0002460479736328125, 0.0, -0.00070953369140625, 0.0, -0.03243255615234375, -4.768370445162873e-07, -0.0002536773681640625, 0.0, -1.33514404296875e-05, -0.0067138671875, -0.0001773834228515625, -0.0019893646240234375, -3.814697265625e-06, -0.0014606714248657227, 0.0, -0.0035581588745117188, -0.028499603271484375, -5.91278076171875e-05, -0.035689353942871094, 0.0, -8.392333984375e-05, 0.0, -9.72747802734375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0027054226957261562, 0.0, -3.814697265625e-06, -0.0007266998291015625, -0.000301361083984375, -0.000347137451171875, -0.012327194213867188, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -6.866455078125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.02081545628607273, 0.0, -9.5367431640625e-06, -0.0003108978271484375, -0.0002193450927734375, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -4.9591064453125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.039789699018001556, 0.0, -4.9591064453125e-05, -0.005238533020019531, -0.0006256103515625, -5.7220458984375e-06, 0.0, -0.000171661376953125, 0.0, -0.0001926422119140625, 0.0, -0.0003499984450172633, 0.0, -3.814697265625e-06, -0.02544879913330078, -1.52587890625e-05, 0.0, -0.0018267631530761719, -2.861022494471399e-06]}, {"score": -5.003706376574144, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 7, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type == MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Eq"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.20238494873046875, -3.814697265625e-06, -7.62939453125e-06, -0.0001220703125, 0.0, -0.029026150703430176, 0.0, -0.0007305145263671875, -0.001079559326171875, -2.47955322265625e-05, 0.0, -0.6722316741943359, 0.0, -0.0020220279693603516, -1.9073486328125e-06, -0.0008462667465209961, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.003368377685546875, 0.0, -0.0027904510498046875, -9.5367431640625e-06, -0.000942230224609375, 0.0, -0.052512168884277344, 0.0, -0.00011849403381347656, -0.000156402587890625, -0.028081893920898438, 0.0, -0.03923916816711426, -3.814697265625e-06, -0.04038429260253906, -0.001110076904296875, -0.001453399658203125, -0.00087738037109375, -0.0006237030029296875, -0.0006656646728515625, -0.005786895751953125, -1.1444091796875e-05, -0.00014495849609375, -0.000701904296875, -3.814697265625e-06, -2.09808349609375e-05, -0.0039920806884765625, -5.340576171875e-05, -0.015428543090820312, 0.0, -0.006047248840332031, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.0013489637058228254, -4.38690185546875e-05, -0.015651334077119827, -2.9325485229492188e-05, -0.0027875900268554688, -2.878721237182617, -3.62396240234375e-05, -0.0001068115234375, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0031528472900390625, -1.71661376953125e-05, -0.13474977016448975, -1.9073486328125e-06, -0.0016231536865234375, -7.62939453125e-06, -0.000213623046875, 0.0, -0.0003070831298828125, 0.0, -0.0312347412109375, -3.576278118089249e-07, -0.00013053417205810547, 0.0, -1.52587890625e-05, -0.005757331848144531, -0.0001201629638671875, -0.0028944015502929688, -1.9073486328125e-06, -0.0015693902969360352, 0.0, -0.0035009384155273438, -0.025061607360839844, -6.4849853515625e-05, -0.039165496826171875, 0.0, -8.0108642578125e-05, 0.0, -9.918212890625e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002575688064098358, 0.0, -5.7220458984375e-06, -0.0007343292236328125, -0.0003185272216796875, -0.000339508056640625, -0.012231826782226562, -1.1444091796875e-05, -4.00543212890625e-05, 0.0, -6.866455078125e-05, 0.0, -4.9591064453125e-05, 0.0, -0.020144853740930557, 0.0, -9.5367431640625e-06, -0.0003185272216796875, -0.0002155303955078125, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -4.76837158203125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.03981863334774971, 0.0, -4.9591064453125e-05, -0.005194664001464844, -0.000621795654296875, -5.7220458984375e-06, 0.0, -0.000171661376953125, 0.0, -0.000194549560546875, 0.0, -0.0003480910963844508, 0.0, -3.814697265625e-06, -0.025476455688476562, -1.52587890625e-05, 0.0, -0.0018305778503417969, -2.861022494471399e-06]}, {"score": -5.0770635246118445, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.BEAST and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.20238494873046875, -3.814697265625e-06, -7.62939453125e-06, -0.0001220703125, 0.0, -0.029026150703430176, 0.0, -0.0007305145263671875, -0.001079559326171875, -2.47955322265625e-05, 0.0, -0.6722316741943359, 0.0, -0.0020220279693603516, -1.9073486328125e-06, -0.0008462667465209961, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.003368377685546875, 0.0, -0.0027904510498046875, -9.5367431640625e-06, -0.000942230224609375, 0.0, -0.052512168884277344, 0.0, -0.00011849403381347656, -0.000156402587890625, -0.028081893920898438, 0.0, -0.03923916816711426, -3.814697265625e-06, -0.04038429260253906, -0.001110076904296875, -0.001453399658203125, -0.00087738037109375, -0.0006237030029296875, -0.0006656646728515625, -0.005786895751953125, -1.1444091796875e-05, -0.00014495849609375, -0.000701904296875, -3.814697265625e-06, -2.09808349609375e-05, -0.0039920806884765625, -5.340576171875e-05, -0.015428543090820312, 0.0, -0.006047248840332031, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.0013489637058228254, -4.38690185546875e-05, -0.015651334077119827, -2.9325485229492188e-05, -0.0027875900268554688, -0.07088851928710938, -0.000179290771484375, -0.0003757476806640625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.001689910888671875, -1.71661376953125e-05, -2.958683490753174, -1.9073486328125e-06, -0.011956214904785156, -0.000186920166015625, -0.0001583099365234375, 0.0, -0.0006504058837890625, 0.0, -0.03689002990722656, -4.768370445162873e-07, -0.00011181831359863281, 0.0, -2.86102294921875e-05, -0.007259368896484375, -9.1552734375e-05, -0.002285003662109375, -3.814697265625e-06, -0.0009016990079544485, 0.0, -0.0036487579345703125, -0.027088165283203125, -7.62939453125e-05, -0.07688045501708984, 0.0, -0.000102996826171875, 0.0, -0.0001201629638671875, 0.0, -9.72747802734375e-05, 0.0, -0.002626463770866394, 0.0, -5.7220458984375e-06, -0.000713348388671875, -0.000339508056640625, -0.00032806396484375, -0.014072418212890625, -9.5367431640625e-06, -4.1961669921875e-05, 0.0, -7.152557373046875e-05, 0.0, -4.76837158203125e-05, 0.0, -0.020457396283745766, 0.0, -9.5367431640625e-06, -0.000316619873046875, -0.0002193450927734375, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -5.14984130859375e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.03922361508011818, 0.0, -5.14984130859375e-05, -0.005374908447265625, -0.0006389617919921875, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -0.0001811981201171875, 0.0, -0.0003519057936500758, 0.0, -3.814697265625e-06, -0.025427818298339844, -1.71661376953125e-05, 0.0, -0.0017857551574707031, -2.861022494471399e-06]}, {"score": -5.188500141765076, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.TOTEM and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.20238494873046875, -3.814697265625e-06, -7.62939453125e-06, -0.0001220703125, 0.0, -0.029026150703430176, 0.0, -0.0007305145263671875, -0.001079559326171875, -2.47955322265625e-05, 0.0, -0.6722316741943359, 0.0, -0.0020220279693603516, -1.9073486328125e-06, -0.0008462667465209961, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.003368377685546875, 0.0, -0.0027904510498046875, -9.5367431640625e-06, -0.000942230224609375, 0.0, -0.052512168884277344, 0.0, -0.00011849403381347656, -0.000156402587890625, -0.028081893920898438, 0.0, -0.03923916816711426, -3.814697265625e-06, -0.04038429260253906, -0.001110076904296875, -0.001453399658203125, -0.00087738037109375, -0.0006237030029296875, -0.0006656646728515625, -0.005786895751953125, -1.1444091796875e-05, -0.00014495849609375, -0.000701904296875, -3.814697265625e-06, -2.09808349609375e-05, -0.0039920806884765625, -5.340576171875e-05, -0.015428543090820312, 0.0, -0.006047248840332031, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.0013489637058228254, -4.38690185546875e-05, -0.015651334077119827, -2.9325485229492188e-05, -0.0027875900268554688, -0.07088851928710938, -0.000179290771484375, -0.0003757476806640625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.001689910888671875, -1.71661376953125e-05, -2.959153652191162, 0.0, -0.0053272247314453125, -7.43865966796875e-05, -8.58306884765625e-05, 0.0, -0.00054168701171875, 0.0, -0.11273956298828125, -4.768370445162873e-07, -0.00018131732940673828, 0.0, -1.52587890625e-05, -0.008618354797363281, -0.00016021728515625, -0.0023088455200195312, -1.9073486328125e-06, -0.0006424188613891602, 0.0, -0.0042572021484375, -0.039673805236816406, -7.43865966796875e-05, -0.10042095184326172, 0.0, -0.0001068115234375, 0.0, -0.0001621246337890625, 0.0, -0.0001068115234375, 0.0, -0.0029803034849464893, 0.0, -3.814697265625e-06, -0.000728607177734375, -0.0003795623779296875, -0.0003204345703125, -0.017282485961914062, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -7.2479248046875e-05, 0.0, -4.9591064453125e-05, 0.0, -0.0205590408295393, 0.0, -9.5367431640625e-06, -0.000308990478515625, -0.0002269744873046875, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -4.9591064453125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.03949365019798279, 0.0, -4.9591064453125e-05, -0.0052852630615234375, -0.0006256103515625, -5.7220458984375e-06, 0.0, -0.000171661376953125, 0.0, -0.000194549560546875, 0.0, -0.0003480910963844508, 0.0, -3.814697265625e-06, -0.02550029754638672, -1.52587890625e-05, 0.0, -0.0018296241760253906, -2.861022494471399e-06]}, {"score": -5.879012212387124, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 165, 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 43, 106, 3, 141, "x", "<EOS>", 20, 92, 24, 112, "x", "<EOS>", 161, 7, 164, 41, 87, 16, 82, 24, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(\n            player.game, lambda x: x == target.calculate_max_health())\n        self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Lambda", "args": {"_type": "Template6", "hole0": "x"}, "body": {"_type": "Compare", "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "calculate_max_health"}}], "left": {"_type": "Name", "id": "x"}, "ops": [{"_type": "Eq"}]}}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_enemy_minion_battlecry_target"}}}, {"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.20238494873046875, -3.814697265625e-06, -7.62939453125e-06, -0.0001220703125, 0.0, -0.029026150703430176, 0.0, -0.0007305145263671875, -0.001079559326171875, -2.47955322265625e-05, 0.0, -0.7182807922363281, 0.0, -0.00103759765625, 0.0, -0.0023326873779296875, -1.9073486328125e-06, -0.0011028051376342773, -1.9073486328125e-06, -0.05590509995818138, -0.000164031982421875, -0.0002231597900390625, -0.0009765625, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0001697540283203125, 0.0, -6.866455078125e-05, -1.52587890625e-05, -0.0005931854248046875, -0.0001888275146484375, -0.0155181884765625, -0.0006122589111328125, -0.006379480939358473, -5.7816432672552764e-05, -0.5409793853759766, -0.011038780212402344, -0.6426515579223633, -9.5367431640625e-06, -0.2445240020751953, -5.7220458984375e-06, -0.0026950836181640625, -0.28711891174316406, -0.027116775512695312, -0.09134483337402344, -0.0004730224609375, -0.0003681182861328125, 0.0, -9.918212890625e-05, -1.71661376953125e-05, -0.8474215269088745, -3.814697265625e-06, -0.8745924234390259, -3.814697265625e-06, -0.08698177337646484, -0.0020599365234375, -0.008161544799804688, -1.9073486328125e-06, -0.0010662078857421875, 0.0, -0.008058547973632812, 0.0, -6.67572021484375e-05, 0.0, -0.12285900861024857, 0.0, -1.9073486328125e-06, -0.41147613525390625]}, {"score": -5.980350168258724, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.increase_health(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.20238494873046875, -3.814697265625e-06, -7.62939453125e-06, -0.0001220703125, 0.0, -0.029026150703430176, 0.0, -0.0007305145263671875, -0.001079559326171875, -2.47955322265625e-05, 0.0, -0.6722316741943359, 0.0, -0.0020220279693603516, -1.9073486328125e-06, -0.0008462667465209961, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.003368377685546875, 0.0, -0.0027904510498046875, -9.5367431640625e-06, -0.000942230224609375, 0.0, -0.052512168884277344, 0.0, -0.00011849403381347656, -0.000156402587890625, -0.028081893920898438, 0.0, -0.03923916816711426, -3.814697265625e-06, -0.04038429260253906, -0.001110076904296875, -0.001453399658203125, -0.00087738037109375, -0.0006237030029296875, -0.0006656646728515625, -0.005786895751953125, -1.1444091796875e-05, -0.00014495849609375, -0.000701904296875, -3.814697265625e-06, -2.09808349609375e-05, -0.0039920806884765625, -5.340576171875e-05, -0.015428543090820312, 0.0, -0.006047248840332031, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.0013489637058228254, -4.38690185546875e-05, -0.015651334077119827, -2.9325485229492188e-05, -0.0027875900268554688, -0.07088851928710938, -0.000179290771484375, -0.0003757476806640625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.001689910888671875, -1.71661376953125e-05, -0.1211390495300293, -1.9073486328125e-06, -0.0018558502197265625, -1.33514404296875e-05, -0.000247955322265625, 0.0, -0.00070953369140625, 0.0, -0.03255176544189453, -4.768370445162873e-07, -0.0002536773681640625, 0.0, -1.33514404296875e-05, -0.006714820861816406, -0.0001773834228515625, -0.0019922256469726562, -3.814697265625e-06, -0.0014606714248657227, 0.0, -0.003574371337890625, -0.028571128845214844, -5.91278076171875e-05, -0.03576946258544922, 0.0, -8.392333984375e-05, 0.0, -9.72747802734375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0027004277799278498, 0.0, -3.814697265625e-06, -0.0007266998291015625, -0.000301361083984375, -0.000347137451171875, -0.01233673095703125, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -6.866455078125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.020802106708288193, 0.0, -9.5367431640625e-06, -0.0003108978271484375, -0.0002193450927734375, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -4.9591064453125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -3.8464879989624023, -4.0531158447265625e-06, -1.9073486328125e-06, -0.02320575714111328]}, {"score": -6.11041399115868, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.TOTEM and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -1.3581782579421997, 0.0, -8.20159912109375e-05, -0.00028228759765625, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.58306884765625e-05, -7.62939453125e-06, -0.0007266998291015625, 0.0, -3.814697265625e-06, 0.0, -0.0001697540283203125, 0.0, -9.5367431640625e-06, 0.0, -0.006773471832275391, 0.0, -5.53131103515625e-05, 0.0, -0.0004845857620239258, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.019268035888671875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00016987293201964349, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.1963043212890625, -3.814697265625e-06, -7.62939453125e-06, -0.000125885009765625, -1.9073486328125e-06, -0.0287858247756958, 0.0, -0.00074005126953125, -0.0010929107666015625, -2.47955322265625e-05, 0.0, -0.6763105392456055, 0.0, -0.0020220279693603516, -1.9073486328125e-06, -0.0008462667465209961, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.003387451171875, 0.0, -0.002780914306640625, -9.5367431640625e-06, -0.000942230224609375, 0.0, -0.052722930908203125, 0.0, -0.00011849403381347656, -0.0001583099365234375, -0.028024673461914062, 0.0, -0.039224863052368164, -3.814697265625e-06, -0.040287017822265625, -0.0011119842529296875, -0.0014629364013671875, -0.0008640289306640625, -0.0006198883056640625, -0.0006580352783203125, -0.0057830810546875, -1.1444091796875e-05, -0.00014495849609375, -0.000701904296875, -3.814697265625e-06, -2.09808349609375e-05, -0.0040187835693359375, -5.340576171875e-05, -0.015192031860351562, 0.0, -0.0060214996337890625, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.0013499173801392317, -4.57763671875e-05, -0.015589823946356773, -2.9325485229492188e-05, -0.002780914306640625, -0.07103347778320312, -0.000179290771484375, -0.0003757476806640625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0016880035400390625, -1.71661376953125e-05, -2.958496570587158, 0.0, -0.005336761474609375, -7.43865966796875e-05, -8.58306884765625e-05, 0.0, -0.00054168701171875, 0.0, -0.11260128021240234, -4.768370445162873e-07, -0.00018227100372314453, 0.0, -1.52587890625e-05, -0.008615493774414062, -0.00016021728515625, -0.0023059844970703125, -1.9073486328125e-06, -0.0006414651870727539, 0.0, -0.004239082336425781, -0.039566993713378906, -7.43865966796875e-05, -0.10027885437011719, 0.0, -0.0001068115234375, 0.0, -0.0001621246337890625, 0.0, -0.0001068115234375, 0.0, -0.0029850590508431196, 0.0, -3.814697265625e-06, -0.000728607177734375, -0.0003795623779296875, -0.0003204345703125, -0.017274856567382812, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -7.2479248046875e-05, 0.0, -4.9591064453125e-05, 0.0, -0.020570244640111923, 0.0, -9.5367431640625e-06, -0.000308990478515625, -0.0002269744873046875, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -4.9591064453125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.03952285647392273, 0.0, -4.9591064453125e-05, -0.0052776336669921875, -0.0006275177001953125, -5.7220458984375e-06, 0.0, -0.000171661376953125, 0.0, -0.000194549560546875, 0.0, -0.0003480910963844508, 0.0, -3.814697265625e-06, -0.025498390197753906, -1.52587890625e-05, 0.0, -0.0018296241760253906, -2.861022494471399e-06]}, {"score": -6.4307686405487345, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.change_attack(2)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.20238494873046875, -3.814697265625e-06, -7.62939453125e-06, -0.0001220703125, 0.0, -0.029026150703430176, 0.0, -0.0007305145263671875, -0.001079559326171875, -2.47955322265625e-05, 0.0, -0.6722316741943359, 0.0, -0.0020220279693603516, -1.9073486328125e-06, -0.0008462667465209961, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.003368377685546875, 0.0, -0.0027904510498046875, -9.5367431640625e-06, -0.000942230224609375, 0.0, -0.052512168884277344, 0.0, -0.00011849403381347656, -0.000156402587890625, -0.028081893920898438, 0.0, -0.03923916816711426, -3.814697265625e-06, -0.04038429260253906, -0.001110076904296875, -0.001453399658203125, -0.00087738037109375, -0.0006237030029296875, -0.0006656646728515625, -0.005786895751953125, -1.1444091796875e-05, -0.00014495849609375, -0.000701904296875, -3.814697265625e-06, -2.09808349609375e-05, -0.0039920806884765625, -5.340576171875e-05, -0.015428543090820312, 0.0, -0.006047248840332031, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.0013489637058228254, -4.38690185546875e-05, -0.015651334077119827, -2.9325485229492188e-05, -0.0027875900268554688, -0.07088851928710938, -0.000179290771484375, -0.0003757476806640625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.001689910888671875, -1.71661376953125e-05, -0.1211390495300293, -1.9073486328125e-06, -0.0018558502197265625, -1.33514404296875e-05, -0.000247955322265625, 0.0, -0.00070953369140625, 0.0, -0.03255176544189453, -4.768370445162873e-07, -0.0002536773681640625, 0.0, -1.33514404296875e-05, -0.006714820861816406, -0.0001773834228515625, -0.0019922256469726562, -3.814697265625e-06, -0.0014606714248657227, 0.0, -0.003574371337890625, -0.028571128845214844, -5.91278076171875e-05, -0.03576946258544922, 0.0, -8.392333984375e-05, 0.0, -9.72747802734375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0027004277799278498, 0.0, -3.814697265625e-06, -0.0007266998291015625, -0.000301361083984375, -0.000347137451171875, -0.01233673095703125, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -6.866455078125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.020802106708288193, 0.0, -9.5367431640625e-06, -0.0003108978271484375, -0.0002193450927734375, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -4.9591064453125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -4.309613227844238, -2.3841855067985307e-07, -1.9073486328125e-06, -0.010502815246582031]}, {"score": -6.5667005123506215, "choice_history": [59, 126, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Slam", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 71, 100, 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 42, 92, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", 161, 10, 164, 46, 112, "targets", "<EOS>", 178, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 55, 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}}, {"_type": "If", "orelse": [{"hole2": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "hole1": "damage", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "body": [{"hole2": [{"_type": "Template17"}], "hole1": "change_attack", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}, {"hole2": [{"_type": "Template17"}], "hole1": "increase_health", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Slam", "hole3": "use"}, "score_history": [-5.7220458984375e-06, -7.43865966796875e-05, -0.00114530383143574, -2.2649765014648438e-06, -2.5913584977388382e-05, -1.9073486328125e-06, -2.741813204920618e-06, -8.7738037109375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.16664695739746094, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -3.6954863844584906e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -0.0012264251708984375, 0.0, -1.71661376953125e-05, 0.0, -0.43546974658966064, 0.0, -0.0005950927734375, -0.0001697540283203125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.0004253387451171875, 0.0, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.004885554313659668, 0.0, -5.14984130859375e-05, 0.0, -0.0004483461380004883, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -0.018616676330566406, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.00017249556549359113, -2.86102294921875e-05, -6.079673767089844e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.20238494873046875, -3.814697265625e-06, -7.62939453125e-06, -0.0001220703125, 0.0, -0.029026150703430176, 0.0, -0.0007305145263671875, -0.001079559326171875, -2.47955322265625e-05, 0.0, -0.6722316741943359, 0.0, -0.0020220279693603516, -1.9073486328125e-06, -0.0008462667465209961, -3.0517578125e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -0.003368377685546875, 0.0, -0.0027904510498046875, -9.5367431640625e-06, -0.000942230224609375, 0.0, -0.052512168884277344, 0.0, -0.00011849403381347656, -0.000156402587890625, -0.028081893920898438, 0.0, -0.03923916816711426, -3.814697265625e-06, -0.04038429260253906, -0.001110076904296875, -0.001453399658203125, -0.00087738037109375, -0.0006237030029296875, -0.0006656646728515625, -0.005786895751953125, -1.1444091796875e-05, -0.00014495849609375, -0.000701904296875, -3.814697265625e-06, -2.09808349609375e-05, -0.0039920806884765625, -5.340576171875e-05, -0.015428543090820312, 0.0, -0.006047248840332031, -2.0265579223632812e-06, -0.000179290771484375, 0.0, -0.0013489637058228254, -4.38690185546875e-05, -0.015651334077119827, -2.9325485229492188e-05, -0.0027875900268554688, -0.07088851928710938, -0.000179290771484375, -0.0003757476806640625, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.001689910888671875, -1.71661376953125e-05, -0.1211390495300293, -1.9073486328125e-06, -0.0018558502197265625, -1.33514404296875e-05, -0.000247955322265625, 0.0, -0.00070953369140625, 0.0, -0.03255176544189453, -4.768370445162873e-07, -0.0002536773681640625, 0.0, -1.33514404296875e-05, -0.006714820861816406, -0.0001773834228515625, -0.0019922256469726562, -3.814697265625e-06, -0.0014606714248657227, 0.0, -0.003574371337890625, -0.028571128845214844, -5.91278076171875e-05, -0.03576946258544922, 0.0, -8.392333984375e-05, 0.0, -9.72747802734375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0027004277799278498, 0.0, -3.814697265625e-06, -0.0007266998291015625, -0.000301361083984375, -0.000347137451171875, -0.01233673095703125, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -6.866455078125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.020802106708288193, 0.0, -9.5367431640625e-06, -0.0003108978271484375, -0.0002193450927734375, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -4.9591064453125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.03976323455572128, 0.0, -4.9591064453125e-05, -0.005244255065917969, -0.0006237030029296875, -5.7220458984375e-06, 0.0, -0.000171661376953125, 0.0, -0.0001926422119140625, 0.0, -0.0003499984450172633, 0.0, -3.814697265625e-06, -4.3759050369262695, -6.67572021484375e-05, 0.0, -0.033670783042907715, -2.861022494471399e-06]}], "gold_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health > player.effective_spell_damage(2\n            ) or self.target.divine_shield:\n            self.target.damage(player.effective_spell_damage(2), self)\n            player.draw()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n"}
{"beams": [{"score": -0.9299857933860878, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Silence", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Silence"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -0.8859843611717224, -0.00015770719619467854, -0.0001735687255859375, -0.0030965805053710938, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002871789038181305, -5.7220458984375e-06, -7.62939453125e-06, -0.017702102661132812, -5.7220458984375e-06, -0.0042781829833984375, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.0002938508987426758, -0.0003757476806640625, -1.9073486328125e-06, -7.62939453125e-06, -0.0002040863037109375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0006238222122192383, -8.869169687386602e-05, -1.9073486328125e-06, -0.00018143653869628906, 0.0, -0.004291164688766003, 0.0, -4.1961669921875e-05, -1.9073486328125e-05, -3.814697265625e-06, -2.0260631572455168e-06, -7.62939453125e-06, -4.05309901907458e-06, 0.0, -0.00012445083120837808, 0.0]}, {"score": -1.7853187227474265, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -0.6907092332839966, -0.0001779639715095982, -7.62939453125e-06, -0.07623100280761719, -0.0001125335693359375, -9.5367431640625e-06, -0.0003934665583074093, -1.9073486328125e-06, -3.814697265625e-06, -0.41082191467285156, -0.08307838439941406, -1.9073486328125e-06, -0.497836172580719, -0.008390665054321289, 0.0, -0.0003057718276977539, 0.0, -0.005051264073699713, 0.0, -2.288818359375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -2.501357812434435e-06, -1.9073486328125e-06, -4.5299329940462485e-06, 0.0, -0.0001799975143512711, 0.0]}, {"score": -2.2526444249571043, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Silence", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Silence())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Silence"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -0.6907092332839966, -0.0001779639715095982, -7.62939453125e-06, -0.07623100280761719, -0.0001125335693359375, -9.5367431640625e-06, -0.0003934665583074093, -1.9073486328125e-06, -3.814697265625e-06, -0.41082191467285156, -0.08307838439941406, -1.9073486328125e-06, -0.9544674158096313, -0.014550566673278809, -0.00017952261259779334, 0.0, -0.009655680507421494, 0.0, -7.2479248046875e-05, -4.38690185546875e-05, -5.7220458984375e-06, -2.621032763272524e-06, -1.9073486328125e-06, -1.7881358189697494e-06, 0.0, -0.00016462318308185786, 0.0]}, {"score": -2.691988500881955, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -0.6907092332839966, -0.0001779639715095982, -7.62939453125e-06, -0.07623100280761719, -0.0001125335693359375, -9.5367431640625e-06, -0.0003934665583074093, -1.9073486328125e-06, -3.814697265625e-06, -1.1132640838623047, -0.32114219665527344, -0.0001239776611328125, -1.71661376953125e-05, 0.0, -0.09650933742523193, -0.22154903411865234, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -1.52587890625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -0.0017588138580322266, -1.9073486328125e-06, -0.03834176063537598, -2.6702880859375e-05, -4.76837158203125e-05, 0.0, -0.0004583597183227539, -3.933906555175781e-06, 0.0, -0.0003701448440551758, 0.0, -0.11816500872373581, 0.0, -5.14984130859375e-05, -0.0001049041748046875, -7.62939453125e-06, -9.52801201492548e-07, -1.9073486328125e-06, -8.7022108345991e-06, 0.0, -0.00018857838585972786, 0.0]}, {"score": -3.3643934929459576, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 47, 114, "Null", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Null, BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -0.6907092332839966, -0.0001779639715095982, -7.62939453125e-06, -0.07623100280761719, -0.0001125335693359375, -9.5367431640625e-06, -0.0003934665583074093, -1.9073486328125e-06, -3.814697265625e-06, -1.1132640838623047, -1.430856704711914, -0.0005321502685546875, -0.004628775175660849, -7.62939453125e-06, -2.288818359375e-05, 0.0, -0.030716300010681152, -2.0265579223632812e-06, 0.0, -0.000156402587890625, 0.0, -0.004368524067103863, 0.0, -3.4332275390625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -2.739951014518738e-06, -1.9073486328125e-06, -4.52993390354095e-06, 0.0, -0.00017368016415275633, 0.0]}, {"score": -3.9213978363209137, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.MURLOC))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -0.6907092332839966, -0.0001779639715095982, -7.62939453125e-06, -0.07623100280761719, -0.0001125335693359375, -9.5367431640625e-06, -0.0003934665583074093, -1.9073486328125e-06, -3.814697265625e-06, -0.41082191467285156, -2.541482925415039, -8.7738037109375e-05, -9.5367431640625e-06, 0.0, -0.05651257187128067, -0.0016871640691533685, -1.263618378288811e-05, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0003814697265625, -9.918212890625e-05, -0.00038182735443115234, 0.0, -0.09413349628448486, -1.71661376953125e-05, -0.0005593299865722656, 0.0, -0.03491153195500374, 0.0, -0.0002498626708984375, -0.0001697540283203125, -9.5367431640625e-06, -1.4291144907474518e-06, -1.9073486328125e-06, -3.21863853969262e-06, 0.0, -0.0002237452717963606, 0.0]}, {"score": -4.3957290623561605, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -3.462977409362793, -1.358979079668643e-05, -0.9174098968505859, 0.0, -0.00028383731842041016, -0.000209808349609375, 0.0, -4.27960985689424e-05, 0.0, -0.0026050875894725323, 0.0, -5.91278076171875e-05, -2.288818359375e-05, -1.33514404296875e-05, -5.959009286016226e-07, -1.9073486328125e-06, -5.960459930065554e-07, -1.9073486328125e-06, -0.00013732837396673858, 0.0]}, {"score": -4.609554927634456, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Increase", "4", "<EOS>", 51, 130, "Weapon", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Increase4(),\n            WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Increase4"}, {"_type": "Template10", "hole0": "WeaponSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -3.36643123626709, -0.48238328099250793, 0.0, -0.1991720199584961, -1.9073486328125e-05, -0.5438326597213745, -0.001016855239868164, 0.0, -6.163101352285594e-05, 0.0, -0.004474075045436621, 0.0, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -2.4973414838314056e-06, -1.9073486328125e-06, -3.337850330353831e-06, 0.0, -0.00016545715334359556, 0.0]}, {"score": -4.628389045789838, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -3.462977409362793, -1.358979079668643e-05, -0.5102577209472656, -0.01783466339111328, -7.62939453125e-05, -9.5367431640625e-06, -0.6158581972122192, -4.1961669921875e-05, 0.0, -0.000453948974609375, -8.392333984375e-05, 0.0, -0.0016796288546174765, -1.3470649719238281e-05, 0.0, -0.00017976760864257812, 0.0, -0.00670479703694582, 0.0, -4.00543212890625e-05, -1.52587890625e-05, -9.5367431640625e-06, -8.20937566459179e-06, -1.9073486328125e-06, -5.1259767133160494e-06, 0.0, -0.00017510916222818196, 0.0]}, {"score": -5.111216690267604, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "<UNK>", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Is<UNK>(MINION_TYPE.MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "Is<UNK>"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -0.6907092332839966, -0.0001779639715095982, -7.62939453125e-06, -0.07623100280761719, -0.0001125335693359375, -9.5367431640625e-06, -0.0003934665583074093, -1.9073486328125e-06, -3.814697265625e-06, -1.1132640838623047, -0.32114219665527344, -0.0001239776611328125, -1.71661376953125e-05, 0.0, -0.09650933742523193, -1.6743192672729492, -0.0009546155924908817, -3.814697265625e-06, -0.9374065399169922, -4.76837158203125e-05, -0.0034999847412109375, -0.0001125335693359375, -0.002693772315979004, 0.0, -0.07146227359771729, -0.000213623046875, -0.000141143798828125, 0.0, -0.0009568929672241211, -4.0531158447265625e-06, 0.0, -0.0003472566604614258, 0.0, -0.10807037353515625, 0.0, -4.1961669921875e-05, -7.2479248046875e-05, -7.62939453125e-06, -1.071719452738762e-06, -1.9073486328125e-06, -1.0490329259482678e-05, 0.0, -0.0001945373514899984, 0.0]}, {"score": -5.171052787219189, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "<UNK>", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>(), MinionSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "<UNK>"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -4.8546624183654785, -0.20987005531787872, -0.001613616943359375, -0.014513969421386719, -2.09808349609375e-05, -1.9073486328125e-06, -0.01694445312023163, -5.7220458984375e-06, -1.9073486328125e-06, -0.05282878875732422, -1.1444091796875e-05, -0.002071380615234375, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -0.0004807710647583008, -0.0003414154052734375, -1.9073486328125e-06, -7.62939453125e-06, -0.0002231597900390625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0005189180374145508, -9.036063420353457e-05, -1.9073486328125e-06, -0.00017762184143066406, 0.0, -0.004447923507541418, 0.0, -4.38690185546875e-05, -2.09808349609375e-05, -3.814697265625e-06, -2.02603405341506e-06, -7.62939453125e-06, -3.933890184271149e-06, 0.0, -0.00012421241262927651, 0.0]}, {"score": -5.211951696726821, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Draw", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), MinionSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Draw"}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -3.462977409362793, -1.358979079668643e-05, -0.5102577209472656, -0.01783466339111328, -7.62939453125e-05, -9.5367431640625e-06, -0.906580924987793, -1.33514404296875e-05, -9.5367431640625e-06, -0.04454612731933594, -0.04622650146484375, -1.9073486328125e-06, -0.2040606439113617, -0.0006676912307739258, 0.0, -0.0002808570861816406, 0.0, -0.006209029350429773, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -2.5012996047735214e-06, -1.9073486328125e-06, -4.7683497541584074e-06, 0.0, -0.00018202375213149935, 0.0]}, {"score": -5.4394320375476966, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Increase", "4", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Increase4(),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Increase4"}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -3.36643123626709, -0.48238328099250793, 0.0, -0.1991720199584961, -1.9073486328125e-05, -1.3761471509933472, -0.0001811981201171875, 0.0, -5.6505035900045186e-05, 0.0, -0.00287831318564713, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.972083166241646e-06, -1.9073486328125e-06, -3.5762677725870162e-06, 0.0, -0.00016581494128331542, 0.0]}, {"score": -5.866649253343887, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Spellbreaker", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer())))\n\n    def create_minion(self, _):\n        return Minion(4, 3)\n", "model_output": {"hole4": "_", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.0005550384521484375, -2.288818359375e-05, -0.0008716583251953125, -0.0007953643798828125, -0.0003566741943359375, -7.62939453125e-06, -6.854299135738984e-05, -2.384185791015625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0013838037848472595, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.9802317840221804e-06, -7.748603820800781e-06, -5.53131103515625e-05, 0.0, -0.0001926422119140625, -0.00025177001953125, -1.9073486328125e-06, -0.0026383399963378906, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.2438317905180156e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0036468505859375, -1.9073486328125e-06, -0.6907092332839966, -0.0001779639715095982, -7.62939453125e-06, -0.07623100280761719, -0.0001125335693359375, -9.5367431640625e-06, -0.0003934665583074093, -1.9073486328125e-06, -3.814697265625e-06, -1.1132640838623047, -0.32114219665527344, -0.0001239776611328125, -1.71661376953125e-05, 0.0, -0.09650933742523193, -0.22154903411865234, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -1.52587890625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -0.0017588138580322266, -1.9073486328125e-06, -0.03834176063537598, -2.6702880859375e-05, -4.76837158203125e-05, 0.0, -0.0004583597183227539, -3.933906555175781e-06, 0.0, -0.0003701448440551758, 0.0, -2.924435615539551, -4.38690185546875e-05, -0.0007476806640625, -0.36753082275390625, -3.24249267578125e-05, -3.573368303477764e-07, 0.0, -2.1099707737448625e-05, 0.0, -0.00037806396721862257, 0.0]}, {"score": -8.626942978439729, "choice_history": [59, 124, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 4, "_type": "Template3", "hole0": "Spellbreaker", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 4, "_type": "Template8", "hole0": "Minion"}], "hole0": "Spellbreaker", "hole3": "create_minion"}, "score_history": [-0.0001068115234375, -0.000255584716796875, -9.929640509653836e-05, -5.841247457283316e-06, -2.3841312213335186e-07, -1.52587890625e-05, -0.0002184871700592339, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -7.582723617553711, -2.09808349609375e-05, -4.41074053014745e-06, -2.1457672119140625e-06, -0.0010227358434349298, -1.9073486328125e-06, -0.0005328655242919922, 0.0, -0.0001405403745593503, 0.0, -0.00029790401458740234, 0.0, -0.001056774752214551, 0.0, -3.814697265625e-05, 0.0, -1.0401420593261719, -1.192074705613777e-07, -1.9073486328125e-06, -4.4107428038842045e-06, 0.0, -0.00019562071247491986, 0.0]}], "gold_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}
{"beams": [{"score": -2.436057399834638, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.\n            MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -0.36866188049316406, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, -0.0009292510221712291, -0.042967796325683594, -3.4570634852570947e-06, -7.05718994140625e-05, -0.005377769470214844, -0.011280059814453125, -0.0040130615234375, -9.5367431640625e-06, 0.0, -0.00042307376861572266, -7.62939453125e-06, 0.0, -0.2069530487060547, -0.7372674942016602, -7.62939453125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.1004859209060669, -0.014668464660644531, -2.1457672119140625e-06, -4.38690185546875e-05, -0.0001621246337890625, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0012673139572143555, -1.9073486328125e-06, -0.5486917495727539, -0.0002460479736328125, -0.0002422332763671875, 0.0, -0.0016524791717529297, -5.841255187988281e-06, 0.0, -5.7220458984375e-05, 0.0, -0.0001207590103149414, 0.0, 0.0, -5.7220458984375e-06, -3.0517578125e-05, 0.0, 0.0, -9.894339200400282e-06, -1.1920928244535389e-07, -6.306171417236328e-05, -2.3841855067985307e-07]}, {"score": -3.1265108099805303, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.\n            PIRATE), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -0.36866188049316406, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, -0.0009292510221712291, -0.042967796325683594, -3.4570634852570947e-06, -7.05718994140625e-05, -0.005377769470214844, -0.011280059814453125, -0.0040130615234375, -9.5367431640625e-06, 0.0, -0.00042307376861572266, -7.62939453125e-06, 0.0, -0.2069530487060547, -0.7372674942016602, -7.62939453125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.1004859209060669, -0.014668464660644531, -2.1457672119140625e-06, -4.38690185546875e-05, -0.0001621246337890625, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0012673139572143555, -1.9073486328125e-06, -1.239105224609375, -3.814697265625e-06, -0.000637054443359375, 0.0, -0.0015282630920410156, -2.0265579223632812e-06, 0.0, -5.53131103515625e-05, 0.0, -0.00013959407806396484, 0.0, 0.0, -5.7220458984375e-06, -3.0517578125e-05, 0.0, 0.0, -1.025196434056852e-05, -1.1920928244535389e-07, -6.115436553955078e-05, -2.3841855067985307e-07]}, {"score": -3.3070932513996, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.\n            MURLOC))))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -0.36866188049316406, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, -0.0009292510221712291, -0.042967796325683594, -3.4570634852570947e-06, -7.05718994140625e-05, -0.005377769470214844, -0.011280059814453125, -0.0040130615234375, -9.5367431640625e-06, 0.0, -0.00042307376861572266, -7.62939453125e-06, 0.0, -1.6782588958740234, -0.003437042236328125, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, -0.0670810118317604, -0.004380702972412109, -2.503394853192731e-06, -0.0002956390380859375, -0.0001468658447265625, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.0002390146255493164, -1.9073486328125e-06, -0.7284231185913086, -0.0001773834228515625, -0.00011646747589111328, 0.0, -0.0002894401550292969, 0.0, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, 0.0, 0.0, -3.099436753473128e-06, -2.3841855067985307e-07, -6.878376007080078e-05, -3.576278118089249e-07]}, {"score": -3.525727253314969, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 51, 130, "Taunt", "Adjacent", "<EOS>", 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(TauntAdjacent(),\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "TauntAdjacent"}, {"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -0.36866188049316406, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, -0.0009292510221712291, -0.042967796325683594, -3.4570634852570947e-06, -7.05718994140625e-05, -0.005377769470214844, -0.011280059814453125, -0.0040130615234375, -9.5367431640625e-06, 0.0, -0.00042307376861572266, -7.62939453125e-06, 0.0, -0.2069530487060547, -0.6534795761108398, 0.0, -0.022146016359329224, -1.5974103212356567, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -0.22141742706298828, -5.435943603515625e-05, -1.9073486328125e-06, -3.075599670410156e-05, 0.0, -2.3365020751953125e-05, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, 0.0, -8.344646857949556e-07, -2.3841855067985307e-07, -7.450580596923828e-05, -2.3841855067985307e-07]}, {"score": -3.5624231809353404, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Taunt", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(Taunt())]), MinionSelector(picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Taunt"}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "RandomPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -1.1781501770019531, -1.9073486328125e-06, -0.20113128423690796, -0.0008026287541724741, -0.1793041229248047, -0.7574348449707031, -0.00016021728515625, -1.9073486328125e-06, -0.0023547038435935974, -3.814697265625e-06, 0.0, -9.918212890625e-05, -0.0001983642578125, -0.4463691711425781, 0.0, -0.00025177001953125, 0.0, -0.4052433967590332, -0.00048696991871111095, 0.0, -9.036064147949219e-05, 0.0, -8.583060116507113e-05, 0.0, 0.0, -7.62939453125e-06, -2.86102294921875e-05, 0.0, 0.0, -7.152555099310121e-07, -1.1920928244535389e-07, -5.352497100830078e-05, -3.576278118089249e-07]}, {"score": -3.588900435619898, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.\n            PIRATE))))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -0.36866188049316406, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, -0.0009292510221712291, -0.042967796325683594, -3.4570634852570947e-06, -7.05718994140625e-05, -0.005377769470214844, -0.011280059814453125, -0.0040130615234375, -9.5367431640625e-06, 0.0, -0.00042307376861572266, -7.62939453125e-06, 0.0, -1.6782588958740234, -0.003437042236328125, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, -0.0670810118317604, -0.004380702972412109, -2.503394853192731e-06, -0.0002956390380859375, -0.0001468658447265625, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.0002390146255493164, -1.9073486328125e-06, -1.010171890258789, -1.9073486328125e-06, -0.0002269744873046875, 0.0, -0.0004171133041381836, 0.0, 0.0, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, 0.0, -2.7418097943154862e-06, -2.3841855067985307e-07, -7.641315460205078e-05, -2.3841855067985307e-07]}, {"score": -3.5974399840809426, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Taunt", "<EOS>", 51, 130, "Minion", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(Taunt())]), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Taunt"}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "MinionSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -1.1781501770019531, -1.9073486328125e-06, -0.20113128423690796, -0.0008026287541724741, -1.8071517944335938, -1.9073486328125e-06, -0.01985417865216732, -2.682209014892578e-05, 0.0, -1.6689295080141164e-05, 0.0, -3.1232797482516617e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -1.52587890625e-05, 0.0, 0.0, -4.768370445162873e-07, -2.3841855067985307e-07, -7.641315460205078e-05, -2.3841855067985307e-07]}, {"score": -4.016249518748559, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 51, 130, "Taunt", "Selector", "<EOS>", 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(TauntSelector(),\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "TauntSelector"}, {"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -0.36866188049316406, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, -0.0009292510221712291, -0.042967796325683594, -3.4570634852570947e-06, -7.05718994140625e-05, -0.005377769470214844, -0.011280059814453125, -0.0040130615234375, -9.5367431640625e-06, 0.0, -0.00042307376861572266, -7.62939453125e-06, 0.0, -0.2069530487060547, -0.6534795761108398, 0.0, -0.022146016359329224, -2.2608933448791504, 0.0, -0.000644683837890625, 0.0, -0.04788994789123535, -2.574920654296875e-05, -1.9073486328125e-06, -2.5033950805664062e-05, 0.0, -2.1457672119140625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-05, -1.1920883480343036e-07, 0.0, -1.0728830375228426e-06, -2.3841855067985307e-07, -7.069110870361328e-05, -2.3841855067985307e-07]}, {"score": -4.140031905018006, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Taunt", "<EOS>", 41, 90, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Taunt"}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -1.1781501770019531, -1.9073486328125e-06, -0.20113128423690796, -0.0008026287541724741, -0.1793041229248047, -1.0073137283325195, -9.34600830078125e-05, -3.814697265625e-06, -0.04110659658908844, -4.00543212890625e-05, 0.0, -3.0517578125e-05, -0.0001983642578125, -9.5367431640625e-06, 0.0, -5.53131103515625e-05, -0.02059614658355713, -0.0010325908660888672, -2.0265579223632812e-06, -0.0001811981201171875, -8.20159912109375e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.00014019012451171875, -1.9073486328125e-06, -0.9175939559936523, -0.0002002716064453125, -0.0002117156982421875, 0.0, -0.13695526123046875, 0.0, -7.82012939453125e-05, 0.0, -0.06410679966211319, -0.00019751940271817148, 0.0, -7.402896881103516e-05, 0.0, -5.7816494518192485e-05, 0.0, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, 0.0, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -6.115436553955078e-05, -3.576278118089249e-07]}, {"score": -4.1600260547242485, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 51, 130, "Taunt", "Form", "<EOS>", 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(TauntForm(),\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "TauntForm"}, {"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -0.36866188049316406, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, -0.0009292510221712291, -0.042967796325683594, -3.4570634852570947e-06, -7.05718994140625e-05, -0.005377769470214844, -0.011280059814453125, -0.0040130615234375, -9.5367431640625e-06, 0.0, -0.00042307376861572266, -7.62939453125e-06, 0.0, -0.2069530487060547, -0.6534795761108398, 0.0, -0.022146016359329224, -2.0238752365112305, -2.992151894432027e-05, -0.00052642822265625, 0.0, -0.4286818504333496, -0.00010573863983154297, -1.9073486328125e-06, -3.635883331298828e-05, 0.0, -1.9550323486328125e-05, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, 0.0, 0.0, -9.536738616588991e-07, -2.3841855067985307e-07, -7.259845733642578e-05, -2.3841855067985307e-07]}, {"score": -4.22038460146122, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Taunt", "<EOS>", 41, 90, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.PIRATE),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Taunt"}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -1.1781501770019531, -1.9073486328125e-06, -0.20113128423690796, -0.0008026287541724741, -0.1793041229248047, -1.0073137283325195, -9.34600830078125e-05, -3.814697265625e-06, -0.04110659658908844, -4.00543212890625e-05, 0.0, -3.0517578125e-05, -0.0001983642578125, -9.5367431640625e-06, 0.0, -5.53131103515625e-05, -0.02059614658355713, -0.0010325908660888672, -2.0265579223632812e-06, -0.0001811981201171875, -8.20159912109375e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.00014019012451171875, -1.9073486328125e-06, -0.8161745071411133, -3.814697265625e-06, -0.001728057861328125, -1.9073486328125e-06, -0.36313343048095703, -1.1444091796875e-05, -0.01674365997314453, -0.0001220703125, -0.001622915267944336, 0.0, -9.191036224365234e-05, 0.0, -0.0001430508418707177, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.91278076171875e-05, 0.0, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -6.306171417236328e-05, -2.3841855067985307e-07]}, {"score": -4.286176513059409, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Taunt", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(Taunt())]), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Taunt"}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -1.1781501770019531, -1.9073486328125e-06, -0.20113128423690796, -0.0008026287541724741, -0.1793041229248047, -0.7574348449707031, -0.00016021728515625, -1.9073486328125e-06, -0.0023547038435935974, -3.814697265625e-06, 0.0, -9.918212890625e-05, -0.0001983642578125, -0.4463691711425781, 0.0, -0.00025177001953125, 0.0, -1.1294045448303223, -0.00010681047569960356, 0.0, -7.104873657226562e-05, 0.0, -7.557865319540724e-05, 0.0, 0.0, -9.5367431640625e-06, -3.0517578125e-05, 0.0, 0.0, -5.960462772236497e-07, -2.3841855067985307e-07, -5.161762237548828e-05, -3.576278118089249e-07]}, {"score": -4.47687105474413, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "adjacent", "<UNK>", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(adjacent<UNK>())]), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "adjacent<UNK>"}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -0.20627975463867188, -0.0041675567626953125, -6.103515625e-05, -0.016889572143554688, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0023504772689193487, -0.00018227100372314453, -0.0002956390380859375, -0.01160430908203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0008948864415287971, -0.05602610111236572, -4.088877540198155e-05, -1.9073486328125e-05, -0.0023441314697265625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001370115322060883, -3.91002104151994e-05, -0.000102996826171875, -1.1781501770019531, -1.9073486328125e-06, -1.7192529439926147, -0.6455869674682617, -0.13468848168849945, -0.06637954711914062, -1.9073486328125e-06, -0.34232962131500244, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -3.7431636883411556e-05, 0.0, 0.0, -1.33514404296875e-05, -0.0001811981201171875, 0.0, 0.0, -9.536738616588991e-07, -1.1920928244535389e-07, -5.733966827392578e-05, -1.1920928244535389e-07]}, {"score": -6.060218931457037, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Sunfury", " ", "Protector", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 165, 44, 108, 166, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 51, 130, "Taunt", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2)), Buff(ChangeHealth(2))],\n            MinionSelector(Taunt(), BothPlayer())), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Taunt"}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.00069427490234375, -0.00264739990234375, -7.82012939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.00042274597217328846, -5.14984130859375e-05, -0.0002503081923350692, -6.318092346191406e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.9339050999842584e-05, -1.1920928244535389e-07, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -0.0006763929850421846, -2.288818359375e-05, -0.0008563995361328125, -5.7220458984375e-06, -0.0035829544067382812, 0.0, -0.008091926574707031, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -9.57249867497012e-05, -3.814697265625e-06, -0.0001964569091796875, -0.007842063903808594, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.02733568288385868, -0.033872101455926895, -2.050722122192383, -0.0008478164672851562, -5.14984130859375e-05, -0.014841079711914062, -0.0002269744873046875, -6.4849853515625e-05, -7.62939453125e-06, -3.814697265625e-06, -0.010926716029644012, -0.00020825862884521484, -0.0007038116455078125, -0.0033512115478515625, -5.7220458984375e-06, -7.62939453125e-06, -6.4849853515625e-05, -0.004368488676846027, -0.10611522197723389, -1.96695291379001e-05, -1.9073486328125e-05, -0.00112152099609375, -0.00077056884765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.008934603072702885, -0.00014947917952667922, -0.0002956390380859375, -0.3400306701660156, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -0.004649201408028603, -0.04428362846374512, -7.629365427419543e-06, -6.67572021484375e-05, -0.0022401809692382812, -0.009958267211914062, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.006308684125542641, -0.00013922853395342827, -0.0002727508544921875, -0.756439208984375, -5.7220458984375e-06, -9.5367431640625e-06, -3.4332275390625e-05, -0.00571572408080101, -0.3026379346847534, -7.986990567587782e-06, -4.76837158203125e-05, -0.0022497177124023438, -0.05893707275390625, -0.0001068115234375, -3.814697265625e-06, 0.0, -0.004726074635982513, -0.0001277923583984375, -1.1920928244535389e-07, -0.5402088165283203, -0.03481101989746094, 0.0, -0.01608809269964695, -0.7260026335716248, -0.0004177093505859375, 0.0, -0.8133754730224609, -5.602836608886719e-05, 0.0, -0.0017070770263671875, 0.0, -0.09705913066864014, -5.7220458984375e-06, 0.0, -1.5616416931152344e-05, 0.0, -1.442432312614983e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, 0.0, -5.960462772236497e-07, -2.3841855067985307e-07, -8.0108642578125e-05, -1.1920928244535389e-07]}, {"score": -7.49940393985127, "choice_history": [59, 124, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Sunfury Protector", "hole3": "RARE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "SunfuryProtector", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -8.392333984375e-05, -3.3854863431770355e-05, -0.00011634149996098131, -2.002712426474318e-05, -1.1920883480343036e-07, -9.5367431640625e-06, -3.933904736186378e-06, -5.7220458984375e-06, -7.05718994140625e-05, -3.814697265625e-06, -7.327548980712891, -2.47955322265625e-05, -2.5152843591058627e-05, -5.364418029785156e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0001704647729638964, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.006212115287780762, 0.0, -0.00023984907602425665, 0.0, -8.654457633383572e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -4.1961669921875e-05, 0.0, 0.0, -1.1920928244535389e-07, -2.7418097943154862e-06, -8.666505164001137e-05, -3.099436753473128e-06, -0.12749671936035156, 0.0, -0.03289461135864258, -5.7220458984375e-06, -0.0002994537353515625, -1.71661376953125e-05, -0.0037784576416015625, 0.0]}], "gold_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Taunt())),\n            MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}
{"beams": [{"score": -2.070645099954163, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Tinkmaster", "Overspark", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Summon(\n            TinkmasterOverspark()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TinkmasterOverspark"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -0.3498520851135254, 0.0, -0.0002880096435546875, 0.0, -0.005863308906555176, 0.0, -0.13505840301513672, -3.814697265625e-06, -3.814697265625e-06, 0.0, -8.32080768304877e-05, 0.0, -3.4332275390625e-05, -0.017353057861328125, -0.00208282470703125, -5.7220458984375e-06, -0.0002689361572265625, -0.07271504402160645, -0.0002131239016307518, -1.0300655364990234, -0.0041255950927734375, 0.0, -0.006328582298010588, -0.16157758235931396, -0.08262469619512558, -0.19803237915039062, 0.0, -0.00010299518908141181, -3.254413604736328e-05, 0.0, -2.9683074899367057e-05, 0.0, -5.364416210795753e-05, 0.0, -1.9073486328125e-06, -0.0003147125244140625, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -1.3947486877441406e-05, -0.00022994805476628244, -6.381014827638865e-07, -3.123283386230469e-05]}, {"score": -2.4731199798834496, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 165, 51, 130, "Squirrel", "<EOS>", 55, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Summon(Squirrel(), 2\n            ), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Squirrel"}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -0.3498520851135254, 0.0, -0.0002880096435546875, 0.0, -0.005863308906555176, 0.0, -0.13505840301513672, -3.814697265625e-06, -3.814697265625e-06, 0.0, -8.32080768304877e-05, 0.0, -3.4332275390625e-05, -0.017353057861328125, -0.00208282470703125, -5.7220458984375e-06, -0.0002689361572265625, -0.07271504402160645, -0.0002131239016307518, -0.45131683349609375, -0.0004425048828125, -1.1444091796875e-05, -0.3742222487926483, -0.7818534970283508, -0.003810882568359375, -0.27246761322021484, 0.0, -0.0006564088398590684, -4.76837158203125e-05, 0.0, -3.552412090357393e-05, 0.0, -8.010817691683769e-05, 0.0, -1.9073486328125e-06, -0.0006542205810546875, -1.33514404296875e-05, 0.0, -2.2649765014648438e-06, -1.2040138244628906e-05, -0.0003761887492146343, -1.330787199549377e-06, -4.422664278536104e-05]}, {"score": -3.0404646678534846, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 165, 51, 130, "Squirrel", "Overspark", "<EOS>", 55, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Summon(\n            SquirrelOverspark(), 2), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "SquirrelOverspark"}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -0.3498520851135254, 0.0, -0.0002880096435546875, 0.0, -0.005863308906555176, 0.0, -0.13505840301513672, -3.814697265625e-06, -3.814697265625e-06, 0.0, -8.32080768304877e-05, 0.0, -3.4332275390625e-05, -0.017353057861328125, -0.00208282470703125, -5.7220458984375e-06, -0.0002689361572265625, -0.07271504402160645, -0.0002131239016307518, -0.45131683349609375, -0.0004425048828125, -1.1444091796875e-05, -0.3742222487926483, -1.4962729215621948, -0.07934927940368652, -0.011527061462402344, -0.03910064697265625, 0.0, -0.00014685993664897978, -5.7697296142578125e-05, 0.0, -1.4305103832157329e-05, 0.0, -5.8770117902895436e-05, 0.0, -1.9073486328125e-06, -0.0004730224609375, -1.1444091796875e-05, 0.0, -2.2649765014648438e-06, -1.2040138244628906e-05, -0.00033375981729477644, -2.0503648556768894e-08, -3.993511199951172e-05]}, {"score": -3.1803890322962616, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Tinkmaster", "Overspark", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Summon(\n            TinkmasterOverspark()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TinkmasterOverspark"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.2323861122131348, -1.9073486328125e-06, -0.000476837158203125, 0.0, -0.0041304826736450195, 0.0, -0.20917224884033203, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -8.296965825138614e-05, 0.0, -3.4332275390625e-05, -0.0138702392578125, -0.002002716064453125, -7.62939453125e-06, -0.0003032684326171875, -0.08511626720428467, -0.0002031123876804486, -1.1782312393188477, -0.004111289978027344, 0.0, -0.006235122215002775, -0.15142777562141418, -0.08558019995689392, -0.2029399871826172, -1.9073486328125e-06, -0.00010096874029841274, -3.254413604736328e-05, 0.0, -2.9683074899367057e-05, 0.0, -5.364416210795753e-05, 0.0, -1.9073486328125e-06, -0.0003147125244140625, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -1.3947486877441406e-05, -0.00023006723495200276, -1.3531534932553768e-06, -3.123283386230469e-05]}, {"score": -3.3591390451647385, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 165, 51, 130, "Squirrel", "<EOS>", 55, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Summon(Squirrel(), 2),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Squirrel"}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.2323861122131348, -1.9073486328125e-06, -0.000476837158203125, 0.0, -0.0041304826736450195, 0.0, -0.20917224884033203, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -8.296965825138614e-05, 0.0, -3.4332275390625e-05, -0.0138702392578125, -0.002002716064453125, -7.62939453125e-06, -0.0003032684326171875, -0.08511626720428467, -0.0002031123876804486, -0.3764772415161133, -0.000457763671875, -1.1444091796875e-05, -0.3705962598323822, -0.7732546329498291, -0.0037784576416015625, -0.2816295623779297, 0.0, -0.0006344866706058383, -4.76837158203125e-05, 0.0, -3.5404915252001956e-05, 0.0, -7.951214502099901e-05, 0.0, -1.9073486328125e-06, -0.0006427764892578125, -1.52587890625e-05, 0.0, -2.2649765014648438e-06, -1.2040138244628906e-05, -0.00037678462103940547, 3.3818650990724564e-07, -4.422664278536104e-05]}, {"score": -3.3888228221503596, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 165, 51, 130, "Squirrel", "Squirrel", "<EOS>", 55, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Summon(\n            SquirrelSquirrel(), 2), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "SquirrelSquirrel"}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -0.3498520851135254, 0.0, -0.0002880096435546875, 0.0, -0.005863308906555176, 0.0, -0.13505840301513672, -3.814697265625e-06, -3.814697265625e-06, 0.0, -8.32080768304877e-05, 0.0, -3.4332275390625e-05, -0.017353057861328125, -0.00208282470703125, -5.7220458984375e-06, -0.0002689361572265625, -0.07271504402160645, -0.0002131239016307518, -0.45131683349609375, -0.0004425048828125, -1.1444091796875e-05, -0.3742222487926483, -1.8446310758590698, -0.07934927940368652, -0.011527061462402344, -0.03910064697265625, 0.0, -0.00014685993664897978, -5.7697296142578125e-05, 0.0, -1.4305103832157329e-05, 0.0, -5.8770117902895436e-05, 0.0, -1.9073486328125e-06, -0.0004730224609375, -1.1444091796875e-05, 0.0, -2.2649765014648438e-06, -1.2040138244628906e-05, -0.00033375981729477644, -2.0503648556768894e-08, -3.993511199951172e-05]}, {"score": -3.8987059493701963, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Tinkmaster", "Overspark", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Tinkmaster", "Overspark", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=(Battlecry(Summon(\n            TinkmasterOverspark()), PlayerSelector()), Battlecry(Summon(\n            TinkmasterOverspark()), PlayerSelector())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TinkmasterOverspark"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TinkmasterOverspark"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -0.3498520851135254, 0.0, -0.0002880096435546875, 0.0, -0.005863308906555176, 0.0, -2.0792436599731445, -0.008105278015136719, -0.0002079010009765625, -8.58306884765625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0003324747085571289, -2.86102294921875e-05, -0.0006809234619140625, -0.1949615478515625, -0.21335411071777344, -3.814697265625e-06, -9.5367431640625e-06, -0.024205323308706284, -0.0013075884198769927, -0.0048809051513671875, -0.0030975341796875, 0.0, -0.007763504981994629, -0.23424886167049408, -0.029442206025123596, -0.04124641418457031, 0.0, -0.0001033533044392243, -2.110004425048828e-05, 0.0, -0.026012420654296875, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -0.007454633712768555, -1.9073486328125e-06, -1.33514404296875e-05, -0.04602241516113281, -0.04771900177001953, 0.0, -3.814697265625e-06, -0.018377184867858887, -0.0002217047003796324, -0.000934600830078125, -0.0001583099365234375, 0.0, -0.03738854452967644, -0.4992542862892151, -0.011615283787250519, -0.0006160736083984375, -3.814697265625e-06, -7.045269012451172e-05, -7.62939453125e-06, 0.0, -1.9431114196777344e-05, 0.0, -3.337860107421875e-05, 0.0, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, 0.0, 0.0, -5.841252459504176e-06, -1.4185901818564162e-05, -2.281565684825182e-06, -3.933906555175781e-06]}, {"score": -3.9400252481009375, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 165, 51, 130, "Squirrel", "Overspark", "<EOS>", 55, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Summon(SquirrelOverspark(\n            ), 2), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "SquirrelOverspark"}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.2323861122131348, -1.9073486328125e-06, -0.000476837158203125, 0.0, -0.0041304826736450195, 0.0, -0.20917224884033203, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -8.296965825138614e-05, 0.0, -3.4332275390625e-05, -0.0138702392578125, -0.002002716064453125, -7.62939453125e-06, -0.0003032684326171875, -0.08511626720428467, -0.0002031123876804486, -0.3764772415161133, -0.000457763671875, -1.1444091796875e-05, -0.3705962598323822, -1.5064678192138672, -0.08215869218111038, -0.011121749877929688, -0.040554046630859375, 0.0, -0.00013708521146327257, -5.5789947509765625e-05, 0.0, -1.4424312212213408e-05, 0.0, -5.8770117902895436e-05, 0.0, -1.9073486328125e-06, -0.000469207763671875, -1.1444091796875e-05, 0.0, -2.2649765014648438e-06, -1.2040138244628906e-05, -0.0003353091888129711, -3.780587576329708e-07, -3.993511199951172e-05]}, {"score": -4.060438088812589, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Tinkmaster", "Overspark", "<EOS>", 41, 89, 24, 112, "Player", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Summon(\n            TinkmasterOverspark()), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TinkmasterOverspark"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -0.3498520851135254, 0.0, -0.0002880096435546875, 0.0, -0.005863308906555176, 0.0, -0.13505840301513672, -3.814697265625e-06, -3.814697265625e-06, 0.0, -8.32080768304877e-05, 0.0, -3.4332275390625e-05, -0.017353057861328125, -0.00208282470703125, -5.7220458984375e-06, -0.0002689361572265625, -0.07271504402160645, -0.0002131239016307518, -1.0300655364990234, -0.0041255950927734375, 0.0, -0.006328582298010588, -0.16157758235931396, -0.08262469619512558, -1.7173633575439453, -0.45528125762939453, -1.9073486328125e-06, 0.0, -0.009836060926318169, -4.4226646423339844e-05, 0.0, -0.0002288818359375, -0.0001125335693359375, -3.814697265625e-06, -0.005682904273271561, -8.463848644169047e-06, 0.0, -1.1444091796875e-05, 0.0, -3.0994415283203125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, 0.0, -7.390974133159034e-06, -7.987019671418238e-06, -2.283079084008932e-06, -1.9073486328125e-06]}, {"score": -4.249801554253281, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 165, 51, 130, "Squirrel", "Squirrel", "<EOS>", 55, 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Summon(SquirrelSquirrel(),\n            2), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "SquirrelSquirrel"}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.2323861122131348, -1.9073486328125e-06, -0.000476837158203125, 0.0, -0.0041304826736450195, 0.0, -0.20917224884033203, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -8.296965825138614e-05, 0.0, -3.4332275390625e-05, -0.0138702392578125, -0.002002716064453125, -7.62939453125e-06, -0.0003032684326171875, -0.08511626720428467, -0.0002031123876804486, -0.3764772415161133, -0.000457763671875, -1.1444091796875e-05, -0.3705962598323822, -1.816244125366211, -0.08215869218111038, -0.011121749877929688, -0.040554046630859375, 0.0, -0.00013708521146327257, -5.5789947509765625e-05, 0.0, -1.4424312212213408e-05, 0.0, -5.8770117902895436e-05, 0.0, -1.9073486328125e-06, -0.000469207763671875, -1.1444091796875e-05, 0.0, -2.2649765014648438e-06, -1.2040138244628906e-05, -0.0003353091888129711, -3.780587576329708e-07, -3.993511199951172e-05]}, {"score": -4.299141770677124, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Tinkmaster", "Squirrel", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Summon(\n            TinkmasterSquirrel()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TinkmasterSquirrel"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -0.3498520851135254, 0.0, -0.0002880096435546875, 0.0, -0.005863308906555176, 0.0, -0.13505840301513672, -3.814697265625e-06, -3.814697265625e-06, 0.0, -8.32080768304877e-05, 0.0, -3.4332275390625e-05, -0.017353057861328125, -0.00208282470703125, -5.7220458984375e-06, -0.0002689361572265625, -0.07271504402160645, -0.0002131239016307518, -1.0300655364990234, -0.0041255950927734375, 0.0, -0.006328582298010588, -2.3900742530822754, -0.08262469619512558, -0.19803237915039062, 0.0, -0.00010299518908141181, -3.254413604736328e-05, 0.0, -2.9683074899367057e-05, 0.0, -5.364416210795753e-05, 0.0, -1.9073486328125e-06, -0.0003147125244140625, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -1.3947486877441406e-05, -0.00022994805476628244, -6.381014827638865e-07, -3.123283386230469e-05]}, {"score": -4.347851552552584, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Tinkmaster", "Overspark", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Tinkmaster", "Overspark", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=(Battlecry(Summon(\n            TinkmasterOverspark()), PlayerSelector()), Battlecry(Summon(\n            TinkmasterOverspark()), PlayerSelector())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TinkmasterOverspark"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TinkmasterOverspark"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.2323861122131348, -1.9073486328125e-06, -0.000476837158203125, 0.0, -0.0041304826736450195, 0.0, -1.6757526397705078, -0.006908416748046875, -0.0002899169921875, -8.58306884765625e-05, -4.9591064453125e-05, 0.0, 0.0, -0.00029850006103515625, -3.0517578125e-05, -0.00048828125, -0.17617130279541016, -0.19791030883789062, -3.814697265625e-06, -7.62939453125e-06, -0.024696944281458855, -0.0013419943861663342, -0.0053195953369140625, -0.0030364990234375, 0.0, -0.007599949836730957, -0.2389872670173645, -0.02767443098127842, -0.036025047302246094, 0.0, -0.00010049241245724261, -2.300739288330078e-05, 0.0, -0.03316307067871094, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.008105039596557617, -1.9073486328125e-06, -1.1444091796875e-05, -0.045642852783203125, -0.046332359313964844, 0.0, -3.814697265625e-06, -0.018814802169799805, -0.00021908267808612436, -0.0009517669677734375, -0.0001583099365234375, 0.0, -0.03747473284602165, -0.5015325546264648, -0.011518464423716068, -0.000598907470703125, -3.814697265625e-06, -7.236003875732422e-05, -7.62939453125e-06, 0.0, -1.9431114196777344e-05, 0.0, -3.337860107421875e-05, 0.0, 0.0, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, 0.0, -5.960461294307606e-06, -1.4185901818564162e-05, -2.160784788429737e-06, -3.933906555175781e-06]}, {"score": -4.413873741194948, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 165, 51, 130, "Squirrel", "<EOS>", 55, 41, 88, 24, 112, "Player", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Summon(Squirrel(), 2\n            ), PlayerSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Squirrel"}, {"_type": "Template17"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -0.3498520851135254, 0.0, -0.0002880096435546875, 0.0, -0.005863308906555176, 0.0, -0.13505840301513672, -3.814697265625e-06, -3.814697265625e-06, 0.0, -8.32080768304877e-05, 0.0, -3.4332275390625e-05, -0.017353057861328125, -0.00208282470703125, -5.7220458984375e-06, -0.0002689361572265625, -0.07271504402160645, -0.0002131239016307518, -0.45131683349609375, -0.0004425048828125, -1.1444091796875e-05, -0.3742222487926483, -0.7818534970283508, -0.003810882568359375, -1.444422721862793, -0.09200668334960938, -9.5367431640625e-06, 0.0, -0.11946877837181091, -5.841255187988281e-06, 0.0, -0.0016946792602539062, -1.9073486328125e-06, -0.5525913238525391, 0.0, -2.86102294921875e-05, 0.0, -0.003680809633806348, -0.0009890047367662191, -1.9073486328125e-06, -4.971027374267578e-05, -1.9073486328125e-06, -4.7802808694541454e-05, 0.0, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -4.291534423828125e-06, -3.8981415855232626e-05, -1.0431976988911629e-06, -1.1444091796875e-05]}, {"score": -4.504412426095769, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Tinkmaster", "Overspark", "Overspark", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Summon(\n            TinkmasterOversparkOverspark()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "TinkmasterOversparkOverspark"}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -0.3498520851135254, 0.0, -0.0002880096435546875, 0.0, -0.005863308906555176, 0.0, -0.13505840301513672, -3.814697265625e-06, -3.814697265625e-06, 0.0, -8.32080768304877e-05, 0.0, -3.4332275390625e-05, -0.017353057861328125, -0.00208282470703125, -5.7220458984375e-06, -0.0002689361572265625, -0.07271504402160645, -0.0002131239016307518, -1.0300655364990234, -0.0041255950927734375, 0.0, -0.006328582298010588, -0.16157758235931396, -2.661712169647217, -0.00015270657604560256, -0.052227020263671875, -1.9073486328125e-06, -9.334072819910944e-05, -2.288818359375e-05, 0.0, -3.4570664865896106e-05, 0.0, -4.088877540198155e-05, 0.0, -1.9073486328125e-06, -0.000640869140625, -9.5367431640625e-06, 0.0, -2.1457672119140625e-06, -8.106231689453125e-06, -0.0002775111934170127, -7.220660336315632e-08, -1.9788742065429688e-05]}, {"score": -5.613692302688378, "choice_history": [59, 124, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Tinkmaster", " ", "Overspark", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "LEGENDARY", "<EOS>", 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Transform", "<EOS>", 164, 41, 88, 24, 112, "Card", "Query", "<EOS>", 172, 154, "conditions", "<EOS>", 22, 108, 165, 41, 89, 24, 112, "Mana", "Cost", "<EOS>", 164, 41, 89, 24, 112, "Attribute", "<EOS>", 165, 49, 121, "attack", "<EOS>", 51, 130, "Self", "Selector", "<EOS>", 51, 130, "Is", "Minion", "<EOS>", 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('attack', SelfSelector())),\n            IsMinion()])), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Attribute"}}], "func": {"_type": "Name", "id": "ManaCost"}}, {"_type": "Template10", "hole0": "IsMinion"}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Transform"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template19"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "LEGENDARY"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 3, "hole1": 3, "_type": "Template8", "hole0": "Minion"}], "hole0": "TinkmasterOverspark", "hole3": "create_minion"}, "score_history": [-9.34600830078125e-05, -6.67572021484375e-05, -0.0006785474251955748, -0.0013183006085455418, -5.018673982704058e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000186920166015625, -0.0001354217529296875, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -8.4638240878121e-06, -4.887580871582031e-05, -9.894321920000948e-06, -3.647804260253906e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, 0.0, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -0.3498520851135254, 0.0, -0.0002880096435546875, 0.0, -0.005863308906555176, 0.0, -0.13505840301513672, -3.814697265625e-06, -3.814697265625e-06, 0.0, -8.32080768304877e-05, 0.0, -3.4332275390625e-05, -0.017353057861328125, -0.00208282470703125, -5.7220458984375e-06, -0.0002689361572265625, -2.826503038406372, -0.0007799538434483111, -0.00130462646484375, -0.3915901184082031, -0.0015354156494140625, -0.0008106231689453125, -5.7220458984375e-06, -0.0040284390561282635, -0.0039942264556884766, 0.0, -0.0002269744873046875, -7.62939453125e-06, -0.014613866806030273, -5.7220458984375e-06, -0.0014514923095703125, -6.866455078125e-05, -0.0011196136474609375, -0.0014743804931640625, -0.0005168914794921875, -3.814697265625e-06, 0.0, -0.0374910831451416, -0.003275156021118164, 0.0, -0.0003452301025390625, -0.000141143798828125, -0.0003223419189453125, 0.0, 0.0, -0.024019718170166016, -0.00021612553973682225, -0.000209808349609375, -2.288818359375e-05, -0.000202178955078125, -0.49522146582603455, -3.0517578125e-05, -0.6689252853393555, 0.0, -0.0203779898583889, -6.127357482910156e-05, 0.0, -0.0005092620849609375, -7.62939453125e-06, -0.3107593059539795, -0.06305838376283646, -1.33514404296875e-05, -0.19921875, -0.012003898620605469, -7.2479248046875e-05, 0.0, -0.004285035654902458, -2.86102294921875e-05, -3.814697265625e-06, -0.000335693359375, -7.62939453125e-06, -0.006900787353515625, 0.0, -3.0517578125e-05, 0.0, -0.000846845330670476, -0.00041505804983899, -1.9073486328125e-06, -3.4689903259277344e-05, -1.9073486328125e-06, -3.612038563005626e-05, 0.0, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.861022494471399e-06, -3.2305710192304105e-05, -2.359709469601512e-06, -1.1444091796875e-05]}], "gold_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=[Devilsaur(), Squirrel()])\n            ), MinionSelector(players=BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}
{"beams": [{"score": -2.221045938656964, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 25, 113, "True", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card.<UNK> = True\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}], "value": {"_type": "NameConstant", "value": true}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -0.5925219058990479, 0.0, -0.15016937255859375, -0.02857685089111328, -0.0013054604642093182, 0.0, -7.05718994140625e-05, -0.0028333663940429688, -2.86102294921875e-05, -8.0108642578125e-05, -8.666323992656544e-05, -1.9073486328125e-06, -0.000995635986328125, -6.29425048828125e-05, -0.0015153884887695312, -0.0006694793701171875, -0.0013215540675446391, -1.9073486328125e-06, -0.0007724761962890625, -0.000179290771484375, -1.1444091796875e-05, -1.9073486328125e-05, -0.0052165985107421875, -1.9073486328125e-06, -0.00067138671875, -1.52587890625e-05, -0.000110626220703125, 0.0, -0.0001125335693359375, 0.0, -0.000308990478515625, -2.47955322265625e-05, -0.0009747742442414165, 0.0, -0.11199045181274414, 0.0, -3.814697265625e-06, -5.14984130859375e-05, -9.5367431640625e-06, -0.1489354372024536, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -0.00032711029052734375, -6.29425048828125e-05, -0.000946044921875, 0.0, -0.0002040863037109375, -5.340576171875e-05, -0.029711008071899414, 0.0, -0.0004901885986328125, -0.000202178955078125, -5.7220458984375e-06, -9.5367431640625e-06, -0.022047042846679688, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.000263214111328125, 0.0, -0.0004024505615234375, -1.1444091796875e-05, -0.000975608651060611, 0.0, -0.008421540260314941, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.14783692359924316, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.00022220611572265625, -4.9591064453125e-05, -0.00084686279296875, 0.0]}, {"score": -3.4653968086731695, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", 25, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card.target = Null\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}], "value": {"_type": "NameConstant", "value": "Null"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -1.5284736156463623, 0.0, -0.33711814880371094, -0.05775737762451172, -9.655952453613281e-06, -3.814697265625e-06, -0.000335693359375, -8.96453857421875e-05, -0.002277374267578125, -2.09808349609375e-05, -0.001089649391360581, -1.9073486328125e-06, -0.0016961097717285156, -0.0009499788284301758, -0.001041412353515625, -0.0003509521484375, -0.00436711311340332, -1.9073486328125e-06, -0.0017299652099609375, -0.0016460418701171875, -4.76837158203125e-05, -3.24249267578125e-05, -0.08440971374511719, 0.0, -0.026018142700195312, -1.9073486328125e-05, -2.47955322265625e-05, 0.0, -0.0001392364501953125, 0.0, -0.000274658203125, -4.00543212890625e-05, -0.0011724232463166118, 0.0, -0.1040881872177124, 0.0, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.13389885425567627, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.00030612945556640625, -5.91278076171875e-05, -0.0009555816650390625, 0.0, -0.0001964569091796875, -5.14984130859375e-05, -0.029474496841430664, 0.0, -0.000507354736328125, -0.0002117156982421875, -5.7220458984375e-06, -9.5367431640625e-06, -0.022073745727539062, -1.1444091796875e-05, -8.58306884765625e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.000194549560546875, 0.0, -0.000457763671875, -1.33514404296875e-05, -0.0010493992595002055, 0.0, -0.008669376373291016, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.1522834300994873, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.000370025634765625, -5.7220458984375e-05, -0.00092315673828125, 0.0]}, {"score": -4.4747262869950575, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 25, 113, "True", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card.<UNK> = True\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}], "value": {"_type": "NameConstant", "value": true}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -0.5925219058990479, 0.0, -0.15016937255859375, -0.02857685089111328, -0.0013054604642093182, 0.0, -7.05718994140625e-05, -0.0028333663940429688, -2.86102294921875e-05, -8.0108642578125e-05, -8.666323992656544e-05, -1.9073486328125e-06, -0.000995635986328125, -6.29425048828125e-05, -0.0015153884887695312, -0.0006694793701171875, -0.0013215540675446391, -1.9073486328125e-06, -0.0007724761962890625, -0.000179290771484375, -1.1444091796875e-05, -1.9073486328125e-05, -0.0052165985107421875, -1.9073486328125e-06, -0.00067138671875, -1.52587890625e-05, -0.000110626220703125, 0.0, -0.0001125335693359375, 0.0, -0.000308990478515625, -2.47955322265625e-05, -0.0009747742442414165, 0.0, -2.347163677215576, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.1671772003173828, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -0.00033473968505859375, -5.14984130859375e-05, -0.0008754730224609375, 0.0, -0.0001983642578125, -5.53131103515625e-05, -0.03063225746154785, 0.0, -0.0004901885986328125, -0.0001888275146484375, -5.7220458984375e-06, -9.5367431640625e-06, -0.021627426147460938, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.0002651214599609375, 0.0, -0.00040435791015625, -1.1444091796875e-05, -0.0009815690573304892, 0.0, -0.008400559425354004, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.14774060249328613, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.0002231597900390625, -4.9591064453125e-05, -0.00084686279296875, 0.0]}, {"score": -4.502595328589443, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "<EOS>", 25, 114, "Null", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card. = Null\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": ""}], "value": {"_type": "NameConstant", "value": "Null"}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -1.8556749820709229, -1.0095329284667969, -0.11691856384277344, -2.562999725341797e-05, -3.814697265625e-06, -0.0003566741943359375, -0.0001392364501953125, -0.0008335113525390625, -3.0517578125e-05, -0.0014821819495409727, -1.9073486328125e-06, -0.0018296241760253906, -0.0011082887649536133, -0.0016727447509765625, -0.0003757476806640625, -0.002886176109313965, -1.9073486328125e-06, -0.0011157989501953125, -0.0010929107666015625, -3.4332275390625e-05, -3.0517578125e-05, -0.08000373840332031, 0.0, -0.010986328125, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.000278472900390625, -4.1961669921875e-05, -0.001143932226113975, 0.0, -0.09912776947021484, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -1.1444091796875e-05, -0.1346796751022339, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.0003070831298828125, -6.103515625e-05, -0.000949859619140625, 0.0, -0.0001964569091796875, -5.14984130859375e-05, -0.029532670974731445, 0.0, -0.0005035400390625, -0.0002117156982421875, -5.7220458984375e-06, -9.5367431640625e-06, -0.021968841552734375, -1.1444091796875e-05, -8.58306884765625e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.00019073486328125, 0.0, -0.0004711151123046875, -1.33514404296875e-05, -0.0010601280955597758, 0.0, -0.008705615997314453, 0.0, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.15691614151000977, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00043773651123046875, -5.91278076171875e-05, -0.000949859619140625, 0.0]}, {"score": -4.777526536807265, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 57, 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card. = range(0, 3)\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": ""}], "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template19"}], "func": {"_type": "Name", "id": "range"}}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -1.8556749820709229, -0.9364614486694336, -0.016206741333007812, -0.0009765625, -3.814697265625e-06, -0.15111349523067474, 0.0, -0.004917144775390625, -0.00042438507080078125, -9.5367431640625e-05, -0.00026774394791573286, -1.2993811651540454e-05, -0.06179332733154297, -0.04479026794433594, -0.04526042938232422, -0.012371063232421875, -6.4849853515625e-05, -0.000916803430300206, -6.794917680963408e-06, -0.000537872314453125, -1.9073486328125e-06, -0.004271507263183594, -0.00011444091796875, -0.004222512245178223, 0.0, -0.0023326873779296875, -0.0012149810791015625, -7.62939453125e-06, -2.09808349609375e-05, -0.0016155242919921875, -1.9073486328125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -0.0001659393310546875, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0002231597900390625, -1.71661376953125e-05, -0.0006026026094332337, 0.0, -0.30252063274383545, 0.0, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-06, -0.14784884452819824, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -0.00032711029052734375, -6.29425048828125e-05, -0.0009670257568359375, 0.0, -0.000217437744140625, -5.340576171875e-05, -0.029912233352661133, 0.0, -0.000499725341796875, -0.0002193450927734375, -5.7220458984375e-06, -9.5367431640625e-06, -0.022275924682617188, -1.1444091796875e-05, -8.58306884765625e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.00019073486328125, 0.0, -0.000469207763671875, -9.5367431640625e-06, -0.0009701250237412751, 0.0, -0.00853872299194336, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.1559215784072876, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00033855438232421875, -5.53131103515625e-05, -0.0009002685546875, 0.0]}, {"score": -5.128686149017078, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", 27, 123, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 62, 103, 37, 149, 78, 32, 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card.target = player.game.current_player[-1]\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}], "value": {"_type": "Subscript", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}}}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -1.5284736156463623, 0.0, -1.2936372756958008, -0.006397247314453125, -4.9591064453125e-05, 0.0, -0.014035224914550781, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -0.45228099822998047, 0.0, -0.000476837158203125, -1.9073486328125e-06, -0.01791059970855713, 0.0, -0.000804901123046875, -0.044404029846191406, -0.06355857849121094, -0.0028829574584960938, -0.007460594177246094, -0.0020236968994140625, -1.1444091796875e-05, -0.045874595642089844, -6.103515625e-05, -0.0001220703125, -0.00019716210954356939, -6.079673767089844e-06, -0.0004394054412841797, -0.00012433528900146484, -0.0011224746704101562, -0.0006103515625, -0.00609660055488348, -7.62939453125e-06, -0.0038280487060546875, -0.03711700439453125, -8.392333984375e-05, -4.57763671875e-05, -0.013355255126953125, -1.9073486328125e-06, -0.027587890625, -8.96453857421875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000392913818359375, 0.0, -0.000118255615234375, -1.71661376953125e-05, -0.0009602307691238821, 0.0, -0.11080706119537354, 0.0, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-05, -0.20640277862548828, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0010652542114257812, -8.96453857421875e-05, -0.0012836456298828125, 0.0, -0.0002841949462890625, -4.9591064453125e-05, -0.032378435134887695, 0.0, -0.0005474090576171875, -0.001430511474609375, -7.62939453125e-06, -1.71661376953125e-05, -0.019265174865722656, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.00017547607421875, 0.0, -0.0005340576171875, -1.33514404296875e-05, -0.0014756916789337993, 0.0, -0.010120749473571777, 0.0, -7.62939453125e-06, -6.103515625e-05, -3.814697265625e-06, -0.2088332176208496, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0007495880126953125, -6.866455078125e-05, -0.0011072158813476562, 0.0]}, {"score": -5.148017926208915, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 27, 123, 16, 82, 16, 82, 24, 112, "attacker", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 62, 103, 37, 149, 78, 32, 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card.<UNK> = attacker.player.minions[-1]\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}], "value": {"_type": "Subscript", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "attacker"}, "attr": "player"}, "attr": "minions"}, "slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}}}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -0.5925219058990479, 0.0, -2.054636001586914, -0.0005693435668945312, -1.33514404296875e-05, 0.0, -0.08301162719726562, 0.0, -1.1444091796875e-05, 0.0, -0.583770751953125, -0.010717391967773438, -0.000396728515625, 0.0, -0.004895210266113281, -1.9073486328125e-06, -0.009900093078613281, -0.022337913513183594, -0.025028228759765625, -0.0049915313720703125, -0.0067768096923828125, -0.0031366348266601562, -3.24249267578125e-05, -0.14410018920898438, -6.67572021484375e-05, -7.82012939453125e-05, -0.00041360975592397153, -7.987022399902344e-06, -0.0004094839096069336, -1.1563301086425781e-05, -0.003063201904296875, -0.0011119842529296875, -0.001487851026467979, -5.7220458984375e-06, -0.0011959075927734375, -0.009428024291992188, -2.288818359375e-05, -3.0517578125e-05, -0.009368896484375, -3.814697265625e-06, -0.000514984130859375, -5.91278076171875e-05, -8.58306884765625e-05, -3.814697265625e-06, -0.000286102294921875, 0.0, -0.00011646747589111328, -1.9073486328125e-05, -0.0010424851207062602, 0.0, -0.12824702262878418, 0.0, -3.814697265625e-06, -0.0005664825439453125, -1.71661376953125e-05, -0.20584428310394287, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.00101470947265625, -9.1552734375e-05, -0.0012750625610351562, 0.0, -0.0002803802490234375, -4.76837158203125e-05, -0.032259225845336914, 0.0, -0.000553131103515625, -0.0014286041259765625, -7.62939453125e-06, -1.71661376953125e-05, -0.019179344177246094, -1.1444091796875e-05, -0.000110626220703125, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001773834228515625, 0.0, -0.0005321502685546875, -1.33514404296875e-05, -0.0014775990275666118, 0.0, -0.010151267051696777, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.20880305767059326, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0007476806640625, -6.866455078125e-05, -0.0011081695556640625, 0.0]}, {"score": -5.369267908261456, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 25, 113, "True", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "RARE", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card.<UNK> = True\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('RARE', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}], "value": {"_type": "NameConstant", "value": true}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "RARE", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -0.5925219058990479, 0.0, -0.15016937255859375, -0.02857685089111328, -0.0013054604642093182, 0.0, -7.05718994140625e-05, -0.0028333663940429688, -2.86102294921875e-05, -8.0108642578125e-05, -8.666323992656544e-05, -1.9073486328125e-06, -0.000995635986328125, -6.29425048828125e-05, -0.0015153884887695312, -0.0006694793701171875, -0.0013215540675446391, -1.9073486328125e-06, -0.0007724761962890625, -0.000179290771484375, -1.1444091796875e-05, -1.9073486328125e-05, -0.0052165985107421875, -1.9073486328125e-06, -0.00067138671875, -1.52587890625e-05, -0.000110626220703125, 0.0, -0.0001125335693359375, 0.0, -0.000308990478515625, -2.47955322265625e-05, -0.0009747742442414165, 0.0, -0.11199045181274414, 0.0, -3.814697265625e-06, -5.14984130859375e-05, -9.5367431640625e-06, -0.1489354372024536, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -0.00032711029052734375, -6.29425048828125e-05, -0.000946044921875, 0.0, -0.0002040863037109375, -5.340576171875e-05, -0.029711008071899414, 0.0, -0.0004901885986328125, -0.000202178955078125, -5.7220458984375e-06, -9.5367431640625e-06, -0.022047042846679688, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.000263214111328125, 0.0, -0.0004024505615234375, -1.1444091796875e-05, -0.000975608651060611, 0.0, -0.008421540260314941, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.295825242996216, 0.0, -0.000148773193359375, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.0002269744873046875, -3.62396240234375e-05, -0.0009517669677734375, 0.0]}, {"score": -5.415091005432252, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 25, 113, "True", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card.<UNK> = True\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}], "value": {"_type": "NameConstant", "value": true}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -0.5925219058990479, 0.0, -0.15016937255859375, -0.02857685089111328, -0.0013054604642093182, 0.0, -7.05718994140625e-05, -0.0028333663940429688, -2.86102294921875e-05, -8.0108642578125e-05, -8.666323992656544e-05, -1.9073486328125e-06, -0.000995635986328125, -6.29425048828125e-05, -0.0015153884887695312, -0.0006694793701171875, -0.0013215540675446391, -1.9073486328125e-06, -0.0007724761962890625, -0.000179290771484375, -1.1444091796875e-05, -1.9073486328125e-05, -0.0052165985107421875, -1.9073486328125e-06, -0.00067138671875, -1.52587890625e-05, -0.000110626220703125, 0.0, -0.0001125335693359375, 0.0, -0.000308990478515625, -2.47955322265625e-05, -0.0009747742442414165, 0.0, -0.11199045181274414, 0.0, -3.814697265625e-06, -5.14984130859375e-05, -9.5367431640625e-06, -3.342243194580078, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.000308990478515625, -5.14984130859375e-05, -0.0010967254638671875, 0.0, -0.0002574920654296875, -5.91278076171875e-05, -0.02917313575744629, 0.0, -0.00046539306640625, -0.00020599365234375, -5.7220458984375e-06, -9.5367431640625e-06, -0.022333145141601562, -1.33514404296875e-05, -8.392333984375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.000263214111328125, 0.0, -0.0004062652587890625, -1.1444091796875e-05, -0.0009644029196351767, 0.0, -0.008412957191467285, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.1486741304397583, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.0002231597900390625, -4.76837158203125e-05, -0.0008449554443359375, 0.0]}, {"score": -5.59757884192549, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 27, 123, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 62, 103, 37, 149, 78, 32, 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card.<UNK> = player.game.current_player[-1]\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}], "value": {"_type": "Subscript", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}}}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -0.5925219058990479, 0.0, -2.054636001586914, -0.0005693435668945312, -1.33514404296875e-05, 0.0, -0.08301162719726562, 0.0, -1.1444091796875e-05, 0.0, -1.0273017883300781, 0.0, -0.0007401704788208008, 0.0, -0.010627150535583496, 0.0, -0.0008764266967773438, -0.046393394470214844, -0.06729507446289062, -0.0029277801513671875, -0.014108657836914062, -0.00220489501953125, -9.5367431640625e-06, -0.040615081787109375, -8.58306884765625e-05, -9.72747802734375e-05, -0.00021277791529428214, -7.987022399902344e-06, -0.0004584789276123047, -0.00013577938079833984, -0.0010423660278320312, -0.000591278076171875, -0.0067770471796393394, -7.62939453125e-06, -0.0036869049072265625, -0.04144477844238281, -8.58306884765625e-05, -4.57763671875e-05, -0.011768341064453125, -1.9073486328125e-06, -0.027158737182617188, -8.7738037109375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -0.0001201629638671875, -1.71661376953125e-05, -0.000969529093708843, 0.0, -0.1116710901260376, 0.0, -5.7220458984375e-06, -0.0007419586181640625, -1.9073486328125e-05, -0.2079094648361206, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0010747909545898438, -9.1552734375e-05, -0.0012836456298828125, 0.0, -0.000286102294921875, -4.9591064453125e-05, -0.0325624942779541, 0.0, -0.0005435943603515625, -0.001430511474609375, -7.62939453125e-06, -1.71661376953125e-05, -0.019272804260253906, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.00017547607421875, 0.0, -0.0005359649658203125, -1.33514404296875e-05, -0.0014756916789337993, 0.0, -0.010103583335876465, 0.0, -7.62939453125e-06, -6.103515625e-05, -3.814697265625e-06, -0.20885396003723145, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0007505416870117188, -6.866455078125e-05, -0.0011072158813476562, 0.0]}, {"score": -5.611185041592755, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 19, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 25, 113, "True", "<EOS>", 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>():\n            card.<UNK> = True\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}], "value": {"_type": "NameConstant", "value": true}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -0.3350353240966797, -0.0013217926025390625, -0.00022125244140625, -5.7220458984375e-06, -0.0001468658447265625, -1.52587890625e-05, -0.022730588912963867, -5.7220458984375e-06, -0.002457140712067485, -1.3470649719238281e-05, -0.00173187255859375, -0.008715629577636719, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005512237548828125, -1.9073486328125e-06, -0.000659942626953125, 0.0, -0.01410984992980957, 0.0, -0.5925219058990479, 0.0, -0.15016937255859375, -0.02857685089111328, -0.0013054604642093182, 0.0, -7.05718994140625e-05, -0.0028333663940429688, -2.86102294921875e-05, -8.0108642578125e-05, -8.666323992656544e-05, -1.9073486328125e-06, -0.000995635986328125, -6.29425048828125e-05, -0.0015153884887695312, -0.0006694793701171875, -0.0013215540675446391, -1.9073486328125e-06, -0.0007724761962890625, -0.000179290771484375, -1.1444091796875e-05, -1.9073486328125e-05, -0.0052165985107421875, -1.9073486328125e-06, -0.00067138671875, -1.52587890625e-05, -0.000110626220703125, 0.0, -0.0001125335693359375, 0.0, -0.000308990478515625, -2.47955322265625e-05, -0.0009747742442414165, 0.0, -0.11199045181274414, 0.0, -3.814697265625e-06, -5.14984130859375e-05, -9.5367431640625e-06, -0.1489354372024536, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -0.00032711029052734375, -6.29425048828125e-05, -0.000946044921875, 0.0, -0.0002040863037109375, -5.340576171875e-05, -0.029711008071899414, 0.0, -0.0004901885986328125, -0.000202178955078125, -5.7220458984375e-06, -9.5367431640625e-06, -0.022047042846679688, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.000263214111328125, 0.0, -0.0004024505615234375, -1.1444091796875e-05, -0.000975608651060611, 0.0, -0.008421540260314941, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.537865400314331, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.00023174285888671875, -5.14984130859375e-05, -0.0009555816650390625, 0.0]}, {"score": -5.858444163089182, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 18, 85, 5, 167, 41, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 38, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", 41, 87, 16, 82, 16, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", "is_minion", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", 27, 123, 16, 82, 16, 82, 24, 112, "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 62, 103, 37, 149, 78, 32, 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>() and len(self.player.minions\n            ) < 7 and card.target and card.target.is_minion():\n            card.target = target.player.minions[-1]\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}], "value": {"_type": "Subscript", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "player"}, "attr": "minions"}, "slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}}}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}, {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}, "attr": "is_minion"}}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -1.258810043334961, -0.000152587890625, -0.001068115234375, -0.39686012268066406, -0.0002040863037109375, -0.000499725341796875, -7.2479248046875e-05, -5.340576171875e-05, -0.0001583099365234375, -0.0001087188720703125, -0.14031124114990234, -5.7220458984375e-06, -0.040703773498535156, -1.9073486328125e-05, -0.03276538848876953, -0.000354766845703125, -0.0038585662841796875, -0.00795745849609375, -3.814697265625e-05, -2.47955322265625e-05, -0.0025986433029174805, 0.0, -0.0001201629638671875, -0.005486488342285156, 0.0, -0.029876708984375, 0.0, -6.67572021484375e-05, 0.0, -0.02009105682373047, -0.00026214122772216797, -0.0011157989501953125, 0.0, -0.00052642822265625, -3.814697265625e-06, -0.000152587890625, -0.012849807739257812, -2.86102294921875e-05, -7.82012939453125e-05, -1.9073486328125e-05, -0.0009512901306152344, -5.91278076171875e-05, -0.0033216476440429688, -1.9073486328125e-06, -0.00289154052734375, 0.0, -0.013357162475585938, 0.0, -0.0014505386352539062, 0.0, -0.000415802001953125, -0.00223541259765625, -3.4332275390625e-05, 0.0, -0.2918434143066406, 0.0, -0.00199127197265625, -1.9073486328125e-06, -0.00865185260772705, -2.384185791015625e-06, -0.009537100791931152, 0.0, -0.08601462841033936, 0.0, -0.3504343032836914, -0.05097484588623047, -1.9073486328125e-06, -2.47955322265625e-05, -1.0089836120605469, -5.7220458984375e-06, -0.000240325927734375, 0.0, -0.024353981018066406, 0.0, -0.007429003715515137, 0.0, -0.0725870132446289, -0.001651763916015625, -3.0517578125e-05, 0.0, -0.0030994415283203125, 0.0, -0.0031280517578125, 0.0, -0.6636066436767578, -3.933906555175781e-06, -0.0011237859725952148, 0.0, -0.0029020309448242188, -1.9073486328125e-06, -0.0032596588134765625, -0.014309883117675781, -0.02538013458251953, -0.0028018951416015625, -0.0060482025146484375, -0.0038709640502929688, -2.09808349609375e-05, -0.041901588439941406, -4.76837158203125e-05, -7.82012939453125e-05, -0.0003151672426611185, -1.251697449333733e-05, -0.00038421154022216797, -1.3470649719238281e-05, -0.004374504089355469, -0.0009708404541015625, -0.00146996951662004, -5.7220458984375e-06, -0.0010585784912109375, -0.010101318359375, -1.71661376953125e-05, -3.0517578125e-05, -0.010189056396484375, -5.7220458984375e-06, -0.00054168701171875, -8.58306884765625e-05, -8.96453857421875e-05, -3.814697265625e-06, -0.000263214111328125, 0.0, -0.00011456012725830078, -1.71661376953125e-05, -0.0009579657344147563, 0.0, -0.11539328098297119, 0.0, -3.814697265625e-06, -0.000484466552734375, -1.71661376953125e-05, -0.19482219219207764, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0009298324584960938, -8.96453857421875e-05, -0.0012884140014648438, 0.0, -0.0002689361572265625, -4.57763671875e-05, -0.0303957462310791, 0.0, -0.00058746337890625, -0.0014629364013671875, -7.62939453125e-06, -1.52587890625e-05, -0.01910400390625, -1.1444091796875e-05, -0.000110626220703125, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.000179290771484375, 0.0, -0.000518798828125, -1.52587890625e-05, -0.0014754533767700195, 0.0, -0.010396242141723633, 0.0, -7.62939453125e-06, -6.67572021484375e-05, -3.814697265625e-06, -0.20895147323608398, -1.9073486328125e-06, -8.20159912109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000736236572265625, -6.866455078125e-05, -0.0011119842529296875, 0.0]}, {"score": -7.479634573131975, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 18, 85, 5, 167, 41, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 38, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", 41, 87, 16, 82, 16, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", "is_minion", "<EOS>", 179, 76, 146, 28, 130, "Vaporize", "<EOS>", "summon", "<EOS>", 166, 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", 27, 123, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 62, 103, 37, 149, 78, 32, 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>() and len(self.player.minions\n            ) < 7 and card.target and card.target.is_minion():\n            Vaporize().summon(player.game, len(self.player.minions), len(\n                self.player.minions))\n            card.target = self.player.minions[-1]\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "Vaporize"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}], "value": {"_type": "Subscript", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}, "slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}}}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}, {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}, "attr": "is_minion"}}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -1.258810043334961, -0.000152587890625, -0.001068115234375, -0.39686012268066406, -0.0002040863037109375, -0.000499725341796875, -7.2479248046875e-05, -5.340576171875e-05, -0.0001583099365234375, -0.0001087188720703125, -0.14031124114990234, -5.7220458984375e-06, -0.040703773498535156, -1.9073486328125e-05, -0.03276538848876953, -0.000354766845703125, -0.0038585662841796875, -0.00795745849609375, -3.814697265625e-05, -2.47955322265625e-05, -0.0025986433029174805, 0.0, -0.0001201629638671875, -0.005486488342285156, 0.0, -0.029876708984375, 0.0, -6.67572021484375e-05, 0.0, -0.02009105682373047, -0.00026214122772216797, -0.0011157989501953125, 0.0, -0.00052642822265625, -3.814697265625e-06, -0.000152587890625, -0.012849807739257812, -2.86102294921875e-05, -7.82012939453125e-05, -1.9073486328125e-05, -0.0009512901306152344, -5.91278076171875e-05, -0.0033216476440429688, -1.9073486328125e-06, -0.00289154052734375, 0.0, -0.013357162475585938, 0.0, -0.0014505386352539062, 0.0, -0.000415802001953125, -0.00223541259765625, -3.4332275390625e-05, 0.0, -0.2918434143066406, 0.0, -0.00199127197265625, -1.9073486328125e-06, -0.00865185260772705, -2.384185791015625e-06, -0.009537100791931152, 0.0, -0.08601462841033936, 0.0, -1.353872299194336, -0.0014362335205078125, -0.0012874603271484375, -0.0007305145263671875, -0.000102996826171875, -0.5990079641342163, -0.08198213577270508, -0.010860320180654526, -0.0001811981201171875, -0.0001678466796875, -0.0010204315185546875, -4.57763671875e-05, -0.000354766845703125, 0.0, -0.16169357299804688, 0.0, -0.0001468658447265625, 0.0, -2.47955322265625e-05, -0.0008144378662109375, -5.7220458984375e-06, 0.0, -0.00012218952178955078, 0.0, -0.0005512237548828125, -4.1961669921875e-05, 0.0, -0.005756378173828125, 0.0, -0.00112152099609375, 0.0, -0.0031881332397460938, -9.191036224365234e-05, -0.0001678466796875, 0.0, -0.000186920166015625, -5.7220458984375e-06, -0.023328781127929688, -0.7355184555053711, -5.7220458984375e-06, 0.0, -0.000736236572265625, 0.0, -0.0002498626708984375, -1.9073486328125e-05, 0.0, -0.004985809326171875, -1.9073486328125e-06, -0.09775161743164062, 0.0, -0.02009868621826172, -6.818770634708926e-05, -0.0006809234619140625, 0.0, -0.0001201629638671875, -3.814697265625e-06, -0.45642662048339844, -1.9073486328125e-06, -3.24249267578125e-05, -0.004519462585449219, -2.86102294921875e-05, -0.0006256103515625, 0.0, -0.0035865306854248047, -1.1920928244535389e-07, -0.0027924776077270508, 0.0, -0.02486896514892578, -0.0004558563232421875, -4.9591064453125e-05, 0.0, -0.0023250579833984375, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.22704315185546875, -4.6253204345703125e-05, -0.0002918243408203125, 0.0, -0.0006847381591796875, -3.814697265625e-06, -0.0013608932495117188, -0.01912689208984375, -0.041351318359375, -0.0020751953125, -0.00618743896484375, -0.003360748291015625, -0.0002460479736328125, -0.001483917236328125, -3.0517578125e-05, -0.000102996826171875, -0.00036843965062871575, -1.0251998901367188e-05, -0.0007128715515136719, -1.33514404296875e-05, -0.010937690734863281, -0.000804901123046875, -0.0011472691548988223, -1.1444091796875e-05, -0.00086212158203125, -0.01568603515625, -1.52587890625e-05, -2.6702880859375e-05, -0.010555267333984375, -5.7220458984375e-06, -0.0004367828369140625, -8.20159912109375e-05, -0.0001201629638671875, -5.7220458984375e-06, -0.0002689361572265625, 0.0, -0.00011837482452392578, -2.09808349609375e-05, -0.0010018347529694438, 0.0, -0.09112226963043213, 0.0, -3.814697265625e-06, -0.0005359649658203125, -1.52587890625e-05, -0.20741808414459229, 0.0, -3.0517578125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0010051727294921875, -9.1552734375e-05, -0.00128173828125, 0.0, -0.000274658203125, -4.57763671875e-05, -0.031684160232543945, 0.0, -0.000560760498046875, -0.00141143798828125, -7.62939453125e-06, -1.71661376953125e-05, -0.019186019897460938, -1.1444091796875e-05, -0.000110626220703125, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001773834228515625, 0.0, -0.000530242919921875, -1.33514404296875e-05, -0.0014774799346923828, 0.0, -0.010218024253845215, 0.0, -7.62939453125e-06, -6.4849853515625e-05, -3.814697265625e-06, -0.208823561668396, -1.9073486328125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000743865966796875, -6.866455078125e-05, -0.001110076904296875, 0.0]}, {"score": -8.763145395999338, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 179, 70, 96, "_reveal", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 18, 85, 5, 167, 41, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 38, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", 41, 87, 16, 82, 16, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", "is_minion", "<EOS>", 178, 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", 27, 123, 16, 82, 16, 82, 24, 112, "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 62, 103, 37, 149, 78, 32, 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>", 70, 96, "activate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 165, 49, 121, "card_played", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>", 70, 96, "deactivate", "<EOS>", 2, 177, 76, 146, 16, 82, 16, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 165, 49, 121, "character_attack", "<EOS>", 38, 82, 24, 112, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.<UNK>() and len(self.player.minions\n            ) < 7 and card.target and card.target.is_minion():\n            card.target = target.player.minions[-1]\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole1": "use", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}], "value": {"_type": "Subscript", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "player"}, "attr": "minions"}, "slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}}}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}, {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}, "attr": "is_minion"}}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "_reveal"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "bind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "Template4"}, "body": [{"hole2": [{"s": "character_attack", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}], "hole1": "unbind", "_type": "Template9", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}}], "name": "deactivate"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -0.23067092895507812, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020263563783373684, -3.814697265625e-06, -8.916854858398438e-05, 0.0, -1.52587890625e-05, -0.00049591064453125, 0.0, -0.00026035308837890625, 0.0, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.036711692810058594, -0.0002117156982421875, -9.1552734375e-05, -0.023038864135742188, -1.1920928244535389e-07, -6.29425048828125e-05, -0.023748397827148438, -0.003543853759765625, -0.0004253387451171875, -3.24249267578125e-05, -1.1444091796875e-05, -0.035538554191589355, 0.0, -1.9073486328125e-06, -0.000179290771484375, -0.030323266983032227, -3.814697265625e-06, -1.1444091796875e-05, -0.017091751098632812, -0.00014495849609375, -1.258810043334961, -0.000152587890625, -0.001068115234375, -0.39686012268066406, -0.0002040863037109375, -0.000499725341796875, -7.2479248046875e-05, -5.340576171875e-05, -0.0001583099365234375, -0.0001087188720703125, -0.14031124114990234, -5.7220458984375e-06, -0.040703773498535156, -1.9073486328125e-05, -0.03276538848876953, -0.000354766845703125, -0.0038585662841796875, -0.00795745849609375, -3.814697265625e-05, -2.47955322265625e-05, -0.0025986433029174805, 0.0, -0.0001201629638671875, -0.005486488342285156, 0.0, -0.029876708984375, 0.0, -6.67572021484375e-05, 0.0, -0.02009105682373047, -0.00026214122772216797, -0.0011157989501953125, 0.0, -0.00052642822265625, -3.814697265625e-06, -0.000152587890625, -0.012849807739257812, -2.86102294921875e-05, -7.82012939453125e-05, -1.9073486328125e-05, -0.0009512901306152344, -5.91278076171875e-05, -0.0033216476440429688, -1.9073486328125e-06, -0.00289154052734375, 0.0, -0.013357162475585938, 0.0, -0.0014505386352539062, 0.0, -0.000415802001953125, -0.00223541259765625, -3.4332275390625e-05, 0.0, -0.2918434143066406, 0.0, -0.00199127197265625, -1.9073486328125e-06, -0.00865185260772705, -2.384185791015625e-06, -0.009537100791931152, 0.0, -0.08601462841033936, 0.0, -0.3504343032836914, -0.05097484588623047, -1.9073486328125e-06, -2.47955322265625e-05, -1.0089836120605469, -5.7220458984375e-06, -0.000240325927734375, 0.0, -0.024353981018066406, 0.0, -0.007429003715515137, 0.0, -0.0725870132446289, -0.001651763916015625, -3.0517578125e-05, 0.0, -0.0030994415283203125, 0.0, -0.0031280517578125, 0.0, -0.6636066436767578, -3.933906555175781e-06, -0.0011237859725952148, 0.0, -0.0029020309448242188, -1.9073486328125e-06, -0.0032596588134765625, -0.014309883117675781, -0.02538013458251953, -0.0028018951416015625, -0.0060482025146484375, -0.0038709640502929688, -2.09808349609375e-05, -0.041901588439941406, -4.76837158203125e-05, -7.82012939453125e-05, -0.0003151672426611185, -1.251697449333733e-05, -0.00038421154022216797, -1.3470649719238281e-05, -0.004374504089355469, -0.0009708404541015625, -0.00146996951662004, -5.7220458984375e-06, -0.0010585784912109375, -0.010101318359375, -1.71661376953125e-05, -3.0517578125e-05, -0.010189056396484375, -5.7220458984375e-06, -0.00054168701171875, -8.58306884765625e-05, -8.96453857421875e-05, -3.814697265625e-06, -0.000263214111328125, 0.0, -0.00011456012725830078, -1.71661376953125e-05, -0.0009579657344147563, 0.0, -0.11539328098297119, 0.0, -3.814697265625e-06, -0.000484466552734375, -1.71661376953125e-05, -0.19482219219207764, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0009298324584960938, -8.96453857421875e-05, -0.0012884140014648438, 0.0, -0.0002689361572265625, -4.57763671875e-05, -0.0303957462310791, 0.0, -0.00058746337890625, -0.0014629364013671875, -7.62939453125e-06, -1.52587890625e-05, -0.01910400390625, -1.1444091796875e-05, -0.000110626220703125, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.000179290771484375, 0.0, -0.000518798828125, -1.52587890625e-05, -0.0014754533767700195, 0.0, -0.010396242141723633, 0.0, -7.62939453125e-06, -6.67572021484375e-05, -3.814697265625e-06, -3.1134257316589355, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0008115768432617188, -7.05718994140625e-05, -0.0012674331665039062, 0.0]}, {"score": -8.864346663767712, "choice_history": [59, 127, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 177, 68, 94, 34, 139, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 177, 70, 96, "use", "<EOS>", 4, 152, 160, 0, 1, 151, "card", "<EOS>", 1, 151, "index", "<EOS>", 177, 71, 99, 18, 85, 5, 167, 41, 87, 16, 82, 24, 112, "card", "<EOS>", "<UNK>", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>", 38, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", 41, 87, 16, 82, 16, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", "is_minion", "<EOS>", 179, 76, 146, 28, 130, "Vaporize", "<EOS>", "summon", "<EOS>", 166, 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 81, 164, 38, 82, 24, 112, "card", "<EOS>", "target", "<EOS>", 27, 123, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 62, 103, 37, 149, 78, 32, 76, 145, 28, 130, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(self.player.minions) < 7\n\n    def use(self, card, index):\n        if card.<UNK>() and len(self.player.minions\n            ) < 7 and card.target and card.target.is_minion():\n            Vaporize().summon(player.game, len(self.player.minions), len(\n                self.player.minions))\n            card.target = self.player.minions[-1]\n            super().reveal()\n", "model_output": {"hole4": "player", "_type": "Template0", "hole6": [{"_type": "Return", "value": {"values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Template10", "hole0": "super"}, "attr": "can_use"}}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole7": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"_type": "If", "body": [{"hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "hole1": "summon", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "Vaporize"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}], "value": {"_type": "Subscript", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}, "slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Template18"}}}}}, {"hole1": "reveal", "_type": "Template9", "hole0": {"_type": "Template10", "hole0": "super"}}], "test": {"values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}, {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}, "attr": "is_minion"}}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "name": "use"}], "hole2": [{"_type": "Expr", "value": {"hole2": "MAGE", "hole1": 3, "_type": "Template3", "hole0": "Vaporize", "hole3": "RARE"}}], "hole1": "SecretCard", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Vaporize", "hole3": "use"}, "score_history": [-5.7220458984375e-05, -0.017991065979003906, -3.421257497393526e-05, -0.0034039439633488655, -0.0004953867755830288, -1.4185901818564162e-05, -7.62939453125e-06, -0.0002079010009765625, -0.0001125335693359375, -7.62939453125e-06, -0.000385284423828125, -9.34600830078125e-05, -7.080780778778717e-05, -9.346007573185489e-05, -6.318072337307967e-06, -1.3709068298339844e-05, -0.045798301696777344, 0.0, -0.0059337615966796875, 0.0, -0.08466243743896484, 0.0, -0.0006628036499023438, 0.0, -0.0003452301025390625, -2.6702880859375e-05, -3.814697265625e-06, -0.003007173538208008, 0.0, -0.0032224655151367188, -1.8815135955810547, -0.001262664794921875, -0.0002803802490234375, -0.0001239776611328125, -6.4849853515625e-05, -0.042044639587402344, -0.031149864196777344, -0.00453948974609375, -0.1297168731689453, 0.0, -0.017688751220703125, -0.0004215240478515625, -0.0001046628676704131, -1.537799835205078e-05, -0.020081043243408203, 0.0, 0.0, -0.14434528350830078, -3.814697265625e-06, -0.03623676300048828, 0.0, -0.0001392364501953125, -1.9073486328125e-06, -0.000316619873046875, 0.0, -0.010915756225585938, -8.7738037109375e-05, -0.037672996520996094, -0.0007953643798828125, -3.814697265625e-06, 0.0, -4.291534423828125e-06, 0.0, -5.14984130859375e-05, -0.000156402587890625, 0.0, -0.09523296356201172, 0.0, -1.52587890625e-05, 0.0, -0.008563041687011719, -0.000628352165222168, -0.000232696533203125, 0.0, -0.00020694732666015625, -1.9073486328125e-06, -1.71661376953125e-05, -0.14026832580566406, -1.52587890625e-05, -0.0001506805419921875, -9.34600830078125e-05, -0.00026869773864746094, -0.0002269744873046875, -0.08779525756835938, -0.007496833801269531, -0.000232696533203125, -0.1429646909236908, 0.0, -0.000316619873046875, -0.001178741455078125, -0.005253791809082031, -0.000438690185546875, -7.62939453125e-06, -2.288818359375e-05, -0.4585285484790802, -4.982948303222656e-05, -3.814697265625e-06, -0.000125885009765625, -0.2819119691848755, -2.6702880859375e-05, -0.0007476806640625, -0.020601272583007812, -0.0001277923583984375, -0.45618247985839844, -0.0001506805419921875, -0.0017528533935546875, -0.31013011932373047, -0.0001964569091796875, -0.001369476318359375, -0.00041294097900390625, -0.0004444122314453125, -6.67572021484375e-05, -1.33514404296875e-05, -0.04547691345214844, -2.6702880859375e-05, -0.2971522808074951, -5.7220458984375e-06, -0.08160209655761719, -0.0003871917724609375, -0.005367279052734375, -0.00485992431640625, -2.86102294921875e-05, 0.0, -0.011354804039001465, 0.0, -0.000125885009765625, -0.0008296966552734375, 0.0, -0.049869537353515625, 0.0, -0.000164031982421875, 0.0, -0.07533454895019531, -0.00024271011352539062, -0.0013179779052734375, 0.0, -0.0005216598510742188, -1.9073486328125e-06, -0.0001583099365234375, -0.014238357543945312, -3.4332275390625e-05, -6.866455078125e-05, -1.71661376953125e-05, -0.0010275840759277344, -5.7220458984375e-05, -0.0017290115356445312, -1.9073486328125e-06, -0.0022983551025390625, 0.0, -0.011572837829589844, 0.0, -0.0013713836669921875, 0.0, -0.0001621246337890625, -0.00218963623046875, -3.4332275390625e-05, 0.0, -0.27355194091796875, 0.0, -0.001918792724609375, -1.9073486328125e-06, -0.008609890937805176, -2.384185791015625e-06, -0.009262442588806152, 0.0, -0.07431873679161072, 0.0, -0.6530323028564453, -0.00177001953125, -0.0016498565673828125, -0.0007572174072265625, -8.7738037109375e-05, -0.6657378673553467, -0.0715872049331665, -0.009917493909597397, -0.0001697540283203125, -0.00016021728515625, -0.0010509490966796875, -4.76837158203125e-05, -0.0003108978271484375, 0.0, -0.19715309143066406, 0.0, -0.00014495849609375, 0.0, -2.47955322265625e-05, -0.000732421875, -5.7220458984375e-06, 0.0, -0.00013554096221923828, 0.0, -0.0005779266357421875, -4.1961669921875e-05, 0.0, -0.005641937255859375, 0.0, -0.00115203857421875, 0.0, -0.0031909942626953125, -9.191036224365234e-05, -0.0001678466796875, 0.0, -0.0001888275146484375, -5.7220458984375e-06, -0.02338695526123047, -0.7365713119506836, -5.7220458984375e-06, 0.0, -0.0007381439208984375, 0.0, -0.0002498626708984375, -1.9073486328125e-05, 0.0, -0.0049953460693359375, -1.9073486328125e-06, -0.09777641296386719, 0.0, -0.020099639892578125, -6.818770634708926e-05, -0.0006809234619140625, 0.0, -0.0001201629638671875, -3.814697265625e-06, -0.4971656799316406, -1.9073486328125e-06, -3.24249267578125e-05, -0.003875732421875, -2.86102294921875e-05, -0.0006160736083984375, 0.0, -0.003579854965209961, -1.1920928244535389e-07, -0.0027829408645629883, 0.0, -0.024712562561035156, -0.000453948974609375, -4.9591064453125e-05, 0.0, -0.0023097991943359375, -1.9073486328125e-06, -0.000202178955078125, 0.0, -0.22258663177490234, -4.6253204345703125e-05, -0.0002899169921875, 0.0, -0.0006809234619140625, -3.814697265625e-06, -0.0013675689697265625, -0.01902008056640625, -0.041413307189941406, -0.0020704269409179688, -0.00623321533203125, -0.0033540725708007812, -0.00023651123046875, -0.00159454345703125, -2.86102294921875e-05, -9.918212890625e-05, -0.0003648653510026634, -1.0251998901367188e-05, -0.0007014274597167969, -1.33514404296875e-05]}], "gold_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and attacker.is_minion(\n            ) and not attacker.removed:\n            attacker.die(self)\n            attacker.game.check_delayed()\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n"}
{"beams": [{"score": -0.05110251431178625, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.003183603286743164, 0.0, 0.0, -1.1444091796875e-05, -0.000232696533203125, -1.1920883480343036e-07, -2.264974000354414e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -0.0003256291674915701, -1.1920928244535389e-07, -0.0363006591796875, -2.47955322265625e-05, -0.008729934692382812, 0.0, -0.0001087188720703125, -4.38690185546875e-05, -2.09808349609375e-05, -7.62939453125e-06]}, {"score": -4.808869207174574, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 173, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>", 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Did", "Damage", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 56, 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True, effects=[Effect(DidDamage(),\n            ActionTag(Heal(1), HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "DidDamage"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.003183603286743164, 0.0, 0.0, -1.1444091796875e-05, -0.000232696533203125, -1.1920883480343036e-07, -2.264974000354414e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -0.0003256291674915701, -1.1920928244535389e-07, -3.339663505554199, -4.38690185546875e-05, -0.013033031485974789, -3.814697265625e-06, -0.0001430511474609375, -6.29425048828125e-05, -6.4849853515625e-05, -1.52587890625e-05, -0.0015964508056640625, -0.0034351348876953125, 0.0, -0.000701904296875, -4.57763671875e-05, -0.0002155303955078125, -0.0001430511474609375, -5.7220458984375e-06, 0.0, 0.0, -0.0019534826278686523, -9.5367431640625e-06, -3.4332275390625e-05, -0.005382537841796875, 0.0, -0.8565497398376465, -0.008615255355834961, -2.4914734240155667e-05, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00046658513019792736, -4.38690185546875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -0.002437591552734375, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.3180335760116577, -0.0003076791763305664, -5.7220458984375e-06, -0.02872753143310547, -0.04059600830078125, 0.0, -0.1800355613231659, -0.00037848949432373047, 0.0]}, {"score": -5.091815577170927, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 173, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>", 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Attack", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 56, 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True, effects=[Effect(Attack(),\n            ActionTag(Heal(1), HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Attack"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.003183603286743164, 0.0, 0.0, -1.1444091796875e-05, -0.000232696533203125, -1.1920883480343036e-07, -2.264974000354414e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -0.0003256291674915701, -1.1920928244535389e-07, -3.339663505554199, -4.38690185546875e-05, -0.013033031485974789, -3.814697265625e-06, -0.0001430511474609375, -6.29425048828125e-05, -6.4849853515625e-05, -1.52587890625e-05, -0.0015964508056640625, -0.0034351348876953125, 0.0, -0.000701904296875, -4.57763671875e-05, -0.0002155303955078125, -0.0001430511474609375, -5.7220458984375e-06, 0.0, 0.0, -0.0019534826278686523, -9.5367431640625e-06, -3.4332275390625e-05, -0.005382537841796875, 0.0, -1.3212618827819824, -0.0009222030639648438, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0018265241524204612, -7.82012939453125e-05, 0.0, -0.0001811981201171875, -0.000820159912109375, 0.0, -9.5367431640625e-06, 0.0, -0.25979161262512207, -0.00026285648345947266, -3.814697265625e-06, -0.03365325927734375, -0.02307891845703125, -1.9073486328125e-06, -0.07719825953245163, -0.00028455257415771484, 0.0]}, {"score": -5.302955503508564, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "windfury", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, windfury=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "windfury", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.003183603286743164, 0.0, 0.0, -1.1444091796875e-05, -0.000232696533203125, -1.1920883480343036e-07, -2.264974000354414e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -0.0003256291674915701, -1.1920928244535389e-07, -0.0363006591796875, -2.47955322265625e-05, -5.2600812911987305, 0.0, -0.000560760498046875, -8.20159912109375e-05, -3.4332275390625e-05, -5.7220458984375e-06]}, {"score": -5.5029496792034465, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 173, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>", 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Used", "Power", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 56, 51, 130, "Hero", "Selector", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True, effects=[Effect(UsedPower(),\n            ActionTag(Heal(1), HeroSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "UsedPower"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.003183603286743164, 0.0, 0.0, -1.1444091796875e-05, -0.000232696533203125, -1.1920883480343036e-07, -2.264974000354414e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -0.0003256291674915701, -1.1920928244535389e-07, -3.339663505554199, -4.38690185546875e-05, -0.013033031485974789, -3.814697265625e-06, -0.0001430511474609375, -6.29425048828125e-05, -6.4849853515625e-05, -1.52587890625e-05, -0.0015964508056640625, -0.0034351348876953125, 0.0, -0.000701904296875, -4.57763671875e-05, -0.0002155303955078125, -0.0001430511474609375, -5.7220458984375e-06, 0.0, 0.0, -0.0019534826278686523, -9.5367431640625e-06, -3.4332275390625e-05, -0.005382537841796875, 0.0, -1.4465880393981934, -0.06745553016662598, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0007027387619018555, -6.29425048828125e-05, -1.9073486328125e-06, -7.2479248046875e-05, -0.0015411376953125, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -0.3071826696395874, -0.0003192424774169922, -5.7220458984375e-06, -0.030546188354492188, -0.02548980712890625, 0.0, -0.2500915229320526, -0.00036704540252685547, 0.0]}, {"score": -6.292454745830206, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(2, 1, stealth=True)\n", "model_output": {"hole4": "_", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -6.245553970336914, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -0.005667686462402344, -1.1920883480343036e-07, -5.960462203802308e-06, -4.0531158447265625e-06, -4.768370445162873e-07, -0.00020549721375573426, -1.1920928244535389e-07, -0.028970718383789062, -2.86102294921875e-05, -0.009675383567810059, 0.0, -0.0001201629638671875, -3.4332275390625e-05, -2.47955322265625e-05, -1.1444091796875e-05]}, {"score": -6.693324162385487, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 2, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -6.648518085479736, 0.0, -9.965896606445312e-05, 0.0, -0.00023281574249267578, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.001362442970275879, 0.0, 0.0, -1.1444091796875e-05, -0.000213623046875, 0.0, -2.503394853192731e-06, -2.741813204920618e-06, -3.576278118089249e-07, -0.0003081108152400702, -1.1920928244535389e-07, -0.03270912170410156, -3.0517578125e-05, -0.009148478507995605, 0.0, -0.000118255615234375, -4.1961669921875e-05, -2.09808349609375e-05, -9.5367431640625e-06]}, {"score": -6.90496664561433, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 173, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>", 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Did", "Damage", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 51, 130, "Frozen", "<EOS>", 51, 130, "Target", "Selector", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True, effects=[Effect(DidDamage(),\n            ActionTag(Give(Frozen()), TargetSelector()))])\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "DidDamage"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Frozen"}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "TargetSelector"}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.003183603286743164, 0.0, 0.0, -1.1444091796875e-05, -0.000232696533203125, -1.1920883480343036e-07, -2.264974000354414e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -0.0003256291674915701, -1.1920928244535389e-07, -3.339663505554199, -4.38690185546875e-05, -0.013033031485974789, -3.814697265625e-06, -0.0001430511474609375, -6.29425048828125e-05, -6.4849853515625e-05, -1.52587890625e-05, -0.0015964508056640625, -0.0034351348876953125, 0.0, -0.000701904296875, -4.57763671875e-05, -0.0002155303955078125, -0.0001430511474609375, -5.7220458984375e-06, 0.0, 0.0, -0.0019534826278686523, -9.5367431640625e-06, -3.4332275390625e-05, -0.005382537841796875, 0.0, -0.8565497398376465, -0.008615255355834961, -2.4914734240155667e-05, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00046658513019792736, -4.38690185546875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -0.002437591552734375, -1.9073486328125e-06, -0.0001220703125, 0.0, -1.475674033164978, -7.62939453125e-06, -5.7220458984375e-06, -0.03573036193847656, -0.000194549560546875, -0.4994247555732727, -0.00017583272710908204, -0.001056671142578125, 0.0, -0.6518783569335938, -3.409374403418042e-05, 0.0]}, {"score": -8.045581812903393, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "PALADIN", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, PALADIN=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "PALADIN", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.003183603286743164, 0.0, 0.0, -1.1444091796875e-05, -0.000232696533203125, -1.1920883480343036e-07, -2.264974000354414e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -0.0003256291674915701, -1.1920928244535389e-07, -0.0363006591796875, -2.47955322265625e-05, -7.9808244705200195, -1.1920928244535389e-07, -0.022119522094726562, -0.00014495849609375, -0.00029754638671875, -3.814697265625e-06]}, {"score": -8.152749891325946, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "target_func", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, target_func=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.003183603286743164, 0.0, 0.0, -1.1444091796875e-05, -0.000232696533203125, -1.1920883480343036e-07, -2.264974000354414e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -0.0003256291674915701, -1.1920928244535389e-07, -0.0363006591796875, -2.47955322265625e-05, -8.105278015136719, 0.0, -0.005143165588378906, -7.82012939453125e-05, -5.7220458984375e-05, -1.9073486328125e-06]}, {"score": -8.269041643370336, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(2, 1, stealth=True)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.215267181396484, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0007677078247070312, -1.1920838005607948e-07, -7.152543730626348e-06, -4.172325134277344e-06, -3.576278118089249e-07, -0.0003537532174959779, -1.1920928244535389e-07, -0.04147529602050781, -2.6702880859375e-05, -0.008844614028930664, 0.0, -9.918212890625e-05, -4.00543212890625e-05, -2.47955322265625e-05, -1.1444091796875e-05]}, {"score": -8.276456997983018, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, stealth=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.003183603286743164, 0.0, 0.0, -1.1444091796875e-05, -0.000232696533203125, -1.1920883480343036e-07, -2.264974000354414e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -8.252673149108887, -2.3841855067985307e-07, -0.0029392242431640625, -1.71661376953125e-05, -0.015050530433654785, 0.0, -7.43865966796875e-05, -0.000141143798828125, -1.9073486328125e-05, -1.9073486328125e-06]}, {"score": -8.41278492879669, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "FREE"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -8.362892150878906, 0.0, -3.62396240234375e-05, 0.0, -0.0014157295227050781, 0.0, 0.0, -1.1444091796875e-05, -0.0002307891845703125, 0.0, -2.3841830625315197e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -0.00032729757367633283, -1.1920928244535389e-07, -0.036896705627441406, -2.288818359375e-05, -0.008910894393920898, 0.0, -0.000110626220703125, -4.38690185546875e-05, -2.09808349609375e-05, -7.62939453125e-06]}, {"score": -8.445633764311786, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "divine_shield", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, divine_shield=True)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.003183603286743164, 0.0, 0.0, -1.1444091796875e-05, -0.000232696533203125, -1.1920883480343036e-07, -2.264974000354414e-06, -2.1457672119140625e-06, -3.576278118089249e-07, -0.0003256291674915701, -1.1920928244535389e-07, -0.0363006591796875, -2.47955322265625e-05, -8.402603149414062, 0.0, -0.00074005126953125, -6.866455078125e-05, -2.6702880859375e-05, -3.814697265625e-06]}, {"score": -8.64795994987761, "choice_history": [59, 124, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "create_weapon", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "stealth", "<EOS>", 25, 113, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, create_weapon):\n        return Minion(2, 1, stealth=True)\n", "model_output": {"hole4": "create_weapon", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"hole2": "ALL", "hole1": 1, "_type": "Template3", "hole0": "Worgen Infiltrator", "hole3": "COMMON"}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion", "hole3": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "NameConstant", "value": true}}]}], "hole0": "WorgenInfiltrator", "hole3": "create_minion"}, "score_history": [-3.814697265625e-06, -0.000118255615234375, -2.3841830625315197e-06, -2.7417760065873154e-05, -1.5973972040228546e-05, -2.3841585061745718e-07, 0.0, -2.622604142743512e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-05, -2.098061486321967e-05, -5.352497100830078e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0013128984719514847, -1.9073486328125e-06, -6.16312026977539e-05, -1.9073486328125e-06, -0.0002434253692626953, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.577430725097656, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0005245208740234375, 0.0, -3.8146954466355965e-06, -4.172325134277344e-06, -4.768370445162873e-07, -0.0003027479979209602, -1.1920928244535389e-07, -0.058320045471191406, -2.86102294921875e-05, -0.009044528007507324, 0.0, -0.0001125335693359375, -3.62396240234375e-05, -2.288818359375e-05, -9.5367431640625e-06]}], "gold_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n"}
{"beams": [{"score": -0.8302188125686172, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -0.10625553131103516, -0.005214691162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.0001583099365234375, -0.06205117702484131, -1.3589766240329482e-05, -7.62939453125e-05, -0.6327705383300781, -0.0023651123046875, -0.0011882781982421875, -1.9073486328125e-06, 0.0, -0.0017046926077455282, -3.814697265625e-05, -0.000171661376953125, -0.0061511993408203125, -2.86102294921875e-05, -0.0004329681396484375, -7.62939453125e-06, -0.0001068115234375, 0.0, -0.0005303621292114258, -0.0002880096435546875, -3.814697265625e-06, -1.9073486328125e-05, -0.001567840576171875, -5.7220458984375e-06, -0.003383636474609375, -1.9073486328125e-06, -0.0002714395523071289, -7.176391227403656e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -2.1576881408691406e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -2.8967540856683627e-05, -8.344646857949556e-07, -0.00020599365234375, -1.1444091796875e-05]}, {"score": -0.975874172934212, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -0.10625553131103516, -0.005214691162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.0001583099365234375, -0.06205117702484131, -1.3589766240329482e-05, -7.62939453125e-05, -0.7775850296020508, -5.53131103515625e-05, -0.002925872802734375, -1.9073486328125e-06, 0.0, -0.0006404779851436615, -4.208087921142578e-05, -0.0001068115234375, -0.009052276611328125, -4.9591064453125e-05, -0.0004177093505859375, -7.62939453125e-06, -7.2479248046875e-05, 0.0, -0.0006428956985473633, -0.0002288818359375, -3.814697265625e-06, -1.9073486328125e-05, -0.001155853271484375, -5.7220458984375e-06, -0.00341796875, -3.814697265625e-06, -0.0002638101577758789, -7.545940025011078e-05, -3.814697265625e-06, -1.1444091796875e-05, -7.62939453125e-06, -2.3603439331054688e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -2.6464205802767538e-05, -9.536738616588991e-07, -0.0002002716064453125, -1.1444091796875e-05]}, {"score": -3.6160429922542363, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 57, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -0.10625553131103516, -0.005214691162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.0001583099365234375, -3.3888332843780518, -4.3153471779078245e-05, -1.9073486328125e-06, -0.08575916290283203, -0.0046825408935546875, -0.0008544921875, -1.9073486328125e-06, 0.0, -0.008666634559631348, -4.76837158203125e-05, -0.0001678466796875, -0.00371551513671875, -3.24249267578125e-05, -0.0003871917724609375, -5.7220458984375e-06, -0.00011444091796875, 0.0, -0.0005990266799926758, -0.00028228759765625, -3.814697265625e-06, -1.9073486328125e-05, -0.0014476776123046875, -5.7220458984375e-06, -0.00305938720703125, -3.814697265625e-06, -0.0002695322036743164, -7.235995144583285e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -2.1576881408691406e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -2.86099220829783e-05, -9.536738616588991e-07, -0.00020599365234375, -1.1444091796875e-05]}, {"score": -3.8753513279170164, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", 41, 89, 24, 112, "Random", "Picker", "<EOS>", 164, 57, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            RandomPicker(3)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "RandomPicker"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -2.302703857421875, -0.0010013580322265625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001354217529296875, -0.15763676166534424, -1.6212332411669195e-05, -0.0001354217529296875, -0.1486501693725586, -0.00121307373046875, -0.05092144012451172, -1.9073486328125e-06, 0.0, -0.0006394359515979886, -3.838539123535156e-05, -6.67572021484375e-05, -0.02141094207763672, -2.6702880859375e-05, -0.001194000244140625, -7.62939453125e-06, -6.103515625e-05, 0.0, -0.0005761384963989258, -0.0001964569091796875, -3.814697265625e-06, -2.09808349609375e-05, -0.0007915496826171875, -5.7220458984375e-06, -0.003261566162109375, -3.814697265625e-06, -0.0002646446228027344, -7.688994082855061e-05, -3.814697265625e-06, -0.048073768615722656, -0.008798599243164062, 0.0, 0.0, -1.0267423391342163, -0.00439453125, -0.0031757354736328125, -2.09808349609375e-05, -0.08691596984863281, -0.000347137451171875, -0.0002079010009765625, -0.00010895729064941406, 0.0, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -2.7537016649148427e-05, -2.3841855067985307e-07, -0.0004253387451171875, -7.62939453125e-06]}, {"score": -3.90078472116506, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", 41, 89, 24, 112, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 164, 57, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            OpponentMinionCountIsGreaterThan(3)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -2.302703857421875, -0.0010013580322265625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001354217529296875, -0.15763676166534424, -1.6212332411669195e-05, -0.0001354217529296875, -0.1486501693725586, -0.00121307373046875, -0.05092144012451172, -1.9073486328125e-06, 0.0, -0.0006394359515979886, -3.838539123535156e-05, -6.67572021484375e-05, -0.02141094207763672, -2.6702880859375e-05, -0.001194000244140625, -7.62939453125e-06, -6.103515625e-05, 0.0, -0.0005761384963989258, -0.0001964569091796875, -3.814697265625e-06, -2.09808349609375e-05, -0.0007915496826171875, -5.7220458984375e-06, -0.003261566162109375, -3.814697265625e-06, -0.0002646446228027344, -7.688994082855061e-05, -3.814697265625e-06, -0.048073768615722656, -0.008798599243164062, 0.0, 0.0, -0.997458815574646, -0.11484146118164062, -0.0051631927490234375, -0.005240440368652344, -0.014733314514160156, -0.0023508071899414062, -5.7220458984375e-06, -4.9591064453125e-05, -0.0070934295654296875, -0.0001087188720703125, -0.0001983642578125, -5.543231964111328e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.00024315873451996595, -1.1920928244535389e-07, -0.00023651123046875, -7.62939453125e-06]}, {"score": -5.190381784284412, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 55, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -0.10625553131103516, -0.005214691162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.0001583099365234375, -0.06205117702484131, -1.3589766240329482e-05, -7.62939453125e-05, -4.998447418212891, -1.1444091796875e-05, -0.0014781951904296875, -1.9073486328125e-06, 0.0, -0.00030123989563435316, -3.254413604736328e-05, -0.0001926422119140625, -0.0044918060302734375, -6.866455078125e-05, -0.000362396240234375, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0003434419631958008, -0.0002288818359375, -3.814697265625e-06, -2.288818359375e-05, -0.001476287841796875, -5.7220458984375e-06, -0.00336456298828125, -3.814697265625e-06, -0.0002753734588623047, -7.343284960370511e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -2.1576881408691406e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -2.6821824576472864e-05, -9.536738616588991e-07, -0.0002040863037109375, -1.1444091796875e-05]}, {"score": -5.783964890599023, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -2.302703857421875, -0.0010013580322265625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001354217529296875, -0.15763676166534424, -1.6212332411669195e-05, -0.0001354217529296875, -0.1486501693725586, -0.00121307373046875, -0.05092144012451172, -1.9073486328125e-06, 0.0, -0.0006394359515979886, -3.838539123535156e-05, -6.67572021484375e-05, -0.02141094207763672, -2.6702880859375e-05, -0.001194000244140625, -7.62939453125e-06, -6.103515625e-05, 0.0, -0.0005761384963989258, -0.0001964569091796875, -3.814697265625e-06, -2.09808349609375e-05, -0.0007915496826171875, -5.7220458984375e-06, -0.003261566162109375, -3.814697265625e-06, -0.0002646446228027344, -7.688994082855061e-05, -3.814697265625e-06, -3.063967704772949, -9.5367431640625e-06, -0.023456454277038574, -0.000133514404296875, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -2.5272138373111375e-05, -5.960462772236497e-07, -0.000209808349609375, -1.71661376953125e-05]}, {"score": -5.807881256807306, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", 41, 89, 24, 112, "Random", "Picker", "<EOS>", 164, 57, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            RandomPicker(3)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "RandomPicker"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -2.302703857421875, -0.0010013580322265625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001354217529296875, -0.15763676166534424, -1.6212332411669195e-05, -0.0001354217529296875, -2.1156558990478516, -0.0032596588134765625, -0.0025386810302734375, -1.9073486328125e-06, 0.0, -0.0013755559921264648, -2.86102294921875e-05, -4.9591064453125e-05, -0.009503364562988281, -1.71661376953125e-05, -0.0008087158203125, -5.7220458984375e-06, -5.7220458984375e-05, 0.0, -0.0006219148635864258, -0.000286102294921875, -3.814697265625e-06, -1.9073486328125e-05, -0.0023517608642578125, -5.7220458984375e-06, -0.00356292724609375, -1.9073486328125e-06, -0.0002912282943725586, -6.794919318053871e-05, -1.9073486328125e-06, -0.08473491668701172, -0.0066814422607421875, 0.0, 0.0, -1.0065997838974, -0.004932403564453125, -0.0034923553466796875, -1.9073486328125e-05, -0.09307479858398438, -0.000362396240234375, -0.0002307891845703125, -0.00011074542999267578, 0.0, -1.71661376953125e-05, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -2.896749174396973e-05, -2.3841855067985307e-07, -0.00041961669921875, -7.62939453125e-06]}, {"score": -5.92629396033221, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Damage", "<EOS>", 164, 57, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", 41, 89, 24, 112, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 164, 57, "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            OpponentMinionCountIsGreaterThan(3)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}, {"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -2.302703857421875, -0.0010013580322265625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001354217529296875, -0.15763676166534424, -1.6212332411669195e-05, -0.0001354217529296875, -2.1156558990478516, -0.0032596588134765625, -0.0025386810302734375, -1.9073486328125e-06, 0.0, -0.0013755559921264648, -2.86102294921875e-05, -4.9591064453125e-05, -0.009503364562988281, -1.71661376953125e-05, -0.0008087158203125, -5.7220458984375e-06, -5.7220458984375e-05, 0.0, -0.0006219148635864258, -0.000286102294921875, -3.814697265625e-06, -1.9073486328125e-05, -0.0023517608642578125, -5.7220458984375e-06, -0.00356292724609375, -1.9073486328125e-06, -0.0002912282943725586, -6.794919318053871e-05, -1.9073486328125e-06, -0.08473491668701172, -0.0066814422607421875, 0.0, 0.0, -1.0356687307357788, -0.15254104137420654, -0.0048046112060546875, -0.00537109375, -0.016107559204101562, -0.0028524398803710938, -3.814697265625e-06, -4.00543212890625e-05, -0.0093994140625, -0.000110626220703125, -0.000217437744140625, -5.924701690673828e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0002501903800293803, -1.1920928244535389e-07, -0.0002384185791015625, -7.62939453125e-06]}, {"score": -6.183138562870525, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "4", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -0.10625553131103516, -0.005214691162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.0001583099365234375, -3.3888332843780518, -4.3153471779078245e-05, -1.9073486328125e-06, -2.540408134460449, -5.7220458984375e-06, -0.06462698429822922, -1.6689286894688848e-06, -0.07046222686767578, 0.0, -0.0013041496276855469, -0.00017952919006347656, 0.0, -2.7894933737115934e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -4.52994936495088e-06, -4.768370445162873e-07, -0.000553131103515625, -9.5367431640625e-06]}, {"score": -6.364119190529621, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", 41, 89, 24, 112, "Not", "<EOS>", 164, 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            Not(GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE\n            .MURLOC))), value=0))))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}, {"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Not"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -2.302703857421875, -0.0010013580322265625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001354217529296875, -0.15763676166534424, -1.6212332411669195e-05, -0.0001354217529296875, -0.1486501693725586, -0.00121307373046875, -0.05092144012451172, -1.9073486328125e-06, 0.0, -0.0006394359515979886, -3.838539123535156e-05, -6.67572021484375e-05, -0.02141094207763672, -2.6702880859375e-05, -0.001194000244140625, -7.62939453125e-06, -6.103515625e-05, 0.0, -0.0005761384963989258, -0.0001964569091796875, -3.814697265625e-06, -2.09808349609375e-05, -0.0007915496826171875, -5.7220458984375e-06, -0.003261566162109375, -3.814697265625e-06, -0.0002646446228027344, -7.688994082855061e-05, -3.814697265625e-06, -0.048073768615722656, -0.008798599243164062, 0.0, 0.0, -2.6320860385894775, -0.0020847320556640625, -5.7220458984375e-06, -0.1009969711303711, -0.33875274658203125, -0.0009403228759765625, 0.0, -0.012816548347473145, -0.0007287263870239258, -3.814697265625e-06, -0.010855674743652344, -0.0029277801513671875, -6.4849853515625e-05, 0.0, 0.0, -0.00020802021026611328, -3.814697265625e-06, -1.9073486328125e-06, -0.021866798400878906, -0.001651763916015625, -7.62939453125e-06, 0.0, -0.008886933326721191, -0.000225067138671875, 0.0, -0.000286102294921875, -1.71661376953125e-05, -0.1443166732788086, -4.1961669921875e-05, -0.00214385986328125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0009708404541015625, -0.010702729225158691, -0.0001163482666015625, -9.5367431640625e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0003757476806640625, 0.0, -0.29356861114501953, -5.7220458984375e-06, -0.001026153564453125, -3.814697265625e-06, -0.0093231201171875, -1.52587890625e-05, -0.012177467346191406, -0.000286102294921875, -3.838539123535156e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -2.491474151611328e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.0490381100680679e-05, -7.152555099310121e-07, -0.0004749298095703125, -9.5367431640625e-06]}, {"score": -6.427695116593796, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Equip", "<EOS>", 164, 51, 130, "Battle", "Axe", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Equip(BattleAxe()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "BattleAxe"}], "func": {"_type": "Name", "id": "Equip"}}, {"_type": "Template10", "hole0": "PlayerSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -0.10625553131103516, -0.005214691162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.0001583099365234375, -5.169235706329346, -2.121920624631457e-05, -1.33514404296875e-05, -0.05601787567138672, -5.7220458984375e-06, -1.0032777786254883, -0.08053439855575562, -2.419931479380466e-05, -6.103515625e-05, 0.0, -0.001223921775817871, -9.5367431640625e-06, 0.0, -1.5616407836205326e-05, -1.9073486328125e-06, -1.6808508007670753e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -1.1444046322139911e-05, -3.576278118089249e-07, -0.0005664825439453125, -7.62939453125e-06]}, {"score": -6.889148491505452, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.MURLOC))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -2.302703857421875, -0.0010013580322265625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001354217529296875, -2.918699264526367, -9.655948815634474e-05, -7.05718994140625e-05, -0.006884574890136719, -1.1444091796875e-05, -0.0030975341796875, -3.814697265625e-06, -0.0003986358642578125, -3.814697265625e-06, 0.0, -0.0015773773193359375, -1.9073486328125e-06, -1.71661376953125e-05, -0.001445770263671875, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0005124777089804411, -0.04096519947052002, -5.352497100830078e-05, -3.814697265625e-06, -0.1588888168334961, -3.814697265625e-05, -0.0001220703125, 0.0, 0.0, -0.0003172159194946289, 0.0, -9.5367431640625e-06, -0.0095977783203125, -0.0005035400390625, -0.0001850128173828125, -5.7220458984375e-06, -0.004427551757544279, -0.10211765766143799, -2.3841855067985307e-07, -1.1444091796875e-05, -0.7615137100219727, -0.06810379028320312, -3.814697265625e-06, -0.0020952224731445312, -9.1552734375e-05, 0.0, -0.00014495849609375, -0.04610633850097656, -3.814697265625e-05, 0.0, -0.000762939453125, -0.000217437744140625, 0.0, -0.009090423583984375, -0.0015316009521484375, -5.91278076171875e-05, 0.0, 0.0, -0.0003319978713989258, -5.7220458984375e-06, -3.814697265625e-06, -0.035193443298339844, -0.00147247314453125, -7.62939453125e-06, 0.0, -0.005826354026794434, -9.739398956298828e-05, 0.0, -0.000179290771484375, -4.38690185546875e-05, -0.05562782287597656, -3.4332275390625e-05, -0.0023403167724609375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010089874267578125, -0.014388442039489746, -0.0001010894775390625, -9.5367431640625e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00034332275390625, 0.0, -0.30478668212890625, -5.7220458984375e-06, -0.0007877349853515625, -1.9073486328125e-06, -0.006557464599609375, -1.71661376953125e-05, -0.010394096374511719, -0.00017547607421875, -4.029273986816406e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -2.491474151611328e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.025196434056852e-05, -5.960462772236497e-07, -0.0004787445068359375, -9.5367431640625e-06]}, {"score": -7.660043496450058, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", 41, 89, 24, 112, "Not", "<EOS>", 164, 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            Not(GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE\n            .PIRATE))), value=0))))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}, {"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Not"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -2.302703857421875, -0.0010013580322265625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001354217529296875, -0.15763676166534424, -1.6212332411669195e-05, -0.0001354217529296875, -0.1486501693725586, -0.00121307373046875, -0.05092144012451172, -1.9073486328125e-06, 0.0, -0.0006394359515979886, -3.838539123535156e-05, -6.67572021484375e-05, -0.02141094207763672, -2.6702880859375e-05, -0.001194000244140625, -7.62939453125e-06, -6.103515625e-05, 0.0, -0.0005761384963989258, -0.0001964569091796875, -3.814697265625e-06, -2.09808349609375e-05, -0.0007915496826171875, -5.7220458984375e-06, -0.003261566162109375, -3.814697265625e-06, -0.0002646446228027344, -7.688994082855061e-05, -3.814697265625e-06, -0.048073768615722656, -0.008798599243164062, 0.0, 0.0, -2.6320860385894775, -0.0020847320556640625, -5.7220458984375e-06, -0.1009969711303711, -0.33875274658203125, -0.0009403228759765625, 0.0, -0.012816548347473145, -0.0007287263870239258, -3.814697265625e-06, -0.010855674743652344, -0.0029277801513671875, -6.4849853515625e-05, 0.0, 0.0, -0.00020802021026611328, -3.814697265625e-06, -1.9073486328125e-06, -0.021866798400878906, -0.001651763916015625, -7.62939453125e-06, 0.0, -0.008886933326721191, -0.000225067138671875, 0.0, -0.000286102294921875, -1.71661376953125e-05, -0.1443166732788086, -4.1961669921875e-05, -0.00214385986328125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0009708404541015625, -0.010702729225158691, -0.0001163482666015625, -9.5367431640625e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0003757476806640625, 0.0, -1.6057329177856445, 0.0, -0.0013141632080078125, -7.62939453125e-06, -0.0006961822509765625, -7.62939453125e-06, -0.004502296447753906, -1.71661376953125e-05, -3.254413604736328e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.491474151611328e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -9.894339200400282e-06, -5.960462772236497e-07, -0.000545501708984375, -9.5367431640625e-06]}, {"score": -7.7102456057125295, "choice_history": [59, 124, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blackwing", " ", "Corruptor", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 57, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(3))]), CardSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template10", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 4, "hole1": 5, "_type": "Template8", "hole0": "Minion"}], "hole0": "BlackwingCorruptor", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -0.00011444091796875, -9.536697689327411e-06, -6.7470311478246e-05, -2.0265473722247407e-05, -1.192074705613777e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -7.295608520507812e-05, -3.933904736186378e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0016774175455793738, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.0265579223632812e-06, -4.57763671875e-05, 0.0, -9.1552734375e-05, -0.000461578369140625, -1.9073486328125e-06, -0.0017023086547851562, 0.0, -0.00043487548828125, -1.1444091796875e-05, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, 0.0, -0.10625553131103516, -0.005214691162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.0001583099365234375, -4.72165584564209, -0.0002567768096923828, -1.33514404296875e-05, -0.017595291137695312, -9.5367431640625e-06, -0.004784584045410156, -1.9073486328125e-06, -0.0004253387451171875, -1.9073486328125e-06, 0.0, -0.0032998323440551758, -1.9073486328125e-06, -1.71661376953125e-05, -0.0006732940673828125, -5.91278076171875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0007915475871413946, -0.04009068012237549, -4.780292510986328e-05, -3.814697265625e-06, -0.12321949005126953, -4.00543212890625e-05, -0.0001735687255859375, 0.0, 0.0, -0.0003306865692138672, 0.0, -9.5367431640625e-06, -0.010211944580078125, -0.0004634857177734375, -0.0001735687255859375, -5.7220458984375e-06, -0.006520151626318693, -0.07579243183135986, -2.3841855067985307e-07, -1.1444091796875e-05, -0.7207374572753906, -0.2746696472167969, -0.004607200622558594, -1.9073486328125e-05, 0.0, -0.5500788688659668, -9.655952453613281e-06, 0.0, -0.0036602020263671875, -2.6702880859375e-05, -1.028548240661621, -3.814697265625e-06, -0.0018825531005859375, 0.0, -0.0018118448788300157, -0.0002820440859068185, 0.0, -9.5367431640625e-05, -1.1444091796875e-05, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.8238888515043072e-05, -5.960462772236497e-07, -0.0004177093505859375, -9.5367431640625e-06]}], "gold_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}
{"beams": [{"score": -2.752107003159594, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Battlecry(Give([Buff(ChangeAttack(3)), Buff(\n            ChangeHealth(3))]), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -0.45413899421691895, -9.5367431640625e-06, -9.72747802734375e-05, -5.7220458984375e-06, -0.004272580146789551, -4.1961669921875e-05, 0.0, -0.0009098052978515625, -9.1552734375e-05, 0.0, 0.0, -0.010680675506591797, -0.0001049041748046875, -0.001911163330078125, -0.9532108306884766, -2.288818359375e-05, 0.0, 0.0, -0.017530083656311035, -2.5153160095214844e-05, -1.9073486328125e-05, -0.0025730133056640625, -1.33514404296875e-05, -0.0025043487548828125, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -0.0004025697708129883, -1.9073486328125e-06, -2.288818359375e-05, -0.00012969970703125, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.001410599797964096, -0.02576923370361328, -7.832050323486328e-05, -1.9073486328125e-06, -0.3232612609863281, -5.14984130859375e-05, 0.0, 0.0, 0.0, -8.034706115722656e-05, 0.0, -7.62939453125e-06, -0.000537872314453125, -3.24249267578125e-05, -2.47955322265625e-05, 0.0, -0.0013522999361157417, -0.08706426620483398, -1.1920928244535389e-07, -3.814697265625e-06, -0.15877437591552734, -7.62939453125e-05, -1.9073486328125e-06, -0.005010724067687988, -6.29425048828125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0001010894775390625, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.380693331360817e-07, -1.9073486328125e-06, -0.00036902737338095903, 0.0, -6.079865852370858e-05, 0.0]}, {"score": -3.0529055348249514, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Battlecry(Kill(), MinionSelector(IsType(\n            MINION_TYPE.MURLOC), BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -0.45413899421691895, -9.5367431640625e-06, -9.72747802734375e-05, -5.7220458984375e-06, -0.004272580146789551, -4.1961669921875e-05, 0.0, -0.0009098052978515625, -9.1552734375e-05, 0.0, 0.0, -0.010680675506591797, -0.0001049041748046875, -0.001911163330078125, -0.4877777099609375, 0.0, -0.1640847772359848, -6.616029713768512e-05, -0.025274276733398438, -0.000335693359375, -5.7220458984375e-06, -3.814697265625e-06, -0.03074800968170166, -1.9073486328125e-06, -9.5367431640625e-06, -0.4929313659667969, -0.17330455780029297, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.009292125701904297, -0.009645819664001465, -1.9073486328125e-06, -3.62396240234375e-05, -0.000133514404296875, 0.0, -2.09808349609375e-05, -9.5367431640625e-06, -0.001567840576171875, -1.9073486328125e-06, -0.4810401201248169, -9.5367431640625e-06, -9.918212890625e-05, -5.7220458984375e-06, -0.004251599311828613, -4.1961669921875e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.00030350685119628906, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.00039476618985645473, 0.0, -5.508476169779897e-05, 0.0]}, {"score": -3.2571886557068055, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.PIRATE),\n            BothPlayer())), Battlecry(Give([Buff(ChangeAttack(3)), Buff(\n            ChangeHealth(3))]), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -1.1530230045318604, 0.0, -0.0011081695556640625, -2.47955322265625e-05, -0.0026952028274536133, -3.814697265625e-05, 0.0, -0.001651763916015625, -0.0001068115234375, 0.0, 0.0, -0.007752776145935059, -9.1552734375e-05, -0.002231597900390625, -0.7514305114746094, -2.288818359375e-05, 0.0, 0.0, -0.01814591884613037, -2.5272369384765625e-05, -1.9073486328125e-05, -0.0025386810302734375, -1.33514404296875e-05, -0.0025577545166015625, -2.288818359375e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.0003701448440551758, -1.9073486328125e-06, -2.288818359375e-05, -0.0001277923583984375, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0015042981831356883, -0.02572345733642578, -7.641315460205078e-05, -1.9073486328125e-06, -0.326385498046875, -5.14984130859375e-05, 0.0, 0.0, 0.0, -8.034706115722656e-05, 0.0, -7.62939453125e-06, -0.0005359649658203125, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0013638632372021675, -0.09536504745483398, -2.3841855067985307e-07, -3.814697265625e-06, -0.15702342987060547, -7.62939453125e-05, -1.9073486328125e-06, -0.005077481269836426, -6.103515625e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0001010894775390625, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.380693331360817e-07, -1.9073486328125e-06, -0.00037212588358670473, 0.0, -6.079865852370858e-05, 0.0]}, {"score": -3.3804293145601534, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Battlecry(Kill(), MinionSelector(IsType(\n            MINION_TYPE.PIRATE)))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -0.45413899421691895, -9.5367431640625e-06, -9.72747802734375e-05, -5.7220458984375e-06, -0.004272580146789551, -4.1961669921875e-05, 0.0, -0.0009098052978515625, -9.1552734375e-05, 0.0, 0.0, -0.010680675506591797, -0.0001049041748046875, -0.001911163330078125, -0.4877777099609375, 0.0, -0.1640847772359848, -6.616029713768512e-05, -0.025274276733398438, -0.000335693359375, -5.7220458984375e-06, -3.814697265625e-06, -0.03074800968170166, -1.9073486328125e-06, -9.5367431640625e-06, -0.9659795761108398, -0.01374053955078125, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.0017297635786235332, -0.00022470951080322266, -5.9604644775390625e-06, -0.09522247314453125, -0.000133514404296875, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -0.0003491640090942383, 0.0, -0.42277753353118896, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -8.809566497802734e-05, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.00025616632774472237, 0.0, -3.576691960915923e-05, 0.0]}, {"score": -3.6139699735328676, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Not", "<EOS>", 164, 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 89, 24, 112, "Card", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(3))]), SelfSelector(), Not(GreaterThan(\n            Count(CardSelector(EnemyPlayer())), value=0))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "EnemyPlayer"}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Not"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -1.2350549697875977, -3.814697265625e-06, -0.07216191291809082, 0.0, -0.055504798889160156, -9.5367431640625e-06, -4.38690185546875e-05, -7.62939453125e-06, -1.1682508556987159e-05, -1.9073486328125e-06, -0.040760040283203125, -0.06331443786621094, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -0.020381996408104897, -0.0005007970612496138, -0.000789642333984375, -0.0002956390380859375, -1.52587890625e-05, -0.0006847381591796875, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0021594762802124023, -1.9073486328125e-06, -1.9073486328125e-05, -0.0001354217529296875, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0005921082920394838, -0.025452613830566406, -7.82012939453125e-05, -1.9073486328125e-06, -0.29122161865234375, -7.2479248046875e-05, -1.9073486328125e-06, 0.0, 0.0, -6.914138793945312e-05, 0.0, -7.62939453125e-06, -0.0012340545654296875, -3.0517578125e-05, -3.0517578125e-05, 0.0, -0.0010830000974237919, -0.2723737955093384, -2.3841855067985307e-07, -5.7220458984375e-06, -0.12016010284423828, -0.0004825592041015625, -1.9073486328125e-06, -0.00838780403137207, -1.9073486328125e-05, 0.0, -0.0004119873046875, -0.06902122497558594, -1.52587890625e-05, 0.0, -0.0584331750869751, -0.003614664077758789, -0.0003185272216796875, -0.02617168426513672, -0.3152914047241211, -5.14984130859375e-05, 0.0, -0.011185646057128906, -0.000827789306640625, -5.340576171875e-05, -0.037461280822753906, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -0.00012826919555664062, -1.9073486328125e-06, -1.71661376953125e-05, -0.0726480484008789, -0.2517566680908203, -1.33514404296875e-05, 0.0, -0.3980979323387146, -0.0001697540283203125, 0.0, -0.003093719482421875, -0.023970603942871094, -5.7220458984375e-06, -0.03331495076417923, -3.457069396972656e-05, 0.0, -0.000133514404296875, -1.33514404296875e-05, -0.0027675628662109375, -5.7220458984375e-06, -0.08909416198730469, -5.7220458984375e-06, -0.0006986856460571289, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -9.894371032714844e-06, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -1.1920565157197416e-07, -3.814697265625e-06, -0.00011253142292844132, 0.0, -6.067033973522484e-05, 0.0]}, {"score": -3.699820585921536, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Battlecry(Kill(), MinionSelector(IsType(\n            MINION_TYPE.PIRATE), BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -0.45413899421691895, -9.5367431640625e-06, -9.72747802734375e-05, -5.7220458984375e-06, -0.004272580146789551, -4.1961669921875e-05, 0.0, -0.0009098052978515625, -9.1552734375e-05, 0.0, 0.0, -0.010680675506591797, -0.0001049041748046875, -0.001911163330078125, -0.4877777099609375, 0.0, -0.1640847772359848, -6.616029713768512e-05, -0.025274276733398438, -0.000335693359375, -5.7220458984375e-06, -3.814697265625e-06, -0.03074800968170166, -1.9073486328125e-06, -9.5367431640625e-06, -0.4929313659667969, -0.17330455780029297, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.009292125701904297, -0.009645819664001465, -1.9073486328125e-06, -3.62396240234375e-05, -0.000133514404296875, 0.0, -2.09808349609375e-05, -9.5367431640625e-06, -0.001567840576171875, -1.9073486328125e-06, -1.128712773323059, 0.0, -0.0007724761962890625, -2.09808349609375e-05, -0.0027924776077270508, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00025963783264160156, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1918018572032452e-07, -3.814697265625e-06, -0.00046340335393324494, 0.0, -5.270092515274882e-05, 0.0]}, {"score": -3.9363077336254193, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.PIRATE),\n            BothPlayer())), Battlecry(Kill(), MinionSelector(IsType(\n            MINION_TYPE.MURLOC), BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -1.1530230045318604, 0.0, -0.0011081695556640625, -2.47955322265625e-05, -0.0026952028274536133, -3.814697265625e-05, 0.0, -0.001651763916015625, -0.0001068115234375, 0.0, 0.0, -0.007752776145935059, -9.1552734375e-05, -0.002231597900390625, -0.6389379501342773, 0.0, -0.18061713874340057, -6.98557123541832e-05, -0.026172637939453125, -0.0003337860107421875, -7.62939453125e-06, -3.814697265625e-06, -0.027894407510757446, -1.9073486328125e-06, -9.5367431640625e-06, -0.5132656097412109, -0.1737842559814453, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.009433388710021973, -0.009889006614685059, -1.9073486328125e-06, -3.62396240234375e-05, -0.000133514404296875, 0.0, -2.09808349609375e-05, -9.5367431640625e-06, -0.0015735626220703125, -1.9073486328125e-06, -0.4810420274734497, -9.5367431640625e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004240155220031738, -4.1961669921875e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.00030350685119628906, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1918018572032452e-07, -1.9073486328125e-06, -0.0003941703762393445, 0.0, -5.675380816683173e-05, 0.0]}, {"score": -4.083808667007091, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -1.2350549697875977, -3.814697265625e-06, -2.785113573074341, 0.0, -0.00241851806640625, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -3.24249267578125e-05, -3.4332275390625e-05, -0.021257400512695312, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0002663135528564453, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.03785133361816406, 0.0, -3.24249267578125e-05, -6.079673767089844e-05, -1.1920928244535389e-07, -1.0192743502557278e-05, -2.3841855067985307e-07]}, {"score": -4.084015468886257, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Battlecry(Give([Buff(ChangeAttack(2)), Buff(\n            ChangeHealth(3))]), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -0.45413899421691895, -9.5367431640625e-06, -9.72747802734375e-05, -5.7220458984375e-06, -0.004272580146789551, -4.1961669921875e-05, 0.0, -0.0009098052978515625, -9.1552734375e-05, 0.0, 0.0, -0.010680675506591797, -0.0001049041748046875, -0.001911163330078125, -0.9532108306884766, -2.288818359375e-05, 0.0, 0.0, -0.017530083656311035, -2.5153160095214844e-05, -1.9073486328125e-05, -0.0025730133056640625, -1.33514404296875e-05, -0.0025043487548828125, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -0.0004025697708129883, -1.9073486328125e-06, -2.288818359375e-05, -0.00012969970703125, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.001410599797964096, -0.02576923370361328, -7.832050323486328e-05, -1.9073486328125e-06, -1.7175540924072266, -0.0001373291015625, 0.0, 0.0, 0.0, -0.00015270708536263555, -3.933906555175781e-06, -1.52587890625e-05, -0.009395599365234375, -3.24249267578125e-05, -4.9591064453125e-05, 0.0, -0.00238786730915308, -0.05764281749725342, -7.152555099310121e-07, -5.7220458984375e-06, -0.11614418029785156, -8.0108642578125e-05, -1.9073486328125e-06, -0.004602551460266113, -5.7220458984375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0001049041748046875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.570457920432091e-07, -1.9073486328125e-06, -0.00035126987495459616, 0.0, -6.163370562717319e-05, 0.0]}, {"score": -4.20987464502263, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.PIRATE),\n            BothPlayer())), Battlecry(Kill(), MinionSelector(IsType(\n            MINION_TYPE.PIRATE)))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -1.1530230045318604, 0.0, -0.0011081695556640625, -2.47955322265625e-05, -0.0026952028274536133, -3.814697265625e-05, 0.0, -0.001651763916015625, -0.0001068115234375, 0.0, 0.0, -0.007752776145935059, -9.1552734375e-05, -0.002231597900390625, -0.6389379501342773, 0.0, -0.18061713874340057, -6.98557123541832e-05, -0.026172637939453125, -0.0003337860107421875, -7.62939453125e-06, -3.814697265625e-06, -0.027894407510757446, -1.9073486328125e-06, -9.5367431640625e-06, -0.9330883026123047, -0.01357269287109375, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.001756941550411284, -0.00022470951080322266, -5.9604644775390625e-06, -0.09737396240234375, -0.000133514404296875, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -0.0003529787063598633, 0.0, -0.42089879512786865, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -8.809566497802734e-05, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.1920201359316707e-07, -3.814697265625e-06, -0.0002560471184551716, 0.0, -3.576691960915923e-05, 0.0]}, {"score": -4.256376655417391, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Battlecry(Kill(), MinionSelector(IsType(\n            MINION_TYPE.MURLOC)))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -0.45413899421691895, -9.5367431640625e-06, -9.72747802734375e-05, -5.7220458984375e-06, -0.004272580146789551, -4.1961669921875e-05, 0.0, -0.0009098052978515625, -9.1552734375e-05, 0.0, 0.0, -0.010680675506591797, -0.0001049041748046875, -0.001911163330078125, -0.4877777099609375, 0.0, -0.1640847772359848, -6.616029713768512e-05, -0.025274276733398438, -0.000335693359375, -5.7220458984375e-06, -3.814697265625e-06, -0.03074800968170166, -1.9073486328125e-06, -9.5367431640625e-06, -0.9659795761108398, -0.01374053955078125, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.0017297635786235332, -0.00022470951080322266, -5.9604644775390625e-06, -0.09522247314453125, -0.000133514404296875, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -0.0003491640090942383, 0.0, -1.2986797094345093, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -4.9948692321777344e-05, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00031754831434227526, 0.0, -4.4345419155433774e-05, 0.0]}, {"score": -4.431865203159525, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Increase", "<UNK>", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Battlecry(Increase<UNK>(), HeroSelector())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Template10", "hole0": "Increase<UNK>"}, {"_type": "Template10", "hole0": "HeroSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -0.45413899421691895, -9.5367431640625e-06, -9.72747802734375e-05, -5.7220458984375e-06, -0.004272580146789551, -4.1961669921875e-05, 0.0, -0.0009098052978515625, -9.1552734375e-05, 0.0, 0.0, -0.010680675506591797, -0.0001049041748046875, -0.001911163330078125, -0.4877777099609375, 0.0, -2.3700029850006104, -0.1063237339258194, -0.0007266998291015625, -0.0006618499755859375, 0.0, -0.29464221000671387, -2.288818359375e-05, 0.0, -9.655952453613281e-06, 0.0, -1.0013580322265625e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.1915108188986778e-07, -1.9073486328125e-06, -0.00016486270760651678, 0.0, -9.08974907360971e-05, 0.0]}, {"score": -4.573132375103789, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.PIRATE),\n            BothPlayer())), Battlecry(Give([Buff(ChangeAttack(2)), Buff(\n            ChangeHealth(3))]), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -1.1530230045318604, 0.0, -0.0011081695556640625, -2.47955322265625e-05, -0.0026952028274536133, -3.814697265625e-05, 0.0, -0.001651763916015625, -0.0001068115234375, 0.0, 0.0, -0.007752776145935059, -9.1552734375e-05, -0.002231597900390625, -0.7514305114746094, -2.288818359375e-05, 0.0, 0.0, -0.01814591884613037, -2.5272369384765625e-05, -1.9073486328125e-05, -0.0025386810302734375, -1.33514404296875e-05, -0.0025577545166015625, -2.288818359375e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.0003701448440551758, -1.9073486328125e-06, -2.288818359375e-05, -0.0001277923583984375, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0015042981831356883, -0.02572345733642578, -7.641315460205078e-05, -1.9073486328125e-06, -1.706669807434082, -0.000141143798828125, 0.0, 0.0, 0.0, -0.00014901159738656133, -3.933906555175781e-06, -1.52587890625e-05, -0.009302139282226562, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -0.0023913243785500526, -0.06311023235321045, -7.152555099310121e-07, -5.7220458984375e-06, -0.11537742614746094, -8.20159912109375e-05, -1.9073486328125e-06, -0.004659771919250488, -5.53131103515625e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0001049041748046875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.380693331360817e-07, -1.9073486328125e-06, -0.00035460677463561296, 0.0, -6.175285670906305e-05, 0.0]}, {"score": -5.035979894026887, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>", 41, 89, 24, 112, "Not", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 51, 130, "Card", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(3))]), SelfSelector(), Not(Count(\n            CardSelector()))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "CardSelector"}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "Not"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -1.2350549697875977, -3.814697265625e-06, -0.07216191291809082, 0.0, -0.055504798889160156, -9.5367431640625e-06, -4.38690185546875e-05, -7.62939453125e-06, -1.1682508556987159e-05, -1.9073486328125e-06, -0.040760040283203125, -0.06331443786621094, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -0.020381996408104897, -0.0005007970612496138, -0.000789642333984375, -0.0002956390380859375, -1.52587890625e-05, -0.0006847381591796875, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0021594762802124023, -1.9073486328125e-06, -1.9073486328125e-05, -0.0001354217529296875, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0005921082920394838, -0.025452613830566406, -7.82012939453125e-05, -1.9073486328125e-06, -0.29122161865234375, -7.2479248046875e-05, -1.9073486328125e-06, 0.0, 0.0, -6.914138793945312e-05, 0.0, -7.62939453125e-06, -0.0012340545654296875, -3.0517578125e-05, -3.0517578125e-05, 0.0, -0.0010830000974237919, -0.2723737955093384, -2.3841855067985307e-07, -5.7220458984375e-06, -0.12016010284423828, -0.0004825592041015625, -1.9073486328125e-06, -0.00838780403137207, -1.9073486328125e-05, 0.0, -0.0004119873046875, -0.06902122497558594, -1.52587890625e-05, 0.0, -0.0584331750869751, -0.003614664077758789, -0.0003185272216796875, -0.02617168426513672, -1.3118715286254883, -1.9073486328125e-06, 0.0, -0.28835129737854004, -6.67572021484375e-05, -3.814697265625e-05, -1.0508613586425781, -1.9073486328125e-06, -0.006262864917516708, -0.005299806594848633, 0.0, -3.4928321838378906e-05, -1.9073486328125e-06, -2.574920654296875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.3818574845790863e-07, -1.9073486328125e-06, -0.00037393791717477143, 0.0, -5.873964983038604e-05, 0.0]}, {"score": -5.34993991966779, "choice_history": [59, 124, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drakonid", " ", "Crusher", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 48, 117, "6", "<EOS>", 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Battlecry(Give([Buff(ChangeAttack(3)), Buff(\n            ChangeHealth(6))]), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Template10", "hole0": "Kill"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template10", "hole0": "BothPlayer"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template19"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 6, "hole1": 6, "_type": "Template8", "hole0": "Minion"}], "hole0": "DrakonidCrusher", "hole3": "create_minion"}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -4.172238186583854e-05, -0.00032419670606032014, -3.933898824470816e-06, 0.0, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.179073458653875e-06, -5.0067901611328125e-05, -4.053113570989808e-06, -7.62939453125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.8729471523547545e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.208087921142578e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000640869140625, -0.35665416717529297, -0.0001201629638671875, -0.0002079010009765625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -0.010410308837890625, -3.814697265625e-06, -1.33514404296875e-05, -0.000324249267578125, 0.0, -0.028917312622070312, -0.0007724761962890625, -0.005702972412109375, -8.392333984375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0009099245071411133, -9.5367431640625e-05, -0.0023193359375, -0.018677711486816406, 0.0, -0.1518469750881195, -1.251697449333733e-05, -0.001331329345703125, -8.7738037109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.01812732219696045, -1.9073486328125e-06, -7.62939453125e-06, -0.06354236602783203, -0.026477813720703125, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0024908781051635742, -0.005658626556396484, -2.0265579223632812e-06, -0.000213623046875, -0.00016021728515625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0022525787353515625, -1.9073486328125e-06, -0.45413899421691895, -9.5367431640625e-06, -9.72747802734375e-05, -5.7220458984375e-06, -0.004272580146789551, -4.1961669921875e-05, 0.0, -0.0009098052978515625, -9.1552734375e-05, 0.0, 0.0, -0.010680675506591797, -0.0001049041748046875, -0.001911163330078125, -0.9532108306884766, -2.288818359375e-05, 0.0, 0.0, -0.017530083656311035, -2.5153160095214844e-05, -1.9073486328125e-05, -0.0025730133056640625, -1.33514404296875e-05, -0.0025043487548828125, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -0.0004025697708129883, -1.9073486328125e-06, -2.288818359375e-05, -0.00012969970703125, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.001410599797964096, -0.02576923370361328, -7.832050323486328e-05, -1.9073486328125e-06, -0.3232612609863281, -5.14984130859375e-05, 0.0, 0.0, 0.0, -8.034706115722656e-05, 0.0, -7.62939453125e-06, -0.000537872314453125, -3.24249267578125e-05, -2.47955322265625e-05, 0.0, -0.0013522999361157417, -0.08706426620483398, -1.1920928244535389e-07, -3.814697265625e-06, -2.5202627182006836, -9.5367431640625e-06, -0.21404442191123962, -4.029273986816406e-05, -0.0003719329833984375, -1.9073486328125e-06, -0.02720654010772705, -3.62396240234375e-05, 0.0, -9.918212890625e-05, 0.0, -0.00011479854583740234, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.629336323589087e-05, 0.0, -3.598691546358168e-05, 0.0]}], "gold_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), Not(GreaterThan(Attribute('health',\n            HeroSelector(EnemyPlayer())), value=15))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}
{"beams": [{"score": -0.15024423348563687, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -0.09125065803527832, 0.0, -0.027736663818359375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0018335580825805664, -7.62939453125e-06, -0.0004291534423828125, -0.0007076263427734375, -4.9829453928396106e-05, -4.5299530029296875e-06, -0.0001392364501953125, -1.33514404296875e-05, -0.0004138946533203125, -1.9073486328125e-06, -5.14984130859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0006084442138671875, -1.9073486328125e-06, -0.003922462463378906, -1.9073486328125e-06, -0.000400543212890625, 0.0, -0.008344292640686035, 0.0, -2.09808349609375e-05, -3.24249267578125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.099436753473128e-06, -5.006777428206988e-06, -2.9803704819642007e-06, -7.033334895822918e-06]}, {"score": -2.825287100168225, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -2.594574213027954, -5.7220458984375e-06, -0.19816017150878906, -2.47955322265625e-05, -0.0014209747314453125, -0.001216292381286621, -9.5367431640625e-06, -0.00045013427734375, -0.0010204315185546875, -4.947178967995569e-05, -2.503394853192731e-06, -0.0001354217529296875, -1.1444091796875e-05, -0.0006456375122070312, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0007076263427734375, -1.9073486328125e-06, -0.004314422607421875, -1.9073486328125e-06, -0.000415802001953125, 0.0, -0.00784063246101141, 0.0, -2.09808349609375e-05, -3.24249267578125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.2186455882765586e-06, -5.006777428206988e-06, -3.3379892556695268e-06, -7.152543730626348e-06]}, {"score": -3.768729802515736, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -0.09125065803527832, 0.0, -3.604463577270508, -0.000583648681640625, -3.4332275390625e-05, -6.759123061783612e-05, -2.0265579223632812e-06, -0.000102996826171875, -6.103515625e-05, -0.02057647705078125, -2.0265579223632812e-06, -7.43865966796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.01090240478515625, -1.9073486328125e-06, -0.019423604011535645, 0.0, -0.0005397796630859375, 0.0, -0.006433486472815275, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.933898824470816e-06, -4.172316494077677e-06, -1.6690191841917112e-06, -7.510169325541938e-06]}, {"score": -4.391685125068307, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -2.594574213027954, -5.7220458984375e-06, -1.7419347763061523, -0.0002079010009765625, -3.814697265625e-05, -5.352482185116969e-05, -2.0265579223632812e-06, -0.000102996826171875, -6.103515625e-05, -0.010425567626953125, -2.0265579223632812e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.013661384582519531, -1.9073486328125e-06, -0.009449124336242676, 0.0, -0.000396728515625, 0.0, -0.006517886649817228, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.6954811548639555e-06, -4.410734163684538e-06, -1.7882284737424925e-06, -7.629378160345368e-06]}, {"score": -5.030062196285996, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "model_output": {"hole4": "p", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -0.09125065803527832, 0.0, -0.027736663818359375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0018335580825805664, -7.62939453125e-06, -0.0004291534423828125, -0.0007076263427734375, -4.9829453928396106e-05, -4.5299530029296875e-06, -0.0001392364501953125, -1.33514404296875e-05, -0.0004138946533203125, -1.9073486328125e-06, -5.14984130859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0006084442138671875, -1.9073486328125e-06, -0.003922462463378906, -1.9073486328125e-06, -0.000400543212890625, 0.0, -4.871387004852295, -1.1444091796875e-05, -1.71661376953125e-05, -0.016786575317382812, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.847726889536716e-05, -3.576278118089249e-07, -2.145810503861867e-05, -2.741813204920618e-06]}, {"score": -5.428511258960725, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -5.345745086669922, -1.33514404296875e-05, -0.05054187774658203, -1.1444091796875e-05, -0.0004062652587890625, -0.001384735107421875, -1.1444091796875e-05, -0.0011463165283203125, -0.000415802001953125, -4.100797377759591e-05, -4.649161837733118e-06, -0.000141143798828125, -1.9073486328125e-05, -0.0022945404052734375, -3.814697265625e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0011043548583984375, -1.9073486328125e-06, -0.0029354095458984375, -1.9073486328125e-06, -0.000347137451171875, 0.0, -0.007673143874853849, 0.0, -2.09808349609375e-05, -3.0517578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.2186455882765586e-06, -5.006777428206988e-06, -1.6690555639797822e-06, -7.152543730626348e-06]}, {"score": -6.159652110447269, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -6.10463809967041, 0.0, -0.023641586303710938, -3.814697265625e-06, -0.0001583099365234375, -0.0014678239822387695, -1.1444091796875e-05, -0.000469207763671875, -0.000904083251953125, -5.555148163693957e-05, -2.384185791015625e-06, -0.0001316070556640625, -1.33514404296875e-05, -0.0001468658447265625, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0038633346557617188, -1.9073486328125e-06, -0.00049591064453125, 0.0, -0.008813618682324886, 0.0, -2.09808349609375e-05, -3.4332275390625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.099436753473128e-06, -5.125986263010418e-06, -3.3379892556695268e-06, -7.271752110682428e-06]}, {"score": -6.278148289103228, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -0.09125065803527832, 0.0, -0.027736663818359375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0018335580825805664, -7.62939453125e-06, -0.0004291534423828125, -0.0007076263427734375, -4.9829453928396106e-05, -4.5299530029296875e-06, -0.0001392364501953125, -1.33514404296875e-05, -0.0004138946533203125, -1.9073486328125e-06, -5.14984130859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0006084442138671875, -1.9073486328125e-06, -6.132761001586914, 0.0, -0.0007038116455078125, 0.0, -0.007100580260157585, 0.0, -2.6702880859375e-05, -3.4332275390625e-05, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.9802276912960224e-06, -6.437280717364047e-06, -1.549846274429001e-06, -7.390960945485858e-06]}, {"score": -6.5519666645311645, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -0.09125065803527832, 0.0, -0.027736663818359375, -1.33514404296875e-05, -8.20159912109375e-05, -6.397741794586182, -6.496906280517578e-05, -0.007346153259277344, -0.0003032684326171875, -5.8293175243306905e-05, -4.768371127283899e-06, -0.0001049041748046875, -1.33514404296875e-05, -0.0006275177001953125, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.000835418701171875, -1.9073486328125e-06, -0.003078460693359375, -1.9073486328125e-06, -0.0003662109375, 0.0, -0.008072853088378906, 0.0, -2.288818359375e-05, -3.0517578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.099436753473128e-06, -5.125986263010418e-06, -2.861163011402823e-06, -7.033334895822918e-06]}, {"score": -6.567750213079307, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -4.86541748046875, -1.9073486328125e-05, -2.288818359375e-05, -8.344646857949556e-07, -1.0728830375228426e-06, -5.91278076171875e-05, -3.0517578125e-05, -0.0002841949462890625, -5.7220458984375e-06, -1.71661376953125e-05, -3.0875205993652344e-05, 0.0, -1.266034722328186, -1.9073486328125e-05, -0.12246227264404297, -1.9073486328125e-06, -0.0005168914794921875, -0.29617464542388916, -1.1444091796875e-05, -0.0028896331787109375, -3.62396240234375e-05, -0.0010251998901367188, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005550384521484375, -1.9073486328125e-06, -0.0017958879470825195, 0.0, -0.0003833770751953125, 0.0, -0.007772922515869141, 0.0, -2.288818359375e-05, -1.9073486328125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -6.556489552167477e-06, -1.9073468138230965e-06, -1.6690755728632212e-06, -4.053113570989808e-06]}, {"score": -6.596013305019483, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "False", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.False, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "False"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -6.527585029602051, -0.00255584716796875, -0.016025543212890625, -1.9073486328125e-06, -0.010220527648925781, -0.010276317596435547, -1.1444091796875e-05, -0.0010623931884765625, -0.0004825592041015625, -5.65051450394094e-05, -6.675719760096399e-06, -7.62939453125e-05, -9.5367431640625e-06, -0.00039768218994140625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00128936767578125, -3.814697265625e-06, -0.001773834228515625, -1.9073486328125e-06, -0.0004520416259765625, 0.0, -0.009491205215454102, 0.0, -2.09808349609375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -1.9073485191256623e-06, -3.814697265625e-06, -3.2186455882765586e-06, -5.245195097813848e-06, -1.6690555639797822e-06, -7.271752110682428e-06]}, {"score": -6.645009634423332, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "EPIC", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            EPIC, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "EPIC"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -4.86541748046875, -1.9073486328125e-05, -2.288818359375e-05, -8.344646857949556e-07, -1.0728830375228426e-06, -5.91278076171875e-05, -3.0517578125e-05, -0.0002841949462890625, -5.7220458984375e-06, -1.71661376953125e-05, -3.0875205993652344e-05, 0.0, -1.0705662965774536, -0.0002460479736328125, -0.0270843505859375, 0.0, -7.82012939453125e-05, -0.6650577783584595, -1.9073486328125e-05, -0.0017108917236328125, -7.62939453125e-06, -0.0008563995361328125, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0003948211669921875, -1.9073486328125e-06, -0.0015555620193481445, 0.0, -0.0003719329833984375, 0.0, -0.008970141410827637, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, -4.76837158203125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -2.3841830625315197e-06, -2.145905455108732e-06, -4.29153169534402e-06]}, {"score": -7.328167436045305, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -4.86541748046875, -1.9073486328125e-05, -2.288818359375e-05, -8.344646857949556e-07, -1.0728830375228426e-06, -5.91278076171875e-05, -3.0517578125e-05, -0.0002841949462890625, -5.7220458984375e-06, -1.71661376953125e-05, -3.0875205993652344e-05, 0.0, -1.0705662965774536, -0.0002460479736328125, -0.0270843505859375, 0.0, -7.82012939453125e-05, -1.3434702157974243, -9.5367431640625e-06, -0.00431060791015625, -1.71661376953125e-05, -0.0005970001220703125, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0016537904739379883, 0.0, -0.0004558563232421875, 0.0, -0.011148810386657715, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, -4.00543212890625e-05, -1.9073488601861754e-06, -3.814697265625e-06, -5.483612312673358e-06, -2.50339189733495e-06, -2.5035260478034616e-06, -4.52994936495088e-06]}, {"score": -7.452274081584278, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "RARE", "<EOS>", 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -0.011761665344238281, -7.43865966796875e-05, -1.1444091796875e-05, -5.483612312673358e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001506805419921875, -1.9073486328125e-06, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -7.397666931152344, -5.7220458984375e-05, -0.011806488037109375, -1.9073486328125e-06, -0.0011692047119140625, -0.012345314025878906, -5.7220458984375e-06, -0.0010395050048828125, -6.4849853515625e-05, -7.033346628304571e-05, -6.079673767089844e-06, -0.0001277923583984375, -1.52587890625e-05, -0.0001277923583984375, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0008754730224609375, -3.814697265625e-06, -0.001949310302734375, -1.9073486328125e-06, -0.000499725341796875, 0.0, -0.01019895076751709, 0.0, -2.09808349609375e-05, -3.0517578125e-05, -2.6702880859375e-05, -1.9073485191256623e-06, -3.814697265625e-06, -3.099436753473128e-06, -5.364403477869928e-06, -3.4571967262309045e-06, -7.390960945485858e-06]}, {"score": -7.530469772735614, "choice_history": [59, 124, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Imp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            FREE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}], "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Template14"}, "attr": "FREE"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 1, "_type": "Template8", "hole0": "Minion"}], "hole0": "Imp", "hole3": "create_minion"}, "score_history": [-0.000240325927734375, -0.0005626678466796875, -1.2516897186287679e-05, -6.997340824455023e-05, -8.344322850462049e-07, -1.9073486328125e-06, -9.298310033045709e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0009307861328125, -0.000102996826171875, -4.86541748046875, -1.9073486328125e-05, -2.288818359375e-05, -8.344646857949556e-07, -1.0728830375228426e-06, -5.91278076171875e-05, -3.0517578125e-05, -0.0002841949462890625, -5.7220458984375e-06, -1.71661376953125e-05, -3.0875205993652344e-05, 0.0, -1.0705662965774536, -0.0002460479736328125, -0.0270843505859375, 0.0, -7.82012939453125e-05, -1.5492502450942993, -3.814697265625e-06, -0.0018825531005859375, -5.7220458984375e-06, -0.0007123947143554688, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00029754638671875, -1.9073486328125e-06, -0.0017195940017700195, 0.0, -0.0003719329833984375, 0.0, -0.01018071174621582, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, -3.814697265625e-05, -1.9073484054388246e-06, -3.814697265625e-06, -5.483612312673358e-06, -2.622600959512056e-06, -8.345941751031205e-07, -4.649158654501662e-06]}], "gold_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}
{"beams": [{"score": -0.7597194599983368, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(1))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -0.09907817840576172, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.0034685134887695312, -7.62939453125e-06, -3.814697265625e-06, -0.0015697479248046875, 0.0, -0.0209808349609375, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.00024044513702392578, -2.6702880859375e-05, -0.000911712646484375, -5.91278076171875e-05, -0.0001010894775390625, -1.9073486328125e-06, -3.0517578125e-05, -0.0030343292746692896, -5.4120981076266617e-05, -0.0002040863037109375, -0.0008640289306640625, -3.814697265625e-06, -0.0006694793701171875, -1.9073486328125e-06, -0.00090789794921875, -7.62939453125e-06, 0.0, -0.0010231733322143555, -5.7220458984375e-06, -8.0108642578125e-05, -9.72747802734375e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007945279940031469, -0.013077497482299805, -0.00022900104522705078, -2.47955322265625e-05, -0.06847858428955078, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00010204307909589261, -7.62939453125e-06, -2.09808349609375e-05, -0.00034332275390625, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.0017547307070344687, -0.03953659534454346, -7.152555099310121e-07, -3.4332275390625e-05, -0.17433738708496094, -0.012599945068359375, -1.9073486328125e-06, -0.0058019161224365234, -0.0002803802490234375, 0.0, -0.00055694580078125, -0.004985809326171875, -0.00040435791015625, 0.0, -0.0005359649658203125, -0.0005893707275390625, 0.0, -0.015671730041503906, -5.14984130859375e-05, -7.62939453125e-06, 0.0, 0.0, -0.00030744075775146484, -1.33514404296875e-05, -3.814697265625e-06, -0.00042724609375, -0.0025730133056640625, -9.5367431640625e-06, -3.814697265625e-06, -0.0047306641936302185, -4.208087921142578e-05, 0.0, -0.000141143798828125, -8.96453857421875e-05, -0.003154754638671875, -3.0517578125e-05, -0.0003795623779296875, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.01730632781982422, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0016214847564697266, -1.9073486328125e-06, -0.010531425476074219, -3.814697265625e-06, -0.1047525405883789, -0.0001239776611328125, -0.000728607177734375, -1.33514404296875e-05, -0.008311271667480469, -6.4849853515625e-05, -0.00017762184143066406, 0.0, -0.0026416778564453125, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0005180268781259656, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -2.4055699928029526, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -0.09907817840576172, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.0034685134887695312, -7.62939453125e-06, -3.814697265625e-06, -0.0015697479248046875, 0.0, -0.0209808349609375, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.00024044513702392578, -2.6702880859375e-05, -0.000911712646484375, -5.91278076171875e-05, -0.0001010894775390625, -1.9073486328125e-06, -3.0517578125e-05, -0.0030343292746692896, -5.4120981076266617e-05, -0.0002040863037109375, -0.0008640289306640625, -3.814697265625e-06, -0.0006694793701171875, -1.9073486328125e-06, -0.00090789794921875, -7.62939453125e-06, 0.0, -0.0010231733322143555, -5.7220458984375e-06, -8.0108642578125e-05, -9.72747802734375e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007945279940031469, -0.013077497482299805, -0.00022900104522705078, -2.47955322265625e-05, -0.06847858428955078, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00010204307909589261, -7.62939453125e-06, -2.09808349609375e-05, -0.00034332275390625, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.0017547307070344687, -0.03953659534454346, -7.152555099310121e-07, -3.4332275390625e-05, -1.8517827987670898, -0.0006160736083984375, 0.0, -0.003902435302734375, -0.00025177001953125, 0.0, -0.00074005126953125, -0.0056476593017578125, -0.00042724609375, 0.0, -0.000583648681640625, -0.00060272216796875, 0.0, -0.013190269470214844, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.00035119056701660156, -1.33514404296875e-05, -3.814697265625e-06, -0.000385284423828125, -0.0029582977294921875, -9.5367431640625e-06, -3.814697265625e-06, -0.004590944852679968, -4.017353057861328e-05, 0.0, -0.00014495849609375, -9.1552734375e-05, -0.0030345916748046875, -3.0517578125e-05, -0.0003833770751953125, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.017372965812683105, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0016100406646728516, -1.9073486328125e-06, -0.010508537292480469, -3.814697265625e-06, -0.08869266510009766, -0.0001087188720703125, -0.0007534027099609375, -1.33514404296875e-05, -0.008105278015136719, -6.29425048828125e-05, -0.00018334388732910156, 0.0, -0.0026111602783203125, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0005188609939068556, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -3.1697326209990706, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 173, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(1))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0, players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -0.09907817840576172, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.0034685134887695312, -7.62939453125e-06, -3.814697265625e-06, -0.0015697479248046875, 0.0, -0.0209808349609375, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.00024044513702392578, -2.6702880859375e-05, -0.000911712646484375, -5.91278076171875e-05, -0.0001010894775390625, -1.9073486328125e-06, -3.0517578125e-05, -0.0030343292746692896, -5.4120981076266617e-05, -0.0002040863037109375, -0.0008640289306640625, -3.814697265625e-06, -0.0006694793701171875, -1.9073486328125e-06, -0.00090789794921875, -7.62939453125e-06, 0.0, -0.0010231733322143555, -5.7220458984375e-06, -8.0108642578125e-05, -9.72747802734375e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007945279940031469, -0.013077497482299805, -0.00022900104522705078, -2.47955322265625e-05, -0.06847858428955078, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00010204307909589261, -7.62939453125e-06, -2.09808349609375e-05, -0.00034332275390625, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.0017547307070344687, -0.03953659534454346, -7.152555099310121e-07, -3.4332275390625e-05, -0.17433738708496094, -0.012599945068359375, -1.9073486328125e-06, -0.0058019161224365234, -0.0002803802490234375, 0.0, -0.00055694580078125, -0.004985809326171875, -0.00040435791015625, 0.0, -0.0005359649658203125, -0.0005893707275390625, 0.0, -0.015671730041503906, -5.14984130859375e-05, -7.62939453125e-06, 0.0, 0.0, -0.00030744075775146484, -1.33514404296875e-05, -3.814697265625e-06, -0.00042724609375, -0.0025730133056640625, -9.5367431640625e-06, -3.814697265625e-06, -0.0047306641936302185, -4.208087921142578e-05, 0.0, -0.000141143798828125, -8.96453857421875e-05, -0.003154754638671875, -3.0517578125e-05, -0.0003795623779296875, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.01730632781982422, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0016214847564697266, -1.9073486328125e-06, -0.010531425476074219, -3.814697265625e-06, -2.3107872009277344, -4.57763671875e-05, -0.09426498413085938, 0.0, -0.029831886291503906, -0.000244140625, -0.00020992755889892578, 0.0, -3.0517578125e-05, -0.0776214599609375, 0.0, -0.0065937042236328125, -1.9073486328125e-06, -0.0067217350006103516, -4.38690185546875e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1909287422895432e-07, -5.7220458984375e-06, -0.001134181977249682, 0.0, -8.940672159951646e-06, -5.7220458984375e-06]}, {"score": -3.203468241965254, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (2)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -2.432798385620117, 0.0, -0.18639755249023438, 0.0, -0.00019073486328125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00012612342834472656, -2.86102294921875e-05, -0.001239776611328125, -0.000133514404296875, -4.76837158203125e-05, -1.9073486328125e-06, -0.00011444091796875, -0.0051641021855175495, -4.196165536995977e-05, -0.000141143798828125, -0.0019865036010742188, -3.814697265625e-06, -0.0009250640869140625, -1.9073486328125e-06, -0.0005092620849609375, -5.7220458984375e-06, 0.0, -0.0011835098266601562, -5.7220458984375e-06, -6.4849853515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0004022089415229857, -0.01456916332244873, -0.0003434419631958008, -2.6702880859375e-05, -0.07823944091796875, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00011014927440555766, -7.62939453125e-06, -2.288818359375e-05, -0.000347137451171875, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.0016500379424542189, -0.04132652282714844, -5.960462772236497e-07, -3.4332275390625e-05, -0.17985153198242188, -0.03701019287109375, -1.9073486328125e-06, -0.006434321403503418, -0.000316619873046875, 0.0, -0.000209808349609375, -0.0049152374267578125, -0.0003910064697265625, 0.0, -0.00048828125, -0.000598907470703125, 0.0, -0.015054702758789062, -5.53131103515625e-05, -7.62939453125e-06, 0.0, 0.0, -0.00029981136322021484, -1.33514404296875e-05, -3.814697265625e-06, -0.000385284423828125, -0.00264739990234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.004462442360818386, -4.208087921142578e-05, 0.0, -0.000141143798828125, -9.1552734375e-05, -0.003139495849609375, -3.0517578125e-05, -0.0003833770751953125, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.01743018627166748, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0016214847564697266, -1.9073486328125e-06, -0.010522842407226562, -3.814697265625e-06, -0.10120201110839844, -0.00011444091796875, -0.000736236572265625, -1.33514404296875e-05, -0.008358955383300781, -6.29425048828125e-05, -0.00017940998077392578, 0.0, -0.0026340484619140625, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0005187418428249657, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -3.294217553073281, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(1))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -2.6225576400756836, 0.0, -3.0517578125e-05, -0.000102996826171875, -0.0030689239501953125, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.01896679401397705, -7.62939453125e-06, -3.814697265625e-06, -0.0023174285888671875, 0.0, -0.011400222778320312, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0002652406692504883, -2.6702880859375e-05, -0.0009136199951171875, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0030506690964102745, -5.3644151194021106e-05, -0.0001735687255859375, -0.0008831024169921875, -3.814697265625e-06, -0.000713348388671875, -1.9073486328125e-06, -0.0009098052978515625, -7.62939453125e-06, 0.0, -0.001032710075378418, -5.7220458984375e-06, -8.0108642578125e-05, -9.5367431640625e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007715206011198461, -0.013087034225463867, -0.00022900104522705078, -2.47955322265625e-05, -0.0684518814086914, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00010204307909589261, -7.62939453125e-06, -2.09808349609375e-05, -0.0003528594970703125, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.0017671178793534636, -0.03928101062774658, -7.152555099310121e-07, -3.4332275390625e-05, -0.17460060119628906, -0.010690689086914062, -1.9073486328125e-06, -0.006616115570068359, -0.00028228759765625, 0.0, -0.0006351470947265625, -0.00528717041015625, -0.00041675567626953125, 0.0, -0.0005321502685546875, -0.0005893707275390625, 0.0, -0.015737533569335938, -5.14984130859375e-05, -7.62939453125e-06, 0.0, 0.0, -0.00031125545501708984, -1.33514404296875e-05, -3.814697265625e-06, -0.000423431396484375, -0.0025882720947265625, -9.5367431640625e-06, -3.814697265625e-06, -0.004730306565761566, -4.017353057861328e-05, 0.0, -0.000141143798828125, -8.96453857421875e-05, -0.0031528472900390625, -3.0517578125e-05, -0.0003795623779296875, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.017312049865722656, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0016214847564697266, -1.9073486328125e-06, -0.010528564453125, -3.814697265625e-06, -0.10653877258300781, -0.0001239776611328125, -0.000728607177734375, -1.33514404296875e-05, -0.008303642272949219, -6.4849853515625e-05, -0.00017762184143066406, 0.0, -0.0026378631591796875, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0005179076688364148, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -3.3961457129587416, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -0.09907817840576172, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.0034685134887695312, -7.62939453125e-06, -3.814697265625e-06, -0.0015697479248046875, 0.0, -0.0209808349609375, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.00024044513702392578, -2.6702880859375e-05, -0.000911712646484375, -5.91278076171875e-05, -0.0001010894775390625, -1.9073486328125e-06, -3.0517578125e-05, -0.0030343292746692896, -5.4120981076266617e-05, -0.0002040863037109375, -0.0008640289306640625, -3.814697265625e-06, -0.0006694793701171875, -1.9073486328125e-06, -0.00090789794921875, -7.62939453125e-06, 0.0, -0.0010231733322143555, -5.7220458984375e-06, -8.0108642578125e-05, -9.72747802734375e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007945279940031469, -0.013077497482299805, -0.00022900104522705078, -2.47955322265625e-05, -2.7186946868896484, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.167193638859317e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.0014190673828125, -0.0001773834228515625, -5.7220458984375e-06, 0.0, -0.0021362430416047573, -0.03981125354766846, -8.344646857949556e-07, -4.00543212890625e-05, -0.15507030487060547, -0.013704299926757812, -1.9073486328125e-06, -0.007886290550231934, -0.0003147125244140625, 0.0, -0.000514984130859375, -0.0058650970458984375, -0.0004119873046875, 0.0, -0.00055694580078125, -0.0005970001220703125, 0.0, -0.01567363739013672, -5.14984130859375e-05, -7.62939453125e-06, 0.0, 0.0, -0.00031888484954833984, -1.33514404296875e-05, -3.814697265625e-06, -0.0004253387451171875, -0.0025768280029296875, -9.5367431640625e-06, -3.814697265625e-06, -0.004717312753200531, -4.017353057861328e-05, 0.0, -0.000141143798828125, -8.96453857421875e-05, -0.00315093994140625, -3.0517578125e-05, -0.0003795623779296875, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.01735210418701172, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.001619577407836914, -1.9073486328125e-06, -0.010509490966796875, -3.814697265625e-06, -0.10430908203125, -0.0001239776611328125, -0.0007266998291015625, -1.33514404296875e-05, -0.008296012878417969, -6.4849853515625e-05, -0.00017762184143066406, 0.0, -0.0026493072509765625, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0005183843895792961, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -3.9166433384708625, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeAttack(2))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -0.09907817840576172, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.0034685134887695312, -7.62939453125e-06, -3.814697265625e-06, -0.0015697479248046875, 0.0, -0.0209808349609375, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.00024044513702392578, -2.6702880859375e-05, -0.000911712646484375, -5.91278076171875e-05, -0.0001010894775390625, -1.9073486328125e-06, -3.0517578125e-05, -0.0030343292746692896, -5.4120981076266617e-05, -0.0002040863037109375, -0.0008640289306640625, -3.814697265625e-06, -0.0006694793701171875, -1.9073486328125e-06, -0.00090789794921875, -7.62939453125e-06, 0.0, -0.0010231733322143555, -5.7220458984375e-06, -8.0108642578125e-05, -9.72747802734375e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007945279940031469, -0.013077497482299805, -0.00022900104522705078, -2.47955322265625e-05, -0.06847858428955078, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00010204307909589261, -7.62939453125e-06, -2.09808349609375e-05, -0.00034332275390625, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.0017547307070344687, -3.344845771789551, -0.00015664100646972656, -2.47955322265625e-05, -0.02559375762939453, -0.0115966796875, 0.0, -0.003205418586730957, -0.000240325927734375, 0.0, -0.000396728515625, -0.0123138427734375, -0.000446319580078125, 0.0, -0.0004711151123046875, -0.0006694793701171875, 0.0, -0.02040386199951172, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.00041222572326660156, -1.33514404296875e-05, -3.814697265625e-06, -0.0003604888916015625, -0.0031175613403320312, -9.5367431640625e-06, -3.814697265625e-06, -0.004322719294577837, -4.017353057861328e-05, 0.0, -0.000148773193359375, -9.34600830078125e-05, -0.0030269622802734375, -3.0517578125e-05, -0.0003814697265625, -1.9073486328125e-06, -3.814697265625e-05, -1.71661376953125e-05, -0.017022252082824707, -0.00023674964904785156, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0016596317291259766, -1.9073486328125e-06, -0.01068115234375, -3.814697265625e-06, -0.0968179702758789, -0.00011444091796875, -0.000732421875, -1.33514404296875e-05, -0.008011817932128906, -6.29425048828125e-05, -0.00017750263214111328, 0.0, -0.0028400421142578125, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0005187412025406957, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -4.796632560963133, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (2)), Buff(ChangeHealth(2))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -2.432798385620117, 0.0, -0.18639755249023438, 0.0, -0.00019073486328125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00012612342834472656, -2.86102294921875e-05, -0.001239776611328125, -0.000133514404296875, -4.76837158203125e-05, -1.9073486328125e-06, -0.00011444091796875, -0.0051641021855175495, -4.196165536995977e-05, -0.000141143798828125, -0.0019865036010742188, -3.814697265625e-06, -0.0009250640869140625, -1.9073486328125e-06, -0.0005092620849609375, -5.7220458984375e-06, 0.0, -0.0011835098266601562, -5.7220458984375e-06, -6.4849853515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0004022089415229857, -0.01456916332244873, -0.0003434419631958008, -2.6702880859375e-05, -0.07823944091796875, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00011014927440555766, -7.62939453125e-06, -2.288818359375e-05, -0.000347137451171875, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.0016500379424542189, -0.04132652282714844, -5.960462772236497e-07, -3.4332275390625e-05, -1.8229522705078125, -0.0023288726806640625, 0.0, -0.0037189722061157227, -0.000255584716796875, 0.0, -0.0002956390380859375, -0.00635528564453125, -0.0004253387451171875, 0.0, -0.00051116943359375, -0.0006237030029296875, 0.0, -0.013325691223144531, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.00033974647521972656, -1.52587890625e-05, -3.814697265625e-06, -0.0003376007080078125, -0.0030536651611328125, -9.5367431640625e-06, -3.814697265625e-06, -0.004317239858210087, -4.017353057861328e-05, 0.0, -0.00014495849609375, -9.34600830078125e-05, -0.003017425537109375, -3.0517578125e-05, -0.0003871917724609375, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.017561674118041992, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0016138553619384766, -1.9073486328125e-06, -0.010504722595214844, -3.814697265625e-06, -0.08884906768798828, -0.000102996826171875, -0.00075531005859375, -1.33514404296875e-05, -0.008135795593261719, -6.29425048828125e-05, -0.00018513202667236328, 0.0, -0.0026092529296875, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0005193377146497369, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -4.940194924678394, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -2.6225576400756836, 0.0, -3.0517578125e-05, -0.000102996826171875, -0.0030689239501953125, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.01896679401397705, -7.62939453125e-06, -3.814697265625e-06, -0.0023174285888671875, 0.0, -0.011400222778320312, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0002652406692504883, -2.6702880859375e-05, -0.0009136199951171875, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0030506690964102745, -5.3644151194021106e-05, -0.0001735687255859375, -0.0008831024169921875, -3.814697265625e-06, -0.000713348388671875, -1.9073486328125e-06, -0.0009098052978515625, -7.62939453125e-06, 0.0, -0.001032710075378418, -5.7220458984375e-06, -8.0108642578125e-05, -9.5367431640625e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007715206011198461, -0.013087034225463867, -0.00022900104522705078, -2.47955322265625e-05, -0.0684518814086914, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00010204307909589261, -7.62939453125e-06, -2.09808349609375e-05, -0.0003528594970703125, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.0017671178793534636, -0.03928101062774658, -7.152555099310121e-07, -3.4332275390625e-05, -1.8503971099853516, -0.0005474090576171875, 0.0, -0.004770398139953613, -0.000263214111328125, 0.0, -0.00084686279296875, -0.00588226318359375, -0.00043964385986328125, 0.0, -0.0005741119384765625, -0.000598907470703125, 0.0, -0.013285636901855469, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.00035119056701660156, -1.33514404296875e-05, -3.814697265625e-06, -0.0003795623779296875, -0.00298309326171875, -9.5367431640625e-06, -3.814697265625e-06, -0.004587487783282995, -4.017353057861328e-05, 0.0, -0.00014495849609375, -9.1552734375e-05, -0.0030307769775390625, -3.0517578125e-05, -0.0003833770751953125, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.017390131950378418, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0016100406646728516, -1.9073486328125e-06, -0.01050567626953125, -3.814697265625e-06, -0.09035968780517578, -0.0001087188720703125, -0.0007534027099609375, -1.33514404296875e-05, -0.008104324340820312, -6.29425048828125e-05, -0.00018334388732910156, 0.0, -0.0025997161865234375, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0005186226917430758, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -4.947254327871519, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 172, 154, "combo", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, combo=Battlecry(Give([Buff(ChangeAttack(2)),\n            Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -2.432798385620117, 0.0, -1.9341325759887695, 0.0, -0.0007848739624023438, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00019097328186035156, -1.33514404296875e-05, -0.0013904571533203125, -0.00014495849609375, -3.814697265625e-05, -1.9073486328125e-06, -0.000102996826171875, -0.004626560024917126, -4.434584843693301e-05, -0.0001316070556640625, -0.002010345458984375, -5.7220458984375e-06, -0.001129150390625, -1.9073486328125e-06, -0.0005588531494140625, -5.7220458984375e-06, 0.0, -0.0010461807250976562, -5.7220458984375e-06, -6.4849853515625e-05, -8.7738037109375e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.00043332253699190915, -0.014565348625183105, -0.0003358125686645508, -2.6702880859375e-05, -0.07619762420654297, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00010991086310241371, -9.5367431640625e-06, -2.288818359375e-05, -0.0003337860107421875, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.0016285959864035249, -0.041915059089660645, -7.152555099310121e-07, -3.4332275390625e-05, -0.18227005004882812, -0.026641845703125, -1.9073486328125e-06, -0.007528901100158691, -0.0002994537353515625, 0.0, -0.00026702880859375, -0.00533294677734375, -0.000385284423828125, 0.0, -0.00048828125, -0.000598907470703125, 0.0, -0.014675140380859375, -6.103515625e-05, -7.62939453125e-06, 0.0, 0.0, -0.00030171871185302734, -1.33514404296875e-05, -3.814697265625e-06, -0.0003948211669921875, -0.0026416778564453125, -9.5367431640625e-06, -1.9073486328125e-06, -0.00453563779592514, -4.208087921142578e-05, 0.0, -0.000141143798828125, -9.1552734375e-05, -0.003139495849609375, -3.0517578125e-05, -0.0003833770751953125, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.017428278923034668, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.001619577407836914, -1.9073486328125e-06, -0.010516166687011719, -3.814697265625e-06, -0.10506153106689453, -0.0001163482666015625, -0.0007343292236328125, -1.33514404296875e-05, -0.008351325988769531, -6.4849853515625e-05, -0.00017952919006347656, 0.0, -0.0026111602783203125, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0005183843895792961, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -4.995029852435778, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 173, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0, players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -0.09907817840576172, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.0034685134887695312, -7.62939453125e-06, -3.814697265625e-06, -0.0015697479248046875, 0.0, -0.0209808349609375, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.00024044513702392578, -2.6702880859375e-05, -0.000911712646484375, -5.91278076171875e-05, -0.0001010894775390625, -1.9073486328125e-06, -3.0517578125e-05, -0.0030343292746692896, -5.4120981076266617e-05, -0.0002040863037109375, -0.0008640289306640625, -3.814697265625e-06, -0.0006694793701171875, -1.9073486328125e-06, -0.00090789794921875, -7.62939453125e-06, 0.0, -0.0010231733322143555, -5.7220458984375e-06, -8.0108642578125e-05, -9.72747802734375e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007945279940031469, -0.013077497482299805, -0.00022900104522705078, -2.47955322265625e-05, -0.06847858428955078, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00010204307909589261, -7.62939453125e-06, -2.09808349609375e-05, -0.00034332275390625, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.0017547307070344687, -0.03953659534454346, -7.152555099310121e-07, -3.4332275390625e-05, -1.8517827987670898, -0.0006160736083984375, 0.0, -0.003902435302734375, -0.00025177001953125, 0.0, -0.00074005126953125, -0.0056476593017578125, -0.00042724609375, 0.0, -0.000583648681640625, -0.00060272216796875, 0.0, -0.013190269470214844, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.00035119056701660156, -1.33514404296875e-05, -3.814697265625e-06, -0.000385284423828125, -0.0029582977294921875, -9.5367431640625e-06, -3.814697265625e-06, -0.004590944852679968, -4.017353057861328e-05, 0.0, -0.00014495849609375, -9.1552734375e-05, -0.0030345916748046875, -3.0517578125e-05, -0.0003833770751953125, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.017372965812683105, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0016100406646728516, -1.9073486328125e-06, -0.010508537292480469, -3.814697265625e-06, -2.4694690704345703, -3.814697265625e-05, -0.10022258758544922, 0.0, -0.03054046630859375, -0.0002346038818359375, -0.00021183490753173828, 0.0, -3.0517578125e-05, -0.07553291320800781, 0.0, -0.0064487457275390625, -1.9073486328125e-06, -0.0067903995513916016, -4.38690185546875e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1909287422895432e-07, -5.7220458984375e-06, -0.0011307259555906057, 0.0, -8.940672159951646e-06, -5.7220458984375e-06]}, {"score": -5.098135951473068, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(1)), Buff(ChangeHealth(1))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -0.09907817840576172, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.0034685134887695312, -7.62939453125e-06, -3.814697265625e-06, -0.0015697479248046875, 0.0, -0.0209808349609375, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.00024044513702392578, -2.6702880859375e-05, -0.000911712646484375, -5.91278076171875e-05, -0.0001010894775390625, -1.9073486328125e-06, -3.0517578125e-05, -0.0030343292746692896, -5.4120981076266617e-05, -0.0002040863037109375, -0.0008640289306640625, -3.814697265625e-06, -0.0006694793701171875, -1.9073486328125e-06, -0.00090789794921875, -7.62939453125e-06, 0.0, -0.0010231733322143555, -5.7220458984375e-06, -8.0108642578125e-05, -9.72747802734375e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007945279940031469, -4.370203971862793, -4.768370445162873e-07, -2.6702880859375e-05, -0.06627368927001953, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.00014698505401611328, -5.7220458984375e-06, -2.09808349609375e-05, -0.016157150268554688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -0.0028160852380096912, -0.03291428089141846, -9.536738616588991e-07, -3.4332275390625e-05, -0.14490604400634766, -0.011720657348632812, -1.9073486328125e-06, -0.008907914161682129, -0.000308990478515625, 0.0, -0.000736236572265625, -0.005390167236328125, -0.0004444122314453125, 0.0, -0.000499725341796875, -0.0005855560302734375, 0.0, -0.015105247497558594, -4.57763671875e-05, -7.62939453125e-06, 0.0, 0.0, -0.00032269954681396484, -1.33514404296875e-05, -3.814697265625e-06, -0.0004138946533203125, -0.00266265869140625, -9.5367431640625e-06, -3.814697265625e-06, -0.004748903214931488, -3.826618194580078e-05, 0.0, -0.00014495849609375, -8.96453857421875e-05, -0.0031642913818359375, -3.0517578125e-05, -0.0003814697265625, -1.9073486328125e-06, -3.4332275390625e-05, -1.71661376953125e-05, -0.017622709274291992, -0.00022912025451660156, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.001611948013305664, -1.9073486328125e-06, -0.010441780090332031, -3.814697265625e-06, -0.10504722595214844, -0.0001239776611328125, -0.0007266998291015625, -1.33514404296875e-05, -0.008235931396484375, -6.4849853515625e-05, -0.00017762184143066406, 0.0, -0.0026302337646484375, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000517788459546864, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -5.167500978477392, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 55, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(2))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -0.09907817840576172, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.0034685134887695312, -7.62939453125e-06, -3.814697265625e-06, -0.0015697479248046875, 0.0, -0.0209808349609375, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.00024044513702392578, -2.6702880859375e-05, -0.000911712646484375, -5.91278076171875e-05, -0.0001010894775390625, -1.9073486328125e-06, -3.0517578125e-05, -0.0030343292746692896, -5.4120981076266617e-05, -0.0002040863037109375, -0.0008640289306640625, -3.814697265625e-06, -0.0006694793701171875, -1.9073486328125e-06, -0.00090789794921875, -7.62939453125e-06, 0.0, -0.0010231733322143555, -5.7220458984375e-06, -8.0108642578125e-05, -9.72747802734375e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007945279940031469, -0.013077497482299805, -0.00022900104522705078, -2.47955322265625e-05, -2.7186946868896484, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.167193638859317e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.0014190673828125, -0.0001773834228515625, -5.7220458984375e-06, 0.0, -0.0021362430416047573, -0.03981125354766846, -8.344646857949556e-07, -4.00543212890625e-05, -1.9594621658325195, -0.0006542205810546875, 0.0, -0.005321502685546875, -0.000270843505859375, 0.0, -0.000736236572265625, -0.0064334869384765625, -0.00043201446533203125, 0.0, -0.0006017684936523438, -0.0006046295166015625, 0.0, -0.013494491577148438, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.00035500526428222656, -1.33514404296875e-05, -3.814697265625e-06, -0.000377655029296875, -0.002960205078125, -9.5367431640625e-06, -3.814697265625e-06, -0.004563407972455025, -4.017353057861328e-05, 0.0, -0.00014495849609375, -9.1552734375e-05, -0.00302886962890625, -3.0517578125e-05, -0.0003833770751953125, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.01741492748260498, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.001608133316040039, -1.9073486328125e-06, -0.010485649108886719, -3.814697265625e-06, -0.08835887908935547, -0.0001087188720703125, -0.0007534027099609375, -1.33514404296875e-05, -0.008088111877441406, -6.29425048828125e-05, -0.00018334388732910156, 0.0, -0.002613067626953125, -1.9073486328125e-05, -0.0001951456069946289, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0005189802031964064, 0.0, -3.933898824470816e-06, -7.62939453125e-06]}, {"score": -5.686844515913776, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "target_func", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 173, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(1))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0, players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template10", "hole0": "BothPlayer"}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -2.6225576400756836, 0.0, -3.0517578125e-05, -0.000102996826171875, -0.0030689239501953125, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.01896679401397705, -7.62939453125e-06, -3.814697265625e-06, -0.0023174285888671875, 0.0, -0.011400222778320312, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0002652406692504883, -2.6702880859375e-05, -0.0009136199951171875, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0030506690964102745, -5.3644151194021106e-05, -0.0001735687255859375, -0.0008831024169921875, -3.814697265625e-06, -0.000713348388671875, -1.9073486328125e-06, -0.0009098052978515625, -7.62939453125e-06, 0.0, -0.001032710075378418, -5.7220458984375e-06, -8.0108642578125e-05, -9.5367431640625e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0007715206011198461, -0.013087034225463867, -0.00022900104522705078, -2.47955322265625e-05, -0.0684518814086914, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.00010204307909589261, -7.62939453125e-06, -2.09808349609375e-05, -0.0003528594970703125, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.0017671178793534636, -0.03928101062774658, -7.152555099310121e-07, -3.4332275390625e-05, -0.17460060119628906, -0.010690689086914062, -1.9073486328125e-06, -0.006616115570068359, -0.00028228759765625, 0.0, -0.0006351470947265625, -0.00528717041015625, -0.00041675567626953125, 0.0, -0.0005321502685546875, -0.0005893707275390625, 0.0, -0.015737533569335938, -5.14984130859375e-05, -7.62939453125e-06, 0.0, 0.0, -0.00031125545501708984, -1.33514404296875e-05, -3.814697265625e-06, -0.000423431396484375, -0.0025882720947265625, -9.5367431640625e-06, -3.814697265625e-06, -0.004730306565761566, -4.017353057861328e-05, 0.0, -0.000141143798828125, -8.96453857421875e-05, -0.0031528472900390625, -3.0517578125e-05, -0.0003795623779296875, -1.9073486328125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -0.017312049865722656, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0016214847564697266, -1.9073486328125e-06, -0.010528564453125, -3.814697265625e-06, -2.2947282791137695, -4.57763671875e-05, -0.09462833404541016, 0.0, -0.02978038787841797, -0.000244140625, -0.00020992755889892578, 0.0, -3.0517578125e-05, -0.07775497436523438, 0.0, -0.006591796875, -1.9073486328125e-06, -0.0067255496978759766, -4.38690185546875e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.1909287422895432e-07, -5.7220458984375e-06, -0.001134301070123911, 0.0, -8.940672159951646e-06, -5.7220458984375e-06]}, {"score": -5.813494173564038, "choice_history": [59, 124, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Twilight", " ", "Whelp", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 36, 147, 165, 41, 89, 24, 112, "Battlecry", "<EOS>", 166, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", 41, 90, 24, 112, "Greater", "Than", "<EOS>", 164, 41, 89, 24, 112, "Count", "<EOS>", 164, 41, 88, 24, 112, "Card", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 19, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 172, 154, "value", "<EOS>", 26, 117, "0", "<EOS>", 41, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 165, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Health", "<EOS>", 164, 56, 51, 130, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(1))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)), Battlecry(Give([Buff(\n            ChangeAttack(2)), Buff(ChangeHealth(1))]), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole4": "player", "_type": "Template0", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Num", "n": 0}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template17"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template18"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Template10", "hole0": "SelfSelector"}], "func": {"_type": "Name", "id": "Battlecry"}}]}}], "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template18"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template11"}], "func": {"_type": "Template7"}}}], "hole1": "MinionCard", "hole6": [{"hole2": 1, "hole1": 2, "_type": "Template8", "hole0": "Minion"}], "hole0": "TwilightWhelp", "hole3": "create_minion"}, "score_history": [-2.09808349609375e-05, -0.0001239776611328125, -1.0967194612021558e-05, -1.2397689715726301e-05, 0.0, -1.1920201359316707e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -5.7220458984375e-06, -4.887576324108522e-06, -6.115436553955078e-05, -8.344646857949556e-07, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.03351402282714844, -5.14984130859375e-05, -6.4849853515625e-05, -0.09242630004882812, -1.9073486328125e-06, -0.09907817840576172, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.0034685134887695312, -7.62939453125e-06, -3.814697265625e-06, -0.0015697479248046875, 0.0, -3.9459285736083984, -0.005931854248046875, -0.013358116149902344, -4.57763671875e-05, -3.814697265625e-05, 0.0, 0.0, -0.0028361082077026367, -0.00023090839385986328, -0.4299783706665039, -0.0004482269287109375, -0.0001373291015625, -1.9073486328125e-06, 0.0, -0.0019620792008936405, -0.0001816749427234754, -0.00012969970703125, -0.0008525848388671875, -1.9073486328125e-06, -0.001750946044921875, -1.9073486328125e-06, -0.001346588134765625, -5.7220458984375e-06, 0.0, -0.000613093376159668, -5.7220458984375e-06, -7.62939453125e-05, -8.7738037109375e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.00065183499827981, -0.014077067375183105, -0.00022709369659423828, -2.47955322265625e-05, -0.05181312561035156, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.989731188397855e-05, -7.62939453125e-06, -2.09808349609375e-05, -0.000225067138671875, -8.58306884765625e-05, -3.814697265625e-06, 0.0, -0.0015169751131907105, -0.043552517890930176, -7.152555099310121e-07, -3.4332275390625e-05, -0.1907367706298828, -0.001659393310546875, -3.814697265625e-06, -0.008150218985974789, -0.0002231597900390625, 0.0, -0.018442153930664062, -0.007904052734375, -0.00047206878662109375, 0.0, -0.0003833770751953125, -0.000484466552734375, 0.0, -0.017120361328125, -6.103515625e-05, -7.62939453125e-06, 0.0, 0.0, -0.00031316280364990234, -1.33514404296875e-05, -3.814697265625e-06, -0.0003795623779296875, -0.0026397705078125, -9.5367431640625e-06, -1.9073486328125e-06, -0.004486762452870607, -4.017353057861328e-05, 0.0, -0.00014495849609375, -8.96453857421875e-05, -0.0031070709228515625, -3.0517578125e-05, -0.0003871917724609375, -1.9073486328125e-06, -3.4332275390625e-05, -1.71661376953125e-05, -0.01708507537841797, -0.00023293495178222656, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.001615762710571289, -1.9073486328125e-06, -0.010493278503417969, -3.814697265625e-06, -0.1310863494873047, -0.0001239776611328125, -0.0007381439208984375, -1.33514404296875e-05, -0.008222579956054688, -6.67572021484375e-05, -0.00017571449279785156, 0.0, -0.0002727508544921875, -0.007076263427734375, -1.9073486328125e-06, 0.0, -0.11707496643066406, -0.00016021728515625, -0.11383056640625, -0.028406143188476562, -0.0016155242919921875, -1.9073486328125e-06, -3.814697265625e-06, -0.02817654423415661, -1.537799835205078e-05, -6.29425048828125e-05, -0.00954437255859375, -1.33514404296875e-05, -0.006304740905761719, -1.9073486328125e-06, -0.0013408660888671875, -9.5367431640625e-06, 0.0, -0.0005667209625244141, -5.7220458984375e-06, -8.0108642578125e-05, -0.00012969970703125, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0009689319413155317, -0.013371109962463379, -0.0002269744873046875, -2.47955322265625e-05, -0.05156517028808594, -5.7220458984375e-06, 0.0, 0.0, 0.0, -9.369845065521076e-05, -7.62939453125e-06, -2.09808349609375e-05, -0.000377655029296875, -9.34600830078125e-05, -5.7220458984375e-06, 0.0, -0.0018071746453642845, -0.0412064790725708, -5.960462772236497e-07, -3.24249267578125e-05, -0.20194721221923828, -0.0062713623046875, -5.7220458984375e-06, -0.0029567480087280273, -0.000301361083984375, 0.0, -5.7220458984375e-06, 0.0, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.932524800300598e-07, -3.814697265625e-06, -0.001075865002349019, 0.0, -6.318082796497038e-06, -3.814697265625e-06]}], "gold_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(2))), SelfSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}
