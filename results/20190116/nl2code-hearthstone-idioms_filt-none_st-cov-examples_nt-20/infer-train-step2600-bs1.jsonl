{"index": 0, "beams": [{"choice_history": [59, 124, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 51, 130, "Destroy", "<EOS>", 41, 89, 24, 112, "Weapon", "Selector", "<EOS>", 164, 51, 130, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 3, "hole2": 2}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"hole0": "Destroy", "_type": "Template10"}, {"_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template10"}]}]}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template17"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "hole1": "MinionCard"}, "score": -0.15363510837809002, "score_history": [-3.814697265625e-06, -7.05718994140625e-05, -0.00020299320749472827, -0.011391514912247658, -0.002518639899790287, -0.0036235542502254248, -1.1919328244403005e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000263214111328125, -4.57763671875e-05, -7.62939453125e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.03139742091298103, -9.930133819580078e-05, -0.0006503388285636902, -0.011670589447021484, -0.00021528065553866327, -4.52994936495088e-06, -3.4332275390625e-05, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, 0.0, -1.1801716937043238e-05, -1.1920928244535389e-07, -2.872943878173828e-05, 0.0, -2.86102294921875e-05, -0.0011749267578125, -1.9073486328125e-06, -0.020613789558410645, 0.0, -0.00116729736328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.867812382755801e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.0005331039428710938, 0.0, -0.0013651223853230476, -0.024757150560617447, -0.0014171600341796875, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.03414727747440338, -0.00017571449279785156, 0.0, -7.82012939453125e-05, -0.0002593994140625, 0.0, -0.004684308543801308, -3.2782554626464844e-05, 0.0, -2.47955322265625e-05, 0.0, -0.00011456011270638555, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001678466796875, -0.00028753263177350163, 0.0, -1.0728830375228426e-06, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}]}
{"index": 1, "beams": [{"choice_history": [59, 126, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Ancestral", " ", "Healing", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 41, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 46, 112, "self", "<EOS>", 64, 81, 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}], "value": {"_type": "NameConstant", "value": true}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "AncestralHealing", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.6624847288919682, "score_history": [-0.000141143798828125, -3.814697265625e-05, -8.82148651726311e-06, -0.00019095504831057042, -1.7166021279990673e-05, -1.191991032101214e-06, -5.483625955093885e-06, -1.4305104514278355e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -8.58306884765625e-05, -0.0018768310546875, -3.0517578125e-05, -0.00026702880859375, -2.47955322265625e-05, -9.5367431640625e-06, -1.8358061424805783e-05, -3.516674041748047e-05, -7.867782187531702e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.49276524502784e-05, -5.006777428206988e-06, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, -0.010865211486816406, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.91278076171875e-05, -0.00021922588348388672, 0.0, -0.000148773193359375, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -8.58306884765625e-05, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004425048828125, 0.0, -3.0517578125e-05, 0.0, -0.0031397342681884766, 0.0, -8.0108642578125e-05, 0.0, -0.00013613695045933127, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, -0.5318813323974609, -0.0001430511474609375, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, -4.00543212890625e-05, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.008319854736328125, -2.09808349609375e-05, -0.0007505416870117188, -7.62939453125e-05, -0.0001583099365234375, 0.0, -6.103515625e-05, -3.814697265625e-06, -0.00018310546875, 0.0, -0.0193787794560194, -1.0728830375228426e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0002155303955078125, 0.0, -0.0031833648681640625, 0.0, -0.0038449764251708984, -1.9073486328125e-06, -2.6702880859375e-05, -0.001068115234375, -0.0004138946533203125, -1.9073486328125e-06, 0.0, -0.004001617431640625, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.0009555816650390625, 0.0, -0.0009622573852539062, -1.9073486328125e-06, -0.017832860350608826, -1.9073486328125e-06, -0.0013790130615234375, 0.0, -0.0009679794311523438, -2.0265579223632812e-06, -0.02227497100830078, -0.00017547607421875, -1.9073486328125e-06, -0.000133514404296875, 0.0, -0.0008411407470703125, 0.0, -1.9073486328125e-06, 0.0, -0.0012466907501220703, -1.9073486328125e-06, -0.000152587890625, 0.0, -0.01123809814453125, 0.0, -0.009862899780273438, -0.000640869140625, -0.0016156435012817383, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}]}
{"index": 2, "beams": [{"choice_history": [59, 127, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 180, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 22, 108, 166, 41, 87, 16, 82, 16, 82, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 41, 87, 16, 82, 16, 82, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 41, 87, 16, 82, 16, 82, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 64, 81, 164, 46, 112, "card", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "<UNK>", "<EOS>", 76, 146, 24, 112, "card", "<EOS>", "summon", "<EOS>", 166, 46, 112, "player", "<EOS>", 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 41, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 161, 13, 164, 48, 117, "7", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}], "_type": "List"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}, "args": [{"_type": "Name", "id": "<UNK>"}]}}, {"hole0": {"_type": "Name", "id": "card"}, "_type": "Template9", "hole1": "summon", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Name", "id": "player"}}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Name", "id": "player"}}]}]}], "hole2": [{"_type": "Expr", "value": {"hole0": "Animal Companion", "_type": "Template3", "hole3": "COMMON", "hole1": 3, "hole2": "HUNTER"}}], "hole3": "use", "hole0": "AnimalCompanion", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "values": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"hole0": "super", "_type": "Template10"}}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Name", "id": "player"}}]}}], "op": {"_type": "And"}}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -4.262777468290068, "score_history": [-4.1961669921875e-05, -0.0026874542236328125, -8.4638240878121e-06, -2.9682672902708873e-05, -0.0031975372694432735, -1.0120798833668232e-05, -6.198883056640625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0002079010009765625, -0.0001392364501953125, -0.00011681827891152352, -5.7816505432128906e-05, -2.3841855067985307e-07, -0.0010051727294921875, -6.079655122448457e-06, -1.9073486328125e-06, -0.0032263994216918945, 0.0, -0.000751495361328125, 0.0, -0.0003204345703125, 0.0, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.841255187988281e-06, -7.62939453125e-06, -0.42780590057373047, -0.0009937286376953125, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.531178612727672e-05, -6.866455078125e-05, -3.0636783776571974e-05, 0.0, -0.0001277923583984375, -4.00543212890625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012969970703125, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.011269569396972656, 0.0, -3.4332275390625e-05, -6.103515625e-05, -1.9073486328125e-06, -0.002238029148429632, -1.9073486328125e-06, -0.005337715148925781, -0.000621795654296875, -0.00307464599609375, -0.004840850830078125, -0.000476837158203125, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0001544952392578125, -0.000225067138671875, -8.20159912109375e-05, -0.0022182464599609375, -1.9073486328125e-06, -0.0040149688720703125, -1.9073486328125e-06, -0.00021958351135253906, -5.7220458984375e-06, -0.0017709732055664062, -7.62939453125e-06, -0.011071324348449707, -1.1444091796875e-05, -0.04018604755401611, -5.7816505432128906e-05, -1.0645159482955933, -4.00543212890625e-05, -0.0006427764892578125, -0.0052738189697265625, -1.71661376953125e-05, 0.0, -0.000125885009765625, -8.0108642578125e-05, -0.0004558563232421875, -0.00081634521484375, -0.1874685287475586, -0.000171661376953125, -8.0108642578125e-05, -1.9073486328125e-06, -0.0002231597900390625, -7.62939453125e-05, -0.00171661376953125, -3.814697265625e-05, -0.018884778022766113, -3.24249267578125e-05, -0.0338740348815918, -5.137920379638672e-05, -0.9070858955383301, -5.7220458984375e-06, -0.0005741119384765625, -0.001552581787109375, -2.288818359375e-05, 0.0, -0.0001392364501953125, -0.0001068115234375, -0.001216888427734375, -0.0005645751953125, -0.2624368667602539, -0.0002117156982421875, -0.000179290771484375, -1.9073486328125e-06, -0.0002803802490234375, -6.4849853515625e-05, -0.0015583038330078125, -1.9073486328125e-05, -0.015545010566711426, -2.47955322265625e-05, -0.03444719314575195, -5.507469177246094e-05, -0.9960750341415405, -5.7220458984375e-06, -0.02654743194580078, -6.866455078125e-05, -0.0005702972412109375, -2.47955322265625e-05, 0.0, -0.0192716121673584, -1.9073486328125e-06, -0.0002593994140625, -0.000972747802734375, -0.00035858154296875, 0.0, -0.03346824645996094, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.005703568458557129, -7.62939453125e-06, -0.000232696533203125, -0.000133514404296875, 0.0, -0.008275860920548439, -4.017286846647039e-05, -0.0029697418212890625, -0.00086212158203125, -0.012341499328613281, 0.0, -0.01632506400346756, -3.933906555175781e-06, -0.0034009218215942383, -1.71661376953125e-05, -5.14984130859375e-05, -7.62939453125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00341033935546875, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.000194549560546875, 0.0, -0.0010662078857421875, -3.814697265625e-06, -2.47955322265625e-05, -0.0033969879150390625, 0.0, 0.0, -0.0001220703125, 0.0, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -0.0013790130615234375, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -0.00022912025451660156, 0.0, -2.86102294921875e-05, -0.0004749298095703125, -9.5367431640625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -8.106230234261602e-05, 0.0, -0.0008411407470703125, -5.7220458984375e-05, -1.8477434423402883e-05, 0.0, -4.1961669921875e-05, -0.000278472900390625, -8.58306884765625e-05, -0.0004425048828125, -0.00018310546875, -0.000621795654296875, -0.0007085800170898438, -4.76837158203125e-05, -0.0001583099365234375, -0.0017070770263671875, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.0016617774963378906, -3.933906555175781e-06, -0.0014553070068359375, 0.0, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.000766754150390625, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0062427520751953125, -4.76837158203125e-05, -0.0006561279296875, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -0.0016956329345703125, 0.0, -3.9696693420410156e-05, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -0.0002880096435546875, -0.034641265869140625, -1.9073486328125e-05, -0.000263214111328125, -3.814697265625e-06, -0.00015842914581298828, 0.0], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}]}
{"index": 3, "beams": [{"choice_history": [59, 126, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"body": [{"hole0": {"_type": "Name", "id": "minion"}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template18"}]}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "target": {"_type": "Name", "id": "minion"}}], "hole2": [{"_type": "Expr", "value": {"hole0": "Arcane Explosion", "_type": "Template3", "hole3": "FREE", "hole1": 2, "hole2": "MAGE"}}], "hole3": "use", "hole0": "ArcaneExplosion", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.07532486885511247, "score_history": [-0.0005130767822265625, -0.0002841949462890625, -2.3841855067985307e-07, -1.4305104514278355e-06, -1.1920928244535389e-07, -5.722045443690149e-06, -2.7418097943154862e-06, -1.3112994565744884e-05, -2.6702880859375e-05, -0.0001544952392578125, -4.00543212890625e-05, -0.00110626220703125, -0.000179290771484375, -1.2397689715726301e-05, -0.00010848040983546525, -2.3841830625315197e-06, -5.7220458984375e-06, -0.0003488647344056517, 0.0, -0.029287338256835938, 0.0, -0.014336705207824707, 0.0, -4.38690185546875e-05, 0.0, -3.1232822948368266e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -2.7060508728027344e-05, -7.259845733642578e-05, -0.003631591796875, -0.0001201629638671875, -8.20159912109375e-05, -0.000514984130859375, -5.7220458984375e-06, -7.724761962890625e-05, 0.0, -4.7802859626244754e-05, 0.0, -0.0001697540283203125, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.000274658203125, 0.0, -0.0001010894775390625, -5.7220458984375e-06, -0.0003871917724609375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0014899969100952148, -5.960462772236497e-07, -0.00052642822265625, -2.09808349609375e-05, -0.0001697540283203125, 0.0, -3.4332275390625e-05, 0.0, -0.00362241268157959, -0.0001811981201171875, -0.000499725341796875, -1.9073486328125e-06, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001621246337890625, -1.52587890625e-05, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, -4.00543212890625e-05, -0.0013030767440795898, -3.814697265625e-06, -0.00014686581562273204, -9.5367431640625e-05, -9.5367431640625e-06, -8.20159912109375e-05, -0.000240325927734375, -3.814697265625e-06, -1.9073486328125e-06, -0.00020956993103027344, -1.3828182090946939e-05, -0.004145066253840923, -4.0531076592742465e-06, -3.0517578125e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -5.340576171875e-05, 0.0, -0.0010013580322265625, -1.9073486328125e-06, -0.0010693073272705078, -2.384185791015625e-06, -3.4332275390625e-05, -0.0003662109375, -7.62939453125e-06, -6.67572021484375e-05, -0.007241725921630859, -0.00013625324936583638], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}]}
{"index": 4, "beams": [{"choice_history": [59, 126, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "c", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 177, 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"body": [{"hole0": {"_type": "Name", "id": "player"}, "_type": "Template9", "hole1": "draw"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}]}, "target": {"_type": "Name", "id": "c"}}], "hole2": [{"_type": "Expr", "value": {"hole0": "Arcane Intellect", "_type": "Template3", "hole3": "FREE", "hole1": 3, "hole2": "MAGE"}}], "hole3": "use", "hole0": "ArcaneIntellect", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.4099929183212154, "score_history": [-4.57763671875e-05, -0.0001010894775390625, -1.1801649634435307e-05, -1.4424220353248529e-05, -3.933906555175781e-06, -3.8111465983092785e-06, -1.1920928244535389e-07, -1.5616416931152344e-05, -4.38690185546875e-05, -2.47955322265625e-05, -0.000621795654296875, -0.00016021728515625, -0.0002422332763671875, -3.4689302992774174e-05, -7.80820773798041e-05, -5.590759246842936e-05, -3.254413604736328e-05, -0.00013433984713628888, -3.814697265625e-06, -0.3520088195800781, 0.0, -0.034824371337890625, 0.0, -3.445148468017578e-05, 0.0, -6.890296936035156e-05, 0.0, -2.288818359375e-05, -4.57763671875e-05, -5.7220458984375e-05, -1.4901160284352954e-05, -3.814697265625e-05, -0.005619049072265625, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.752373282215558e-05, -4.57763671875e-05, -7.748603820800781e-06, 0.0, -0.0001087188720703125, -2.6702880859375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.34600830078125e-05, -0.00061798095703125, -1.9073486328125e-06, 0.0, -0.004793882369995117, -5.7220458984375e-06, -0.0021696090698242188, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -0.0007951259613037109, -0.00025177001953125, -0.0003833770751953125, -0.0031003952026367188, -2.288818359375e-05, -3.7670135498046875e-05, -4.0531158447265625e-06, -0.0002155303955078125, -0.001903533935546875, -0.0003757476806640625, -0.0001468658447265625, -3.24249267578125e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0003185272216796875, -2.47955322265625e-05], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}]}
{"index": 5, "beams": [{"choice_history": [59, 126, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 180, 64, 81, 164, 46, 112, "targets", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 76, 146, 24, 112, "targets", "<EOS>", "append", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 64, 81, 164, 46, 112, "target", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "targets", "<EOS>", 76, 146, 24, 112, "target", "<EOS>", "damage", "<EOS>", 165, 56, 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}}, {"hole0": {"_type": "Name", "id": "targets"}, "_type": "Template9", "hole1": "append", "hole2": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}, "args": [{"_type": "Name", "id": "targets"}]}}, {"hole0": {"_type": "Name", "id": "target"}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Template18"}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template19"}]}]}, "target": {"_type": "Name", "id": "i"}}], "hole2": [{"_type": "Expr", "value": {"hole0": "Arcane Missiles", "_type": "Template3", "hole3": "FREE", "hole1": 1, "hole2": "MAGE"}}], "hole3": "use", "hole0": "ArcaneMissiles", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.5387382149116817, "score_history": [-2.288818359375e-05, -5.91278076171875e-05, 0.0, -7.152555099310121e-07, -1.1920928244535389e-07, -7.15233909431845e-07, -9.536697689327411e-06, -7.033347174001392e-06, -3.0517578125e-05, -3.24249267578125e-05, -8.20159912109375e-05, -0.0006237030029296875, -1.1444091796875e-05, -7.867782187531702e-06, -0.0001559257070766762, -8.702239938429557e-06, -3.576278118089249e-07, -4.0053149859886616e-05, 0.0, -0.03201115131378174, 0.0, -0.014263391494750977, 0.0, -1.33514404296875e-05, -2.6702880859375e-05, -5.948543184786104e-05, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -5.042552947998047e-05, -0.00010538101196289062, -0.001739501953125, -4.1961669921875e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -0.00017665544874034822, -5.7220458984375e-06, -1.4901146641932428e-05, 0.0, -1.33514404296875e-05, -0.00017547607421875, 0.0, -0.000186920166015625, 0.0, -0.0003147125244140625, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.0015010833740234375, -4.38690185546875e-05, -9.5367431640625e-06, 0.0, -0.00738215446472168, -6.103515625e-05, -0.0020093917846679688, 0.0, -1.9073486328125e-06, 0.0, -0.0016957500483840704, -0.004404187202453613, -0.0016841888427734375, -0.00036144256591796875, -7.62939453125e-06, -1.811971014831215e-05, -2.2649765014648438e-06, -0.000675201416015625, -1.9073486328125e-06, -0.008699417114257812, -1.9073486328125e-06, -0.00012969970703125, 0.0, -0.0003529787063598633, -9.5367431640625e-06, -0.00048148632049560547, 0.0, -1.9073486328125e-06, -0.34122657775878906, -0.010591506958007812, -0.000946044921875, -1.52587890625e-05, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -0.0012665987014770508, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001239776611328125, 0.0, -5.14984130859375e-05, 0.0, -0.009154914878308773, -1.1444091796875e-05, -0.0005036592483520508, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0001068115234375, 0.0, -9.34600830078125e-05, 0.0, -3.635883331298828e-05, -1.9073486328125e-06, -0.00047194957733154297, 0.0, -0.0011349915293976665, -1.9073486328125e-06, -0.0006103515625, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.006817817687988281, -1.9073486328125e-06, -0.029572004452347755, -9.34600830078125e-05, -4.1961669921875e-05, -0.0001277923583984375, -3.0517578125e-05, -0.000171661376953125, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0005168914794921875, 0.0, -0.0023140907287597656, 0.0, -0.0009739398374222219, -3.814697265625e-06, -0.0027618408203125, -2.09808349609375e-05, -3.814697265625e-06, -4.9591064453125e-05, -1.1444091796875e-05, -0.025864124298095703, -5.7220458984375e-06, -0.000148773193359375, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000274658203125, 0.0, -0.00016057454922702163, -1.1444091796875e-05, -0.0024008750915527344, -9.5367431640625e-06, -6.866455078125e-05, -0.0001201629638671875, -4.00543212890625e-05, -0.0011548943584784865, -1.9073486328125e-06, -0.0016307830810546875, -0.0001983642578125, -0.0003490447998046875, 0.0, -0.013588904403150082, -1.9073468138230965e-06, -0.00011419635120546445, -1.4543427823809907e-05, -7.82012939453125e-05, -0.0021619796752929688, -3.0517578125e-05, 0.0, -0.0003052949905395508, -1.2040087312925607e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}]}
{"index": 6, "beams": [{"choice_history": [59, 126, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Arcane", " ", "Shot", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template17"}]}, {"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "ArcaneShot", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.04450415314566669, "score_history": [-0.000720977783203125, -6.67572021484375e-05, -1.9073468138230965e-06, -8.4638240878121e-06, -1.9073486328125e-06, -0.008726455271244049, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.00057220458984375, -8.0108642578125e-05, -0.0003948211669921875, -4.38690185546875e-05, -1.9073486328125e-06, -8.392333984375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -5.602820692729438e-06, -9.369827603222802e-05, -3.576277322281385e-06, -1.1920928244535389e-07, -5.340576171875e-05, -5.14984130859375e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.6702880859375e-05, 0.0, -0.004204869270324707, 0.0, -0.0020694732666015625, 0.0, -2.288818359375e-05, -0.00015020370483398438, 0.0, -0.015453338623046875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-05, -0.000255584716796875, -7.43865966796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0007266998291015625, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -0.00038241653237491846, -2.09808349609375e-05, -8.96453857421875e-05, 0.0, -2.7298927307128906e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.3589859008789062e-05, 0.0, -0.0009870529174804688, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.00011574735981412232, -1.3470649719238281e-05, -0.0009569172980263829, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -6.29425048828125e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.003337860107421875, -0.000102996826171875, -1.1444091796875e-05, -1.33514404296875e-05, -0.0006885528564453125, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -7.522106170654297e-05, 0.0, -6.389409099938348e-05, -5.364403477869928e-06, -0.0003376007080078125, -4.00543212890625e-05, -0.001285552978515625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00011980532144661993, -1.1920928244535389e-07, -5.7220458984375e-06, -0.001003265380859375, -2.86102294921875e-05, -7.62939453125e-06, -0.00023555755615234375, -5.1498056564014405e-05], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}]}
{"index": 7, "beams": [{"choice_history": [59, 124, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "_type": "Template8", "hole1": 5, "hole2": 2}], "hole2": [{"_type": "Expr", "value": {"hole0": "Arcanite Reaper", "_type": "Template3", "hole3": "COMMON", "hole1": 5, "hole2": "WARRIOR"}}], "hole3": "create_weapon", "hole0": "ArcaniteReaper", "hole1": "WeaponCard"}, "score": -0.0749886767598511, "score_history": [-3.814697265625e-06, -0.00038909912109375, -6.294052582234144e-05, -5.0782055041054264e-05, -6.186861719470471e-05, -0.0008992680232040584, -1.1920928244535389e-07, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.00031280517578125, -1.33514404296875e-05, -0.00010251473577227443, -1.9311904907226562e-05, -5.20944558957126e-05, -1.251697449333733e-05, -0.0054916320368647575, 0.0, -0.06391274183988571, 0.0, -0.00025165078113786876, 0.0, -0.0006891489028930664, -1.9073486328125e-06, -0.0022039413452148438, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -2.0980818590032868e-05, -2.34842264035251e-05, -5.447860894491896e-05, 0.0, -0.00014078617095947266, 0.0], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}]}
{"index": 8, "beams": [{"choice_history": [59, 126, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Assassinate", "<EOS>", 48, 117, "5", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "Assassinate", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.1476492289154976, "score_history": [-3.814697265625e-06, -0.014993667602539062, -3.278253643657081e-05, -1.585470999998506e-05, -0.00012549664825201035, -3.814697265625e-06, 0.0, -7.62939453125e-06, -9.34600830078125e-05, -1.52587890625e-05, -0.000713348388671875, -0.00022125244140625, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1920922133867862e-06, -7.867813110351562e-06, -6.29425048828125e-05, -1.9073486328125e-06, -7.748303323751315e-05, -2.9802317840221804e-06, 0.0, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -0.016031861305236816, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001010894775390625, -0.06508731842041016, -1.9073486328125e-06, -0.0009746551513671875, -0.00011444091796875, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -0.0001277923583984375, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0002593994140625, -3.814697265625e-06, -0.0001888275146484375, 0.0, -0.011168599128723145, 0.0, -8.58306884765625e-05, 0.0, -1.919269561767578e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3947486877441406e-05, -1.52587890625e-05, -0.028349876403808594, 0.0, -3.62396240234375e-05, -3.0517578125e-05, -0.000324249267578125, -4.220008850097656e-05, -3.24249267578125e-05, -1.71661376953125e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0005512237548828125, -0.0006351470947265625, -9.5367431640625e-06, -0.00018310546875, -0.00091552734375, 0.0, -0.000102996826171875, -3.814697265625e-06, -0.00011265277862548828, 0.0, -0.002095077885314822, 0.0, -3.4332275390625e-05, -0.0014057159423828125, 0.0, -0.0017920732498168945, -1.1444091796875e-05], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}]}
{"index": 9, "beams": [{"choice_history": [59, 126, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Backstab", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 154, "filter_func", "<EOS>", 21, 106, 3, 141, "target", "<EOS>", 18, 85, 5, 165, 42, 92, 16, 82, 24, 112, "target", "<EOS>", "health", "<EOS>", 161, 7, 164, 41, 87, 16, 82, 24, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 41, 87, 16, 82, 24, 112, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template17"}]}, {"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"body": {"_type": "BoolOp", "values": [{"_type": "Compare", "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Name", "id": "target"}}}], "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Name", "id": "target"}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Name", "id": "target"}}}], "op": {"_type": "And"}}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template6"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "Backstab", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.26620472413147667, "score_history": [-0.000408172607421875, -4.38690185546875e-05, -4.100723162991926e-05, -1.7881377516459906e-06, -0.0001341705210506916, -4.649161837733118e-06, -2.1457672119140625e-06, -1.52587890625e-05, -0.000518798828125, -5.7220458984375e-06, -0.0003795623779296875, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265558760002023e-06, -5.7220458984375e-06, -0.0001239776611328125, -5.7220458984375e-06, -8.830995648168027e-05, -1.1920858014491387e-05, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, 0.0, -7.987022399902344e-06, -2.2649765014648438e-06, -0.06731903553009033, -3.814697265625e-06, -0.0001659393310546875, 0.0, -3.24249267578125e-05, -0.00022137165069580078, 0.0, -0.022403717041015625, -4.00543212890625e-05, -7.05718994140625e-05, 0.0, -2.288818359375e-05, -2.288818359375e-05, -0.0001163482666015625, 0.0, -2.6702880859375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.00019073486328125, 0.0, -0.02519667148590088, 0.0, -7.62939453125e-06, -0.014122962951660156, -0.001689910888671875, -0.000843048095703125, -0.00020599365234375, -0.0009670257568359375, -0.0001163482666015625, -0.005461573600769043, -2.1457672119140625e-06, -0.001445770263671875, -0.00026702880859375, -0.000255584716796875, -0.0001430511474609375, -0.003170013427734375, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00366973876953125, 0.0, -0.0030603408813476562, 0.0, -0.007214784622192383, -2.3841855067985307e-07, -0.0002422332763671875, -0.009596824645996094, -0.0016155242919921875, -0.0056972503662109375, -7.2479248046875e-05, -6.29425048828125e-05, -3.814697265625e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.002629399299621582, -1.9073486328125e-06, -0.016067862510681152, 0.0, -0.0016231536865234375, -0.000461578369140625, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.004017949104309082, -1.9073486328125e-06, -0.02815687656402588, 0.0, -0.022699713706970215, 0.0, -0.0004132985195610672, 0.0, -0.0001277923583984375, -1.71661376953125e-05, -0.0013866424560546875, -4.780292510986328e-05, -7.62939453125e-06, -0.0031137466430664062, 0.0, -7.62939453125e-06, -9.1552734375e-05, -0.0001163482666015625, -0.00032457063207402825, 0.0, -1.0967213711410295e-05, 0.0, -5.7220458984375e-06, -3.24249267578125e-05, -0.0002384185791015625, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -0.0001583099365234375, -3.62396240234375e-05, -5.7220458984375e-06, -0.001171112060546875, -0.001346588134765625, 0.0, -4.00543212890625e-05, -1.52587890625e-05, -2.5510787963867188e-05, 0.0, -0.00045848957961425185, -1.311301275563892e-06, -0.000576019287109375, -0.00014495849609375, -0.00034332275390625, -3.814697265625e-06, 0.0, -0.00026702880859375, 0.0, -5.7220458984375e-06, 0.0, -0.0004150867462158203, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0004253387451171875, -0.0002899169921875, -6.29425048828125e-05, -0.0007318258285522461, -1.3470642443280667e-05], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}]}
{"index": 10, "beams": [{"choice_history": [59, 126, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 48, 117, "4", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 48, 117, "4", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "use", "hole0": "BlessingOfKings", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.10503300769141077, "score_history": [-5.7220458984375e-06, -0.000194549560546875, -7.855583680793643e-05, -0.0007307258201763034, -3.325890065752901e-05, -0.0002632986579556018, -5.960419002803974e-07, -2.5391578674316406e-05, -1.1682462172757369e-05, -1.1444091796875e-05, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-05, -4.00543212890625e-05, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002422332763671875, -1.2040087312925607e-05, -7.677078247070312e-05, -0.0002822823007591069, -0.00010538101196289062, -4.9114227294921875e-05, -0.0012700557708740234, -6.4849853515625e-05, -9.1552734375e-05, -7.033198926365003e-06, -9.894371032714844e-06, -3.0517578125e-05, -1.33514404296875e-05, -6.866455078125e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.00014531612396240234, -0.010330438613891602, -1.1920928244535389e-07, -0.000194549560546875, -0.00020599365234375, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.0001430511474609375, -2.288818359375e-05, -2.6702880859375e-05, 0.0, -6.866455078125e-05, 0.0, -0.000591278076171875, -5.7220458984375e-06, -0.0004177093505859375, 0.0, -0.001076817512512207, -3.814697265625e-06, -4.0531158447265625e-06, 0.0, -2.7298927307128906e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.20159912109375e-05, -0.016597747802734375, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -7.080794603098184e-05, -4.76837158203125e-05, -4.088878631591797e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -5.91278076171875e-05, 0.0, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -0.012912750244140625, -0.00011444091796875, -1.9073486328125e-06, -7.62939453125e-06, -0.0003604888916015625, 0.0, -6.771087646484375e-05, -9.5367431640625e-06, -9.1552734375e-05, 0.0, -0.04417956992983818, -9.775113539944869e-06, 0.0, -0.001102447509765625, 0.0, -0.00010320544242858887, -3.814697265625e-06, -3.814697265625e-06, -0.0038595199584960938, -9.918212890625e-05, 0.0, -3.24249267578125e-05, 0.0, -9.72747802734375e-05, -1.52587890625e-05, -0.000125885009765625, 0.0, -0.0074661970138549805, 0.0, 0.0, -4.38690185546875e-05, 0.0, -7.110834121704102e-05, 0.0], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}]}
{"index": 11, "beams": [{"choice_history": [59, 126, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 57], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "change_attack", "hole2": [{"_type": "Template19"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "BlessingOfMight", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.09707570532554399, "score_history": [-4.57763671875e-05, -0.0001068115234375, -5.793403761344962e-05, -0.0006131674745120108, -2.312633478140924e-05, -0.0004932880401611328, -8.904088463168591e-05, -3.3617005101405084e-05, -1.680836794548668e-05, -1.71661376953125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.0010166168212890625, -0.000133514404296875, -2.288818359375e-05, -0.0001392364501953125, 0.0, -0.000919342041015625, -3.8265588955255225e-05, -0.00021457672119140625, -5.4597850976279005e-05, -0.0002576112747192383, -6.270408630371094e-05, -1.1920928244535389e-07, -0.0001125335693359375, -0.00037384033203125, -4.9591064453125e-05, -9.918212890625e-05, -3.814697265625e-06, -1.1205658665858209e-05, -0.0007270555943250656, -0.024310588836669922, -1.3113020031596534e-05, -0.026628494262695312, -3.814697265625e-06, -6.4849853515625e-05, -0.00012934136611875147, 0.0, -0.001483917236328125, -3.814697265625e-06, -0.00011265277862548828, -3.814697265625e-06, -0.00011444091796875, -2.47955322265625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00052642822265625, -5.7220458984375e-06, -0.0004903078079223633, -1.9073486328125e-06, -0.0027360916137695312, -3.814697265625e-06, -0.0001360177411697805, 0.0, -0.0004157462972216308, 0.0, -7.62939453125e-06, -3.814697265625e-06, -6.67572021484375e-05, -1.9788742065429688e-05, -3.814697265625e-05, -0.014446258544921875, -1.9073486328125e-06, -5.340576171875e-05, -8.20159912109375e-05, -0.00023651123046875, -3.3736203477019444e-05, -8.0108642578125e-05, -0.00028252601623535156, 0.0, -0.0002193450927734375, -0.0003108978271484375, 0.0, -0.0002938508987426758, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -0.0004062652587890625, -0.000667572021484375, -8.392333984375e-05, -0.0001392364501953125, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -3.814697265625e-05, -0.00035190582275390625, 0.0, -0.014078259468078613, 0.0, 0.0, -0.0018224716186523438], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}]}
{"index": 12, "beams": [{"choice_history": [59, 124, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Bloodfen", " ", "Raptor", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 3, "hole2": 2}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template17"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "hole1": "MinionCard"}, "score": -0.08555812589202105, "score_history": [-6.67572021484375e-05, -8.58306884765625e-05, -2.1457441107486375e-05, -0.0002898749662563205, -3.4570680327306036e-06, -1.1920883480343036e-07, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002040863037109375, -0.0001392364501953125, -5.7220458984375e-06, -0.000461578369140625, -1.9073486328125e-06, -1.52587890625e-05, -9.65590606938349e-06, -3.0517578125e-05, -0.00011145447206217796, -4.208087921142578e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -0.00018274782632943243, -3.075599670410156e-05, -0.0014591217041015625, 0.0, -6.4849853515625e-05, -2.288818359375e-05, -0.0001621246337890625, -0.0008636713027954102, -1.71661376953125e-05, -0.0012950897216796875, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -5.340576171875e-05, -0.0018463134765625, -3.0517578125e-05, -9.5367431640625e-06, 0.0, -0.07691776752471924, 0.0, -5.7220458984375e-06, -4.57763671875e-05, -0.0001373291015625, 0.0, -1.33514404296875e-05, -0.0005332225700840354, -6.079673767089844e-06, -0.00017142192518804222, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}]}
{"index": 13, "beams": [{"choice_history": [59, 126, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 164, 57], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"body": [{"hole0": {"_type": "Name", "id": "minion"}, "_type": "Template9", "hole1": "change_temp_attack", "hole2": [{"_type": "Template19"}]}], "_type": "For", "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Name", "id": "player"}}, "target": {"_type": "Name", "id": "minion"}}], "hole2": [{"_type": "Expr", "value": {"hole0": "Bloodlust", "_type": "Template3", "hole3": "COMMON", "hole1": 5, "hole2": "SHAMAN"}}], "hole3": "use", "hole0": "Bloodlust", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.17027164325372723, "score_history": [-4.1961669921875e-05, -4.1961669921875e-05, -5.7934543292503804e-05, -5.364412118069595e-06, -3.6679208278656006e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.62396240234375e-05, -7.62939453125e-05, -1.52587890625e-05, -0.001928376266732812, -4.792213439941406e-05, -4.529942543740617e-06, -1.52587890625e-05, -0.10970592498779297, -3.814697265625e-06, -0.0007632970809936523, 0.0, -0.00014305111835710704, 0.0, -0.0001538991928100586, 0.0, -2.47955322265625e-05, -7.82012939453125e-05, -0.000179290771484375, -2.014636993408203e-05, -0.0003129243850708008, -0.01629161834716797, -1.33514404296875e-05, -6.4849853515625e-05, -0.000232696533203125, -3.814697265625e-06, -1.2993798009119928e-05, -0.0003757476806640625, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -8.7738037109375e-05, -7.62939453125e-06, -6.29425048828125e-05, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -0.000392913818359375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0004616975784301758, -0.0002268551615998149, -0.012518882751464844, -3.814697265625e-06, -0.0003566741943359375, -1.9073486328125e-06, -0.0034418106079101562, 0.0, -0.0026025772094726562, 0.0, -0.000213623046875, -0.008309364318847656, -0.003826141357421875, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -1.5616416931152344e-05, -0.004462718963623047, -7.62939453125e-06, -5.14984130859375e-05, -0.002315521240234375], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}]}
{"index": 14, "beams": [{"choice_history": [59, 124, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Bluegill", " ", "Warrior", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}], "hole1": 2, "hole2": 1}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template17"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "BluegillWarrior", "hole1": "MinionCard"}, "score": -0.13560186472442126, "score_history": [-2.47955322265625e-05, -0.0001239776611328125, -4.172316494077677e-06, -8.022463589441031e-05, -1.1920928244535389e-07, -1.3111639418639243e-06, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003509521484375, -2.6702880859375e-05, -5.7220458984375e-06, -0.03470611572265625, 0.0, -1.9073486328125e-06, -4.9232225137529895e-05, -0.00010609626770019531, -7.772305980324745e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.981589543400332e-05, -9.441375732421875e-05, -0.00012981891632080078, 0.0, -1.71661376953125e-05, -6.4849853515625e-05, -3.814697265625e-06, -8.213520050048828e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.254413604736328e-05, -0.0001049041748046875, -0.00478208065032959, -0.0001239776611328125, -2.5153160095214844e-05, 0.0, -0.08068834990262985, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0001888275146484375, 0.0, -4.291525328881107e-06, -3.814697265625e-06, -1.0728830375228426e-06, -5.364416665543104e-06, -1.7881377516459906e-06, -0.0014667510986328125, 0.0, -0.010815858840942383, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.0012722015380859375, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}]}
{"index": 15, "beams": [{"choice_history": [59, 124, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 89, 35, 169, 49, 121, "Boar", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "p", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 1, "hole2": 1}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}}], "hole3": "create_minion", "hole0": "Boar", "hole1": "MinionCard"}, "score": -0.6845848497814444, "score_history": [-0.0001430511474609375, -5.53131103515625e-05, -6.437280717364047e-06, -0.0007170360186137259, -1.1920838005607948e-07, -1.52587890625e-05, -1.2159294783486985e-05, 0.0, -7.62939453125e-06, -1.52587890625e-05, -0.00048828125, -0.48192691802978516, -0.0026111602783203125, -0.0057964324951171875, -0.00089263916015625, -0.0002727508544921875, -4.053033626405522e-05, -0.0011835356708616018, -0.06212043762207031, -0.0004749298095703125, -0.08266875892877579, -3.2782016205601394e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.00010526180267333984, -3.24249267578125e-05, -0.0008544921875, 0.0, -0.000335693359375, -1.33514404296875e-05, -8.7738037109375e-05, -0.00012242794036865234, -2.0265579223632812e-06, -0.000118255615234375, -7.62939453125e-06, -4.9591064453125e-05, 0.0, -0.0017414093017578125, -5.7220458984375e-06, -0.013500213623046875, -7.62939453125e-06, -0.000255584716796875, 0.0, -0.02718508243560791, -1.9073486328125e-06, -8.7738037109375e-05, -0.0004215240478515625, -9.918212890625e-05, 0.0, -3.814697265625e-06, -2.980218778247945e-05, -1.1920928244535389e-07, -2.8967540856683627e-05, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}]}
{"index": 16, "beams": [{"choice_history": [59, 126, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Charge", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 154, "filter_func", "<EOS>", 21, 106, 3, 141, "minion", "<EOS>", 18, 85, 5, 165, 42, 92, 16, 82, 16, 82, 24, 112, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 41, 87, 16, 82, 24, 112, "minion", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "<UNK>", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "change_attack", "hole2": [{"_type": "Template17"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "add_buff", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Buff"}, "args": [{"hole0": "<UNK>", "_type": "Template10"}]}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"body": {"_type": "BoolOp", "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "minion"}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Name", "id": "minion"}}}], "op": {"_type": "And"}}, "_type": "Lambda", "args": {"hole0": "minion", "_type": "Template6"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template19"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "Charge", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -2.6864992474068004, "score_history": [-1.9073486328125e-06, -0.0008602142333984375, -3.6238969187252223e-05, -1.9550199795048684e-05, -0.00033836858347058296, -1.1563301086425781e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.0002155303955078125, -9.918212890625e-05, -0.011424064636230469, -3.814697265625e-06, 0.0, -9.536738616588991e-07, -1.740455445542466e-05, -3.814697265625e-05, 0.0, -1.71661376953125e-05, -2.288818359375e-05, 0.0, -1.1801719665527344e-05, 0.0, -0.03336334228515625, 0.0, -0.014087677001953125, 0.0, -1.9073486328125e-05, -0.0001436471939086914, 0.0, -0.5823984146118164, -0.00046539306640625, -0.000110626220703125, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -6.67572021484375e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0003509521484375, 0.0, -0.0007038116455078125, 0.0, -0.029399514198303223, -9.918212890625e-05, -0.000209808349609375, -0.015093803405761719, -1.71661376953125e-05, -0.000858306884765625, -0.0001506805419921875, -0.00041961669921875, -0.0012912750244140625, -0.5132133960723877, -0.0003930801176466048, -0.023738861083984375, -1.9073486328125e-05, -0.0001659393310546875, -0.00022125244140625, -0.013218879699707031, -0.0004062652587890625, -0.000522613525390625, 0.0, -0.3842630386352539, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.07745850086212158, 0.0, -0.022564053535461426, -7.62939453125e-06, -0.020927071571350098, -2.3841855067985307e-07, -0.001049041748046875, -0.015564918518066406, -7.82012939453125e-05, -3.24249267578125e-05, 0.0, -0.000179290771484375, 0.0, -0.0026285648345947266, 0.0, -0.6488869190216064, 0.0, -0.009922027587890625, -0.018159866333007812, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -0.0034068822860717773, -5.960462772236497e-07, -0.04138387739658356, -1.9073486328125e-06, -0.0006297826766967773, 0.0, -4.7206878662109375e-05, 0.0, -0.0002880096435546875, -4.38690185546875e-05, -7.62939453125e-06, -1.71661376953125e-05, -4.9591064453125e-05, -0.006543159484863281, -0.000194549560546875, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0014193843817338347, -2.1457672119140625e-06, -1.0848032616195269e-05, 0.0, -0.000152587890625, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0009403228759765625, 0.0, -5.7220458984375e-06, -0.000339508056640625, -0.0002689361572265625, -2.86102294921875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.00010967254638671875, 0.0, -2.6702880859375e-05, 0.0, -0.005500986706465483, -2.3841855067985307e-07, -1.52587890625e-05, -0.00048828125, -5.53131103515625e-05, -0.000141143798828125, -4.38690185546875e-05, 0.0, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.05340099334716797, -2.2649765014648438e-06, -3.4332275390625e-05, -0.03248405456542969, -0.000278472900390625, -3.814697265625e-06, 0.0, -0.05738472938537598, -0.00019431114196777344, -7.05718994140625e-05, -0.014886856079101562, 0.0, -0.012368462979793549, -0.00660594180226326], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda minion: \n            minion.card.minion_type is MINION_TYPE.BEAST and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}]}
{"index": 17, "beams": [{"choice_history": [59, 124, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "5", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 4, "hole2": 5}], "hole2": [{"_type": "Expr", "value": {"hole0": "Chillwind Yeti", "_type": "Template3", "hole3": "COMMON", "hole1": 4, "hole2": "ALL"}}], "hole3": "create_minion", "hole0": "ChillwindYeti", "hole1": "MinionCard"}, "score": -0.0050965288581323875, "score_history": [-5.7220458984375e-06, -0.0001506805419921875, -0.00024053541710600257, -0.000251142424531281, -4.42257514805533e-05, -1.192074705613777e-07, 0.0, -3.576278118089249e-07, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00046539306640625, -1.71661376953125e-05, -1.4305104514278355e-06, -2.8371809094096534e-05, -4.0531158447265625e-06, 0.0, -0.0004559416265692562, -1.9073486328125e-06, -8.153911039698869e-05, -7.62939453125e-06, -0.0002980231074616313, 0.0, -1.2040138244628906e-05, 0.0, -8.606910705566406e-05, 0.0, 0.0, 0.0, -0.00025177001953125, 0.0, 0.0, -1.9669461835292168e-05, 0.0, -0.002661297796294093, 0.0], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}]}
{"index": 18, "beams": [{"choice_history": [59, 126, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 164, 55, 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 164, 55], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Name", "id": "player"}}, "_type": "Template9", "hole1": "change_temp_attack", "hole2": [{"_type": "Template17"}]}, {"hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Name", "id": "player"}}, "_type": "Template9", "hole1": "increase_armor", "hole2": [{"_type": "Template17"}]}], "hole2": [{"_type": "Expr", "value": {"hole0": "Claw", "_type": "Template3", "hole3": "FREE", "hole1": 1, "hole2": "DRUID"}}], "hole3": "use", "hole0": "Claw", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.2890229593813274, "score_history": [-1.9073486328125e-06, -0.0001468658447265625, -1.39474832394626e-05, -0.00010358769941376522, -0.0007400959730148315, -9.179109838441946e-06, -9.655952453613281e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -0.000690460205078125, -2.6702880859375e-05, -6.246371776796877e-05, -1.5139492461457849e-05, -5.3285995818441734e-05, -3.814697265625e-06, -0.013642311096191406, 0.0, -0.061743974685668945, 0.0, -0.0009729862213134766, -1.9073486328125e-06, -0.0005424022674560547, 0.0, -0.000133514404296875, -4.9591064453125e-05, -0.0002422332763671875, -2.1696090698242188e-05, -0.0014363527297973633, -0.0024709701538085938, -4.76837158203125e-05, -2.09808349609375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.657003303989768e-05, -4.1961669921875e-05, -4.243850344209932e-05, 0.0, -0.005855560302734375, -0.000110626220703125, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0004024505615234375, 0.0, -9.655952453613281e-06, -7.62939453125e-06, -0.017719268798828125, -5.7220458984375e-06, -0.000591278076171875, -1.52587890625e-05, -0.0002498626708984375, -3.0517578125e-05, -0.008351325988769531, 0.0, -0.0053550004959106445, -1.9073486328125e-06, -0.012301206588745117, -3.24249267578125e-05, -3.814697265625e-05, -0.000110626220703125, -0.0002994537353515625, -3.62396240234375e-05, -0.000545501708984375, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -0.0002880096435546875, 0.0, -0.0053386688232421875, -3.814697265625e-06, -0.14745831489562988, -0.00023174285888671875, -4.1961669921875e-05, -0.0001087188720703125], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}]}
{"index": 19, "beams": [{"choice_history": [59, 127, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "minions", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 69, 95, 24, 112, "i", "<EOS>", 19, 89, 24, 112, "range", "<EOS>", 165, 48, 117, "0", "<EOS>", 55, 179, 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "game", "<EOS>", "random_choice", "<EOS>", 164, 46, 112, "minions", "<EOS>", 76, 146, 24, 112, "minions", "<EOS>", "remove", "<EOS>", 164, 46, 112, "minion", "<EOS>", 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>", 177, 70, 96, "can_use", "<EOS>", 4, 152, 160, 0, 1, 151, "player", "<EOS>", 1, 151, "game", "<EOS>", 177, 73, 119, 18, 85, 5, 165, 41, 89, 16, 82, 28, 130, "super", "<EOS>", "can_use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 42, 92, 19, 89, 24, 112, "len", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 161, 9, 164, 55], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}, "args": [{"_type": "Name", "id": "minions"}]}}, {"hole0": {"_type": "Name", "id": "minions"}, "_type": "Template9", "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"hole0": {"_type": "Name", "id": "minion"}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template17"}]}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template17"}]}, "target": {"_type": "Name", "id": "i"}}], "hole2": [{"_type": "Expr", "value": {"hole0": "Cleave", "_type": "Template3", "hole3": "COMMON", "hole1": 2, "hole2": "WARRIOR"}}], "hole3": "use", "hole0": "Cleave", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "values": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"hole0": "super", "_type": "Template10"}}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"_type": "Compare", "comparators": [{"_type": "Template17"}], "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}}], "op": {"_type": "And"}}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "Template12"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.2670602584058628, "score_history": [-1.52587890625e-05, -0.010953903198242188, -2.968275293824263e-05, -5.364416665543104e-06, -0.0005653008120134473, -2.0265579223632812e-06, -1.9073486328125e-05, -1.52587890625e-05, -0.0004253387451171875, -1.9073486328125e-05, -0.000179290771484375, -9.918212890625e-05, -6.329824827844277e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.1920928244535389e-07, -0.07974076271057129, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0007305145263671875, 0.0, -3.063678741455078e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -7.82012939453125e-05, -3.588141771615483e-05, -1.9073486328125e-06, -0.004851341247558594, -9.918212890625e-05, -5.7220458984375e-06, -0.0001468658447265625, 0.0, -1.7046926586772315e-05, -5.7220458984375e-06, -0.00024221005151048303, 0.0, -0.00038909912109375, -9.72747802734375e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.005789756774902344, -0.000385284423828125, -0.000156402587890625, -2.09808349609375e-05, -7.62939453125e-06, -0.0090179443359375, -1.9073486328125e-06, -0.0004901885986328125, -6.67572021484375e-05, -0.0011806488037109375, 0.0, -0.000102996826171875, 0.0, -0.0030732154846191406, -2.6702880859375e-05, -0.00033593177795410156, -3.814697265625e-06, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.0001239776611328125, 0.0, -3.24249267578125e-05, 0.0, -8.392333984375e-05, -3.814697265625e-06, -0.0008623600006103516, -1.9073486328125e-06, -0.0001760721206665039, -0.0003376007080078125, -0.000553131103515625, -5.7220458984375e-06, 0.0, 0.0, -0.00545656681060791, -5.7220458984375e-06, -0.0057163238525390625, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0012813806533813477, -0.0003566741943359375, -0.004070281982421875, -0.00038909912109375, -1.52587890625e-05, -0.00011193741374881938, -3.814697265625e-06, -7.2479248046875e-05, -0.004473686218261719, -0.0043582916259765625, -0.0005588531494140625, -3.0517578125e-05, -1.33514404296875e-05, -0.0005950927734375, -0.0025675296783447266, -1.311301275563892e-06, -0.00096893310546875, -0.000255584716796875, -2.47955322265625e-05, 0.0, -0.0001583099365234375, 0.0, -2.562999725341797e-05, 0.0, -0.0024608373641967773, -7.2479248046875e-05, -9.5367431640625e-05, -0.0005435943603515625, -2.288818359375e-05, -0.0052335262298583984, -3.814697265625e-06, -0.015588760375976562, -0.0034227371215820312, -4.57763671875e-05, 0.0, -0.006629824638366699, -5.7220458984375e-06, -0.009958581067621708, -6.914137884450611e-06, -0.00014495849609375, -0.000194549560546875, 0.0, -0.00044715404510498047, -1.0371154530730564e-05, -0.0004596710205078125, -0.0001316070556640625, -9.5367431640625e-05, 0.0, -0.0007129907608032227, -1.6450776456622407e-05, -0.0005834534531459212, -8.344646857949556e-07, -0.005664825439453125, -1.9073486328125e-06, -0.000339508056640625, -5.7220458984375e-06, 0.0, -0.00089263916015625, 0.0, -0.000423431396484375, 0.0, -0.0010035037994384766, 0.0, -1.52587890625e-05, -0.029331207275390625, -8.96453857421875e-05, 0.0, -0.0008994340896606445, -8.70227722771233e-06, -0.000244140625, -8.392333984375e-05, -3.0517578125e-05, -0.004851579666137695, -2.09808349609375e-05, -0.0001087188720703125, -3.62396240234375e-05, -0.000446319580078125, -0.00014495849609375, -3.0517578125e-05, -0.0001049041748046875, -0.0005985497846268117, 0.0, -0.000110626220703125, -2.47955322265625e-05, -7.211966294562444e-05, -1.1920928244535389e-07, -5.340576171875e-05, -0.000415802001953125, -0.000202178955078125, -0.0006866455078125, -0.000110626220703125, -0.000213623046875, -0.000270843505859375, -1.52587890625e-05, -9.5367431640625e-06, -0.000263214111328125, -7.62939453125e-06, -0.0001010894775390625, 0.0, -0.001690506818704307, -5.7220458984375e-06, -0.0015889406204223633, -9.5367431640625e-06, -7.62939453125e-06, -0.001861572265625, 0.0, -1.9073486328125e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.0003681182861328125, -1.33514404296875e-05, -0.002231597900390625, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.0012133121490478516, -4.38690185546875e-05, -9.1552734375e-05, -9.34600830078125e-05, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0006355047225952148, -1.9073486328125e-06, -0.00036895275115966797, -0.0002002716064453125, -0.0013599395751953125, -0.00342559814453125, -0.0007457733154296875, -0.0020618438720703125], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}]}
{"index": 20, "beams": [{"choice_history": [59, 126, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"body": [{"hole0": {"_type": "Name", "id": "minion"}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template17"}]}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "target": {"_type": "Name", "id": "minion"}}, {"hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template17"}]}, {"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"hole0": "Consecration", "_type": "Template3", "hole3": "COMMON", "hole1": 4, "hole2": "PALADIN"}}], "hole3": "use", "hole0": "Consecration", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.6010462708354041, "score_history": [-0.000118255615234375, -0.00150299072265625, -3.0397935915971175e-05, -1.1920928244535389e-07, -4.52894892077893e-06, -8.463848644169047e-06, -7.987022399902344e-06, -0.0002117156982421875, -3.4332275390625e-05, -8.7738037109375e-05, -0.000335693359375, -2.288818359375e-05, -0.00029122596606612206, -1.1205610462639015e-05, -2.3484230041503906e-05, -2.9802317840221804e-06, -0.009652970358729362, -2.384185791015625e-06, -0.000960230827331543, 0.0, -5.078315734863281e-05, 0.0, -7.903384539531544e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -6.103515625e-05, -8.690357208251953e-05, -4.0531158447265625e-06, -0.0011959075927734375, -2.6702880859375e-05, -1.33514404296875e-05, -0.00019073486328125, -9.5367431640625e-06, -5.829241490573622e-05, -3.933906555175781e-06, -0.0004306567134335637, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0001926422119140625, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -0.0041656494140625, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -0.0004417896270751953, -1.311301275563892e-06, -0.00152587890625, -9.5367431640625e-06, -0.0003757476806640625, 0.0, -9.5367431640625e-06, 0.0, -0.0009543895721435547, -3.814697265625e-06, -0.00047516822814941406, -1.1920928244535389e-07, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001392364501953125, 0.0, -2.288818359375e-05, 0.0, -3.635883331298828e-05, -9.5367431640625e-06, -0.0011072158813476562, -1.9073486328125e-06, -0.0007946488913148642, -9.5367431640625e-06, -4.76837158203125e-05, -0.0027675628662109375, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -2.765655517578125e-05, -2.861018856492592e-06, -0.0016495509771630168, -1.1920928244535389e-07, -1.33514404296875e-05, -4.76837158203125e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0001373291015625, 0.0, -0.00197350955568254, -2.3841855067985307e-07, -4.76837158203125e-05, -0.000823974609375, -4.9591064453125e-05, -1.9073486328125e-06, -0.00039899349212646484, -6.556507287314162e-06, -0.5222845077514648, -2.86102294921875e-05, -0.0004787445068359375, -3.24249267578125e-05, -0.016492843627929688, -3.814697265625e-06, -0.0003108978271484375, 0.0, -0.0008068084716796875, 0.0, -0.00496518611907959, -1.1920928244535389e-07, -0.001685679773800075, -1.0013547580456361e-05, -0.015978584066033363, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0002384185791015625, 0.0, -0.0019817352294921875, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00124359130859375, -2.288818359375e-05, -1.9073486328125e-06, -0.00019180774688720703, -7.510183422709815e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}]}
{"index": 21, "beams": [{"choice_history": [59, 124, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Core", " ", "Hound", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "9", "<EOS>", "5", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 9, "hole2": 5}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "CoreHound", "hole1": "MinionCard"}, "score": -0.21279647270096547, "score_history": [-7.05718994140625e-05, -6.67572021484375e-05, -0.0007670559571124613, -6.758938252460212e-05, -5.841253368998878e-06, -1.3106619007885456e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -0.0001678466796875, -0.0001373291015625, -0.019123077392578125, -1.9073486328125e-06, -9.5367431640625e-06, -7.390948667307384e-06, -1.5854835510253906e-05, -3.576278118089249e-07, -1.9073468138230965e-06, -1.9073486328125e-05, -1.1444091796875e-05, -0.0003469826187938452, -8.344646857949556e-07, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.000591278076171875, -1.9073486328125e-06, -0.0001926422119140625, -3.0517578125e-05, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001773834228515625, -4.1961669921875e-05, -0.0007190704345703125, -4.00543212890625e-05, -5.7220458984375e-06, 0.0, -0.18884634971618652, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -4.57763671875e-05, -1.4305104514278355e-06, -6.13910160609521e-05, -0.0008291006088256836, -1.1920928244535389e-07], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}]}
{"index": 22, "beams": [{"choice_history": [59, 126, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Corruption", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Turn", "Started", "<EOS>", 172, 154, "player", "<EOS>", 28, 130, "Enemy", "Player", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 51, 130, "Kill", "<EOS>", 51, 130, "Self", "Selector", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "add_effect", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template10"}}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"hole0": "Kill", "_type": "Template10"}, {"hole0": "SelfSelector", "_type": "Template10"}]}]}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "use", "hole0": "Corruption", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -1.1693302160465109, "score_history": [-8.58306884765625e-05, -0.000400543212890625, -5.364416665543104e-06, -4.9470632802695036e-05, -2.1448067855089903e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0001544952392578125, -1.9073486328125e-05, -5.7220458984375e-06, -0.00022125244140625, -0.0006313323974609375, -0.0002574920654296875, -0.0006122589111328125, -3.814697265625e-06, -2.6702880859375e-05, -4.053111297253054e-06, -2.6464205802767538e-05, -4.76837158203125e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -2.3841855067985307e-07, -0.019507408142089844, 0.0, -0.0001277923583984375, -0.0001964569091796875, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -5.340576171875e-05, -0.0002536773681640625, -0.000152587890625, 0.0, -7.62939453125e-06, 0.0, -0.0003452301025390625, -1.9073486328125e-06, -0.0010929107666015625, 0.0, -0.02394843101501465, 0.0, -0.0001220703125, 0.0, -0.00010907649993896484, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.178864274872467e-05, -3.814697265625e-06, -0.5293569564819336, -1.9073486328125e-06, -5.340576171875e-05, -1.52587890625e-05, -4.1961669921875e-05, -2.682197191461455e-05, -0.000141143798828125, -4.398822784423828e-05, 0.0, -0.0007781982421875, -0.000514984130859375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0011234283447265625, -0.0009822845458984375, -3.814697265625e-06, -3.814697265625e-06, -0.0013103485107421875, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.0006933212280273438, 0.0, -0.1866077184677124, -7.271765298355604e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.0007076263427734375, -1.9073486328125e-06, 0.0, -0.0004559755325317383, -2.1696090698242188e-05, -0.0001125335693359375, -0.0002918243408203125, -0.0010900497436523438, -7.62939453125e-06, -1.9073486328125e-06, -0.002927764318883419, -0.0028859376907348633, -1.9073486328125e-06, -0.0020084381103515625, -0.000244140625, -5.340576171875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.38215672969818115, -0.0001277923583984375, 0.0, -0.0006513595581054688, -0.000225067138671875, -3.814697265625e-06, 0.0, -0.00025403499603271484, -0.0005245208740234375, -3.814697265625e-05, -0.00034332275390625, -0.0012073516845703125, -1.9073486328125e-06, -0.0015526986680924892, -7.152543730626348e-06, -0.0001430511474609375, 0.0, -0.0002995729446411133, -0.00038564205169677734, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}]}
{"index": 23, "beams": [{"choice_history": [59, 124, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}], "hole1": 1, "hole2": 4}], "hole2": [{"_type": "Expr", "value": {"hole0": "Dalaran Mage", "_type": "Template3", "hole3": "COMMON", "hole1": 3, "hole2": "ALL"}}], "hole3": "create_minion", "hole0": "DalaranMage", "hole1": "MinionCard"}, "score": -0.0076142415887190396, "score_history": [-0.000469207763671875, -0.0001697540283203125, -9.775130820344202e-06, -2.539125671319198e-05, -0.00041595782386139035, -7.15237547410652e-07, -1.9073486328125e-06, -2.3603417503181845e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0001678466796875, -0.0001316070556640625, -2.13382354559144e-05, -4.470348358154297e-05, -1.1920928244535389e-07, -3.814697265625e-06, -2.288813811901491e-05, 0.0, -8.20159912109375e-05, -9.5367431640625e-06, -0.0008299350738525391, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -6.711482274113223e-05, 0.0, 0.0, -5.7220458984375e-06, -0.000339508056640625, 0.0, -3.933906555175781e-06, -8.344646857949556e-07, 0.0, -0.00019116239855065942, -4.768370445162873e-07, -0.0005016326904296875, 0.0, -0.0028797388076782227, 0.0, -0.0011310577392578125], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}]}
{"index": 24, "beams": [{"choice_history": [59, 126, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Divine", " ", "Spirit", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "increase_health", "hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template17"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "use", "hole0": "DivineSpirit", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.33022235010997747, "score_history": [-3.4332275390625e-05, -0.000225067138671875, -5.960462772236497e-07, -4.255681051290594e-05, -8.940672159951646e-06, -2.4628126993775368e-05, -7.62939453125e-06, -7.152555099310121e-07, -0.00022125244140625, -1.52587890625e-05, 0.0, -0.0003509521484375, -0.000507354736328125, -1.9073486328125e-05, -6.866455078125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.00028701478731818497, -0.002345323096960783, -1.680839886830654e-05, -1.978873842745088e-05, -0.0001373291015625, -5.340576171875e-05, 0.0, -3.814697265625e-05, 0.0, -5.269050598144531e-05, -1.4305104514278355e-06, -0.016462326049804688, 0.0, -7.43865966796875e-05, -0.000156402587890625, 0.0, -3.24249267578125e-05, 0.0, -0.0001220703125, -5.7220458984375e-06, -0.000152587890625, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000244140625, -3.814697265625e-06, -0.0005645751953125, 0.0, -0.0009303092956542969, 0.0, -4.208087921142578e-05, 0.0, -0.00026345247169956565, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0003133550635538995, -2.0265579223632812e-06, -0.005152702331542969, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.00034332275390625, -3.8861995562911034e-05, -0.0001583099365234375, -9.655952453613281e-06, 0.0, -0.0004100799560546875, -0.000396728515625, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0010471343994140625, -0.0027475357055664062, -2.86102294921875e-05, -2.09808349609375e-05, -7.82012939453125e-05, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.0009441375732421875, 0.0, -0.22235894203186035, 0.0, 0.0, -0.0016450881958007812, 0.0, -0.001384735107421875, 0.0, -1.9073486328125e-06, 0.0, -0.0020732879638671875, -1.9073486328125e-06, -0.000110626220703125, 0.0, -0.06724739074707031, -3.814697265625e-06], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}]}
{"index": 25, "beams": [{"choice_history": [59, 124, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Dragonling", " ", "Mechanic", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Summon", "<EOS>", 164, 51, 130, "Mechanical", "Dragonling", "<EOS>", 51, 130, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 2, "hole2": 4}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Summon"}, "args": [{"hole0": "MechanicalDragonling", "_type": "Template10"}]}, {"hole0": "PlayerSelector", "_type": "Template10"}]}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "hole1": "MinionCard"}, "score": -0.04560334255506859, "score_history": [-1.9073486328125e-06, -0.000141143798828125, -5.602820692729438e-06, -0.00011849401926156133, -1.5258699932019226e-05, -1.1920565157197416e-07, 0.0, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.00016021728515625, -8.0108642578125e-05, -0.000118255615234375, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -4.56564303021878e-05, -9.346007573185489e-05, -0.0022886991500854492, -6.866455078125e-05, -5.7220458984375e-06, 0.0, -7.49894606997259e-05, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, 0.0, -3.099440846199286e-06, -1.7404556274414062e-05, -5.53131103515625e-05, 0.0, -9.72747802734375e-05, -0.0002613067626953125, 0.0, -0.0013484954833984375, -1.9073486328125e-06, -0.0001850128173828125, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -7.11679458618164e-05, 0.0, -2.47955322265625e-05, -3.4332275390625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -0.004170286003500223, -6.16293036728166e-05, -0.0002288818359375, -7.82012939453125e-05, 0.0, -0.004487268161028624, -0.023669803515076637, -0.00717616081237793, -1.1444091796875e-05, -3.24249267578125e-05, -6.079673767089844e-06, -3.24249267578125e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.4557051801821217e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -1.1915108188986778e-07, -1.9073486328125e-06, -5.245195097813848e-06, 0.0, -1.9073486328125e-06, 0.0], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}]}
{"index": 26, "beams": [{"choice_history": [59, 126, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Drain", " ", "Life", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template17"}]}, {"_type": "Name", "id": "self"}]}, {"hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Name", "id": "player"}}, "_type": "Template9", "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template17"}]}, {"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template19"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "DrainLife", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.6564319431433745, "score_history": [-3.4332275390625e-05, -8.58306884765625e-05, -2.7418097943154862e-06, -0.00021324267436284572, -7.438656757585704e-05, -0.0007089423015713692, -1.1920928244535389e-07, -1.33514404296875e-05, -1.71661376953125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.038514137268066406, -3.0517578125e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.9602869441732764e-05, -4.029273986816406e-05, -8.630380034446716e-05, -4.172325134277344e-06, -8.20159912109375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.589557647705078e-05, 0.0, -0.009099006652832031, 0.0, -0.000713348388671875, 0.0, -0.000705718994140625, -0.0003167390823364258, 0.0, -0.53839111328125, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -4.9591064453125e-05, -0.0001163482666015625, -5.53131103515625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00142669677734375, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -0.00037157529732212424, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.5735626220703125e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.012617111206054688, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1205645932932384e-05, 0.0, -1.823896491259802e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -0.0012989044189453125, -5.7220458984375e-06, -6.67572021484375e-05, -0.000141143798828125, -0.000476837158203125, 0.0, -0.00014209747314453125, -7.62939453125e-06, -0.0008080005645751953, 0.0, -0.003474434372037649, -9.536738616588991e-07, -7.62939453125e-06, -0.0001049041748046875, -9.34600830078125e-05, -1.9073486328125e-06, 0.0, -0.0001621246337890625, 0.0, -1.9073486328125e-06, 0.0, -0.001149892807006836, 0.0, -1.9073486328125e-06, -0.000598907470703125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00011420249938964844, -1.1682492186082527e-05, -0.0013561248779296875, -8.392333984375e-05, -7.2479248046875e-05, 0.0, -0.0001926422119140625, 0.0, -0.0001544952392578125, 0.0, -0.003415226936340332, 0.0, -0.03513297811150551, -1.1920928244535389e-07, -0.0005626678466796875, -2.86102294921875e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.1682510375976562e-05, 0.0, -0.0011957883834838867, 0.0, -5.14984130859375e-05, -0.0002155303955078125, -0.000637054443359375, 0.0, -0.0002484321594238281, -2.861022494471399e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}]}
{"index": 27, "beams": [{"choice_history": [59, 124, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Dread", " ", "Infernal", "<EOS>", 48, 117, "6", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 52, 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 172, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 6, "hole2": 6}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Damage"}, "args": [{"_type": "Template18"}]}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template10"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}]}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "DreadInfernal", "hole1": "MinionCard"}, "score": -0.16123351224450744, "score_history": [0.0, -3.24249267578125e-05, -0.0005162813467904925, -1.1086402082582936e-05, 0.0, 0.0, -7.62939453125e-06, -2.384185791015625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0001354217529296875, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920928955078125e-05, -1.2159336620243266e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -5.394885374698788e-05, -1.0371154530730564e-05, -7.62939453125e-06, -0.0001239776611328125, -3.4332275390625e-05, -0.000110626220703125, -4.0531158447265625e-06, -2.0265579223632812e-06, -0.10133647918701172, -0.0006103515625, -0.00051116943359375, -0.0027179718017578125, -0.0001201629638671875, -0.000522613525390625, 0.0, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0010051727294921875, 0.0, -0.02322208881378174, -7.62939453125e-06, -4.9591064453125e-05, -0.000988006591796875, 0.0, -0.00637054443359375, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.0001373291015625, -1.9073486328125e-06, -0.00043487548828125, -0.0001049041748046875, -3.814697265625e-05, -9.5367431640625e-06, -6.866455078125e-05, -0.001923203468322754, -3.9339061913779005e-05, -0.00054931640625, -0.00030517578125, -6.866455078125e-05, -0.0002689361572265625, -1.52587890625e-05, -1.71661376953125e-05, -0.006153135560452938, -0.00013005733489990234, -2.09808349609375e-05, -0.004471778869628906, -3.814697265625e-06, -0.0008983612060546875, -8.20159912109375e-05, -0.0007495880126953125, 0.0, -0.001664280891418457, -4.57763671875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -1.33514404296875e-05, -7.82012939453125e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -0.00394487427547574, -4.0531076592742465e-06, -7.844556967029348e-05, -1.740443622111343e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}]}
{"index": 28, "beams": [{"choice_history": [59, 124, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Elven", " ", "Archer", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 1, "hole2": 1}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Damage"}, "args": [{"_type": "Template18"}]}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template10"}}, {"_type": "keyword", "arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template10"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}]}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "ElvenArcher", "hole1": "MinionCard"}, "score": -0.037729461161170263, "score_history": [-3.62396240234375e-05, -4.57763671875e-05, -8.106198947643861e-06, -5.1616290875244886e-05, -5.960446742392378e-06, 0.0, -2.09808349609375e-05, -2.7418097943154862e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -5.483625955093885e-06, -4.684925079345703e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -6.29425048828125e-05, -7.05718994140625e-05, 0.0, -7.05718994140625e-05, 0.0, -2.503394853192731e-06, -3.576278118089249e-07, -0.0007704496383666992, 0.0, -0.0002193450927734375, -0.0023975372314453125, -3.814697265625e-06, -0.0036221742630004883, 0.0, -0.000324249267578125, 0.0, -3.62396240234375e-05, 0.0, -0.00018930435180664062, 0.0, -1.1444091796875e-05, -0.003101348876953125, -9.5367431640625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -0.0007266996544785798, -9.929640509653836e-05, -1.1444091796875e-05, -0.0001010894775390625, -0.0004482269287109375, -0.001239776611328125, -3.814697265625e-06, 0.0, -0.001412364188581705, -0.0001575946807861328, -1.728534698486328e-05, -0.017836570739746094, -0.000148773193359375, -0.0006428956985473633, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00045418739318847656, -0.0001678466796875, -1.9073486328125e-06, -4.1961669921875e-05, -0.0012645721435546875, -1.9073486328125e-06, -0.00028228759765625, -1.1444091796875e-05, -0.0007847546949051321, -0.00023400738427881151, -1.9073486328125e-06, -5.161762237548828e-05, 0.0, -0.00015401233395095915, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -3.814697265625e-06, 0.0, 0.0, -1.7523765563964844e-05, -5.9604562920867465e-06, -9.53686139837373e-07, -1.0132769602932967e-05], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}]}
{"index": 29, "beams": [{"choice_history": [59, 126, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 89, 35, 168, 49, 121, "Excess", " ", "Mana", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 52, 47, 113, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Name", "id": "player"}, "_type": "Template9", "hole1": "draw"}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}]}}], "hole3": "use", "hole0": "ExcessMana", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.0695066904459054, "score_history": [-7.62939453125e-06, -0.0002918243408203125, -1.07287787614041e-05, -9.417489309271332e-06, -0.0005619611474685371, -0.0003674868494272232, -1.442432312614983e-05, -5.555009192903526e-05, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -3.4332275390625e-05, -0.0007839202880859375, -0.000141143798828125, -0.015202522277832031, -4.00543212890625e-05, -5.91278076171875e-05, -3.8027581467758864e-05, -0.0002518607652746141, -2.622600959512056e-06, -0.0002994537353515625, -0.0023746490478515625, -1.9073486328125e-06, -0.00016103859525173903, -7.152555099310121e-07, -3.62396240234375e-05, -5.7220458984375e-06, -3.4332275390625e-05, -0.0001049041748046875, -5.14984130859375e-05, -1.9073486328125e-06, -0.026136398315429688, -7.62939453125e-06, -0.00016021728515625, -8.20159912109375e-05, -8.20159912109375e-05, -7.033346628304571e-05, -3.814697265625e-06, -7.450580596923828e-05, 0.0, -0.001775142620317638, 0.0, -0.0001926422119140625, -5.7220458984375e-06, -1.1444091796875e-05, -4.982894824934192e-05, -1.6689286894688848e-06, -0.010294914245605469, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -3.504720370983705e-05, -9.5367431640625e-05, -1.3709068298339844e-05, 0.0, -1.9073486328125e-06, -0.0001373291015625, 0.0, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.004329681396484375, -0.0028638839721679688, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0015870332717895508, -0.0002595186233520508], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}]}
{"index": 30, "beams": [{"choice_history": [59, 126, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Execute", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 154, "filter_func", "<EOS>", 21, 106, 3, 141, "target", "<EOS>", 18, 85, 5, 165, 42, 92, 16, 82, 24, 112, "target", "<EOS>", "health", "<EOS>", 161, 15, 164, 41, 87, 16, 82, 24, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 41, 87, 16, 82, 24, 112, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 164, 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"body": {"_type": "BoolOp", "values": [{"_type": "Compare", "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Name", "id": "target"}}}], "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Name", "id": "target"}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Name", "id": "target"}}}], "op": {"_type": "And"}}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template6"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "Execute", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.25558148690787874, "score_history": [-3.814697265625e-05, -0.0009441375732421875, -2.2649765014648438e-06, -5.8410845667822286e-05, -1.9072394934482872e-06, -4.291534423828125e-06, -1.0847986231965479e-05, -1.1444091796875e-05, -4.9591064453125e-05, -0.0001277923583984375, -8.392333984375e-05, -0.0002613067626953125, -7.62939453125e-06, -0.0017528533935546875, -3.814697265625e-06, -1.33514404296875e-05, -3.6954811548639555e-06, -0.00010501845099497586, -2.86102294921875e-05, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.01239025592803955, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.62939453125e-06, -0.0014497041702270508, 0.0, -0.001773834228515625, -4.1961669921875e-05, -9.918212890625e-05, 0.0, -8.392333984375e-05, -0.000766754150390625, -0.000110626220703125, 0.0, -7.62939453125e-06, 0.0, -0.00080108642578125, -1.9073486328125e-06, -0.0002288818359375, 0.0, -0.0180283784866333, -3.814697265625e-06, -0.000118255615234375, -0.00226593017578125, -0.000156402587890625, -0.0013179779052734375, -0.009379386901855469, -0.0011005401611328125, -0.0001926422119140625, -0.003815889358520508, -2.1457672119140625e-06, -0.0009479522705078125, -0.000499725341796875, -0.0002002716064453125, -8.392333984375e-05, -0.0007457733154296875, -2.09808349609375e-05, -0.0001087188720703125, -1.9073486328125e-06, -0.00016021728515625, -1.9073486328125e-06, -0.00823211669921875, 0.0, -0.01769876480102539, -3.933906555175781e-06, -0.0006465911865234375, -0.032070159912109375, -0.0002689361572265625, -0.0004062652587890625, -4.1961669921875e-05, -0.0001049041748046875, -8.0108642578125e-05, -9.34600830078125e-05, -5.7220458984375e-05, -0.0030919313430786133, -1.1444091796875e-05, -0.006884217262268066, 0.0, -0.000652313232421875, -0.0003108978271484375, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.0019370317459106445, -1.9073486328125e-06, -0.10840928554534912, -3.814697265625e-06, -0.0008842945098876953, 0.0, -0.00021719932556152344, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.86102294921875e-05, -5.3763389587402344e-05, -9.5367431640625e-06, -0.0044155120849609375, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -2.288818359375e-05, -4.076957702636719e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -2.288818359375e-05, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -0.000762939453125, -5.7220458984375e-05, -9.5367431640625e-06, -0.000186920166015625, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -3.62396240234375e-05, -0.000110626220703125, 0.0, -0.002614374505355954, 0.0, -4.1961669921875e-05, -0.0002460479736328125, 0.0, -0.003841876983642578, -7.748603820800781e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}]}
{"index": 31, "beams": [{"choice_history": [59, 126, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"body": [{"hole0": {"_type": "Name", "id": "minion"}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template18"}]}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "target": {"_type": "Name", "id": "minion"}}, {"hole0": {"_type": "Name", "id": "player"}, "_type": "Template9", "hole1": "draw"}], "hole2": [{"_type": "Expr", "value": {"hole0": "Fan of Knives", "_type": "Template3", "hole3": "COMMON", "hole1": 3, "hole2": "ROGUE"}}], "hole3": "use", "hole0": "FanOfKnives", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.18406887661529225, "score_history": [-1.9073486328125e-06, -0.0001392364501953125, -2.2172682292875834e-05, -0.0003795529482886195, -3.576214658096433e-05, -2.622604142743512e-06, -1.9073486328125e-06, -2.50339189733495e-06, -0.00014637857384514064, -4.57763671875e-05, -3.62396240234375e-05, -9.5367431640625e-06, -0.0009899139404296875, -3.62396240234375e-05, -2.8490614567999728e-05, -0.00026607513427734375, -1.919269561767578e-05, -6.532663974212483e-05, -9.5367431640625e-06, -0.00019872188568115234, 0.0, -1.33514404296875e-05, -0.09604752063751221, 0.0, -5.829334259033203e-05, 0.0, -2.2172927856445312e-05, 0.0, -6.365649460349232e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.0517578125e-05, -0.0006761550903320312, -4.9591064453125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.455689900671132e-05, -9.5367431640625e-06, -1.4662741705251392e-05, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-05, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.000598907470703125, -0.0001049041748046875, -1.52587890625e-05, 0.0, -0.00034332275390625, -5.006785613659304e-06, -0.0003452301025390625, -1.52587890625e-05, -8.392333984375e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.002037644386291504, -4.9591064453125e-05, -0.0002428293228149414, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.00034332275390625, 0.0, -7.2479248046875e-05, 0.0, -4.1961669921875e-05, -5.91278076171875e-05, -0.0012186765670776367, -1.9073486328125e-06, -0.0011203683679923415, 0.0, -0.0001163482666015625, -0.0007476806640625, -0.0004215240478515625, -7.62939453125e-06, 0.0, -0.0003523826599121094, -1.0132738680113107e-05, -0.04256219044327736, -1.1920928244535389e-07, -0.0001068115234375, -0.0001468658447265625, -1.33514404296875e-05, -5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.0013619661331176758, 0.0, -0.0004655100347008556, -3.576278118089249e-07, -0.000423431396484375, -0.0001201629638671875, -3.0517578125e-05, -1.9073486328125e-06, -0.0013613700866699219, -4.5299319026526064e-05, -0.026811599731445312, -0.0006561279296875, -0.0001392364501953125, -0.000274658203125, -0.0003895759582519531, 0.0, -0.000994563102722168, -2.5033950805664062e-05], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}]}
{"index": 32, "beams": [{"choice_history": [59, 126, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Fireball", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "Fireball", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.20415614046541464, "score_history": [-3.814697265625e-06, -0.0050258636474609375, -0.0010623115813359618, 0.0, -0.0006556096486747265, -7.033347174001392e-06, -2.3841855067985307e-07, -3.4332275390625e-05, -4.57763671875e-05, -3.24249267578125e-05, -0.0006389617919921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.996227264404297e-05, 0.0, -1.33514404296875e-05, 0.0, -6.413457595044747e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -0.006392478942871094, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0001277923583984375, -0.0006974935531616211, 0.0, -0.008577346801757812, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -4.57763671875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0008716583251953125, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0003480784362182021, -3.0517578125e-05, -0.00030934810638427734, 0.0, -4.398822784423828e-05, 0.0, -2.47955322265625e-05, -0.0001697540283203125, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.005688667297363281, -3.814697265625e-06, -3.0517578125e-05, -1.71661376953125e-05, -1.9073486328125e-05, -1.215934389620088e-05, 0.0, -3.969664976466447e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.000980377197265625, -7.62939453125e-06, -6.29425048828125e-05, -5.7220458984375e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -0.0003751516342163086, -3.814697265625e-06, -4.2556854168651626e-05, -5.722029527532868e-06, -1.1444091796875e-05, -2.47955322265625e-05, -0.0002422332763671875, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00047397613525390625, -8.344646857949556e-07, -3.24249267578125e-05, -0.0003662109375, -1.9073486328125e-06, -0.1691150665283203, -7.8556542575825e-05, -3.814697265625e-06, 0.0, -0.00014650821685791016, -1.2636161045520566e-05], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}]}
{"index": 33, "beams": [{"choice_history": [59, 126, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "4", "<EOS>", 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"body": [{"hole0": {"_type": "Name", "id": "minion"}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Num", "n": 4}]}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "target": {"_type": "Name", "id": "minion"}}], "hole2": [{"_type": "Expr", "value": {"hole0": "Flamestrike", "_type": "Template3", "hole3": "COMMON", "hole1": 7, "hole2": "MAGE"}}], "hole3": "use", "hole0": "Flamestrike", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.169436866023716, "score_history": [-3.814697265625e-06, -0.001708984375, -8.821469236863777e-06, -1.1682462172757369e-05, -8.127919863909483e-05, -5.519286060007289e-05, -1.943104507518001e-05, -0.000213623046875, -6.866455078125e-05, -0.00014495849609375, -0.0002269744873046875, -0.0001354217529296875, -6.949873204575852e-05, -1.6331539882230572e-05, -1.7404487152816728e-05, -9.417526598554105e-06, -0.03422284126281738, 0.0, -0.000118255615234375, 0.0, -1.3589859008789062e-05, 0.0, -0.00011086298763984814, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -3.337859743623994e-05, -1.919269561767578e-05, -0.11435794830322266, -0.0009326934814453125, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -3.3020849514286965e-05, -3.826618194580078e-05, -0.0003895684494636953, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.000110626220703125, 0.0, -9.34600830078125e-05, 0.0, -0.0002117156982421875, -5.7220458984375e-06, -7.43865966796875e-05, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.0009199380874633789, -8.344646857949556e-07, -0.001384735107421875, -4.38690185546875e-05, -2.09808349609375e-05, 0.0, -0.0002079010009765625, 0.0, -0.0009007453918457031, -1.9073486328125e-06, -0.0015796422958374023, -2.1457672119140625e-06, -0.0001049041748046875, -1.9073486328125e-06, -0.0001373291015625, -6.67572021484375e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -7.462501525878906e-05, -1.9073486328125e-05, -0.002291083335876465, -3.933906555175781e-06, -0.00043629499850794673, -8.7738037109375e-05, -5.14984130859375e-05, -0.0006256103515625, -5.14984130859375e-05, -0.0001087188720703125, -1.9073486328125e-06, -6.413451774278656e-05, -3.933898824470816e-06, -0.00017879770894069225, -1.311301275563892e-06, -2.09808349609375e-05, -0.0001373291015625, -5.7220458984375e-06, -2.288818359375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.814697265625e-06, -3.063678741455078e-05, 0.0, -0.0007034533773548901, -4.768370445162873e-07, -7.2479248046875e-05, -0.0017948150634765625, -3.4332275390625e-05, -3.445148468017578e-05, -0.0029383846558630466, -0.0001049041748046875, -5.7220458984375e-06, -0.0001703500747680664, -9.155271982308477e-05], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}]}
{"index": 34, "beams": [{"choice_history": [59, 124, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Flametongue", " ", "Totem", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "3", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 51, 130, "Adjacent", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Aura"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}, "args": [{"_type": "Template17"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"hole0": "Adjacent", "_type": "Template10"}]}]}], "_type": "List"}}], "hole1": 0, "hole2": 3}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template17"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "FlametongueTotem", "hole1": "MinionCard"}, "score": -0.13887683201379986, "score_history": [-4.38690185546875e-05, -1.71661376953125e-05, -5.1616480050142854e-05, -9.107192454393953e-05, -0.00011383860692149028, -4.767862264998257e-07, -1.9073486328125e-06, -4.768367489305092e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0001049041748046875, -8.96453857421875e-05, -9.5367431640625e-06, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -2.8132995794294402e-05, -3.6597251892089844e-05, -0.0001379173918394372, -1.71661376953125e-05, -0.000774383544921875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.0029811859130859375, -1.1444091796875e-05, -0.0013790130615234375, -0.0002384185791015625, -3.814697265625e-06, -0.0019675493240356445, -2.9802317840221804e-06, -4.57763671875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.00074005126953125, -1.9073486328125e-06, -0.0038433074951171875, -1.9073486328125e-06, -0.0003147125244140625, -1.9073486328125e-06, -0.0029561519622802734, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.0005130767822265625, 0.0, -2.5391527742613107e-05, 0.0, -1.0728830375228426e-06, -1.3232166566012893e-05, -4.41074053014745e-06, -0.000400543212890625, -1.9073486328125e-06, -0.026529431343078613, 0.0, -9.918212890625e-05, -0.0001201629638671875, -0.003635406494140625, -1.33514404296875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005917549133300781, -4.267692565917969e-05, -0.005118370056152344, -0.000156402587890625, -9.5367431640625e-06, 0.0, -6.29425048828125e-05, -0.0021602697670459747, -0.0002237558364868164, -2.1457672119140625e-06, -1.71661376953125e-05, -0.001628875732421875, -0.0001697540283203125, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -6.735231727361679e-05, -2.288818359375e-05, 0.0, -8.0108642578125e-05, -0.08032035827636719, -1.9073486328125e-06, -0.0005575215327553451, -7.974998152349144e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}]}
{"index": 35, "beams": [{"choice_history": [59, 124, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Frog", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "1", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "p", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}], "hole1": 0, "hole2": 1}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}]}}], "hole3": "create_minion", "hole0": "Frog", "hole1": "MinionCard"}, "score": -0.04160272387616004, "score_history": [-6.67572021484375e-05, -7.43865966796875e-05, -0.0006428082706406713, -0.0029593128710985184, -2.9560222174040973e-05, -5.841255187988281e-06, -1.9073486328125e-06, 0.0, -0.00109100341796875, -1.33514404296875e-05, -2.86102294921875e-05, -0.00084686279296875, -0.000217437744140625, -0.0017604827880859375, -6.103515625e-05, -2.288818359375e-05, -1.6093124941107817e-05, -3.24249267578125e-05, -0.0047893524169921875, -3.814697265625e-06, -0.006893387529999018, -1.0013530300057027e-05, -0.0001926422119140625, 0.0, -7.05718994140625e-05, -3.814697265625e-06, -1.1682510375976562e-05, -4.1961669921875e-05, -0.000209808349609375, 0.0, -9.34600830078125e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0002624988555908203, -2.0265579223632812e-06, -0.0001163482666015625, -3.814697265625e-06, -4.971027374267578e-05, -1.1920928244535389e-07, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.000133514404296875, -3.4332275390625e-05, -0.0009098052978515625, -2.09808349609375e-05, -0.0001150369644165039, 0.0, -0.014055904932320118, -0.0015778541564941406, -0.00067901611328125, -0.0011768341064453125, -0.0002193450927734375, 0.0, -1.9788689314736985e-05, -1.9073486328125e-06, -4.827859811484814e-05, -0.00023326878726948053, -5.722038622479886e-06, -0.0003147125244140625, 0.0, -0.0009213685989379883, -1.52587890625e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.00031280517578125, -1.1444091796875e-05], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}]}
{"index": 36, "beams": [{"choice_history": [59, 126, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Frozen", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"body": [{"hole0": {"_type": "Name", "id": "minion"}, "_type": "Template9", "hole1": "add_buff", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Buff"}, "args": [{"hole0": "Frozen", "_type": "Template10"}]}]}], "_type": "For", "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}, "target": {"_type": "Name", "id": "minion"}}], "hole2": [{"_type": "Expr", "value": {"hole0": "Frost Nova", "_type": "Template3", "hole3": "COMMON", "hole1": 3, "hole2": "MAGE"}}], "hole3": "use", "hole0": "FrostNova", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.06517984930655274, "score_history": [-0.000614166259765625, -7.43865966796875e-05, -1.6689286894688848e-06, -0.0010191967012360692, -0.0004515614709816873, -0.0005028694868087769, -1.9073486328125e-06, -5.841255187988281e-06, -3.4332275390625e-05, -1.52587890625e-05, -0.0001354217529296875, -4.9591064453125e-05, -5.7220458984375e-05, -3.9934315282152966e-05, -0.0003692733880598098, -2.038458114839159e-05, -1.1920922133867862e-06, -8.558859553886577e-05, -3.814697265625e-06, -0.00447845458984375, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.00039899349212646484, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -1.9073486328125e-05, -5.125999450683594e-05, -0.00011479854583740234, -0.007990837097167969, -0.0004482269287109375, -3.4332275390625e-05, -0.00030517578125, -1.33514404296875e-05, -1.955029074451886e-05, -2.09808349609375e-05, -5.638599395751953e-05, 0.0, -0.0006771087646484375, -1.33514404296875e-05, -5.340576171875e-05, -4.76837158203125e-05, 0.0, -5.7220458984375e-05, 0.0, -7.05718994140625e-05, -7.62939453125e-06, -5.340576171875e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.0003319978713989258, -2.9802317840221804e-06, -0.003711700439453125, 0.0, -0.0027008056640625, 0.0, -1.71661376953125e-05, 0.0, -0.000171661376953125, -9.5367431640625e-06, -0.0006561279296875, -1.9073486328125e-06, -0.001291513442993164, 0.0, -0.0001163482666015625, -4.1961669921875e-05, -1.1444091796875e-05, -8.20159912109375e-05, 0.0, -0.00021409988403320312, -1.1920928244535389e-07, -0.012072681449353695, -5.519390106201172e-05, -0.0001277923583984375, -0.000148773193359375, 0.0, -0.0009784698486328125, 0.0, -0.004459738731384277, -0.00011444091796875, -7.05718994140625e-05, -0.011577606201171875, -1.9073486328125e-06, -0.006678172852844, -0.000942230224609375], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n"}]}
{"index": 37, "beams": [{"choice_history": [59, 126, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Frost", " ", "Shock", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 56, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Frozen", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template18"}]}, {"_type": "Name", "id": "self"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "add_buff", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Buff"}, "args": [{"hole0": "Frozen", "_type": "Template10"}]}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "FrostShock", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.1507064887132188, "score_history": [-1.1444091796875e-05, -2.86102294921875e-05, -1.1920928244535389e-07, -0.000713213172275573, -8.440017700195312e-05, -1.2754171621054411e-05, -2.741813204920618e-06, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-05, -3.814697265625e-06, -0.0011157989501953125, -0.005184173583984375, -6.103515625e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.883488948806189e-05, -0.00046634653699584305, -9.536738616588991e-07, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.0002231597900390625, -5.7220458984375e-06, 0.0, -6.175041198730469e-05, -1.1920928244535389e-07, -0.008769512176513672, 0.0, -0.0003681182861328125, 0.0, -0.0001087188720703125, -0.0005105733871459961, -5.7220458984375e-06, -0.0041065216064453125, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.1961669921875e-05, -0.000484466552734375, -0.000232696533203125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0026683807373046875, -1.9073486328125e-06, -4.589557647705078e-05, 0.0, -0.002976893214508891, -1.1920928244535389e-07, -3.874278627336025e-05, 0.0, -4.136523057240993e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0609614946588408e-05, -2.5153160095214844e-05, -0.010103225708007812, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.629387255292386e-06, -3.814697265625e-06, -5.960462203802308e-06, 0.0, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -5.14984130859375e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -5.53131103515625e-05, -1.52587890625e-05, -8.20159912109375e-05, -0.0006465911865234375, -0.000156402587890625, 0.0, -8.20159912109375e-05, -9.5367431640625e-06, -5.733966827392578e-05, -1.9073486328125e-06, -0.005432115867733955, -5.364403477869928e-06, -2.09808349609375e-05, -0.0015048980712890625, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0002690553665161133, 0.0, -1.1444091796875e-05, -0.0004673004150390625, -1.9073486328125e-05, -3.814697265625e-06, -0.0002351999282836914, -0.0008602142333984375, -0.000995635986328125, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -0.0018482208251953125, 0.0, -4.57763671875e-05, -1.52587890625e-05, -5.14984130859375e-05, 0.0, -0.07184459269046783, -2.7417858291300945e-05, -8.392333984375e-05, -5.53131103515625e-05, -1.1444091796875e-05, -0.000232696533203125, 0.0, -0.021960735321044922, -0.0001188516616821289, -2.86102294921875e-05, -0.00211334228515625, -4.9591064453125e-05, -0.0018642910290509462, -0.0002560615539550781], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}]}
{"index": 38, "beams": [{"choice_history": [59, 126, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Frostbolt", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 164, 41, 89, 24, 112, "Buff", "<EOS>", 164, 51, 130, "Frozen", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template19"}]}, {"_type": "Name", "id": "self"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "add_buff", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Buff"}, "args": [{"hole0": "Frozen", "_type": "Template10"}]}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template17"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "use", "hole0": "Frostbolt", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.28678635406345165, "score_history": [-3.4332275390625e-05, -9.34600830078125e-05, -3.540453326422721e-05, -2.1457672119140625e-06, -4.170229658484459e-06, -3.099440846199286e-06, -9.655952453613281e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0073070526123046875, -2.6702880859375e-05, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -2.3841830625315197e-06, -8.344650268554688e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -3.4332275390625e-05, 0.0, -0.019479751586914062, 0.0, -0.00012969970703125, -0.007404327392578125, 0.0, -0.0001583099365234375, 0.0, -0.0001659393310546875, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000804901123046875, 0.0, -2.47955322265625e-05, 0.0, -0.003113389015197754, -3.814697265625e-06, -0.0001964569091796875, -1.9073486328125e-06, -0.00013005733489990234, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -2.2649765014648438e-06, -1.919269561767578e-05, -0.009552001953125, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.033334895822918e-06, -2.0265579223632812e-06, -4.053113570989808e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.000156402587890625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.0517578125e-05, -0.000118255615234375, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -6.687641143798828e-05, -1.9073486328125e-06, -0.0020155571401119232, -1.0013530300057027e-05, -3.814697265625e-06, -0.001392364501953125, -0.0004634857177734375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -7.62939453125e-06, 0.0, -0.00023794172739144415, 0.0, -4.9591064453125e-05, -0.06238555908203125, -2.47955322265625e-05, -0.0002288818359375, -0.0007262229919433594, -0.0002206563949584961, -0.0001277923583984375, -0.000164031982421875, -7.82012939453125e-05, -1.9073486328125e-06, -0.0003662109375, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.15575480461120605, -0.0001356596330879256, -3.4332275390625e-05, -5.91278076171875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.007191658020019531, -5.054473876953125e-05, -4.1961669921875e-05, -0.0015277862548828125, -0.0001201629638671875, -0.0031896368600428104, -0.00033915042877197266], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}]}
{"index": 39, "beams": [{"choice_history": [59, 124, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}], "hole1": 2, "hole2": 2}], "hole2": [{"_type": "Expr", "value": {"hole0": "Frostwolf Grunt", "_type": "Template3", "hole3": "COMMON", "hole1": 2, "hole2": "ALL"}}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "hole1": "MinionCard"}, "score": -0.020496888713580574, "score_history": [-0.0002841949462890625, -0.0003528594970703125, -3.886147169396281e-05, -0.0002506657037883997, -2.5391558665432967e-05, -1.4305051081464626e-06, -2.0265579223632812e-06, -4.649161837733118e-06, -1.9073486328125e-06, -5.91278076171875e-05, -1.71661376953125e-05, -5.7220458984375e-05, -0.000202178955078125, -4.768258077092469e-05, -4.76837158203125e-05, -5.483612312673358e-06, -2.47955322265625e-05, -0.0004791205283254385, 0.0, -3.635883331298828e-05, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.014845608733594418, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0017213821411132812, -1.1920917586394353e-07, 0.0, -0.0001308917999267578, -2.3841855067985307e-07, -0.0006076691206544638, -2.3841855067985307e-07, -0.000133514404296875, -1.9073486328125e-06, -0.0006606578826904297, -5.7220458984375e-06, -7.43865966796875e-05, -1.33514404296875e-05, -0.0002498626708984375, -3.814697265625e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}]}
{"index": 40, "beams": [{"choice_history": [59, 124, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "2", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}], "hole1": 1, "hole2": 2}], "hole2": [{"_type": "Expr", "value": {"hole0": "Goldshire Footman", "_type": "Template3", "hole3": "COMMON", "hole1": 1, "hole2": "ALL"}}], "hole3": "create_minion", "hole0": "GoldshireFootman", "hole1": "MinionCard"}, "score": -0.06525892435774239, "score_history": [-5.7220458984375e-05, -0.0002899169921875, -3.576272320060525e-06, -2.8729025871143676e-05, -1.0132769602932967e-05, 0.0, -1.1920928244535389e-07, -2.1457672119140625e-06, -1.9073486328125e-06, -6.866455078125e-05, -9.5367431640625e-06, -7.2479248046875e-05, -2.09808349609375e-05, -4.053033626405522e-05, -5.53131103515625e-05, -7.152555099310121e-07, -3.814697265625e-06, -0.0010449421824887395, -1.9073486328125e-06, -5.7697296142578125e-05, 0.0, -4.9948692321777344e-05, 0.0, -7.748603820800781e-06, 0.0, -0.06066298484802246, 0.0, -3.814697265625e-06, -2.288818359375e-05, -0.00148773193359375, 0.0, -1.311301275563892e-06, -8.594989776611328e-05, -2.503394853192731e-06, -0.00016247453459072858, -2.1457672119140625e-06, -0.0001010894775390625, 0.0, -0.0007454156875610352, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -7.05718994140625e-05, -5.7220458984375e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}]}
{"index": 41, "beams": [{"choice_history": [59, 124, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Grimscale", " ", "Oracle", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 165, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 51, 130, "Both", "Player", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Aura"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}, "args": [{"_type": "Template18"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}, {"hole0": "BothPlayer", "_type": "Template10"}]}]}], "_type": "List"}}], "hole1": 1, "hole2": 1}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "hole1": "MinionCard"}, "score": -0.0801714381293479, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -5.483612312673358e-06, -1.7881377516459906e-06, -2.3841830625315197e-06, -1.1920906217710581e-07, -4.0531158447265625e-06, -1.4781891877646558e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -4.38690185546875e-05, -5.7220458984375e-06, -0.0001220703125, 0.0, -5.7220458984375e-06, -2.3722626792732626e-05, -4.00543212890625e-05, -1.1920928244535389e-07, 0.0, -1.52587890625e-05, -0.0001392364501953125, -2.86102294921875e-05, -1.33514404296875e-05, 0.0, -3.933906555175781e-06, -1.7404556274414062e-05, -4.76837158203125e-05, 0.0, -0.0003376007080078125, -0.0003566741943359375, -3.814697265625e-06, -0.00012981891632080078, -9.536738616588991e-07, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -6.878376007080078e-05, -2.288818359375e-05, -0.012058854103088379, -3.814697265625e-06, -0.00029969215393066406, 0.0, -0.0011587587650865316, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.00021515002299565822, 0.0, -8.4638240878121e-06, -1.013318615150638e-05, -2.157668859581463e-05, -0.0055694580078125, -5.7220458984375e-06, -0.01842939853668213, -7.152555099310121e-07, -0.0001811981201171875, -8.96453857421875e-05, -0.0071010589599609375, -7.62939453125e-06, -0.000202178955078125, 0.0, -9.5367431640625e-06, -0.001119852066040039, -6.35385513305664e-05, -0.0002536773681640625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -6.4849853515625e-05, -0.0006829032790847123, -0.00019466876983642578, -1.621246337890625e-05, -4.38690185546875e-05, -0.0007572174072265625, -0.0014171600341796875, -2.86102294921875e-05, -1.9073486328125e-05, -0.000240325927734375, -6.652018055319786e-05, -1.3589859008789062e-05, -1.7404556274414062e-05, -0.012042999267578125, -0.001232147216796875, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.004380698781460524, -0.0006587505340576172, -3.0517576306010596e-05, -1.9073486328125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0009955167770385742, -7.748603820800781e-06, -0.004624485969543457, -0.0009860992431640625, -0.0019741058349609375, 0.0, -0.0006824731826782227, -0.00011527538299560547, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}]}
{"index": 42, "beams": [{"choice_history": [59, 124, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 48, 117, "7", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 48, 117, "6", "<EOS>", 51, 130, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "5", "<EOS>", "6", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 5, "hole2": 6}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Heal"}, "args": [{"_type": "Num", "n": 6}]}, {"hole0": "HeroSelector", "_type": "Template10"}]}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "GuardianOfKings", "hole1": "MinionCard"}, "score": -0.1093735907537905, "score_history": [-1.9073486328125e-06, -0.0001316070556640625, -4.994744449504651e-05, -0.004685677122324705, -0.00021932146046310663, -0.008751573972404003, 0.0, 0.0, -4.529942543740617e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-05, -0.0001239776611328125, -1.71661376953125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -1.33514404296875e-05, -0.00047838687896728516, -3.4570690331747755e-05, -1.1682510375976562e-05, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -5.2809700719080865e-05, -7.748603820800781e-06, -0.005299568176269531, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0565948486328125, -3.814697265625e-06, -4.9591064453125e-05, -0.00019073486328125, 0.0, -0.009987831115722656, -1.9073486328125e-06, -0.0001621246337890625, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0001857280731201172, -1.9073486328125e-06, -1.52587890625e-05, -0.00087738037109375, -1.9073486328125e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.015325902961194515, -9.59633180173114e-05, -3.814697265625e-06, -0.002521514892578125, -1.52587890625e-05, -0.0015512186801061034, -2.2292097128229216e-05, -1.33514404296875e-05, 0.0, -0.0002428293228149414, -0.0011197328567504883, 0.0, -0.00015676021575927734, 0.0, -1.9788742065429688e-05, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.71661376953125e-05, 0.0, -2.1457672119140625e-06, -2.7060508728027344e-05, -3.576278118089249e-07, -5.543231964111328e-05, -2.3841855067985307e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}]}
{"index": 43, "beams": [{"choice_history": [59, 124, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "7", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 41, 88, 24, 112, "Character", "Damaged", "<EOS>", 172, 154, "condition", "<EOS>", 28, 130, "Minion", "Is", "Target", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 57, 51, 130, "Self", "Selector", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"hole0": "MinionIsTarget", "_type": "Template10"}}], "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}, "args": [{"_type": "Template19"}]}]}, {"hole0": "SelfSelector", "_type": "Template10"}]}]}], "_type": "List"}}], "hole1": 2, "hole2": 7}], "hole2": [{"_type": "Expr", "value": {"hole0": "Gurubashi Berserker", "_type": "Template3", "hole3": "COMMON", "hole1": 5, "hole2": "ALL"}}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "hole1": "MinionCard"}, "score": -0.2101144308048717, "score_history": [-3.814697265625e-06, -0.0001163482666015625, -9.775113539944869e-06, -0.00014709345123264939, -1.633167266845703e-05, -6.983490311540663e-05, 0.0, -4.0531158447265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -6.4849853515625e-05, -0.000247955322265625, -0.000957489013671875, -1.0967194612021558e-05, -3.254413604736328e-05, 0.0, -7.867813110351562e-06, -4.613332566805184e-05, -1.1920928244535389e-07, -6.473046232713386e-05, 0.0, -0.0002103888982674107, -1.9073486328125e-06, -1.072883515007561e-05, 0.0, -7.331371307373047e-05, 0.0, -1.9073486328125e-06, -7.2479248046875e-05, -0.0001773834228515625, 0.0, -4.0531158447265625e-06, -2.741813204920618e-06, -2.8729255063808523e-05, -5.459782914840616e-05, -0.00016975001199170947, -5.7220458984375e-06, -0.000102996826171875, -2.682209014892578e-05, 0.0, -3.814697265625e-05, -3.62396240234375e-05, -0.002323150634765625, 0.0, -9.34600830078125e-05, -1.9073486328125e-06, 0.0, -0.0003228187561035156, -0.00012004372547380626, -7.62939453125e-06, -0.0008563995361328125, -0.0012922286987304688, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024279793724417686, -0.03894650936126709, -3.933906555175781e-06, -0.00035858154296875, -0.000125885009765625, -0.00933837890625, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.02280634641647339, -0.07202339172363281, -0.029781006276607513, 0.0, -6.103515625e-05, -5.7220458984375e-06, 0.0, 0.0, -0.0002782343653962016, -1.9073486328125e-05, -1.728534698486328e-05, -3.0517578125e-05, -0.00452423095703125, -0.000209808349609375, 0.0, 0.0, -0.00048232078552246094, -4.208087921142578e-05, -1.9073486328125e-05, -0.0098419189453125, -0.001583099365234375, 0.0, 0.0, -0.00020742276683449745, -0.005052685737609863, -5.9604644775390625e-06, -1.1444091796875e-05, -0.0016002655029296875, -2.09808349609375e-05, -3.814697265625e-06, -0.002283930778503418, -9.930133819580078e-05, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}]}
{"index": 44, "beams": [{"choice_history": [59, 126, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 57, 46, 112, "self", "<EOS>", 76, 145, 24, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template19"}]}, {"_type": "Name", "id": "self"}]}, {"hole0": {"_type": "Name", "id": "player"}, "_type": "Template9", "hole1": "draw"}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "HammerOfWrath", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.14301082959334366, "score_history": [-4.00543212890625e-05, -0.000339508056640625, -4.386832733871415e-05, -0.00033389951568096876, -0.02946893684566021, -3.3378546504536644e-06, -3.5762514016823843e-07, -6.198883056640625e-06, -9.059880540007725e-06, -1.71661376953125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.000583648681640625, -2.47955322265625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -6.67572021484375e-05, -1.4185804502631072e-05, -0.0005995035171508789, -0.00019681228150147945, -0.0001817941665649414, -3.0755993066122755e-05, -7.62939453125e-06, -9.1552734375e-05, -4.76837158203125e-05, -4.458245894056745e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00015270709991455078, -0.0023308992385864258, -1.1920928244535389e-07, -0.03107452392578125, -3.62396240234375e-05, -4.00543212890625e-05, -0.014421463012695312, 0.0, -0.0017681121826171875, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -7.62939453125e-05, -0.00025177001953125, -7.82012939453125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0003662109375, -3.0517578125e-05, -0.0001125335693359375, -2.3841855067985307e-07, -0.0005223746411502361, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -4.315376281738281e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.0077762603759765625, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00016890562255866826, -8.392333984375e-05, -7.15247297193855e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0038127899169921875, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.580352783203125e-05, -1.9073486328125e-06, -0.0001595020294189453, 0.0, -0.0003075290587730706, -5.960462772236497e-07, -5.7220458984375e-06, -0.0024938583374023438, -0.0002307891845703125, -3.814697265625e-06, 0.0, -7.43865966796875e-05, 0.0, -0.0001220703125, 0.0, -0.0003175623423885554, 0.0, -3.4332275390625e-05, -0.008874893188476562, -9.5367431640625e-06, -1.9073486328125e-06, -0.0010091066360473633, -6.079673767089844e-06, -0.0005626678466796875, -3.4332275390625e-05, -3.24249267578125e-05, 0.0, -4.971027374267578e-05, 0.0, -0.03275632858276367, -6.318092346191406e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}]}
{"index": 45, "beams": [{"choice_history": [59, 126, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 38, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 25, 113, "True", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}], "value": {"_type": "NameConstant", "value": true}}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "HandOfProtection", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.251660909133534, "score_history": [-5.7220458984375e-05, -0.0001010894775390625, -0.00014232887770049274, -0.0018662064103409648, -9.667510312283412e-05, -3.3258958865189925e-05, -4.7683624870842323e-07, -1.7642965758568607e-05, -4.434487345861271e-05, -1.9073486328125e-06, -9.1552734375e-05, -2.47955322265625e-05, -0.0023241043090820312, -0.0002918243408203125, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -0.0005950927734375, -6.16293036728166e-05, -0.0017501115798950195, -6.59227225696668e-05, -0.0002160072181141004, -3.9339061913779005e-05, -1.3470649719238281e-05, -4.76837158203125e-05, -5.14984130859375e-05, -9.5367431640625e-06, -7.2479248046875e-05, 0.0, -1.5974044799804688e-05, -0.0003728866286110133, -0.018902182579040527, -1.0490413842489943e-05, -0.0016918182373046875, 0.0, -0.0008916854858398438, -0.002953288145363331, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.71661376953125e-05, -7.2479248046875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0011196136474609375, -3.814697265625e-06, -0.0007554292678833008, 0.0, -0.00465548038482666, 0.0, -0.00033211708068847656, 0.0, -0.000380515877623111, 0.0, -0.0001678466796875, -3.4332275390625e-05, -3.814697265625e-06, -6.079673767089844e-06, -7.748603820800781e-06, -0.06222248077392578, -0.0001010894775390625, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.00010323348396923393, -0.00013172626495361328, -0.0006411075592041016, 0.0, -7.62939453125e-06, -0.00030517578125, 0.0, -4.9591064453125e-05, 0.0, -1.1444091796875e-05, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.0033473968505859375, -7.2479248046875e-05, -5.7220458984375e-06, -0.0023565292358398438, 0.0, -0.004149436950683594, 0.0, -2.86102294921875e-05, 0.0, -0.0006772279739379883, -1.33514404296875e-05, -0.0011138916015625, 0.0, -0.12194633483886719, 0.0, -0.011820793151855469, -0.0005474090576171875, -0.0013226269511505961, -1.9073486328125e-06], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}]}
{"index": 46, "beams": [{"choice_history": [59, 124, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 89, 35, 169, 49, 121, "Healing", " ", "Totem", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 47, 113, "False", "<EOS>", 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 172, 154, "effects", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Effect", "<EOS>", 165, 51, 130, "Turn", "Ended", "<EOS>", 41, 89, 24, 112, "Action", "Tag", "<EOS>", 165, 41, 89, 24, 112, "Heal", "<EOS>", 164, 56, 41, 88, 24, 112, "Minion", "Selector", "<EOS>", 172, 154, "condition", "<EOS>", 25, 114, "Null", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "effects", "value": {"elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"hole0": "TurnEnded", "_type": "Template10"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Heal"}, "args": [{"_type": "Template18"}]}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "func": {"_type": "Name", "id": "MinionSelector"}}]}]}], "_type": "List"}}], "hole1": 0, "hole2": 2}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}}], "hole3": "create_minion", "hole0": "HealingTotem", "hole1": "MinionCard"}, "score": -0.12826792200212367, "score_history": [-0.0003337860107421875, -5.14984130859375e-05, -2.157668859581463e-05, -2.5033637939486653e-05, -1.9073468138230965e-06, -7.622467819601297e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00022125244140625, -0.000102996826171875, -0.0014629364013671875, -0.000415802001953125, -0.00042724609375, -0.00092315673828125, -0.0014362335205078125, -0.0002346038818359375, -8.344646857949556e-07, -0.0015049005160108209, -3.933906555175781e-06, 0.0, -5.14984130859375e-05, -0.00037384033203125, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -0.001934051513671875, -1.9073486328125e-06, -0.0019397735595703125, -9.918212890625e-05, -0.000438690185546875, -0.00022971630096435547, 0.0, -0.0013093948364257812, -1.9073486328125e-06, -0.00013935565948486328, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0005207061767578125, 0.0, -0.001010894775390625, 0.0, -0.0065402984619140625, 0.0, -0.0002079010009765625, 0.0, -7.62939453125e-06, -2.288818359375e-05, -0.0005054473876953125, -6.347475573420525e-05, -1.537799835205078e-05, -1.0728830375228426e-06, -2.3007127310847864e-05, -0.0001745100162224844, -1.1086437552876305e-05, -2.6702880859375e-05, -2.288818359375e-05, -2.6702880859375e-05, 0.0, -0.0002956390380859375, -0.001399993896484375, -0.014120101928710938, -0.0001220703125, -3.814697265625e-06, 0.0, 0.0, -6.306171417236328e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001277923583984375, 0.0, -0.00048792362213134766, -0.04985344409942627, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0025254487991333008, -0.0001621246337890625, -3.814697265625e-06, -7.62939453125e-06, -0.0006866455078125, -5.7220458984375e-06, -0.0001430511474609375, -1.52587890625e-05, -0.019706249237060547, -0.0026264190673828125, -2.6702880859375e-05, -0.000125885009765625, -0.0001220703125, -0.000888824462890625, -9.5367431640625e-06, 0.0, -0.004685640335083008, -2.288818359375e-05, -5.173683166503906e-05, -0.0001068115234375, -3.814697265625e-05, -0.0008089542388916016, -0.0003337860107421875, -0.0036869049072265625, -0.0018310546875, -0.0001220703125, -1.9073486328125e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}]}
{"index": 47, "beams": [{"choice_history": [59, 126, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Healing", " ", "Touch", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "8", "<EOS>", 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Num", "n": 8}]}, {"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template19"}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "HealingTouch", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.16712607847441774, "score_history": [0.0, -0.0001659393310546875, -1.1920928244535389e-07, -8.451581379631534e-05, -1.025199526338838e-05, -2.6224806788377464e-06, -3.218649908376392e-06, -3.099440846199286e-06, -8.392333984375e-05, -7.43865966796875e-05, -9.5367431640625e-06, -0.002063751220703125, -0.0003509521484375, -0.00042724609375, -4.1961669921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.7762025890988298e-05, -2.121925172104966e-05, -4.0531076592742465e-06, -2.300739288330078e-05, -0.0003376007080078125, -0.0001163482666015625, 0.0, -3.814697265625e-06, 0.0, -1.728534698486328e-05, -1.9073486328125e-06, -0.021810531616210938, 0.0, -0.0001964569091796875, 0.0, -1.1444091796875e-05, -0.0024007558822631836, -1.1920928244535389e-07, -0.000736236572265625, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-05, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.000522613525390625, -1.9073486328125e-06, -0.00019073486328125, 0.0, -0.001173853874206543, -3.814697265625e-06, -4.601478576660156e-05, 0.0, -9.393692016601562e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.987022399902344e-06, -1.9073486328125e-06, -0.11492156982421875, -2.6702880859375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -2.86102294921875e-05, -1.5497207641601562e-05, 0.0, -9.799003601074219e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-05, 0.0, -0.00043582916259765625, 0.0, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -1.33514404296875e-05, -0.0007419586181640625, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -4.57763671875e-05, 0.0, -0.001995086669921875, -1.9073486328125e-06, -0.0004730224609375, -1.9073486328125e-06, -0.007218346465379, -9.059900548891164e-06, -0.0007495880126953125, -8.0108642578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.0517578125e-05, 0.0, -0.0009025335311889648, -1.9073486328125e-05, -3.814697265625e-06, -0.000293731689453125, -3.814697265625e-06, -0.006505168974399567, 0.0, -0.0003719329833984375, -1.1444091796875e-05, -0.0006146430969238281, -1.1920928244535389e-07], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}]}
{"index": 48, "beams": [{"choice_history": [59, 126, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Hex", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 181, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "frog", "<EOS>", 19, 87, 16, 82, 16, 82, 16, 82, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", "Frog", "<EOS>", 64, 81, 164, 46, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "frog", "<EOS>", "create_minion", "<EOS>", 164, 47, 114, "Null", "<EOS>", 64, 81, 164, 38, 82, 24, 112, "minion", "<EOS>", "card", "<EOS>", 24, 112, "frog", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 164, 46, 112, "minion", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "minion"}}], "value": {"_type": "Name", "id": "frog"}}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "<UNK>", "hole2": [{"_type": "Name", "id": "minion"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template19"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "Hex", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -1.2720954364353645, "score_history": [-0.000629425048828125, -0.0004940032958984375, -0.00019035929290112108, -7.152551916078664e-06, -3.575863956939429e-06, -6.318092346191406e-06, -4.410743713378906e-06, -7.62939453125e-06, -1.52587890625e-05, -4.38690185546875e-05, -1.52587890625e-05, -0.0001697540283203125, -9.5367431640625e-06, -6.866455078125e-05, -1.1444091796875e-05, -7.62939453125e-06, -1.1324817933200393e-05, -4.410743713378906e-06, -0.0003681182861328125, -1.1444091796875e-05, 0.0, -0.0001220703125, 0.0, -0.00027167797088623047, -2.3841855067985307e-07, -0.003956913948059082, -3.814697265625e-06, -0.0007381439208984375, 0.0, -1.9073486328125e-05, -0.006777524948120117, 0.0, -0.002559661865234375, -7.62939453125e-06, -4.00543212890625e-05, 0.0, -2.6702880859375e-05, -0.000118255615234375, -7.43865966796875e-05, -6.67572021484375e-05, -1.52587890625e-05, 0.0, -0.0003719329833984375, 0.0, -6.103515625e-05, 0.0, -0.004640698432922363, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -4.792213439941406e-05, 0.0, -0.000179290771484375, -1.9073486328125e-06, -1.71661376953125e-05, -5.841255187988281e-06, -5.7220458984375e-06, -0.11457157135009766, -0.0024232864379882812, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-05, -4.4584176066564396e-05, -3.814697265625e-06, -1.3709068298339844e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -0.0026531219482421875, -7.62939453125e-06, -1.71661376953125e-05, -6.866455078125e-05, 0.0, -0.13816817104816437, -0.00030517578125, -0.00080108642578125, -0.00025177001953125, -0.0001373291015625, -4.38690185546875e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.52587890625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.15265369415283203, 0.0, -0.07794189453125, -7.62939453125e-06, -0.009662985801696777, 0.0, -0.017682194709777832, -1.71661376953125e-05, -0.036029934883117676, -3.24249267578125e-05, -0.005861700978130102, -0.0004825592041015625, -0.02980564720928669, -1.3589859008789062e-05, -0.061748068779706955, -8.797645568847656e-05, -0.0072174072265625, -1.52587890625e-05, -0.000873565673828125, -0.0002117156982421875, -1.1444091796875e-05, -0.03403472527861595, -2.6344954676460475e-05, -0.005171775817871094, -0.000278472900390625, -3.62396240234375e-05, 0.0, -0.008256912231445312, 0.0, -0.13808012008666992, -7.62939453125e-06, -0.005683183670043945, 0.0, -0.000274658203125, -0.00963592529296875, -0.0008907318115234375, -0.0005076437955722213, -3.24249267578125e-05, -0.000850677490234375, -3.814697265625e-06, -3.814697265625e-06, -0.000431060791015625, 0.0, -4.76837158203125e-05, 0.0, -0.010238450951874256, -4.172316494077677e-06, -0.001807808643206954, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.2234330177307129, -4.971027374267578e-05, -0.0008907318115234375, -5.91278076171875e-05, -0.0039272308349609375, 0.0, -0.0034580230712890625, 0.0, -0.0004901885986328125, -1.9073486328125e-06, -0.00048065185546875, 0.0, -0.08869755268096924, -0.0004024505615234375, -6.67572021484375e-05, -0.04718208312988281, 0.0, -0.0032057762145996094, -1.847726889536716e-05], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}]}
{"index": 49, "beams": [{"choice_history": [59, 126, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Holy", " ", "Light", "<EOS>", 55, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 48, 117, "6", "<EOS>", 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template17"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "HolyLight", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.19148142409792257, "score_history": [-3.0517578125e-05, -7.62939453125e-05, -4.0531076592742465e-06, -4.875550075666979e-05, -0.00016235194925684482, -2.0262959878891706e-06, -1.2040118235745467e-05, -1.025196434056852e-05, -4.38690185546875e-05, -1.71661376953125e-05, -1.1444091796875e-05, -0.009258270263671875, -0.0014190673828125, -8.96453857421875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -6.532455881824717e-05, -2.574919562903233e-05, -1.633159445191268e-05, -1.0132780516869389e-05, -4.76837158203125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -6.318092346191406e-06, -2.3841855067985307e-07, -0.038387298583984375, -2.0265579223632812e-06, -0.0002880096435546875, -3.814697265625e-06, -0.0002899169921875, -0.006601691246032715, 0.0, -7.2479248046875e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.24249267578125e-05, -7.82012939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0009326934814453125, -3.814697265625e-06, -0.00023651123046875, 0.0, -0.0004407163360156119, -1.9073486328125e-06, -5.1975250244140625e-05, 0.0, -0.00010120868682861328, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -7.62939453125e-06, -2.014635902014561e-05, 0.0, -0.11382675170898438, -1.1444091796875e-05, -9.5367431640625e-06, -0.00022125244140625, -2.6702880859375e-05, -1.800060272216797e-05, 0.0, -9.381771087646484e-05, 0.0, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.000469207763671875, 0.0, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0011997222900390625, -1.52587890625e-05, -2.6702880859375e-05, -2.09808349609375e-05, -5.340576171875e-05, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -0.0016574859619140625, -1.9073486328125e-06, -0.00782471802085638, -5.245132342679426e-05, -0.000152587890625, -3.24249267578125e-05, 0.0, -4.00543212890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.002093791961669922, -3.24249267578125e-05, -9.5367431640625e-06, -0.0021648406982421875, -3.814697265625e-06, -0.0009572801063768566, -5.960462772236497e-07, -0.0005855560302734375, -1.9073486328125e-06, -0.0006448030471801758, -1.1920928244535389e-07], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}]}
{"index": 50, "beams": [{"choice_history": [59, 126, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 19, 89, 16, 82, 24, 112, "copy", "<EOS>", "copy", "<EOS>", 164, 38, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>", 69, 95, 24, 112, "minion", "<EOS>", 16, 82, 24, 112, "player", "<EOS>", "minions", "<EOS>", 177, 76, 146, 24, 112, "minion", "<EOS>", "heal", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"body": [{"hole0": {"_type": "Name", "id": "minion"}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template17"}]}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "target": {"_type": "Name", "id": "minion"}}, {"body": [{"hole0": {"_type": "Name", "id": "minion"}, "_type": "Template9", "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template17"}]}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Name", "id": "player"}}, "target": {"_type": "Name", "id": "minion"}}], "hole2": [{"_type": "Expr", "value": {"hole0": "Holy Nova", "_type": "Template3", "hole3": "COMMON", "hole1": 5, "hole2": "PRIEST"}}], "hole3": "use", "hole0": "HolyNova", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.29844585486782904, "score_history": [-5.7220458984375e-06, -0.0001049041748046875, -1.1801719665527344e-05, -3.0040289857424796e-05, -2.741813204920618e-06, -2.8042355552315712e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.7738037109375e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.2053514840081334e-05, -0.00012707331916317344, -2.0265579223632812e-06, -7.510157047363464e-06, -8.344646857949556e-07, -1.1920928244535389e-07, -0.07425343990325928, 0.0, -3.480910891084932e-05, 0.0, -2.3841803340474144e-05, 0.0, -4.27960985689424e-05, 0.0, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -5.245207830739673e-06, -1.9073486328125e-06, -0.006609916687011719, -7.82012939453125e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.4185883628670126e-05, -3.814697265625e-06, -6.604124791920185e-05, 0.0, -0.000244140625, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000514984130859375, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -0.0002040863037109375, -3.62396240234375e-05, -2.6702880859375e-05, 0.0, -0.000901341438293457, -4.768370445162873e-07, -0.0005168914794921875, -4.76837158203125e-05, -0.0012187957763671875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0006469488143920898, -3.814697265625e-06, -0.0004329681396484375, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000209808349609375, 0.0, -3.24249267578125e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.001476287841796875, 0.0, -0.000531315803527832, -9.5367431640625e-06, -2.47955322265625e-05, -0.0022735595703125, -2.6702880859375e-05, -5.7220458984375e-06, 0.0, -5.7816505432128906e-05, -1.9073468138230965e-06, -0.049291398376226425, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, 0.0, -7.82012939453125e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0013152360916137695, 0.0, -5.7220458984375e-06, -0.000347137451171875, -3.0517578125e-05, 0.0, -0.0002537965774536133, -3.933906555175781e-06, -0.012012481689453125, -0.0001468658447265625, 0.0, 0.0, -0.00035393238067626953, -2.7418097943154862e-06, -0.0215606689453125, -5.14984130859375e-05, -0.005741119384765625, 0.0, -0.027240753173828125, 0.0, -0.0001983642578125, 0.0, -7.62939453125e-06, -0.000705718994140625, -0.0026159286499023438, -6.103515625e-05, 0.0, -0.00012409687042236328, -1.1920928244535389e-07, -0.07296167314052582, -1.1920928244535389e-07, -1.1444091796875e-05, -9.5367431640625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0001068115234375, 0.0, -0.009154438972473145, -1.33514404296875e-05, -5.7220458984375e-06, -0.001598358154296875, -0.0001964569091796875, 0.0, -0.00045228004455566406, -6.4373016357421875e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}]}
{"index": 51, "beams": [{"choice_history": [59, 126, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Holy", " ", "Smite", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 55, 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Template17"}]}, {"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "use", "hole0": "HolySmite", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.0781873534989046, "score_history": [-7.62939453125e-06, -5.7220458984375e-05, -3.218649908376392e-06, -1.883488948806189e-05, -1.1920928244535389e-07, -2.0143052097409964e-05, -2.622604142743512e-06, -7.867813110351562e-06, -2.288818359375e-05, -0.0001983642578125, -2.09808349609375e-05, -0.0006866455078125, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -0.00013469767873175442, -6.389616464730352e-05, -1.0728830375228426e-06, -2.1457672119140625e-06, -3.0517578125e-05, -0.0001544952392578125, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, -2.1457672119140625e-05, -2.3841855067985307e-07, -0.05885326862335205, 0.0, -0.0013217926025390625, 0.0, -0.0002593994140625, -0.00021207332611083984, 0.0, -0.003082275390625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -7.62939453125e-05, -9.1552734375e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0005779266357421875, -1.71661376953125e-05, -0.000102996826171875, 0.0, -0.00026678876020014286, -7.62939453125e-06, -6.115436553955078e-05, 0.0, -6.496906280517578e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9550323486328125e-05, 0.0, -0.0004482269287109375, -2.47955322265625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, -0.00011908449232578278, -3.826618194580078e-05, -0.00042822890100069344, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.00351715087890625, -9.72747802734375e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.00064849853515625, 0.0, -9.822845458984375e-05, 0.0, -7.295608520507812e-05, 0.0, -6.544370262417942e-05, -4.887569048150908e-06, -0.000286102294921875, -3.4332275390625e-05, -0.001129150390625, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00011754034494515508, -1.1920928244535389e-07, -5.7220458984375e-06, -0.00388336181640625, -2.09808349609375e-05, -5.7220458984375e-06, -0.0002225637435913086, -5.018679075874388e-05], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}]}
{"index": 52, "beams": [{"choice_history": [59, 124, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Houndmaster", "<EOS>", 48, 117, "4", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 38, 82, 29, "FREE", "<EOS>", 173, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Give", "<EOS>", 164, 44, 108, 166, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Buff", "<EOS>", 164, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 55, 41, 89, 24, 112, "Minion", "Selector", "<EOS>", 164, 41, 89, 24, 112, "Is", "Type", "<EOS>", 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 4, "hole2": 3}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Buff"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}, "args": [{"_type": "Template17"}]}]}, {"_type": "Call", "func": {"_type": "Name", "id": "Buff"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}, "args": [{"_type": "Template17"}]}]}, {"_type": "Call", "func": {"_type": "Name", "id": "Buff"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}, "args": [{"_type": "Template17"}]}]}], "_type": "List"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}]}]}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template14"}}]}}], "hole3": "create_minion", "hole0": "Houndmaster", "hole1": "MinionCard"}, "score": -1.8783664969115534, "score_history": [-2.288818359375e-05, -0.0004940032958984375, -0.004713851492851973, -2.622604142743512e-06, -3.251322777941823e-05, -1.52587890625e-05, -6.914126061019488e-06, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -8.7738037109375e-05, -8.392333984375e-05, -5.14984130859375e-05, -6.29425048828125e-05, -5.7220458984375e-06, 0.0, -8.344646857949556e-07, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -0.0006649699644185603, 0.0, 0.0, -2.86102294921875e-05, -1.9073486328125e-05, 0.0, -2.503394853192731e-06, 0.0, -0.08190059661865234, 0.0, -0.02748870849609375, -2.6702880859375e-05, -0.0002536773681640625, -0.0018547773361206055, 0.0, -0.0013217926025390625, -0.0030384063720703125, -0.004961967468261719, 0.0, -0.0002536773681640625, 0.0, -9.5367431640625e-06, 0.0, -0.0002040863037109375, 0.0, -0.1025075912475586, 0.0, -5.7220458984375e-06, -0.00351715087890625, 0.0, -0.035717010498046875, -1.9073486328125e-05, -1.9073486328125e-05, 0.0, -0.0004264115996193141, -5.7220458984375e-06, -1.71661376953125e-05, -0.0018749237060546875, -5.7220458984375e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.002594691002741456, -7.629393076058477e-05, -0.00029754638671875, -0.01590251922607422, -8.7738037109375e-05, -0.0040493011474609375, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -0.001926660304889083, -3.004073914780747e-05, -0.00051116943359375, -0.0001678466796875, -6.103515625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -0.0029648365452885628, -0.31486356258392334, -2.8371809094096534e-05, -1.52587890625e-05, -0.0001678466796875, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.00812248419970274, -3.0398325179703534e-05, -0.000423431396484375, -0.44060325622558594, -0.000202178955078125, -0.0002231597900390625, -0.0001239776611328125, -0.006396730896085501, -0.05445563793182373, -1.7642974853515625e-05, -8.20159912109375e-05, -0.000255584716796875, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -2.6702880859375e-05, -0.00842305738478899, -3.32593554048799e-05, -0.0005035400390625, -0.5618400573730469, -0.0002593994140625, -0.000244140625, -0.0001163482666015625, -0.006268542725592852, -0.056018829345703125, -1.7642974853515625e-05, -9.72747802734375e-05, -0.00029754638671875, -0.07111358642578125, -0.001926422119140625, -5.340576171875e-05, 0.0, -0.0010489225387573242, -7.62939453125e-06, -1.9073486328125e-06, -0.023942947387695312, -0.00160980224609375, -0.0001773834228515625, -1.71661376953125e-05, -7.62939453125e-06, -0.003579358570277691, -0.0013481378555297852, -5.602834789897315e-06, -0.0002079010009765625, -1.33514404296875e-05, -0.0002384185791015625, -0.0015201568603515625, -6.29425048828125e-05, -0.00014328955148812383, 0.0, -0.004765510559082031, -3.0517578125e-05, -0.000270843505859375, 0.0, -0.003752589225769043, 0.0, -1.71661376953125e-05, -9.918212890625e-05, -1.9073486328125e-06, -2.383312676101923e-07, -5.7220458984375e-06, -0.00012097325816284865, 0.0, -0.0013147894060239196, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.BEAST)))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}]}
{"index": 53, "beams": [{"choice_history": [59, 124, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Huffer", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "p", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}], "hole1": 4, "hole2": 2}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template19"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}]}}], "hole3": "create_minion", "hole0": "Huffer", "hole1": "MinionCard"}, "score": -0.41256883669109357, "score_history": [-1.9073486328125e-06, -0.0001392364501953125, -0.0003921264433301985, -0.0004608830204233527, -2.3841312213335186e-06, 0.0, -4.231929415254854e-05, 0.0, -0.0002307891845703125, -7.62939453125e-06, -0.0002002716064453125, -0.0005645751953125, -0.0005359649658203125, -0.001445770263671875, -3.62396240234375e-05, -1.52587890625e-05, -7.891654968261719e-05, -1.7404556274414062e-05, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -7.30752944946289e-05, -1.9073486328125e-06, -0.0022306442260742188, 0.0, -0.0001888275146484375, -3.814697265625e-06, -3.814697265625e-06, -0.00010526180267333984, -5.7220458984375e-06, -0.0001678466796875, -1.33514404296875e-05, -8.0108642578125e-05, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-05, -0.000492095947265625, 0.0, -1.52587890625e-05, 0.0, -0.3970892131328583, -2.491474151611328e-05, -6.103515625e-05, -0.0008563995361328125, -0.0007686614990234375, 0.0, -1.4781938261876348e-05, -1.9073486328125e-06, -1.1920922133867862e-06, -0.0001305261394008994, -8.344646857949556e-07, -0.00029754638671875, 0.0, -0.005043625831604004, 0.0, -0.0001659393310546875, -1.33514404296875e-05, -0.0003948211669921875, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n"}]}
{"index": 54, "beams": [{"choice_history": [59, 126, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Humility", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 164, 39, 84, 32, 61, 19, 87, 16, 82, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "change_attack", "hole2": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}, "left": {"_type": "Template18"}}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "use", "hole0": "Humility", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -1.064809525377079, "score_history": [-3.814697265625e-06, -0.0001087188720703125, -2.9444692700053565e-05, -0.0005865782732143998, -3.063678741455078e-05, -3.0517578125e-05, -3.111314072157256e-05, -0.000133514404296875, -3.4332275390625e-05, 0.0, -0.001232147216796875, -0.00032806396484375, -8.0108642578125e-05, -0.000141143798828125, -9.5367431640625e-06, -1.9073486328125e-06, -0.005814424250274897, -2.6702880859375e-05, -8.58306884765625e-05, -0.0001735687255859375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -9.298310033045709e-06, -1.1920922133867862e-06, -0.00582122802734375, 0.0, -0.0001373291015625, -5.7220458984375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.000186920166015625, -6.103515625e-05, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0026149749755859375, 0.0, -0.0005303621292114258, 0.0, -0.0037926435470581055, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.00040542613714933395, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.716609222057741e-05, -1.7642974853515625e-05, -0.058803558349609375, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001018001203192398, -2.1219253540039062e-05, -6.556510470545618e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.0009021759033203125, -1.71661376953125e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.450580596923828e-05, 0.0, -0.006571457255631685, -1.1920928244535389e-07, -1.9073486328125e-06, -0.9229927062988281, -0.00701904296875, -0.014660835266113281, -0.0080718994140625, -0.010941505432128906, -0.004459381103515625, -3.814697265625e-05, -1.9073486328125e-06, -0.000545501708984375, 0.0, -0.0009136199951171875, 0.0, -0.00022602072567678988, -5.9604644775390625e-06, -0.0009096860885620117, 0.0, -0.0045591481029987335, -1.9073486328125e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}]}
{"index": 55, "beams": [{"choice_history": [59, 126, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "<UNK>", " ", "Mark", "<EOS>", 48, 117, "0", "<EOS>", 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 164, 56], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "set_health_to", "hole2": [{"_type": "Template18"}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "use", "hole0": "<UNK>Mark", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.2981246235002786, "score_history": [-3.24249267578125e-05, -0.0001888275146484375, -0.0005560947465710342, -0.0007831366965547204, -1.1920928244535389e-07, -0.0001818744494812563, -1.71661376953125e-05, -1.311301275563892e-06, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001888275146484375, -0.00078582763671875, -2.288818359375e-05, -0.000156402587890625, -5.7220458984375e-06, 0.0, -0.0016407195944339037, -0.0004100799560546875, -0.00013720498827751726, -3.0517578125e-05, -0.0002307891845703125, -1.52587890625e-05, -0.0006327894516289234, -2.3841855067985307e-07, -0.0008068084716796875, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.933906555175781e-06, -3.576278118089249e-07, -0.06419837474822998, 0.0, -0.000213623046875, -6.866455078125e-05, -5.7220458984375e-06, -0.0002689361572265625, 0.0, -0.000152587890625, -2.47955322265625e-05, -3.0517578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000621795654296875, -3.814697265625e-06, -0.00032806396484375, 0.0, -0.0027009248733520508, 0.0, -9.918212890625e-05, 0.0, -0.0004028059192933142, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.510183422709815e-06, -3.933906555175781e-06, -0.049037933349609375, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.2292097128229216e-05, -3.0517578125e-05, -1.1920928955078125e-05, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.001056671142578125, -4.9591064453125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -4.76837158203125e-05, -1.52587890625e-05, -0.00033092498779296875, 0.0, -0.16690315306186676, -0.00014531612396240234, -5.7220458984375e-06, -0.0041351318359375], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}]}
{"index": 56, "beams": [{"choice_history": [59, 124, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Ironforge", " ", "Rifleman", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "battlecry", "<EOS>", 19, 89, 24, 112, "Battlecry", "<EOS>", 165, 41, 89, 24, 112, "Damage", "<EOS>", 164, 56, 41, 88, 24, 112, "Character", "Selector", "<EOS>", 173, 154, "players", "<EOS>", 28, 130, "Both", "Player", "<EOS>", 154, "picker", "<EOS>", 28, 130, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 2, "hole2": 2}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Damage"}, "args": [{"_type": "Template18"}]}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template10"}}, {"_type": "keyword", "arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template10"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}]}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template19"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "IronforgeRifleman", "hole1": "MinionCard"}, "score": -0.09425999385404538, "score_history": [-3.814697265625e-06, -0.000148773193359375, -0.00016962042718660086, -0.0002833203470800072, -2.0265558760002023e-06, -1.1920838005607948e-07, -5.7220458984375e-06, -3.933898824470816e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000205018965061754, -4.57763671875e-05, -9.536288416711614e-05, -0.00029587745666503906, -5.340576171875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.125998541188892e-06, -3.576278118089249e-07, -0.018144726753234863, 0.0, -0.000179290771484375, -0.03846549987792969, -1.9073486328125e-06, -0.010609745979309082, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -0.00021207332611083984, 0.0, -5.7220458984375e-06, -0.001617431640625, -5.7220458984375e-06, -3.814697265625e-06, -2.47955322265625e-05, -0.0005861519020982087, -8.654236444272101e-05, -1.33514404296875e-05, -9.918212890625e-05, -0.0003604888916015625, -0.001575469970703125, -3.814697265625e-06, 0.0, -0.0015743261901661754, -0.0001863241195678711, -1.919269561767578e-05, -0.014594078063964844, -0.00014495849609375, -0.0006371736526489258, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002599954605102539, -5.14984130859375e-05, 0.0, -1.9073486328125e-05, -0.001010894775390625, -1.9073486328125e-06, -0.001277923583984375, -9.5367431640625e-06, -0.0002175565459765494, -8.320791675942019e-05, -1.9073486328125e-06, -3.457069396972656e-05, -1.9073486328125e-06, -0.00045316695468500257, 0.0, -1.9073486328125e-06, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -9.536738616588991e-07, -2.4557302822358906e-05, -5.125993993715383e-06], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}]}
{"index": 57, "beams": [{"choice_history": [59, 124, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Ironfur", " ", "Grizzly", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "p", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}], "hole1": 3, "hole2": 3}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template19"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "hole1": "MinionCard"}, "score": -0.06695072459020679, "score_history": [-3.814697265625e-06, -0.0001087188720703125, -0.0003219324571546167, -0.0011992413783445954, -1.0848020792764146e-05, 0.0, -2.3841855067985307e-07, -2.0265579223632812e-06, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.00098419189453125, -8.392333984375e-05, -5.340576171875e-05, -5.340576171875e-05, -2.09808349609375e-05, -6.67572021484375e-05, -1.4066597032069694e-05, -5.602836608886719e-05, -1.311301275563892e-06, -1.1563301086425781e-05, -1.52587890625e-05, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.682209014892578e-05, -1.9073486328125e-06, -0.000698089599609375, -1.9073486328125e-06, -7.05718994140625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -6.878376007080078e-05, -1.1920928244535389e-07, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -0.0014324188232421875, -3.62396240234375e-05, -2.110004425048828e-05, 0.0, -0.05294477939605713, -0.000110626220703125, -0.0002918243408203125, -0.00435638427734375, -0.000125885009765625, 0.0, -6.175025191623718e-05, -0.00045013427734375, -3.516658034641296e-05, -0.00020311563275754452, -3.647794801509008e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.0014258623123168945, -7.62939453125e-06, -0.000240325927734375, -2.288818359375e-05, -0.0009860992431640625, -3.814697265625e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n"}]}
{"index": 58, "beams": [{"choice_history": [59, 126, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 167, 49, 121, "Kill", " ", "Command", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 172, 154, "target_func", "<EOS>", 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 179, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 64, 81, 164, 46, 112, "<UNK>", "<EOS>", 19, 89, 16, 82, 16, 82, 24, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 165, 38, 82, 24, 112, "player", "<EOS>", "game", "<EOS>", 43, 106, 3, 141, "x", "<EOS>", 20, 92, 16, 82, 16, 82, 24, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 161, 11, 164, 38, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 100, 20, 92, 24, 112, "<UNK>", "<EOS>", 161, 11, 164, 47, 114, "Null", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "5", "<EOS>", 46, 112, "self", "<EOS>", 177, 76, 146, 16, 82, 24, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "5", "<EOS>", 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Name", "id": "player"}}, {"body": {"_type": "Compare", "comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "x"}}}}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template6"}}]}}, {"body": [{"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Num", "n": 5}]}, {"_type": "Name", "id": "self"}]}], "_type": "If", "test": {"_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}}, "orelse": [{"hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Num", "n": 5}]}, {"_type": "Name", "id": "self"}]}]}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template19"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}]}}], "hole3": "use", "hole0": "KillCommand", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -1.0273889316363096, "score_history": [0.0, -0.0003490447998046875, -4.768370445162873e-07, -1.156323378381785e-05, -1.5973972040228546e-05, -1.3112821761751547e-06, -3.8146954466355965e-06, -1.4066696166992188e-05, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.1815061700181104e-05, -1.5497207641601562e-05, -6.615896563744172e-05, -2.1219253540039062e-05, -0.0003147125244140625, -1.52587890625e-05, 0.0, -2.288818359375e-05, 0.0, -1.3947486877441406e-05, 0.0, -0.037397027015686035, 0.0, -5.340576171875e-05, -0.01094818115234375, 0.0, -0.0003337860107421875, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -0.0007801055908203125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000232696533203125, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0002334042510483414, -3.814697265625e-06, -0.0007420778274536133, 0.0, -3.4928321838378906e-05, 0.0, -9.5367431640625e-06, -3.0517578125e-05, -1.9073486328125e-06, -4.0531158447265625e-06, -7.62939453125e-06, -0.04046916961669922, -0.000125885009765625, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -7.438397005898878e-05, -1.71661376953125e-05, -7.867677777539939e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.010910987854003906, -3.814697265625e-06, -5.7220458984375e-06, -0.0019016265869140625, 0.0, -0.0014899945817887783, -1.3947486877441406e-05, -0.00409698486328125, -0.0005130767822265625, -1.9073486328125e-06, 0.0, -0.00376129150390625, -5.7220458984375e-06, -0.000438690185546875, -1.9073486328125e-06, -0.015053510665893555, -1.9073486328125e-06, -0.0013141632080078125, -5.7220458984375e-06, -0.0035827949177473783, 0.0, -0.011113166809082031, -0.005596160888671875, -6.866455078125e-05, -7.2479248046875e-05, 0.0, -0.0003948211669921875, 0.0, -0.000396728515625, -5.91278076171875e-05, -0.002132415771484375, -0.0001659393310546875, -0.0005340576171875, -0.000186920166015625, -0.004602925851941109, -9.82277633738704e-05, -0.0024013519287109375, -0.0037937164306640625, -0.005096435546875, -3.24249267578125e-05, -0.000804901123046875, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.02600574493408203, 0.0, -0.010312199592590332, -1.9073486328125e-06, -0.01303434930741787, -6.210774881765246e-05, -0.0001163482666015625, -0.02262592315673828, -3.4332275390625e-05, -0.00067901611328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.001337885856628418, -2.1457672119140625e-06, -0.06433986872434616, 0.0, -0.0008754730224609375, -0.00989532470703125, -0.027261734008789062, -0.0003643035888671875, -0.000396728515625, -2.6702880859375e-05, -0.0008497238159179688, -2.50339189733495e-06, -3.24249267578125e-05, -0.01744842529296875, -3.24249267578125e-05, -0.0068225860595703125, -6.4849853515625e-05, -0.01436760276556015, -2.1219253540039062e-05, -5.7220458984375e-05, -5.340576171875e-05, -0.000331878662109375, -0.0022563934326171875, -3.814697265625e-06, -9.918212890625e-05, 0.0, -0.00012302398681640625, -1.1920928244535389e-07, -0.00013422963093034923, -1.1920928244535389e-07, -0.0005278017488308251, -8.344646857949556e-07, -9.5367431640625e-06, -4.57763671875e-05, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, 0.0, -0.000545501708984375, 0.0, -0.00048315522144548595, 0.0, -5.7220458984375e-05, -0.35846519470214844, -3.814697265625e-06, -0.0008828457212075591, -4.053113570989808e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.00016307830810546875, -7.867813110351562e-06, -0.002758026123046875, -0.0003833770751953125, -2.6702880859375e-05, -0.00011444091796875, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -8.0108642578125e-05, 0.0, -0.002560002263635397, 0.0, -7.62939453125e-06, -3.814697265625e-05, -1.71661376953125e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -6.67572021484375e-05, 0.0, -0.0012983083724975586, 0.0, -7.2479248046875e-05, -0.26390838623046875, -5.7220458984375e-06, -0.0006592224817723036, -4.29153169534402e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.00016605854034423828, -7.867813110351562e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}]}
{"index": 59, "beams": [{"choice_history": [59, 124, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 172, 154, "spell_damage", "<EOS>", 32], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template18"}}], "hole1": 2, "hole2": 2}], "hole2": [{"_type": "Expr", "value": {"hole0": "Kobold Geomancer", "_type": "Template3", "hole3": "COMMON", "hole1": 2, "hole2": "ALL"}}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "hole1": "MinionCard"}, "score": -0.007624936172973662, "score_history": [-0.000179290771484375, -0.0002841949462890625, -2.3603161025675945e-05, -0.0002343380037928, -7.879626355133951e-05, -3.576271865313174e-07, -3.814697265625e-06, -8.702273589733522e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -0.0002288818359375, -9.918212890625e-05, -3.8742269680369645e-05, -8.594989776611328e-05, -1.311301275563892e-06, -4.1961669921875e-05, -0.0001205165171995759, 0.0, -6.890296936035156e-05, -5.7220458984375e-06, -0.00014138221740722656, 0.0, -1.52587890625e-05, 0.0, -0.0006026029586791992, 0.0, 0.0, -3.814697265625e-06, -0.0013027191162109375, 0.0, -3.933906555175781e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -0.000715957023203373, -1.1920928244535389e-07, -0.0002040863037109375, -1.9073486328125e-06, -0.001993417739868164, 0.0, -0.0011196136474609375], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}]}
{"index": 60, "beams": [{"choice_history": [59, 124, "Kor'kron", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>", 172, 154, "charge", "<EOS>", 25, 113, "True", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}], "hole1": 4, "hole2": 3}], "hole2": [{"_type": "Expr", "value": {"hole0": "Kor'kron Elite", "_type": "Template3", "hole3": "COMMON", "hole1": 4, "hole2": "WARRIOR"}}], "hole3": "create_minion", "hole0": "Kor'kronElite", "hole1": "MinionCard"}, "score": -0.6960081671033578, "score_history": [-7.43865966796875e-05, -0.0001049041748046875, -0.5854057669639587, -0.002140494529157877, -8.106222594506107e-06, -2.026266884058714e-06, 0.0, -1.8238983102492057e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -5.7220458984375e-05, -0.000102996826171875, -3.3378546504536644e-06, -2.562999725341797e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0005088882753625512, 0.0, -0.0902327299118042, -1.9073486328125e-06, -2.3603439331054688e-05, 0.0, -7.62939453125e-06, 0.0, -0.00014328955148812383, 0.0, 0.0, -5.7220458984375e-06, -0.0001201629638671875, 0.0, -2.3841855067985307e-07, -2.3841789698053617e-07, 0.0, -0.0016117749037221074, -1.1920928244535389e-07, -0.000408172607421875, -1.9073486328125e-06, -0.014706730842590332, 0.0, -0.0002002716064453125, -7.62939453125e-06, -4.00543212890625e-05, 0.0], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}]}
{"index": 61, "beams": [{"choice_history": [59, 124, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Leokk", "<EOS>", 57, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>", 172, 154, "auras", "<EOS>", 22, 108, 164, 41, 89, 24, 112, "Aura", "<EOS>", 165, 41, 89, 24, 112, "Change", "Attack", "<EOS>", 164, 56, 51, 130, "Minion", "Selector", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "auras", "value": {"elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Aura"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}, "args": [{"_type": "Template18"}]}, {"hole0": "MinionSelector", "_type": "Template10"}]}], "_type": "List"}}], "hole1": 2, "hole2": 4}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template19"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}]}}], "hole3": "create_minion", "hole0": "Leokk", "hole1": "MinionCard"}, "score": -0.20275049711947446, "score_history": [-5.7220458984375e-06, -7.05718994140625e-05, -1.943104507518001e-05, -0.0015945949126034975, -2.3841721485950984e-07, -3.814697265625e-06, -3.0875205993652344e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.041144371032714844, -0.024900436401367188, -0.000247955322265625, -0.08487224578857422, -5.14984130859375e-05, 0.0, -5.614756446448155e-05, -6.079673767089844e-06, -0.0006256103515625, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.5033950805664062e-05, -1.9073486328125e-06, -0.0011749267578125, 0.0, -0.000545501708984375, -9.5367431640625e-06, -9.5367431640625e-06, -0.00014507770538330078, -5.7220458984375e-06, -0.000209808349609375, -5.7220458984375e-06, -8.7738037109375e-05, -1.1920928244535389e-07, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-05, -0.0004730224609375, 0.0, -4.9591064453125e-05, 0.0, -0.005544304847717285, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.02344226837158203, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, -2.7418097943154862e-06, -7.3909359343815595e-06, -8.225420970120467e-06, -4.76837158203125e-05, -9.5367431640625e-06, -0.0016747713088989258, 0.0, -5.340576171875e-05, -2.09808349609375e-05, -0.0062007904052734375, -7.62939453125e-06, -3.814697265625e-06, 0.0, 0.0, -0.00041091442108154297, -2.86102294921875e-05, -0.00102996826171875, -4.9591064453125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0020241057500243187, -0.000118255615234375, -7.62939453125e-06, -3.0517578125e-05, -0.000102996826171875, -0.0024013519287109375, 0.0, -0.002058813814073801, -0.0009136199951171875, -1.1920928244535389e-07], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}]}
{"index": 62, "beams": [{"choice_history": [59, 124, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 177, 68, 94, 34, 139, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 177, 75, 143, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "_type": "Template8", "hole1": 1, "hole2": 4}], "hole2": [{"_type": "Expr", "value": {"hole0": "<UNK> Justice", "_type": "Template3", "hole3": "FREE", "hole1": 1, "hole2": "PALADIN"}}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "hole1": "WeaponCard"}, "score": -0.34101469369670667, "score_history": [-2.86102294921875e-05, -0.000171661376953125, -0.0020882475655525923, -4.279521817807108e-05, -1.0967213711410295e-05, -0.00011264643399044871, -4.172325134277344e-06, -1.537799835205078e-05, -1.9073486328125e-06, -0.00034332275390625, -0.0001201629638671875, -0.028296470642089844, -0.005054473876953125, -0.003118157386779785, -7.82012939453125e-05, -7.152556463552173e-06, 0.0, -0.0007679659174755216, 0.0, -0.2872661352157593, 0.0, -0.011146783828735352, 0.0, -0.001033782958984375, -1.9073486328125e-06, -0.0008080005645751953, 0.0, 0.0, -0.000125885009765625, -0.0001983642578125, -3.8027355913072824e-05, -1.5854835510253906e-05, -4.2676889279391617e-05, 0.0, -7.4982330261264e-05, 0.0], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}]}
{"index": 63, "beams": [{"choice_history": [59, 124, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 34, 139, "Lord", " ", "of", " ", "the", " ", "the", " ", "the", " ", "the", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 144, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>", 172, 154, "taunt", "<EOS>", 25, 113, "True", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole3": [{"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}], "hole1": 6, "hole2": 5}], "hole2": [{"_type": "Expr", "value": {"hole0": "Lord of the the the the", "_type": "Template3", "hole3": "COMMON", "hole1": 6, "hole2": "ALL"}}], "hole3": "create_minion", "hole0": "LordOfTheArena", "hole1": "MinionCard"}, "score": -2.230836452962727, "score_history": [-2.288818359375e-05, -0.0006084442138671875, -0.003203274682164192, -0.07213365286588669, -0.001020193099975586, -0.015630662441253662, -0.00014448165893554688, -2.145628968719393e-06, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -0.000102996826171875, -5.91278076171875e-05, -7.855873263906687e-05, -0.0002810934674926102, -3.6835510400123894e-05, -2.872943878173828e-05, -0.05400514602661133, -0.0017572641372680664, -0.027406930923461914, -0.0820455551147461, -0.29776954650878906, -0.17577910423278809, -0.617598295211792, -0.5511869192123413, -0.32416096329689026, 0.0, -0.0010907645337283611, 0.0, -0.00037550926208496094, 0.0, -5.924701690673828e-05, 0.0, -0.00046299005043692887, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -0.0018472671508789062, 0.0, -6.079655122448457e-06, -3.62396240234375e-05, -8.344646857949556e-07, -0.0008542533032596111, -2.3841855067985307e-07, -0.000316619873046875, -1.9073486328125e-06, -0.0005213022232055664, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-05, -6.866455078125e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the the the the', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}]}
{"index": 64, "beams": [{"choice_history": [59, 124, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 177, 68, 94, 19, 90, 35, 168, 49, 121, "Mechanical", " ", "Dragonling", "<EOS>", 56, 38, 82, 24, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 52, 47, 113, "False", "<EOS>", 172, 154, "minion_type", "<EOS>", 16, 82, 24, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 177, 75, 143, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "_type": "Template8", "hole1": 2, "hole2": 1}], "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template7"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template18"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template11"}, {"_type": "NameConstant", "value": true}]}}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "hole1": "MinionCard"}, "score": -0.053453998075539744, "score_history": [-8.0108642578125e-05, -4.9591064453125e-05, -9.667406266089529e-05, -1.1920922133867862e-06, -0.00028737657703459263, -1.192074705613777e-07, -3.814697265625e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -5.340576171875e-05, -0.0048694610595703125, -3.24249267578125e-05, -0.0029277801513671875, -1.9073486328125e-05, -1.9073486328125e-06, -1.0013530300057027e-05, -0.0001445992529625073, -1.1920922133867862e-06, -2.9087066650390625e-05, -4.9591064453125e-05, -0.0001049041748046875, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003993511199951172, -5.960462772236497e-07, -0.0002834796905517578, 0.0, -0.00012969970703125, -2.47955322265625e-05, -1.9073486328125e-05, -0.0001672505895840004, -1.1563301086425781e-05, -6.4849853515625e-05, -1.52587890625e-05, -0.00016582012176513672, -8.344646857949556e-07, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0010949373245239258, -1.9073486328125e-06, -0.0015524625778198242, 0.0, -2.86102294921875e-05, 0.0, -0.04034686088562012, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -8.58306884765625e-05, 0.0, 0.0, -0.00023674964904785156, -1.1920928244535389e-07, -4.410743713378906e-06, -1.7881377516459906e-06], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}]}
{"index": 65, "beams": [{"choice_history": [59, 126, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 177, 68, 94, 34, 139, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 158, 1, 151, "game", "<EOS>", 178, 76, 146, 28, 130, "super", "<EOS>", "use", "<EOS>", 165, 46, 112, "player", "<EOS>", 46, 112, "game", "<EOS>", 76, 146, 16, 82, 16, 82, 24, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 165, 41, 89, 16, 82, 24, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 164, 48, 117, "5", "<EOS>", 46, 112, "self", "<EOS>"], "model_output": {"_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"hole0": "super", "_type": "Template10"}, "_type": "Template9", "hole1": "use", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}, {"hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}, "_type": "Template9", "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}, "args": [{"_type": "Num", "n": 5}]}, {"_type": "Name", "id": "self"}]}], "hole2": [{"_type": "Expr", "value": {"hole0": "Mind Blast", "_type": "Template3", "hole3": "FREE", "hole1": 2, "hole2": "PRIEST"}}], "hole3": "use", "hole0": "MindBlast", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.08112726989392627, "score_history": [-1.1444091796875e-05, -0.0042514801025390625, -2.3841855067985307e-07, -5.960462772236497e-07, -9.894352842820808e-06, -7.492874283343554e-05, -2.2888181774760596e-05, -4.5299530029296875e-06, -2.47955322265625e-05, -0.0001277923583984375, -4.76837158203125e-05, -0.0008544921875, -9.5367431640625e-06, -2.90866428258596e-05, -0.00012421606515999883, -3.576278118089249e-07, -9.762835543369874e-05, -1.4781869140279014e-05, -1.0371154530730564e-05, -0.00679252902045846, -4.768370445162873e-07, -0.01450381986796856, 0.0, -0.00017702579498291016, 0.0, -2.9325474315555766e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0030994415283203125, -4.76837158203125e-05, -0.0006260871887207031, -2.86102294921875e-05, -0.015155792236328125, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0001659393310546875, -2.7298650820739567e-05, -7.62939453125e-06, -0.0019016307778656483, 0.0, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -2.47955322265625e-05, 0.0, -8.96453857421875e-05, -3.24249267578125e-05, -0.0013141632080078125, -9.5367431640625e-06, -0.0002193450927734375, -0.0018863677978515625, -0.0019550323486328125, -8.20159912109375e-05, -0.0037221908569335938, 0.0, -0.007923126220703125, -9.5367431640625e-06, -0.00462651252746582, 0.0, -0.0022193877957761288, -1.7166121324407868e-05, -0.0001031113279168494, -1.156325470219599e-05, -2.47955322265625e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0029506683349609375, 0.0, -9.59634780883789e-05, -1.9073486328125e-06, -0.001627206802368164, -5.125986263010418e-06, -1.52587890625e-05, -0.000640869140625, -2.86102294921875e-05, -0.0007642505224794149, -0.001760610961355269, -7.62939453125e-06, -2.86102294921875e-05, -0.0002932548231910914, -0.0001047842379193753], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}]}
