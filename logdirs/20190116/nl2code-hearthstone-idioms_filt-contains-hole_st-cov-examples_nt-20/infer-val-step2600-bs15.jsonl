{"beams": [{"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "<UNK> Blade", "hole1": 5, "hole2": "PALADIN"}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -1.1107920333127979, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -0.15282432734966278, -1.7881393432617188e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -0.23152732849121094, -0.0001983642578125, -0.00029921269742771983, -0.000247955322265625, -4.649161837733118e-06, -5.543231964111328e-05, -0.0009450912475585938, -3.933906555175781e-06, -0.577733039855957, 0.0, -0.0001577138900756836, 0.0, -0.0022430419921875, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -0.0011920928955078125, -0.0782003402709961, -3.0517576306010596e-05, 0.0, -8.96453857421875e-05, 0.0, -3.8623809814453125e-05, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "<UNK> Blade", "hole1": 5, "hole2": "ROGUE"}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -1.7322316094617847, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -0.15282432734966278, -1.7881393432617188e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -0.23152732849121094, -0.0001983642578125, -0.00029921269742771983, -0.000247955322265625, -4.649161837733118e-06, -5.543231964111328e-05, -0.0009450912475585938, -3.933906555175781e-06, -1.2469673156738281, 0.0, -6.902217864990234e-05, 0.0, -0.00191497802734375, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -0.0012359619140625, -0.030786514282226562, -2.2649763195659034e-05, 0.0, -8.7738037109375e-05, 0.0, -4.2319297790527344e-05, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Blade"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "<UNK>", " ", "Blade", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -2.4180633783508796, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -0.15282432734966278, -1.7881393432617188e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -1.577005386352539, -0.40570068359375, -1.9073486328125e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9604644775390625e-06, -1.52587890625e-05, -0.17854976654052734, -4.38690185546875e-05, -3.4332275390625e-05, -0.012983303517103195, -0.0003833770751953125, -2.503394853192731e-06, -0.00028228759765625, -2.09808349609375e-05, 0.0, -0.00011670574167510495, -2.0384652088978328e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.859664735093247e-05, -0.016500473022460938, -2.384185791015625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0001238584372913465, 0.0, -6.556510470545618e-06, 0.0, -7.62939453125e-06, -0.000335693359375, -2.491474151611328e-05, -1.3470649719238281e-05, -0.000492095947265625, -1.33514404296875e-05, -0.0001207590103149414, 0.0, -0.00537109375, -0.000820159912109375, -0.0009899139404296875, -1.8835065930034034e-05, -2.0265579223632812e-06, -8.7738037109375e-05, -1.1920928244535389e-07, -0.0001043081283569336, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "<UNK> Blade", "hole1": 5, "hole2": "WARRIOR"}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -3.009924761889458, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -0.15282432734966278, -1.7881393432617188e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -0.23152732849121094, -0.0001983642578125, -0.00029921269742771983, -0.000247955322265625, -4.649161837733118e-06, -5.543231964111328e-05, -0.0009450912475585938, -3.933906555175781e-06, -2.466054916381836, 0.0, -0.0002504587173461914, 0.0, -0.0032082796096801758, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -0.0010433197021484375, -0.08811187744140625, -2.8371809094096534e-05, 0.0, -8.0108642578125e-05, 0.0, -4.2319297790527344e-05, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "<UNK> Blade", "hole1": 5, "hole2": "PRIEST"}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -3.4338880702238086, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -0.15282432734966278, -1.7881393432617188e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -0.23152732849121094, -0.0001983642578125, -0.00029921269742771983, -0.000247955322265625, -4.649161837733118e-06, -5.543231964111328e-05, -0.0009450912475585938, -3.933906555175781e-06, -2.9522228240966797, 0.0, -0.00024628639221191406, 0.0, -0.0014363527297973633, 0.0, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -0.0011806488037109375, -0.027536392211914062, -2.2649763195659034e-05, 0.0, -8.96453857421875e-05, 0.0, -4.6133995056152344e-05, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "<UNK> Blade", "hole1": 5, "hole2": "PALADIN"}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -3.4582948167775314, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -1.9547826051712036, -4.410743713378906e-06, -1.4305104514278355e-06, -1.9073486328125e-06, -0.6255626678466797, -0.0001850128173828125, -0.00031387596391141415, -0.00023651123046875, -4.649161837733118e-06, -0.000179290771484375, -0.0014487504959106445, -5.841255187988281e-06, -0.7045011520385742, 0.0, -0.00015401840209960938, 0.0, -0.002269744873046875, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -0.0008335113525390625, -0.1026620864868164, -3.0159948437358253e-05, 0.0, -0.000110626220703125, 0.0, -2.7060508728027344e-05, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "<UNK> Blade", "hole1": 5, "hole2": "ROGUE"}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -3.655496307181572, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -1.9547826051712036, -4.410743713378906e-06, -1.4305104514278355e-06, -1.9073486328125e-06, -0.6255626678466797, -0.0001850128173828125, -0.00031387596391141415, -0.00023651123046875, -4.649161837733118e-06, -0.000179290771484375, -0.0014487504959106445, -5.841255187988281e-06, -0.9640426635742188, 0.0, -9.953975677490234e-05, 0.0, -0.0021266937255859375, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -0.000850677490234375, -0.04051971435546875, -2.2292137145996094e-05, 0.0, -9.918212890625e-05, 0.0, -3.0994415283203125e-05, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "<UNK> Blade", "hole1": 5, "hole2": "PALADIN"}], "hole6": [{"hole3": [{"arg": "windfury", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 133, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>", 176, 53, 159, "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.987480632746262, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -0.15282432734966278, -1.7881393432617188e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -0.23152732849121094, -0.0001983642578125, -0.00029921269742771983, -0.000247955322265625, -4.649161837733118e-06, -5.543231964111328e-05, -0.0009450912475585938, -3.933906555175781e-06, -0.577733039855957, 0.0, -0.0001577138900756836, 0.0, -0.0022430419921875, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -0.0011920928955078125, -2.6173877716064453, -2.1219102563918568e-05, -7.033347174001392e-06, -0.000507354736328125, -1.1920928244535389e-07, -4.172324679529993e-06, -2.264974000354414e-06, -0.00025177001953125, -0.000286102294921875, -1.9073486328125e-06, -0.3334602117538452, -1.9431114196777344e-05, -0.0030660629272460938, -9.5367431640625e-06, -2.288818359375e-05, 0.0], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Blade"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "<UNK>", " ", "Blade", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -4.331464942943157, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -1.9547826051712036, -4.410743713378906e-06, -1.4305104514278355e-06, -1.9073486328125e-06, -0.7658653259277344, -1.026519775390625, -2.09808349609375e-05, 0.0, -1.3709068298339844e-05, 0.0, -5.841255187988281e-06, -9.5367431640625e-06, -0.47716522216796875, -4.1961669921875e-05, -3.62396240234375e-05, -0.016542064025998116, -0.0003604888916015625, -2.622604142743512e-06, -0.000408172607421875, -2.09808349609375e-05, 0.0, -0.00011992439976893365, -1.978861473617144e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.050399598374497e-05, -0.01681995391845703, -2.384185791015625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.00011491773329908028, 0.0, -6.675719760096399e-06, 0.0, -7.62939453125e-06, -0.00028228759765625, -2.682209014892578e-05, -1.3470649719238281e-05, -0.0004978179931640625, -1.33514404296875e-05, -0.0001150369644165039, 0.0, -0.0046367645263671875, -0.0008029937744140625, -0.0009765625, -1.8835065930034034e-05, -2.0265579223632812e-06, -8.7738037109375e-05, -1.1920928244535389e-07, -0.00010418891906738281, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Blade"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Blade", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -4.436142829859129, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -0.15282432734966278, -1.7881393432617188e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -1.577005386352539, -1.1412620544433594, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, 0.0, -5.340576171875e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0012993542477488518, -7.2479248046875e-05, -4.0531158447265625e-06, -0.0003070831298828125, -1.1444091796875e-05, 0.0, -3.695487612276338e-05, -1.1920896213268861e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.0609614946588408e-05, -0.15260529518127441, -8.344646857949556e-07, -3.814697265625e-06, 0.0, 0.0, 0.0, -3.862380617647432e-05, 0.0, -2.4080276489257812e-05, 0.0, -1.33514404296875e-05, -0.1188364028930664, -2.6702880859375e-05, -0.38550376892089844, 0.0, -0.0002593994140625, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.2479248046875e-05, 0.0, -4.899501436739229e-05, 0.0, -0.23923581838607788, -2.2649765014648438e-06, -0.5546592473983765, 0.0, -5.3763389587402344e-05, 0.0, -0.03479194641113281, -0.0106201171875, -0.0008697509765625, -4.184243152849376e-05, -7.152555099310121e-07, -0.00022125244140625, 0.0, -0.00018072128295898438, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Blade"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "<UNK>", " ", "Blade", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -4.5910730102712805, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -0.15282432734966278, -1.7881393432617188e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -1.577005386352539, -0.40570068359375, -1.9073486328125e-05, 0.0, -8.106231689453125e-06, 0.0, -5.9604644775390625e-06, -1.52587890625e-05, -1.831960678100586, -3.814697265625e-06, -3.0517578125e-05, -0.005742894485592842, -0.0001373291015625, -2.622604142743512e-06, -0.0003643035888671875, -2.47955322265625e-05, -1.52587890625e-05, -0.0004503647214733064, -1.1324880688334815e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9192693798686378e-05, -0.059340596199035645, -1.1920922133867862e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -3.576277958927676e-05, 0.0, -1.1920928955078125e-05, 0.0, -1.33514404296875e-05, -0.0004863739013671875, -7.069110870361328e-05, -1.537799835205078e-05, 0.0, 0.0, -0.004960060119628906, 0.0, -0.013881683349609375, 0.0, -0.039305686950683594, 0.0, -0.4210348129272461, 0.0, -3.814697265625e-06, 0.0, -0.0005512237548828125, -0.008981704711914062, -0.0027618408203125, -4.994868504581973e-05, -2.3841855067985307e-07, -0.0001430511474609375, 0.0, -3.910064697265625e-05, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, True, MINION_TYPE.TOTEM)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Blade"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Blade", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -4.784400293060337, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -1.9547826051712036, -4.410743713378906e-06, -1.4305104514278355e-06, -1.9073486328125e-06, -0.7658653259277344, -0.4701967239379883, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.0531158447265625e-06, 0.0, -4.9591064453125e-05, -7.62939453125e-06, -8.7738037109375e-05, -0.001231237081810832, -7.2479248046875e-05, -4.0531158447265625e-06, -0.0003337860107421875, -1.1444091796875e-05, 0.0, -3.695487612276338e-05, -1.1444062693044543e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.5101784204889555e-06, -0.09003663063049316, -8.344646857949556e-07, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.06503640988376e-05, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, -0.14904117584228516, -2.86102294921875e-05, -0.4359312057495117, 0.0, -0.000247955322265625, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, 0.0, -4.708766573457979e-05, 0.0, -0.2356019765138626, -2.1457672119140625e-06, -0.5681585073471069, 0.0, -5.3763389587402344e-05, 0.0, -0.03549766540527344, -0.010561943054199219, -0.0008697509765625, -4.184243152849376e-05, -7.152555099310121e-07, -0.00022125244140625, 0.0, -0.00018072128295898438, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "<UNK> Blade", "hole1": 5, "hole2": "PALADIN"}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>BladeBlade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -5.1780002739070525, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -4.14777946472168, -0.006865325383841991, -0.030162332579493523, -1.9431114196777344e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.1408405303955078, -0.000148773193359375, -0.00032520017703063786, -0.0002613067626953125, -7.271765298355604e-06, -0.0002918243408203125, -0.0012527704238891602, -4.0531158447265625e-06, -0.7322006225585938, 0.0, -0.00015032291412353516, 0.0, -0.00213623046875, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -0.0011463165283203125, -0.0789175033569336, -2.8610227673198096e-05, 0.0, -8.96453857421875e-05, 0.0, -3.4689903259277344e-05, -1.1920928244535389e-07], "inferred_code": "class <UNK>BladeBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "<UNK>", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Blade"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Blade", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "<UNK>", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -5.412063625991706, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -0.15282432734966278, -1.7881393432617188e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -1.577005386352539, -1.1412620544433594, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, 0.0, -5.340576171875e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0012993542477488518, -7.2479248046875e-05, -4.0531158447265625e-06, -0.0003070831298828125, -1.1444091796875e-05, 0.0, -3.695487612276338e-05, -1.1920896213268861e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.0609614946588408e-05, -0.15260529518127441, -8.344646857949556e-07, -3.814697265625e-06, 0.0, 0.0, 0.0, -3.862380617647432e-05, 0.0, -2.4080276489257812e-05, 0.0, -1.33514404296875e-05, -0.1188364028930664, -2.6702880859375e-05, -0.38550376892089844, 0.0, -0.0002593994140625, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.2479248046875e-05, 0.0, -4.899501436739229e-05, 0.0, -0.23923581838607788, -2.2649765014648438e-06, -0.9409946203231812, 0.0, -0.0006126162479631603, 0.0, -0.00408935546875, -0.6240034103393555, -0.00727081298828125, -8.64267349243164e-05, -3.576278118089249e-07, -0.000186920166015625, -1.1920928244535389e-07, -0.00011551380157470703, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def <UNK>(self, player):\n        return Weapon(3, 4)\n"}, {"model_output": {"hole3": "<UNK>", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Blade"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 3, "hole2": 4}], "hole0": "<UNK>Blade", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Blade", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "<UNK>", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -5.736365028725189, "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -1.9547826051712036, -4.410743713378906e-06, -1.4305104514278355e-06, -1.9073486328125e-06, -0.7658653259277344, -0.4701967239379883, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.0531158447265625e-06, 0.0, -4.9591064453125e-05, -7.62939453125e-06, -8.7738037109375e-05, -0.001231237081810832, -7.2479248046875e-05, -4.0531158447265625e-06, -0.0003337860107421875, -1.1444091796875e-05, 0.0, -3.695487612276338e-05, -1.1444062693044543e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.5101784204889555e-06, -0.09003663063049316, -8.344646857949556e-07, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.06503640988376e-05, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, -0.14904117584228516, -2.86102294921875e-05, -0.4359312057495117, 0.0, -0.000247955322265625, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, 0.0, -4.708766573457979e-05, 0.0, -0.2356019765138626, -2.1457672119140625e-06, -0.9214528799057007, 0.0, -0.0006207224214449525, 0.0, -0.0037937164306640625, -0.6338081359863281, -0.0075016021728515625, -8.26120376586914e-05, -2.3841855067985307e-07, -0.000179290771484375, -1.1920928244535389e-07, -0.00011157989501953125, -1.1920928244535389e-07], "inferred_code": "class <UNK>Blade(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def <UNK>(self, player):\n        return Weapon(3, 4)\n"}], "gold_code": "class AssassinsBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Assassin's Blade\", 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "ALL"}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -0.16493147596857938, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -0.00128173828125, -1.9073486328125e-06, -0.0004948375863023102, 0.0, -0.00015842914581298828, 0.0, -2.9802317840221804e-06, 0.0, -3.814697265625e-06, -0.0028285980224609375, -4.1961669921875e-05, -1.1801670552813448e-05, 0.0, -0.0039931535720825195, -1.1920928244535389e-07], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Boulderfist Ogre"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Boulderfist", " ", "Ogre", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -2.327657682023485, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.942586898803711, -0.36998462677001953, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, 0.0, -2.491474151611328e-05, 0.0, -0.000583648681640625, -1.1444091796875e-05, -2.288818359375e-05, -5.483625955093885e-06, -0.00021004676818847656, -1.0251987987430766e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -0.0011575446696951985, -4.529942543740617e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.000370025634765625, -0.00015091896057128906, -0.0012664794921875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1086437552876305e-05, -1.1920928244535389e-07, -0.0004998445510864258, -1.1920928244535389e-07, -0.0020084381103515625, -6.67572021484375e-05, -0.00015652179718017578, 0.0, -5.53131103515625e-05, 0.0, -7.975100015755743e-05, 0.0, -1.52587890625e-05, -0.0005779266357421875, -9.72747802734375e-05, -7.355064735747874e-05, 0.0, -0.0069544315338134766, 0.0], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, True)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "<UNK>"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Boulderfist Ogre"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Boulderfist", " ", "Ogre", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 52, 135, "<UNK>", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -4.581473091335646, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.942586898803711, -1.181915283203125, 0.0, 0.0, 0.0, 0.0, -1.9669532775878906e-05, 0.0, -0.0001354217529296875, -2.47955322265625e-05, -5.7220458984375e-06, -3.0994415283203125e-06, -9.369850158691406e-05, -1.77621805050876e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0006198335904628038, -2.145764938177308e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.924701690673828e-05, -0.00040590763092041016, -0.004604339599609375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.3470642443280667e-05, -1.1920928244535389e-07, -0.00012433528900146484, -3.576278118089249e-07, -3.24249267578125e-05, -0.0015850067138671875, -9.918212890625e-05, -1.4437787532806396, 0.0, -0.00022912025451660156, 0.0, -4.410743713378906e-06, 0.0, -9.5367431640625e-06, -0.001972198486328125, -8.7738037109375e-05, -0.0003134736616630107, 0.0, -0.0020595788955688477, 0.0], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MURLOC"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Boulderfist Ogre"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Boulderfist", " ", "Ogre", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 52, 135, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -4.769656109429171, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.942586898803711, -1.181915283203125, 0.0, 0.0, 0.0, 0.0, -1.9669532775878906e-05, 0.0, -0.0001354217529296875, -2.47955322265625e-05, -5.7220458984375e-06, -3.0994415283203125e-06, -9.369850158691406e-05, -1.77621805050876e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0006198335904628038, -2.145764938177308e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.924701690673828e-05, -0.00040590763092041016, -0.004604339599609375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.3470642443280667e-05, -1.1920928244535389e-07, -0.00012433528900146484, -3.576278118089249e-07, -3.24249267578125e-05, -0.0015850067138671875, -9.918212890625e-05, -1.6329166889190674, -5.960462772236497e-07, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.1444091796875e-05, -0.0008544921875, -0.0001163482666015625, -0.0006684277905151248, 0.0, -0.0020276308059692383, 0.0], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "ALL"}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -5.688114702553968, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -0.00128173828125, -1.9073486328125e-06, -0.0004948375863023102, 0.0, -0.00015842914581298828, 0.0, -2.9802317840221804e-06, 0.0, -3.814697265625e-06, -0.0028285980224609375, -4.1961669921875e-05, -1.1801670552813448e-05, 0.0, -5.527176380157471, -1.1920928244535389e-07], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 6, "hole1": 7, "hole2": "charge"}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "6", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.197607099907998, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -0.00128173828125, -1.9073486328125e-06, -0.0004948375863023102, 0.0, -0.00015842914581298828, 0.0, -2.9802317840221804e-06, 0.0, -3.814697265625e-06, -5.917037010192871, -8.20159912109375e-05, -7.152556463552173e-06, -2.0265558760002023e-06, -0.0646439790725708, -2.3841855067985307e-07, -0.05739641189575195, -6.675719760096399e-06, -0.0001277923583984375, -0.000202178955078125, -4.38690185546875e-05, -1.9073486328125e-06], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "WARRIOR"}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -7.990800797956773, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -7.824845314025879, -2.193450927734375e-05, -0.00229036808013916, 0.0, -0.0001583099365234375, 0.0, -2.1457672119140625e-06, 0.0, -3.814697265625e-06, -0.0031108856201171875, -4.1961669921875e-05, -1.2755334864777979e-05, 0.0, -0.004201054573059082, -1.1920928244535389e-07], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "ALL"}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "Boulderfist<UNK>", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -8.19184459782555, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -8.102622032165527, -1.1920928244535389e-07, -6.92903995513916e-07, -1.3709068298339844e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.07563018798828125, -1.33514404296875e-05, -3.576275275918306e-06, -0.00015079841250553727, -1.5497207641601562e-05, -1.71661376953125e-05, -0.00042300118366256356, -2.741813204920618e-06, -0.0010491609573364258, -1.9073486328125e-06, -0.0005638597649522126, 0.0, -0.00014889240264892578, 0.0, -2.741813204920618e-06, 0.0, -3.814697265625e-06, -0.006561279296875, -4.38690185546875e-05, -8.583047019783407e-06, 0.0, -0.004309654235839844, -1.1920928244535389e-07], "inferred_code": "class Boulderfist<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 7, "hole2": "ALL"}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -8.349341588589795, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -8.182940483093262, -3.6954811548639555e-06, -0.0016107559204101562, -1.9073486328125e-06, -0.0007874936563894153, 0.0, -0.00018715858459472656, 0.0, -3.6954863844584906e-06, 0.0, -3.814697265625e-06, -0.0042705535888671875, -4.57763671875e-05, -1.0728796951298136e-05, 0.0, -0.0036880970001220703, 0.0], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "__init__"}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "__init__", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -8.543132364759195, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -8.292184829711914, -3.24249267578125e-05, -0.0867844820022583, 0.0, -0.00064849853515625, 0.0, -6.914126061019488e-06, 0.0, -3.814697265625e-06, -0.002460479736328125, -4.76837158203125e-05, -1.2397711543599144e-05, 0.0, -0.00483858585357666, -1.1920928244535389e-07], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.__init__,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "ROGUE"}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -8.879424631617631, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -8.71488094329834, -1.9073486328125e-06, -0.001180410385131836, 0.0, -0.000148773193359375, 0.0, -2.384185791015625e-06, 0.0, -3.814697265625e-06, -0.0027370452880859375, -4.00543212890625e-05, -1.2397711543599144e-05, 0.0, -0.004304647445678711, -1.1920928244535389e-07], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 6, "hole1": 6, "hole2": "charge"}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "6", "<EOS>", "6", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.913581788422988, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -0.00128173828125, -1.9073486328125e-06, -0.0004948375863023102, 0.0, -0.00015842914581298828, 0.0, -2.9802317840221804e-06, 0.0, -3.814697265625e-06, -5.917037010192871, -8.20159912109375e-05, -7.152556463552173e-06, -2.0265558760002023e-06, -2.771184206008911, -5.245195097813848e-06, -0.06685352325439453, -7.6293927122605965e-06, -0.0001316070556640625, -0.0001583099365234375, -5.53131103515625e-05, -1.9073486328125e-06], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 6, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "ALL"}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -8.977714240574834, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -0.00128173828125, -1.9073486328125e-06, -8.80276870727539, 0.0, -0.000308990478515625, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -0.013547897338867188, -1.71661376953125e-05, -1.2159294783486985e-05, 0.0, -0.0036575794219970703, -1.1920928244535389e-07], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "charge"}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "charge", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -9.296502172972133, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -9.131267547607422, -1.2040138244628906e-05, -0.0020111799240112305, 0.0, -0.00019466876983642578, 0.0, -4.053113570989808e-06, 0.0, -3.814697265625e-06, -0.0027713775634765625, -4.38690185546875e-05, -1.1801670552813448e-05, 0.0, -0.00406956672668457, -1.1920928244535389e-07], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.charge,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boulderfist Ogre", "hole1": 6, "hole2": "ALL"}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 7}], "hole0": "BoulderfistOgre", "hole4": "player"}, "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -9.632966458437494, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -0.00128173828125, -1.9073486328125e-06, -0.0004948375863023102, 0.0, -9.468262672424316, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00226593017578125, -2.09808349609375e-05, -2.479527029208839e-05, 0.0, -0.004488110542297363, 0.0], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Minion(6, 7)\n"}], "gold_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "ROGUE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -2.945290835944192, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.8561022281646729, 0.0, -0.0004863739013671875, 0.0, -3.814697265625e-05, 0.0, -3.933906555175781e-06, 0.0, -0.0001544952392578125, -1.9073486328125e-05, -1.9669532775878906e-05, 0.0, -0.0893096923828125, -5.14984130859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.6430206298828125, -0.000110626220703125, -0.000438690185546875, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.000591278076171875, 0.0, -0.0281219482421875, 0.0, -0.1427001953125, 0.0, -0.000683903694152832, -1.9073486328125e-06, -0.000537872314453125, -0.009708404541015625, -2.86102294921875e-05, -0.5819683074951172, 0.0, -0.0031347274780273438, -3.814697265625e-06, -0.022176027297973633, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -8.7738037109375e-05, -0.5555673837661743, 0.0], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "ROGUE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 3}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "3", "<EOS>"], "score": -3.246083530035989, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.8561022281646729, 0.0, -0.0004863739013671875, 0.0, -3.814697265625e-05, 0.0, -3.933906555175781e-06, 0.0, -0.0001544952392578125, -1.9073486328125e-05, -1.9669532775878906e-05, 0.0, -0.0893096923828125, -5.14984130859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.6430206298828125, -0.000110626220703125, -0.000438690185546875, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.000591278076171875, 0.0, -0.0281219482421875, 0.0, -0.1427001953125, 0.0, -0.000683903694152832, -1.9073486328125e-06, -0.000537872314453125, -0.009708404541015625, -2.86102294921875e-05, -0.5819683074951172, 0.0, -0.0031347274780273438, -3.814697265625e-06, -0.022176027297973633, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -8.7738037109375e-05, -0.8563581705093384, -1.9073486328125e-06], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "ROGUE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>"], "score": -3.3771083628659966, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.8561022281646729, 0.0, -0.0004863739013671875, 0.0, -3.814697265625e-05, 0.0, -3.933906555175781e-06, 0.0, -0.0001544952392578125, -1.9073486328125e-05, -1.9669532775878906e-05, 0.0, -0.0893096923828125, -5.14984130859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.6430206298828125, -0.000110626220703125, -0.000438690185546875, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.000591278076171875, 0.0, -0.0281219482421875, 0.0, -0.1427001953125, 0.0, -0.000683903694152832, -1.9073486328125e-06, -0.000537872314453125, -0.009708404541015625, -2.86102294921875e-05, -0.9115142822265625, -1.9073486328125e-06, -0.00201416015625, 0.0, -0.0005817413330078125, -1.9073486328125e-06, -0.40304088592529297, 0.0, -0.26595020294189453, 0.0, 0.0, -0.0007266998291015625, -0.0006847381591796875, -6.675719487247989e-05, -2.1457672119140625e-06, -7.62939453125e-06, -7.62939453125e-06, -0.010188098065555096, -3.349781036376953e-05], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.card.add_buff(Buff(Frozen()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -3.7864977441702052, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.9027884006500244, 0.0, -0.007405281066894531, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, 0.0, -0.0001354217529296875, -2.6702880859375e-05, -2.1696090698242188e-05, 0.0, -0.04915046691894531, -7.2479248046875e-05, -3.0517578125e-05, -1.52587890625e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -1.40850830078125, -0.0002422332763671875, -0.000286102294921875, 0.0, -0.000202178955078125, -1.9073486328125e-06, -0.0007762908935546875, 0.0, -0.0234222412109375, 0.0, -0.22267436981201172, 0.0, -0.0007292032241821289, -1.9073486328125e-06, -0.0004558563232421875, -0.008710861206054688, -2.86102294921875e-05, -0.5739784240722656, 0.0, -0.0030059814453125, -3.814697265625e-06, -0.02223515510559082, 0.0, -9.5367431640625e-06, -6.103515625e-05, -8.96453857421875e-05, -0.5514538288116455, 0.0], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "cards_played"}, "ops": [{"_type": "Gt"}]}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 21, 110, "player", "<EOS>", "cards_played", "<EOS>", 166, 5, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.008871572462098, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.9027884006500244, 0.0, -0.007405281066894531, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, 0.0, -0.0001354217529296875, -2.6702880859375e-05, -2.1696090698242188e-05, 0.0, -0.04915046691894531, -7.2479248046875e-05, -3.0517578125e-05, -1.52587890625e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.2834949493408203, -0.6746034622192383, -0.0011653900146484375, -1.71661376953125e-05, -0.00046253204345703125, -5.7220458984375e-06, -0.0103607177734375, 0.0, -0.00024318695068359375, 0.0, -0.23947452008724213, -2.86102294921875e-05, -3.814697265625e-06, -0.3737602233886719, -0.0001087188720703125, -0.00069427490234375, -7.62939453125e-06, -0.00019550323486328125, 0.0, -0.000225067138671875, -0.007027626037597656, -3.814697265625e-05, -0.006890296936035156, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.525843620300293, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.07023143768310547, -7.62939453125e-06, -7.62939453125e-06, -9.918212890625e-05, 0.0, -0.03057420253753662, -3.814697265625e-06, -0.009838104248046875, -0.01509857177734375, -7.62939453125e-05, -0.0001697540283203125, -1.9073486328125e-06, -0.0001926422119140625, 0.0, -0.4771308898925781, 0.0, -0.0001239776611328125, 0.0, -0.2980985641479492, -1.71661376953125e-05, -1.1444091796875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.01267850399017334, -1.52587890625e-05], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            self.target.change_attack(2)\n        else:\n            self.target.change_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "cards_played"}, "ops": [{"_type": "Gt"}]}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 97, 17, 90, 13, 80, 21, 110, "player", "<EOS>", "cards_played", "<EOS>", 166, 5, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>"], "score": -4.071109572775228, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.9027884006500244, 0.0, -0.007405281066894531, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, 0.0, -0.0001354217529296875, -2.6702880859375e-05, -2.1696090698242188e-05, 0.0, -0.04915046691894531, -7.2479248046875e-05, -3.0517578125e-05, -1.52587890625e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.2834949493408203, -0.7261667251586914, -0.0015964508056640625, -1.52587890625e-05, -0.00041484832763671875, -1.9073486328125e-06, -0.5642070770263672, 0.0, -0.0014410018920898438, 0.0, -0.5324227213859558, -7.2479248046875e-05, -1.9073486328125e-06, -0.3155851364135742, -0.0001735687255859375, -0.0003910064697265625, -5.7220458984375e-06, -0.0001881122589111328, 0.0, -0.11383056640625, -0.02647686004638672, -4.9591064453125e-05, -0.010659217834472656, -1.9073486328125e-06, -9.72747802734375e-05, 0.0, -0.11574745178222656, -1.9073486328125e-06, -0.07312679290771484, 0.0, -0.28499698638916016, 0.0, 0.0, -0.0003261566162109375, -0.000576019287109375, -3.659723370219581e-05, -5.960462772236497e-07, -7.62939453125e-06, -9.5367431640625e-06, -0.049336500465869904, -2.884864625229966e-05], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            minion.card.add_buff(Buff(Frozen()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 3}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "3", "<EOS>"], "score": -4.09694257601835, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.9027884006500244, 0.0, -0.007405281066894531, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, 0.0, -0.0001354217529296875, -2.6702880859375e-05, -2.1696090698242188e-05, 0.0, -0.04915046691894531, -7.2479248046875e-05, -3.0517578125e-05, -1.52587890625e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -1.40850830078125, -0.0002422332763671875, -0.000286102294921875, 0.0, -0.000202178955078125, -1.9073486328125e-06, -0.0007762908935546875, 0.0, -0.0234222412109375, 0.0, -0.22267436981201172, 0.0, -0.0007292032241821289, -1.9073486328125e-06, -0.0004558563232421875, -0.008710861206054688, -2.86102294921875e-05, -0.5739784240722656, 0.0, -0.0030059814453125, -3.814697265625e-06, -0.02223515510559082, 0.0, -9.5367431640625e-06, -6.103515625e-05, -8.96453857421875e-05, -0.8618967533111572, -1.9073486328125e-06], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "ROGUE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "cards_played"}, "ops": [{"_type": "Gt"}]}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 21, 110, "player", "<EOS>", "cards_played", "<EOS>", 166, 5, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.181025641408937, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.8561022281646729, 0.0, -0.0004863739013671875, 0.0, -3.814697265625e-05, 0.0, -3.933906555175781e-06, 0.0, -0.0001544952392578125, -1.9073486328125e-05, -1.9669532775878906e-05, 0.0, -0.0893096923828125, -5.14984130859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.750859260559082, -0.44927120208740234, -0.00128173828125, -1.52587890625e-05, -0.00043773651123046875, -7.62939453125e-06, -0.012134552001953125, 0.0, -0.0002288818359375, 0.0, -0.21514390408992767, -2.6702880859375e-05, -3.814697265625e-06, -0.3315267562866211, -0.0001068115234375, -0.0007076263427734375, -5.7220458984375e-06, -0.00019359588623046875, 0.0, -0.000244140625, -0.00751495361328125, -3.814697265625e-05, -0.00614166259765625, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.5515422821044922, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.06921672821044922, -7.62939453125e-06, -7.62939453125e-06, -9.1552734375e-05, 0.0, -0.028978466987609863, -3.814697265625e-06, -0.009588241577148438, -0.016037940979003906, -7.82012939453125e-05, -0.0001659393310546875, -1.9073486328125e-06, -0.0001888275146484375, 0.0, -0.4585113525390625, 0.0, -0.000125885009765625, 0.0, -0.30161190032958984, -1.71661376953125e-05, -1.1444091796875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.012560844421386719, -1.52587890625e-05], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            self.target.change_attack(2)\n        else:\n            self.target.change_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>"], "score": -4.259464686167789, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.9027884006500244, 0.0, -0.007405281066894531, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, 0.0, -0.0001354217529296875, -2.6702880859375e-05, -2.1696090698242188e-05, 0.0, -0.04915046691894531, -7.2479248046875e-05, -3.0517578125e-05, -1.52587890625e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -1.40850830078125, -0.0002422332763671875, -0.000286102294921875, 0.0, -0.000202178955078125, -1.9073486328125e-06, -0.0007762908935546875, 0.0, -0.0234222412109375, 0.0, -0.22267436981201172, 0.0, -0.0007292032241821289, -1.9073486328125e-06, -0.0004558563232421875, -0.008710861206054688, -2.86102294921875e-05, -0.9322977066040039, -1.9073486328125e-06, -0.002048492431640625, 0.0, -0.000560760498046875, -1.9073486328125e-06, -0.4133749008178711, 0.0, -0.2642192840576172, 0.0, 0.0, -0.000713348388671875, -0.0007114410400390625, -6.66379855829291e-05, -2.1457672119140625e-06, -7.62939453125e-06, -7.62939453125e-06, -0.009757074527442455, -3.349781036376953e-05], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.card.add_buff(Buff(Frozen()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "attr": "health"}, "ops": [{"_type": "Eq"}]}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 97, 17, 90, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "health", "<EOS>", 166, 4, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>"], "score": -4.668902332241579, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.9027884006500244, 0.0, -0.007405281066894531, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, 0.0, -0.0001354217529296875, -2.6702880859375e-05, -2.1696090698242188e-05, 0.0, -0.04915046691894531, -7.2479248046875e-05, -3.0517578125e-05, -1.52587890625e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.2834949493408203, -0.7261667251586914, -0.0015964508056640625, -1.52587890625e-05, -0.00041484832763671875, -1.9073486328125e-06, -0.8417987823486328, 0.0, -1.33514404296875e-05, 0.0, -0.02586078643798828, -1.1920928244535389e-07, -0.02246895059943199, -8.344646857949556e-07, -0.07915127277374268, -1.9073486328125e-06, -7.62939453125e-06, -0.3303499221801758, -1.71661376953125e-05, -0.1432056427001953, -2.09808349609375e-05, -0.0009405612363480031, 0.0, -0.24524211883544922, -0.014118194580078125, -8.0108642578125e-05, -0.0007801055908203125, 0.0, -0.0003528594970703125, 0.0, -0.4943971633911133, 0.0, -0.08513927459716797, 0.0, -0.35204505920410156, 0.0, 0.0, -0.0003147125244140625, -0.0008869171142578125, -5.1617593271657825e-05, -7.152555099310121e-07, -9.5367431640625e-06, -9.5367431640625e-06, -0.050290580838918686, -3.5524364648154005e-05], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health == 0:\n            minion.card.add_buff(Buff(Frozen()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "cards_played"}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 21, 110, "player", "<EOS>", "cards_played", "<EOS>", 166, 10, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.702329891172425, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.9027884006500244, 0.0, -0.007405281066894531, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, 0.0, -0.0001354217529296875, -2.6702880859375e-05, -2.1696090698242188e-05, 0.0, -0.04915046691894531, -7.2479248046875e-05, -3.0517578125e-05, -1.52587890625e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.2834949493408203, -0.6746034622192383, -0.0011653900146484375, -1.71661376953125e-05, -0.00046253204345703125, -5.7220458984375e-06, -0.0103607177734375, 0.0, -0.00024318695068359375, 0.0, -0.23947452008724213, -2.86102294921875e-05, -3.814697265625e-06, -1.221400260925293, -0.0002346038818359375, -0.0002899169921875, -1.9073486328125e-06, -0.3345075845718384, 0.0, -0.0004177093505859375, -0.032357215881347656, -3.0517578125e-05, -0.004294395446777344, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.17467212677001953, 0.0, -0.0001354217529296875, 0.0, -0.08881950378417969, -3.814697265625e-06, -7.62939453125e-06, -8.7738037109375e-05, 0.0, -0.022797584533691406, -3.814697265625e-06, -0.008787155151367188, -0.022058486938476562, -0.000125885009765625, -0.000286102294921875, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.27689647674560547, 0.0, -0.000148773193359375, 0.0, -0.3216085433959961, -1.9073486328125e-05, -1.1444091796875e-05, -0.0001621246337890625, -1.9073486328125e-06, -0.0124891996383667, -1.52587890625e-05], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played < 0:\n            self.target.change_attack(2)\n        else:\n            self.target.change_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "cards_played"}, "ops": [{"_type": "Gt"}]}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 21, 110, "player", "<EOS>", "cards_played", "<EOS>", 166, 5, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.906952405718343, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.9027884006500244, 0.0, -0.007405281066894531, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, 0.0, -0.0001354217529296875, -2.6702880859375e-05, -2.1696090698242188e-05, 0.0, -0.04915046691894531, -7.2479248046875e-05, -3.0517578125e-05, -1.52587890625e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.2834949493408203, -0.6746034622192383, -0.0011653900146484375, -1.71661376953125e-05, -0.00046253204345703125, -5.7220458984375e-06, -0.0103607177734375, 0.0, -0.00024318695068359375, 0.0, -0.23947452008724213, -2.86102294921875e-05, -3.814697265625e-06, -0.3737602233886719, -0.0001087188720703125, -0.00069427490234375, -7.62939453125e-06, -0.00019550323486328125, 0.0, -0.000225067138671875, -0.007027626037597656, -3.814697265625e-05, -0.006890296936035156, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.525843620300293, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.07023143768310547, -7.62939453125e-06, -7.62939453125e-06, -9.918212890625e-05, 0.0, -0.03057420253753662, -3.814697265625e-06, -0.009838104248046875, -0.01509857177734375, -7.62939453125e-05, -0.0001697540283203125, -1.9073486328125e-06, -0.0001926422119140625, 0.0, -1.6302709579467773, 0.0, -0.004231691360473633, 0.0, -0.02888965606689453, 0.0, -3.62396240234375e-05, -4.57763671875e-05, -3.814697265625e-06, -0.02276814728975296, -3.24249267578125e-05], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            self.target.change_attack(2)\n        else:\n            player.hero.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "ROGUE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "cards_played"}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 21, 110, "player", "<EOS>", "cards_played", "<EOS>", 166, 10, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -5.048599975553529, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.8561022281646729, 0.0, -0.0004863739013671875, 0.0, -3.814697265625e-05, 0.0, -3.933906555175781e-06, 0.0, -0.0001544952392578125, -1.9073486328125e-05, -1.9669532775878906e-05, 0.0, -0.0893096923828125, -5.14984130859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.750859260559082, -0.44927120208740234, -0.00128173828125, -1.52587890625e-05, -0.00043773651123046875, -7.62939453125e-06, -0.012134552001953125, 0.0, -0.0002288818359375, 0.0, -0.21514390408992767, -2.6702880859375e-05, -3.814697265625e-06, -1.3244972229003906, -0.0002155303955078125, -0.0002803802490234375, -1.9073486328125e-06, -0.34233951568603516, 0.0, -0.000457763671875, -0.03445625305175781, -3.0517578125e-05, -0.0038652420043945312, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.19056415557861328, 0.0, -0.0001373291015625, 0.0, -0.08912944793701172, -3.814697265625e-06, -7.62939453125e-06, -8.20159912109375e-05, 0.0, -0.02219843864440918, -3.814697265625e-06, -0.0084991455078125, -0.02346038818359375, -0.0001277923583984375, -0.000278472900390625, -3.814697265625e-06, -0.000141143798828125, 0.0, -0.2841787338256836, 0.0, -0.000148773193359375, 0.0, -0.32533931732177734, -1.9073486328125e-05, -1.1444091796875e-05, -0.00016021728515625, -1.9073486328125e-06, -0.012354850769042969, -1.52587890625e-05], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played < 0:\n            self.target.change_attack(2)\n        else:\n            self.target.change_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "cards_played"}, "ops": [{"_type": "Gt"}]}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 21, 110, "player", "<EOS>", "cards_played", "<EOS>", 166, 5, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -5.163908975568788, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -1.9899752140045166, 0.0, -0.0027551651000976562, 0.0, -3.0517578125e-05, 0.0, -3.933906555175781e-06, 0.0, -0.000148773193359375, -2.09808349609375e-05, -1.7881393432617188e-05, 0.0, -0.058589935302734375, -6.67572021484375e-05, -3.0517578125e-05, -1.71661376953125e-05, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.473663330078125, -0.5896596908569336, -0.0012359619140625, -1.52587890625e-05, -0.000457763671875, -7.62939453125e-06, -0.011034011840820312, 0.0, -0.00023365020751953125, 0.0, -0.21962057054042816, -2.6702880859375e-05, -3.814697265625e-06, -0.34329891204833984, -0.0001068115234375, -0.0006999969482421875, -5.7220458984375e-06, -0.00019550323486328125, 0.0, -0.0002307891845703125, -0.007275581359863281, -3.814697265625e-05, -0.0063018798828125, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.5401096343994141, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.06976985931396484, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-05, 0.0, -0.029822587966918945, -3.814697265625e-06, -0.00968170166015625, -0.015686988830566406, -7.62939453125e-05, -0.0001659393310546875, -1.9073486328125e-06, -0.00019073486328125, 0.0, -0.4688081741333008, 0.0, -0.000125885009765625, 0.0, -0.30078983306884766, -1.71661376953125e-05, -1.1444091796875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.012599468231201172, -1.52587890625e-05], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            self.target.change_attack(2)\n        else:\n            self.target.change_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Deadly Poison", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "DeadlyPoison", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "cards_played"}, "ops": [{"_type": "Gt"}]}}]}, "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 21, 110, "player", "<EOS>", "cards_played", "<EOS>", 166, 5, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>"], "score": -5.449055632906102, "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.9027884006500244, 0.0, -0.007405281066894531, 0.0, -3.4332275390625e-05, 0.0, -2.0265579223632812e-06, 0.0, -0.0001354217529296875, -2.6702880859375e-05, -2.1696090698242188e-05, 0.0, -0.04915046691894531, -7.2479248046875e-05, -3.0517578125e-05, -1.52587890625e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.2834949493408203, -0.6746034622192383, -0.0011653900146484375, -1.71661376953125e-05, -0.00046253204345703125, -5.7220458984375e-06, -0.0103607177734375, 0.0, -0.00024318695068359375, 0.0, -0.23947452008724213, -2.86102294921875e-05, -3.814697265625e-06, -0.3737602233886719, -0.0001087188720703125, -0.00069427490234375, -7.62939453125e-06, -0.00019550323486328125, 0.0, -0.000225067138671875, -0.007027626037597656, -3.814697265625e-05, -0.006890296936035156, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -1.308248519897461, -1.9073486328125e-06, -0.25617170333862305, 0.0, -0.28509044647216797, 0.0, 0.0, -0.000576019287109375, -0.00125885009765625, -2.5272360289818607e-05, -4.768370445162873e-07, -7.62939453125e-06, -1.1444091796875e-05, -0.046550899744033813, -3.0398367016459815e-05, -0.28722190856933594, -0.048735618591308594, -5.53131103515625e-05, -0.05627155303955078, 0.0, -0.005329728126525879, -1.1920928244535389e-07, -0.4787731170654297, 0.0, -7.62939453125e-06, -0.000148773193359375, -0.0898904800415039, -7.855891453800723e-05, -2.3841855067985307e-07, -1.1444091796875e-05, -1.33514404296875e-05, -0.015973005443811417, -0.0001071691294782795], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            minion.card.add_buff(Buff(Frozen()))\n        else:\n            minion.add_buff(Buff(Frozen()))\n"}], "gold_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.weapon.base_attack += 2\n        player.hero.change_temp_attack(2)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}, {"arg": "combo", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "combo", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -1.6842711927420098, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -0.825709342956543, 0.0, -0.0006465911865234375, -0.000118255615234375, -3.814697265625e-06, 0.0, -9.930133819580078e-05, 0.0, -0.00043702125549316406, 0.0, -0.1797037124633789, -0.000606536865234375, -7.62939453125e-05, -0.1033097505569458, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001373291015625, -1.33514404296875e-05, -8.7738037109375e-05, 0.0, -1.1444091796875e-05, -0.000263214111328125, -0.0001983642578125, -0.0007799863815307617, -8.988333138404414e-05, -0.024059217423200607, -1.9311753931106068e-05, -0.01930999755859375, -0.12662029266357422, -0.0002498626708984375, -5.340576171875e-05, -0.0025293827056884766, -8.0108642578125e-05, 0.0, -0.0022125244140625, -5.7220458984375e-06, -0.0015735626220703125, -0.00010538101196289062, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -0.0015796422958374023, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0033807754516601562, 0.0, -0.005795478820800781, -9.72747802734375e-05, -0.0038232803344726562, -5.9723854064941406e-05, -2.0265579223632812e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.20662522315979004, -1.9073486328125e-05, -0.000202178955078125, -1.71661376953125e-05, -0.000110626220703125, -7.62939453125e-06, -0.0003509521484375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0004825592041015625, -0.015598773956298828, -7.581464888062328e-05, -0.07129307836294174, -3.993438804172911e-05, -0.0072040557861328125, -0.04427146911621094, -3.0517578125e-05, -7.2479248046875e-05, -0.0006916521233506501, -3.635883331298828e-05, 0.0, -0.012655258178710938, -1.9073486328125e-06, -7.05718994140625e-05, -0.00011515617370605469, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -0.0017570257186889648, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.0030183792114257812, 0.0, -0.0049991607666015625, -4.9591064453125e-05, -0.0036314725875854492, -5.9723854064941406e-05, -2.0265579223632812e-06, -0.0002747774124145508, 0.0, -1.20401346066501e-05, 0.0, -7.62939453125e-06, -0.0005970001220703125, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.00042831868631765246, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(3), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}, {"arg": "combo", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "combo", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -2.5071664867664296, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -1.7308807373046875, 0.0, -3.814697265625e-05, -0.0001087188720703125, -5.7220458984375e-06, 0.0, -0.00019073486328125, 0.0, -0.0005075931549072266, 0.0, -0.13863658905029297, -0.0005702972412109375, -7.43865966796875e-05, -0.05888473987579346, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001373291015625, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -1.1444091796875e-05, -0.0002613067626953125, -0.0001926422119140625, -0.0007634162320755422, -9.155226871371269e-05, -0.023885177448391914, -1.955016705323942e-05, -0.018445968627929688, -0.13236236572265625, -0.0002460479736328125, -5.53131103515625e-05, -0.0025446414947509766, -7.82012939453125e-05, 0.0, -0.002197265625, -5.7220458984375e-06, -0.0015544891357421875, -0.00010538101196289062, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -0.0015834569931030273, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0033540725708007812, 0.0, -0.005803108215332031, -9.5367431640625e-05, -0.0038156509399414062, -5.9723854064941406e-05, -2.0265579223632812e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.20618951320648193, -1.9073486328125e-05, -0.00019931793212890625, -1.71661376953125e-05, -0.0001087188720703125, -7.62939453125e-06, -0.0003509521484375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.000484466552734375, -0.016032814979553223, -7.557625212939456e-05, -0.07142659276723862, -3.981518239015713e-05, -0.007137298583984375, -0.04300880432128906, -3.0517578125e-05, -7.05718994140625e-05, -0.0006920097512193024, -3.635883331298828e-05, 0.0, -0.012932777404785156, -1.9073486328125e-06, -7.05718994140625e-05, -0.00011897087097167969, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -0.0017474889755249023, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0030126571655273438, 0.0, -0.005005836486816406, -4.9591064453125e-05, -0.0036333799362182617, -5.9723854064941406e-05, -2.0265579223632812e-06, -0.0002747774124145508, 0.0, -1.39474832394626e-05, 0.0, -7.62939453125e-06, -0.0005970001220703125, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.00042831868631765246, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(3), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}, {"arg": "combo", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "combo", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -2.616016490961549, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -1.7919950485229492, 0.0, -0.0001010894775390625, -0.0001316070556640625, -3.814697265625e-06, 0.0, -0.00017750263214111328, 0.0, -0.00045609474182128906, 0.0, -0.15695953369140625, -0.000614166259765625, -6.4849853515625e-05, -0.08794879913330078, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.00014495849609375, -1.33514404296875e-05, -8.7738037109375e-05, 0.0, -1.1444091796875e-05, -0.00025177001953125, -0.0001964569091796875, -0.000762939453125, -9.322120604338124e-05, -0.023702431470155716, -1.955016705323942e-05, -0.01802825927734375, -0.13506031036376953, -0.0002498626708984375, -5.53131103515625e-05, -0.0025675296783447266, -7.82012939453125e-05, 0.0, -0.00218963623046875, -5.7220458984375e-06, -0.00154876708984375, -0.00010538101196289062, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -0.0015796422958374023, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0033578872680664062, 0.0, -0.0058078765869140625, -9.72747802734375e-05, -0.0038213729858398438, -5.9723854064941406e-05, -2.0265579223632812e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.20501363277435303, -1.9073486328125e-05, -0.00019741058349609375, -1.71661376953125e-05, -0.000110626220703125, -7.62939453125e-06, -0.0003604888916015625, 0.0, -5.7220458984375e-06, -0.0001468658447265625, -0.0004863739013671875, -0.016307592391967773, -7.593385089421645e-05, -0.07168146222829819, -3.9695980376563966e-05, -0.00711822509765625, -0.041492462158203125, -3.0517578125e-05, -7.2479248046875e-05, -0.000692248169798404, -3.635883331298828e-05, 0.0, -0.013258934020996094, -1.9073486328125e-06, -6.866455078125e-05, -0.0001227855682373047, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -0.0017341375350952148, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0030126571655273438, 0.0, -0.0050220489501953125, -4.9591064453125e-05, -0.0036352872848510742, -5.9723854064941406e-05, -2.0265579223632812e-06, -0.0002766847610473633, 0.0, -1.39474832394626e-05, 0.0, -7.62939453125e-06, -0.0005950927734375, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.00042831868631765246, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(3), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -2.8671054991591447, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -0.825709342956543, 0.0, -0.0006465911865234375, -0.000118255615234375, -3.814697265625e-06, 0.0, -9.930133819580078e-05, 0.0, -0.00043702125549316406, 0.0, -1.8300342559814453, -9.5367431640625e-06, -0.0003185272216796875, -0.0014519691467285156, -0.0001201629638671875, 0.0, -0.00026702880859375, -0.0007343292236328125, -1.33514404296875e-05, -9.5367431640625e-05, 0.0, -1.1444091796875e-05, -0.0002231597900390625, -0.0002307891845703125, -0.0008200407028198242, -8.094267104752362e-05, -0.02358655072748661, -1.835809598560445e-05, -0.013406753540039062, -0.1401510238647461, -0.0002956390380859375, -6.67572021484375e-05, -0.0027048587799072266, -8.58306884765625e-05, 0.0, -0.0019311904907226562, -5.7220458984375e-06, -0.0017681121826171875, -0.00010526180267333984, 0.0, -4.9591064453125e-05, -2.288818359375e-05, -0.0015643835067749023, -0.0001811981201171875, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0036765336990356445, 0.0, -0.005789756774902344, -0.0001049041748046875, -0.0039031505584716797, -5.9723854064941406e-05, -2.0265579223632812e-06, -0.0002709627151489258, 0.0, -1.406669252901338e-05, 0.0, -7.62939453125e-06, -0.0005931854248046875, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.0004243847797624767, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}, {"arg": "combo", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "combo", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -3.1342554674720233, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -2.3150339126586914, 0.0, -0.0036630630493164062, -9.34600830078125e-05, -7.62939453125e-06, 0.0, -0.000125885009765625, 0.0, -0.0006945133209228516, 0.0, -0.15105533599853516, -0.0005245208740234375, -8.7738037109375e-05, -0.08551228046417236, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001220703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -1.1444091796875e-05, -0.000247955322265625, -0.0001926422119140625, -0.0007706879987381399, -9.167147800326347e-05, -0.023861054331064224, -1.9430961401667446e-05, -0.018840789794921875, -0.13289260864257812, -0.000247955322265625, -5.53131103515625e-05, -0.0025599002838134766, -8.0108642578125e-05, 0.0, -0.00217437744140625, -5.7220458984375e-06, -0.0016040802001953125, -0.00010728836059570312, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -0.0015853643417358398, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0033807754516601562, 0.0, -0.005816459655761719, -9.72747802734375e-05, -0.0038231611251831055, -5.9723854064941406e-05, -2.0265579223632812e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.20626091957092285, -1.9073486328125e-05, -0.0002002716064453125, -1.71661376953125e-05, -0.000110626220703125, -7.62939453125e-06, -0.0003566741943359375, 0.0, -5.7220458984375e-06, -0.0001468658447265625, -0.000484466552734375, -0.016193270683288574, -7.617225492140278e-05, -0.07164331525564194, -3.993438804172911e-05, -0.00707244873046875, -0.04149341583251953, -3.0517578125e-05, -7.2479248046875e-05, -0.0006940363091416657, -3.635883331298828e-05, 0.0, -0.013246536254882812, -1.9073486328125e-06, -6.866455078125e-05, -0.0001227855682373047, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -0.0017398595809936523, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0030164718627929688, 0.0, -0.005016326904296875, -4.9591064453125e-05, -0.0036352872848510742, -5.9723854064941406e-05, -2.0265579223632812e-06, -0.0002766847610473633, 0.0, -1.39474832394626e-05, 0.0, -7.62939453125e-06, -0.0005950927734375, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.00042831868631765246, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(3), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}, {"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "taunt", "<EOS>", 22, 111, "True", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -3.8652702729138966, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -0.825709342956543, 0.0, -0.0006465911865234375, -0.000118255615234375, -3.814697265625e-06, 0.0, -9.930133819580078e-05, 0.0, -0.00043702125549316406, 0.0, -0.1797037124633789, -0.000606536865234375, -7.62939453125e-05, -0.1033097505569458, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001373291015625, -1.33514404296875e-05, -8.7738037109375e-05, 0.0, -1.1444091796875e-05, -0.000263214111328125, -0.0001983642578125, -0.0007799863815307617, -8.988333138404414e-05, -0.024059217423200607, -1.9311753931106068e-05, -0.01930999755859375, -0.12662029266357422, -0.0002498626708984375, -5.340576171875e-05, -0.0025293827056884766, -8.0108642578125e-05, 0.0, -0.0022125244140625, -5.7220458984375e-06, -0.0015735626220703125, -0.00010538101196289062, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -0.0015796422958374023, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0033807754516601562, 0.0, -0.005795478820800781, -9.72747802734375e-05, -0.0038232803344726562, -5.9723854064941406e-05, -2.0265579223632812e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.404862642288208, -3.814697265625e-06, -0.02265167236328125, -0.0007114410400390625, -0.0007767677307128906, 0.0, -0.022742271423339844, 0.0, -0.00014841544907540083, 0.0, -7.82012939453125e-05, -0.1035451889038086, -3.814697265625e-06, -5.745875751017593e-05, -2.503368341422174e-05, -0.0006711474270559847, -6.31808916295995e-06], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            taunt=True)\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -3.9609458747163373, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -1.7919950485229492, 0.0, -0.0001010894775390625, -0.0001316070556640625, -3.814697265625e-06, 0.0, -0.00017750263214111328, 0.0, -0.00045609474182128906, 0.0, -1.953012466430664, -1.1444091796875e-05, -0.00026702880859375, -0.0011048316955566406, -0.000118255615234375, 0.0, -0.00028228759765625, -0.0009708404541015625, -1.33514404296875e-05, -9.72747802734375e-05, 0.0, -1.1444091796875e-05, -0.0002269744873046875, -0.0002346038818359375, -0.0007914304733276367, -8.034664642764255e-05, -0.023031646385788918, -1.871571657829918e-05, -0.013044357299804688, -0.14631366729736328, -0.0003032684326171875, -6.866455078125e-05, -0.0026665925979614258, -8.58306884765625e-05, 0.0, -0.0018978118896484375, -5.7220458984375e-06, -0.00177001953125, -0.00010716915130615234, 0.0, -4.9591064453125e-05, -2.288818359375e-05, -0.0015586614608764648, -0.0001811981201171875, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.003678441047668457, 0.0, -0.005768775939941406, -0.0001068115234375, -0.003914594650268555, -5.9723854064941406e-05, -2.0265579223632812e-06, -0.0002728700637817383, 0.0, -1.406669252901338e-05, 0.0, -7.62939453125e-06, -0.0005931854248046875, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.0004243847797624767, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -4.0157339836096, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -1.7308807373046875, 0.0, -3.814697265625e-05, -0.0001087188720703125, -5.7220458984375e-06, 0.0, -0.00019073486328125, 0.0, -0.0005075931549072266, 0.0, -2.0683841705322266, -9.5367431640625e-06, -0.00029754638671875, -0.0011792182922363281, -0.0001239776611328125, 0.0, -0.0002880096435546875, -0.0008106231689453125, -1.33514404296875e-05, -9.34600830078125e-05, 0.0, -1.1444091796875e-05, -0.0002269744873046875, -0.0002269744873046875, -0.0007935762405395508, -8.094267104752362e-05, -0.02350335381925106, -1.871571657829918e-05, -0.013292312622070312, -0.14618968963623047, -0.0002956390380859375, -6.67572021484375e-05, -0.002676248550415039, -8.58306884765625e-05, 0.0, -0.0019121170043945312, -5.7220458984375e-06, -0.0017757415771484375, -0.00010716915130615234, 0.0, -4.9591064453125e-05, -2.288818359375e-05, -0.0015643835067749023, -0.0001811981201171875, -9.5367431640625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.003651738166809082, 0.0, -0.005795478820800781, -0.0001049041748046875, -0.003897428512573242, -5.9723854064941406e-05, -2.0265579223632812e-06, -0.0002709627151489258, 0.0, -1.406669252901338e-05, 0.0, -7.62939453125e-06, -0.0005950927734375, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.0004243847797624767, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}, {"arg": "combo", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "target"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "target", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "combo", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -4.123391971565063, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -3.311645984649658, 0.0, -0.005597114562988281, -0.0001583099365234375, -3.814697265625e-06, 0.0, -0.00016796588897705078, 0.0, -0.0005761384963989258, 0.0, -0.1575021743774414, -0.0005016326904296875, -8.58306884765625e-05, -0.07321274280548096, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.00014495849609375, -1.33514404296875e-05, -8.7738037109375e-05, 0.0, -1.1444091796875e-05, -0.0002593994140625, -0.000202178955078125, -0.0007208585739135742, -8.749916014494374e-05, -0.023546507582068443, -1.955016705323942e-05, -0.019735336303710938, -0.12822818756103516, -0.000255584716796875, -5.340576171875e-05, -0.0025540590286254883, -8.0108642578125e-05, 0.0, -0.0021848678588867188, -5.7220458984375e-06, -0.0015888214111328125, -0.00010538101196289062, 0.0, -4.9591064453125e-05, -2.09808349609375e-05, -0.0015815496444702148, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0034074783325195312, 0.0, -0.0057888031005859375, -9.72747802734375e-05, -0.0038290023803710938, -5.9723854064941406e-05, -2.0265579223632812e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.20550274848937988, -1.9073486328125e-05, -0.000202178955078125, -1.71661376953125e-05, -0.0001125335693359375, -7.62939453125e-06, -0.0003490447998046875, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0004825592041015625, -0.01567232608795166, -7.581464888062328e-05, -0.07125493139028549, -3.993438804172911e-05, -0.007228851318359375, -0.04415130615234375, -3.0517578125e-05, -7.2479248046875e-05, -0.0006916521233506501, -3.635883331298828e-05, 0.0, -0.012699127197265625, -1.9073486328125e-06, -7.05718994140625e-05, -0.00011515617370605469, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -0.0017589330673217773, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.0030202865600585938, 0.0, -0.005001068115234375, -4.9591064453125e-05, -0.0036333799362182617, -5.9723854064941406e-05, -2.0265579223632812e-06, -0.0002747774124145508, 0.0, -1.20401346066501e-05, 0.0, -7.62939453125e-06, -0.0005950927734375, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.00042831868631765246, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.target,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(3), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}, {"arg": "combo", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 88, 21, 110, "Character", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "combo", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -4.251909342522559, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -0.825709342956543, 0.0, -0.0006465911865234375, -0.000118255615234375, -3.814697265625e-06, 0.0, -9.930133819580078e-05, 0.0, -0.00043702125549316406, 0.0, -0.1797037124633789, -0.000606536865234375, -7.62939453125e-05, -0.1033097505569458, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001373291015625, -1.33514404296875e-05, -8.7738037109375e-05, 0.0, -1.1444091796875e-05, -0.000263214111328125, -0.0001983642578125, -0.0007799863815307617, -8.988333138404414e-05, -0.024059217423200607, -1.9311753931106068e-05, -0.01930999755859375, -2.3296031951904297, -0.00070953369140625, -2.6702880859375e-05, -0.02052474021911621, -0.000293731689453125, 0.0, -0.0002574920654296875, -0.00844573974609375, -0.0006561279296875, -2.491474151611328e-05, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -3.814697265625e-06, -0.013844132423400879, 0.0, -0.004797935485839844, -9.5367431640625e-06, -0.019460318610072136, -0.0005890130996704102, -2.3841855067985307e-07, -1.33514404296875e-05, -5.7220458984375e-06, -0.11787140369415283, -5.7220458984375e-06, -0.000278472900390625, -9.5367431640625e-06, -5.91278076171875e-05, -0.000148773193359375, -0.000171661376953125, 0.0, -3.814697265625e-06, -0.0001087188720703125, -0.0011386871337890625, -0.004215717315673828, -8.46356269903481e-05, -0.03959234058856964, -2.145757753169164e-05, -0.020721435546875, -0.4834318161010742, -7.82012939453125e-05, -0.0001850128173828125, -0.0016411542892456055, -6.67572021484375e-05, 0.0, -0.0051975250244140625, -3.814697265625e-06, -0.0004711151123046875, -8.845329284667969e-05, 0.0, -4.9591064453125e-05, -1.33514404296875e-05, -0.0022263526916503906, -0.000186920166015625, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.004128575325012207, 0.0, -0.004638671875, -4.76837158203125e-05, -0.0036734342575073242, -5.7816505432128906e-05, -2.0265579223632812e-06, -0.0002652406692504883, 0.0, -1.1801716937043238e-05, 0.0, -7.62939453125e-06, -0.000621795654296875, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.00042831868631765246, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(Null, picker=UserPicker())), combo=Battlecry(\n            Damage(3), CharacterSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -4.3142638375938915, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -0.825709342956543, 0.0, -0.0006465911865234375, -0.000118255615234375, -3.814697265625e-06, 0.0, -9.930133819580078e-05, 0.0, -0.00043702125549316406, 0.0, -0.1797037124633789, -0.000606536865234375, -7.62939453125e-05, -0.1033097505569458, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001373291015625, -1.33514404296875e-05, -8.7738037109375e-05, 0.0, -1.1444091796875e-05, -0.000263214111328125, -0.0001983642578125, -0.0007799863815307617, -8.988333138404414e-05, -0.024059217423200607, -1.9311753931106068e-05, -0.01930999755859375, -0.12662029266357422, -0.0002498626708984375, -5.340576171875e-05, -0.0025293827056884766, -8.0108642578125e-05, 0.0, -0.0022125244140625, -5.7220458984375e-06, -0.0015735626220703125, -0.00010538101196289062, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -0.0015796422958374023, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0033807754516601562, 0.0, -0.005795478820800781, -9.72747802734375e-05, -0.0038232803344726562, -5.9723854064941406e-05, -2.0265579223632812e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.899732828140259, 0.0, -0.07859134674072266, -1.71661376953125e-05, -0.02441263198852539, -6.35385513305664e-05, 0.0, -0.0004311800003051758, 0.0, -9.655950634623878e-06, 0.0, -9.5367431640625e-06, -0.001522064208984375, -3.814697265625e-06, -2.8848617148469202e-05, -7.510157047363464e-06, -0.00044691533548757434, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            picker=UserPicker())\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 1}}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "overload", "<EOS>", 23, 115, "1", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -4.362560016764284, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -0.825709342956543, 0.0, -0.0006465911865234375, -0.000118255615234375, -3.814697265625e-06, 0.0, -9.930133819580078e-05, 0.0, -0.00043702125549316406, 0.0, -0.1797037124633789, -0.000606536865234375, -7.62939453125e-05, -2.8535938262939453, -2.682209014892578e-05, -0.022008895874023438, -1.1444091796875e-05, -0.0746326819062233, -1.3470649719238281e-05, -1.71661376953125e-05, -0.016931533813476562, -0.0009108781814575195, -3.62396240234375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002841949462890625, -1.1444091796875e-05, -0.0001468658447265625, 0.0, -1.52587890625e-05, -0.0005283355712890625, -0.0001926422119140625, -0.0007599591044709086, -0.00011432105384301394, -0.018103331327438354, -2.8967540856683627e-05, -0.0034332275390625, -0.3352384567260742, -0.0001506805419921875, -5.91278076171875e-05, -0.0031888484954833984, -6.866455078125e-05, 0.0, -0.0021085739135742188, -3.814697265625e-06, -0.00145721435546875, -0.00010347366333007812, 0.0, -6.103515625e-05, -1.71661376953125e-05, -0.0017436742782592773, -0.00020229816436767578, -1.1444091796875e-05, -1.9073486328125e-06, -3.0517578125e-05, -0.0032281875610351562, 0.0, -0.005562782287597656, -8.20159912109375e-05, -0.003748655319213867, -6.16312026977539e-05, -3.933906555175781e-06, -0.0002461671829223633, 0.0, -1.4185901818564162e-05, 0.0, -7.62939453125e-06, -0.0006389617919921875, -3.814697265625e-06, -2.7298907298245467e-05, -7.152531907195225e-06, -0.00042462319834157825, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, overload=1, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -4.529302018021546, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -2.3150339126586914, 0.0, -0.0036630630493164062, -9.34600830078125e-05, -7.62939453125e-06, 0.0, -0.000125885009765625, 0.0, -0.0006945133209228516, 0.0, -1.9924345016479492, -9.5367431640625e-06, -0.000308990478515625, -0.0012631416320800781, -0.0001430511474609375, 0.0, -0.000301361083984375, -0.0006866455078125, -1.33514404296875e-05, -9.34600830078125e-05, 0.0, -1.1444091796875e-05, -0.0002117156982421875, -0.000225067138671875, -0.0008084774017333984, -8.082346903393045e-05, -0.02360657975077629, -1.8238888515043072e-05, -0.013423919677734375, -0.1475391387939453, -0.0002994537353515625, -7.05718994140625e-05, -0.0026494264602661133, -8.7738037109375e-05, 0.0, -0.001873016357421875, -5.7220458984375e-06, -0.0018253326416015625, -0.00010716915130615234, 0.0, -4.9591064453125e-05, -2.288818359375e-05, -0.0015624761581420898, -0.0001811981201171875, -9.5367431640625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.003682255744934082, 0.0, -0.005809783935546875, -0.0001049041748046875, -0.003906965255737305, -5.9723854064941406e-05, -2.0265579223632812e-06, -0.0002709627151489258, 0.0, -1.406669252901338e-05, 0.0, -7.62939453125e-06, -0.0005950927734375, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.0004243847797624767, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}, {"arg": "combo", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 6}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "combo", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "6", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -4.655322858721767, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -0.825709342956543, 0.0, -0.0006465911865234375, -0.000118255615234375, -3.814697265625e-06, 0.0, -9.930133819580078e-05, 0.0, -0.00043702125549316406, 0.0, -0.1797037124633789, -0.000606536865234375, -7.62939453125e-05, -0.1033097505569458, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001373291015625, -1.33514404296875e-05, -8.7738037109375e-05, 0.0, -1.1444091796875e-05, -0.000263214111328125, -0.0001983642578125, -0.0007799863815307617, -8.988333138404414e-05, -0.024059217423200607, -1.9311753931106068e-05, -0.01930999755859375, -0.12662029266357422, -0.0002498626708984375, -5.340576171875e-05, -0.0025293827056884766, -8.0108642578125e-05, 0.0, -0.0022125244140625, -5.7220458984375e-06, -0.0015735626220703125, -0.00010538101196289062, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -0.0015796422958374023, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0033807754516601562, 0.0, -0.005795478820800781, -9.72747802734375e-05, -0.0038232803344726562, -5.9723854064941406e-05, -2.0265579223632812e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.20662522315979004, -1.9073486328125e-05, -0.000202178955078125, -1.71661376953125e-05, -0.000110626220703125, -7.62939453125e-06, -0.0003509521484375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0004825592041015625, -0.015598773956298828, -7.581464888062328e-05, -2.687962055206299, -0.00036233128048479557, -0.04178428649902344, -0.36850547790527344, -4.9591064453125e-05, -0.0003528594970703125, -0.000553250138182193, -7.069110870361328e-05, 0.0, -0.007565498352050781, -1.9073486328125e-06, -0.000110626220703125, -0.00015735626220703125, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -0.0019305944442749023, -0.00019073486328125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0031156539916992188, 0.0, -0.004860877990722656, -5.53131103515625e-05, -0.003534078598022461, -6.175041198730469e-05, -2.0265579223632812e-06, -0.0002671480178833008, 0.0, -1.20401346066501e-05, 0.0, -7.62939453125e-06, -0.00061798095703125, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.00042450398905202746, -7.152555099310121e-07], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(6), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}, {"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 5}], "hole0": "FireElemental", "hole4": "player"}, "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "taunt", "<EOS>", 22, 111, "True", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -4.676116845595736, "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -1.7308807373046875, 0.0, -3.814697265625e-05, -0.0001087188720703125, -5.7220458984375e-06, 0.0, -0.00019073486328125, 0.0, -0.0005075931549072266, 0.0, -0.13863658905029297, -0.0005702972412109375, -7.43865966796875e-05, -0.05888473987579346, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001373291015625, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -1.1444091796875e-05, -0.0002613067626953125, -0.0001926422119140625, -0.0007634162320755422, -9.155226871371269e-05, -0.023885177448391914, -1.955016705323942e-05, -0.018445968627929688, -0.13236236572265625, -0.0002460479736328125, -5.53131103515625e-05, -0.0025446414947509766, -7.82012939453125e-05, 0.0, -0.002197265625, -5.7220458984375e-06, -0.0015544891357421875, -0.00010538101196289062, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -0.0015834569931030273, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0033540725708007812, 0.0, -0.005803108215332031, -9.5367431640625e-05, -0.0038156509399414062, -5.9723854064941406e-05, -2.0265579223632812e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.3904106616973877, -3.814697265625e-06, -0.02335357666015625, -0.0007076263427734375, -0.0007691383361816406, 0.0, -0.02263164520263672, 0.0, -0.00014841544907540083, 0.0, -7.62939453125e-05, -0.10444068908691406, -3.814697265625e-06, -5.745875751017593e-05, -2.5152889065793715e-05, -0.0006750813336111605, -6.31808916295995e-06], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            taunt=True)\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}], "gold_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -0.016223872884829404, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -0.010007858276367188, -0.0007991790771484375, -5.7220458984375e-06, -0.00028705596923828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.785724639892578e-05, -7.271740287251305e-06, -1.9073486328125e-06, -0.0003986358642578125, -2.288818359375e-05, -0.00029530725441873074, -0.00011538857506820932, -3.24249267578125e-05, -2.09808349609375e-05, -0.00042482433491386473, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.276888699270785e-05, 0.0, -7.62939453125e-06, -0.000125885009765625, -0.0001010894775390625, -2.6106754376087338e-05, -1.311301275563892e-06, -5.37621344847139e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "<UNK>"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "<UNK>", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -5.094596944056029, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -4.612445831298828, -0.0876626968383789, -0.0001583099365234375, -0.3855733871459961, -1.9073486328125e-06, -4.38690185546875e-05, -0.0005817413330078125, -0.0018680087523534894, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001010894775390625, -0.0005348920822143555, -3.290122185717337e-05, -1.52587890625e-05, -0.000186920166015625, -2.288818359375e-05, -0.00019883786444552243, -0.00029380994965322316, -5.340576171875e-05, -3.4332275390625e-05, -0.0010453704744577408, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.181522359023802e-05, 0.0, -7.62939453125e-06, -0.0001354217529296875, -0.0001087188720703125, -2.4437842512270436e-05, -1.1920922133867862e-06, -5.280862023937516e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -6.635781076954736, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -4.612445831298828, -0.0876626968383789, -0.0001583099365234375, -1.9286537170410156, -3.814697265625e-06, -1.33514404296875e-05, -0.0002288818359375, -0.0008362531079910696, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -4.9591064453125e-05, -0.0003390312194824219, -3.504691630951129e-05, -1.52587890625e-05, -0.00025177001953125, -2.09808349609375e-05, -0.00022864100174047053, -0.0002498333342373371, -5.340576171875e-05, -3.4332275390625e-05, -0.0007506179390475154, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.205364035035018e-05, 0.0, -7.62939453125e-06, -0.00012969970703125, -0.0001068115234375, -2.5033881684066728e-05, -1.1920922133867862e-06, -5.257023440208286e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -6.712215783827951, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -6.701590538024902, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.00023281574249267578, 0.0, -7.665157318115234e-05, 0.0, -0.0057010650634765625, -0.00074005126953125, -3.814697265625e-06, -0.00025653839111328125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -9.167194366455078e-05, -7.271740287251305e-06, -3.814697265625e-06, -0.000377655029296875, -2.09808349609375e-05, -0.0002638725854922086, -0.00012206332030473277, -3.24249267578125e-05, -2.09808349609375e-05, -0.0004150507738813758, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.2649677703157067e-05, 0.0, -7.62939453125e-06, -0.0001277923583984375, -0.0001010894775390625, -2.6106754376087338e-05, -1.311301275563892e-06, -5.376212720875628e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DRAGON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "DRAGON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -6.820726216017128, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -4.612445831298828, -0.0876626968383789, -0.0001583099365234375, -2.1135363578796387, 0.0, -0.0001010894775390625, -7.43865966796875e-05, -0.0011417865753173828, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00018537044525146484, -2.2291887944447808e-05, -7.62939453125e-06, -0.0003814697265625, -2.09808349609375e-05, -0.00020396470790728927, -0.0002106222091242671, -4.1961669921875e-05, -4.00543212890625e-05, -0.0007175011560320854, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -2.2888094463269226e-05, 0.0, -7.62939453125e-06, -0.0001239776611328125, -0.0001125335693359375, -2.5272298444178887e-05, -1.311301275563892e-06, -5.268942913971841e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -8.082445410470136, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -4.612445831298828, -2.509805679321289, -9.5367431640625e-06, -0.08995723724365234, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00019693374633789062, -7.271740287251305e-06, -1.9073486328125e-06, -0.0004482269287109375, -1.9073486328125e-05, -0.00024304652470164, -0.00014018133515492082, -3.814697265625e-05, -2.09808349609375e-05, -0.0004386447835713625, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -0.7281700372695923, -2.384185791015625e-06, -0.0002593994140625, -7.62939453125e-06, -0.13656818866729736, -2.872943878173828e-05, -2.288818359375e-05, -5.7220458984375e-06, 0.0, -4.518031710176729e-05, 0.0, -7.62939453125e-06, -4.1961669921875e-05, -3.0517578125e-05, -2.0742372726090252e-05, -1.1920922133867862e-06, -5.3881660278420895e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector(\n            )), players=BothPlayer())\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "MinionSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Minion", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -8.222990992657166, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -0.010007858276367188, -0.0007991790771484375, -5.7220458984375e-06, -0.00028705596923828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.785724639892578e-05, -7.271740287251305e-06, -1.9073486328125e-06, -0.0003986358642578125, -2.288818359375e-05, -0.00029530725441873074, -0.00011538857506820932, -3.24249267578125e-05, -2.09808349609375e-05, -8.203372955322266, -0.0038318634033203125, 0.0, -1.1444091796875e-05, 0.0, -4.43455355707556e-05, 0.0, -5.7220458984375e-06, -9.1552734375e-05, -0.0001068115234375, -2.6464374968782067e-05, -1.6689286894688848e-06, -5.280868572299369e-05, -4.768370445162873e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "BEAST", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -8.271264855594772, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -4.612445831298828, -0.0876626968383789, -0.0001583099365234375, -3.547762870788574, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -0.017482519149780273, -1.9073486328125e-06, -1.52587890625e-05, -1.52587890625e-05, -9.5367431640625e-06, -2.86102294921875e-05, -0.00040161609649658203, -2.3364747903542593e-05, -3.814697265625e-06, -0.0001888275146484375, -1.9073486328125e-05, -0.0002579660213086754, -0.0002304067456861958, -5.14984130859375e-05, -4.00543212890625e-05, -0.0007001056219451129, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.19344328797888e-05, 0.0, -7.62939453125e-06, -0.0001392364501953125, -0.0001087188720703125, -2.5391505914740264e-05, -1.311301275563892e-06, -5.257023440208286e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -8.31408636822453, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -4.612445831298828, -2.509805679321289, -9.5367431640625e-06, -0.08995723724365234, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00019693374633789062, -7.271740287251305e-06, -1.9073486328125e-06, -0.0004482269287109375, -1.9073486328125e-05, -0.00024304652470164, -0.00014018133515492082, -3.814697265625e-05, -2.09808349609375e-05, -0.0004386447835713625, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -1.0892387628555298, -2.0265579223632812e-06, -1.9073486328125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -2.288818359375e-05, -0.005479097366333008, -0.0002623452164698392, -2.47955322265625e-05, -0.0001964569091796875, -8.0108642578125e-05, -0.0003232922754250467, -0.00029059380176477134, -0.0002422332763671875, -5.7220458984375e-06, -0.00035963417030870914, -1.9073486328125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.2411262762034312e-05, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -9.5367431640625e-05, -2.7418038371251896e-05, -1.0728830375228426e-06, -4.386826549307443e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector(\n            )), battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -8.600734331220735, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -8.583447456359863, -0.003144383430480957, -0.0004177093505859375, -1.9073486328125e-06, 0.0, -0.00020372966537252069, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001125335693359375, -9.655952453613281e-06, -0.000988006591796875, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.092952728271484e-05, 0.0, -7.295608520507812e-05, 0.0, -0.008235931396484375, -0.000652313232421875, -5.7220458984375e-06, -0.00027382373809814453, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -9.167194366455078e-05, -7.152531907195225e-06, -1.9073486328125e-06, -0.0004024505615234375, -2.288818359375e-05, -0.00028315704548731446, -0.00011407741840230301, -3.24249267578125e-05, -2.09808349609375e-05, -0.00040909191011451185, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.2649677703157067e-05, 0.0, -7.62939453125e-06, -0.000125885009765625, -0.0001010894775390625, -2.6106754376087338e-05, -1.311301275563892e-06, -5.376212720875628e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor Inventor', 4, CHARACTER_CLASS.\n            ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Draw(),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "Gnomish<UNK>", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -8.662401776255528, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -8.646355628967285, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -0.010007858276367188, -0.0007991790771484375, -5.7220458984375e-06, -0.00028705596923828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.785724639892578e-05, -7.271740287251305e-06, -1.9073486328125e-06, -0.0003986358642578125, -2.288818359375e-05, -0.00029530725441873074, -0.00011538857506820932, -3.24249267578125e-05, -2.09808349609375e-05, -0.00042482433491386473, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.276888699270785e-05, 0.0, -7.62939453125e-06, -0.000125885009765625, -0.0001010894775390625, -2.6106754376087338e-05, -1.311301275563892e-06, -5.37621344847139e-05, -3.576278118089249e-07], "inferred_code": "class Gnomish<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -8.805654969174498, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -8.79072380065918, -3.576278118089249e-07, 0.0, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -2.0265579223632812e-06, -0.0011692047119140625, 0.0, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -6.341934204101562e-05, 0.0, -6.902217864990234e-05, 0.0, -0.009143829345703125, -0.0008087158203125, -5.7220458984375e-06, -0.00030982494354248047, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.785724639892578e-05, -6.9141146923357155e-06, -1.9073486328125e-06, -0.0003986358642578125, -2.09808349609375e-05, -0.00029447287670336664, -0.00011515018559293821, -3.24249267578125e-05, -2.09808349609375e-05, -0.0004201769479550421, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.276888699270785e-05, 0.0, -7.62939453125e-06, -0.0001277923583984375, -0.0001010894775390625, -2.6106754376087338e-05, -1.311301275563892e-06, -5.37621344847139e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 4, "hole2": "deathrattle"}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -9.262051552700754, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -0.010007858276367188, -0.0007991790771484375, -5.7220458984375e-06, -0.00028705596923828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.785724639892578e-05, -7.271740287251305e-06, -1.9073486328125e-06, -0.0003986358642578125, -2.288818359375e-05, -0.00029530725441873074, -0.00011538857506820932, -3.24249267578125e-05, -2.09808349609375e-05, -0.00042482433491386473, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.276888699270785e-05, 0.0, -7.62939453125e-06, -8.99773120880127, -0.0001506805419921875, -0.00011897004151251167, -4.31528314948082e-05, -0.0008036637445911765, -1.1920928244535389e-07, -0.22732794284820557, 0.0, -0.0023746490478515625, -9.5367431640625e-05, -5.7220458984375e-06, -5.91278076171875e-05, -0.012335896492004395, -7.152555099310121e-07, -3.814697265625e-06, -0.0007724761962890625, -0.00025177001953125, -0.0038642198778688908, -2.1696037947549485e-05, -7.05718994140625e-05, -9.5367431640625e-06, -9.107585356105119e-05, -3.814697265625e-06, 0.0], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, deathrattle=Deathrattle(Draw(), PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MURLOC"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MURLOC", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -9.31633159478536, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -4.612445831298828, -0.0876626968383789, -0.0001583099365234375, -4.609438419342041, -5.7220458984375e-06, -4.76837158203125e-05, -5.7220458984375e-05, -0.001021742820739746, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-05, -9.5367431640625e-06, -3.24249267578125e-05, -0.00023496150970458984, -2.276871418871451e-05, -7.62939453125e-06, -0.000255584716796875, -2.09808349609375e-05, -0.00020992491045035422, -0.00022158717911224812, -4.38690185546875e-05, -3.62396240234375e-05, -0.0006475570844486356, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.2530472051585093e-05, 0.0, -7.62939453125e-06, -0.0001239776611328125, -0.000110626220703125, -2.5510715204291046e-05, -1.311301275563892e-06, -5.268942913971841e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "card"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}], "hole0": "GnomishInventor", "hole4": "player"}, "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "card", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -9.362810441782749, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -0.010007858276367188, -0.0007991790771484375, -5.7220458984375e-06, -0.00028705596923828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.785724639892578e-05, -7.271740287251305e-06, -1.9073486328125e-06, -0.0003986358642578125, -2.288818359375e-05, -9.305987358093262, -0.030363965779542923, -4.57763671875e-05, -3.0517578125e-05, -0.011006511747837067, -3.933906555175781e-06, 0.0, -1.1444091796875e-05, 0.0, -2.503383075236343e-05, 0.0, -5.7220458984375e-06, -0.00014495849609375, -9.5367431640625e-05, -2.491467421350535e-05, -1.1920922133867862e-06, -8.261043694801629e-05, -3.576278118089249e-07], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(card(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}], "gold_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -1.0355431417340455, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -0.5507745742797852, 0.0, -0.000738978385925293, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -8.7738037109375e-05, -0.00010609625314828008, -2.5272369384765625e-05, -0.050177574157714844, -0.0005283355712890625, -5.7220458984375e-06, -3.62396240234375e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.33514404296875e-05, -3.933906555175781e-06, -5.7220458984375e-06, 0.0, 0.0, -1.2278556823730469e-05, 0.0, -0.000469207763671875, -0.000202178955078125, -0.000949859619140625, -0.0001125335693359375, -5.14984130859375e-05, 0.0, -0.000408172607421875, 0.0, -0.0010577378561720252, -2.503394853192731e-06, -0.0106886625289917, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001697540283203125, -1.9073486328125e-06, -0.15288551151752472, -1.9073486328125e-06, -0.0002117156982421875, -0.0004482269287109375, -0.0006246566772460938, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.1920928244535389e-07, -0.003549316432327032, -2.9802317840221804e-06, -0.22354555130004883, 0.0, -3.0517578125e-05, -0.0008678436279296875, -5.7220458984375e-06, -0.03494875878095627, -1.3470649719238281e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "SHAMAN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -2.2328289704962785, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -1.7450628280639648, 0.0, -0.0007840394973754883, 0.0, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -6.67572021484375e-05, -8.344648813363165e-05, -2.9087066650390625e-05, -0.03936290740966797, -0.00045013427734375, -3.814697265625e-06, -4.1961669921875e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.52587890625e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.0010395050048828125, -0.0003719329833984375, -0.00135040283203125, -0.00011444091796875, -4.38690185546875e-05, 0.0, -0.0002079010009765625, 0.0, -0.000888459850102663, -2.741813204920618e-06, -0.01073920726776123, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.15796150267124176, -1.9073486328125e-06, -0.00020599365234375, -0.000469207763671875, -0.0005788803100585938, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.103515625e-05, -1.1920928244535389e-07, -0.003605462610721588, -3.099440846199286e-06, -0.23280692100524902, 0.0, -3.0517578125e-05, -0.000942230224609375, -7.62939453125e-06, -0.033613137900829315, -1.1563301086425781e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -2.455271493032363, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -1.9703788757324219, 0.0, -0.0006985664367675781, 0.0, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0001201629638671875, -5.948542820988223e-05, -4.2319297790527344e-05, -0.03471183776855469, -0.0004596710205078125, -3.814697265625e-06, -4.00543212890625e-05, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.52587890625e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.001178741455078125, -0.0004138946533203125, -0.001506805419921875, -0.0001163482666015625, -4.38690185546875e-05, 0.0, -0.0002040863037109375, 0.0, -0.0008770156418904662, -2.622604142743512e-06, -0.010722041130065918, -1.9073486328125e-06, -9.5367431640625e-06, -0.00014495849609375, -3.814697265625e-06, -0.1567646563053131, -1.9073486328125e-06, -0.0002079010009765625, -0.0004730224609375, -0.0005664825439453125, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.91278076171875e-05, -1.1920928244535389e-07, -0.003558613359928131, -3.099440846199286e-06, -0.23555457592010498, 0.0, -3.0517578125e-05, -0.00098419189453125, -7.62939453125e-06, -0.033564381301403046, -1.3470649719238281e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "increase_armor", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -2.481055225093108, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -0.5507745742797852, 0.0, -0.000738978385925293, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -8.7738037109375e-05, -0.00010609625314828008, -2.5272369384765625e-05, -0.050177574157714844, -0.0005283355712890625, -5.7220458984375e-06, -3.62396240234375e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.33514404296875e-05, -3.933906555175781e-06, -5.7220458984375e-06, 0.0, 0.0, -1.2278556823730469e-05, 0.0, -0.000469207763671875, -0.000202178955078125, -0.000949859619140625, -0.0001125335693359375, -5.14984130859375e-05, 0.0, -0.000408172607421875, 0.0, -0.0010577378561720252, -2.503394853192731e-06, -0.0106886625289917, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001697540283203125, -1.9073486328125e-06, -0.15288551151752472, -1.9073486328125e-06, -0.0002117156982421875, -0.0004482269287109375, -0.0006246566772460938, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.1920928244535389e-07, -0.003549316432327032, -2.9802317840221804e-06, -1.6866278648376465, -9.655952453613281e-06, -6.29425048828125e-05, -0.00272369384765625, -1.71661376953125e-05, -0.015455801971256733, -2.682209014892578e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -3.089384204788331, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -0.5507745742797852, 0.0, -0.000738978385925293, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -8.7738037109375e-05, -0.00010609625314828008, -2.5272369384765625e-05, -0.050177574157714844, -0.0005283355712890625, -5.7220458984375e-06, -3.62396240234375e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.33514404296875e-05, -3.933906555175781e-06, -5.7220458984375e-06, 0.0, 0.0, -1.2278556823730469e-05, 0.0, -0.000469207763671875, -0.000202178955078125, -0.000949859619140625, -0.0001125335693359375, -5.14984130859375e-05, 0.0, -0.000408172607421875, 0.0, -0.0010577378561720252, -2.503394853192731e-06, -0.0106886625289917, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001697540283203125, -1.9073486328125e-06, -1.9788907766342163, -3.24249267578125e-05, -0.015999794006347656, -0.00022125244140625, -0.00153350830078125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00321660446934402, -2.741813204920618e-06, -0.42205989360809326, 0.0, -3.0517578125e-05, -0.000553131103515625, -5.7220458984375e-06, -0.04846329987049103, -9.655952453613281e-06], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "SHAMAN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "increase_armor", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -3.6348212263181026, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -1.7450628280639648, 0.0, -0.0007840394973754883, 0.0, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -6.67572021484375e-05, -8.344648813363165e-05, -2.9087066650390625e-05, -0.03936290740966797, -0.00045013427734375, -3.814697265625e-06, -4.1961669921875e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.52587890625e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.0010395050048828125, -0.0003719329833984375, -0.00135040283203125, -0.00011444091796875, -4.38690185546875e-05, 0.0, -0.0002079010009765625, 0.0, -0.000888459850102663, -2.741813204920618e-06, -0.01073920726776123, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.15796150267124176, -1.9073486328125e-06, -0.00020599365234375, -0.000469207763671875, -0.0005788803100585938, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.103515625e-05, -1.1920928244535389e-07, -0.003605462610721588, -3.099440846199286e-06, -1.6509711742401123, -1.1563301086425781e-05, -6.29425048828125e-05, -0.003002166748046875, -1.71661376953125e-05, -0.015312420204281807, -2.682209014892578e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "increase_armor", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -3.7747038929594794, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -0.5507745742797852, 0.0, -0.000738978385925293, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -8.7738037109375e-05, -0.00010609625314828008, -2.5272369384765625e-05, -0.050177574157714844, -0.0005283355712890625, -5.7220458984375e-06, -3.62396240234375e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.33514404296875e-05, -3.933906555175781e-06, -5.7220458984375e-06, 0.0, 0.0, -1.2278556823730469e-05, 0.0, -0.000469207763671875, -0.000202178955078125, -0.000949859619140625, -0.0001125335693359375, -5.14984130859375e-05, 0.0, -0.000408172607421875, 0.0, -0.0010577378561720252, -2.503394853192731e-06, -0.0106886625289917, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001697540283203125, -1.9073486328125e-06, -1.9788907766342163, -3.24249267578125e-05, -0.015999794006347656, -0.00022125244140625, -0.00153350830078125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00321660446934402, -2.741813204920618e-06, -1.1346482038497925, -1.1563301086425781e-05, -7.82012939453125e-05, -0.0020580291748046875, -2.288818359375e-05, -0.01960001513361931, -2.300739288330078e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.increase_armor(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "increase_armor", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -3.844413447513965, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -1.9703788757324219, 0.0, -0.0006985664367675781, 0.0, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0001201629638671875, -5.948542820988223e-05, -4.2319297790527344e-05, -0.03471183776855469, -0.0004596710205078125, -3.814697265625e-06, -4.00543212890625e-05, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.52587890625e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.001178741455078125, -0.0004138946533203125, -0.001506805419921875, -0.0001163482666015625, -4.38690185546875e-05, 0.0, -0.0002040863037109375, 0.0, -0.0008770156418904662, -2.622604142743512e-06, -0.010722041130065918, -1.9073486328125e-06, -9.5367431640625e-06, -0.00014495849609375, -3.814697265625e-06, -0.1567646563053131, -1.9073486328125e-06, -0.0002079010009765625, -0.0004730224609375, -0.0005664825439453125, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.91278076171875e-05, -1.1920928244535389e-07, -0.003558613359928131, -3.099440846199286e-06, -1.6405857801437378, -1.1563301086425781e-05, -6.4849853515625e-05, -0.003154754638671875, -1.9073486328125e-05, -0.01543387770652771, -2.682209014892578e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.1241506743388285, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -3.638925552368164, 0.0, -0.00045037269592285156, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -8.96453857421875e-05, -8.833406172925606e-05, -2.7179718017578125e-05, -0.04052162170410156, -0.000446319580078125, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.33514404296875e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.0009555816650390625, -0.0003509521484375, -0.0012798309326171875, -0.00011444091796875, -4.38690185546875e-05, 0.0, -0.000209808349609375, 0.0, -0.0008965659071691334, -2.741813204920618e-06, -0.01071155071258545, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.1576797366142273, -1.9073486328125e-06, -0.0002079010009765625, -0.00046539306640625, -0.0005817413330078125, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.29425048828125e-05, -1.1920928244535389e-07, -0.0035924690309911966, -3.099440846199286e-06, -0.23012125492095947, 0.0, -3.0517578125e-05, -0.00091552734375, -7.62939453125e-06, -0.033430032432079315, -1.1563301086425781e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "SHAMAN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.26768459073358, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -1.7450628280639648, 0.0, -0.0007840394973754883, 0.0, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -6.67572021484375e-05, -8.344648813363165e-05, -2.9087066650390625e-05, -0.03936290740966797, -0.00045013427734375, -3.814697265625e-06, -4.1961669921875e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.52587890625e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.0010395050048828125, -0.0003719329833984375, -0.00135040283203125, -0.00011444091796875, -4.38690185546875e-05, 0.0, -0.0002079010009765625, 0.0, -0.000888459850102663, -2.741813204920618e-06, -0.01073920726776123, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001468658447265625, -1.9073486328125e-06, -1.9487335681915283, -3.0517578125e-05, -0.014687538146972656, -0.000232696533203125, -0.0014276504516601562, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.003325083525851369, -2.861022494471399e-06, -0.4486818313598633, 0.0, -3.24249267578125e-05, -0.000606536865234375, -5.7220458984375e-06, -0.047353945672512054, -9.655952453613281e-06], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "FREE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.407235887447328, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -3.9181036949157715, -1.1920928244535389e-07, -0.0004540681838989258, 0.0, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -9.918212890625e-05, -8.141993021126837e-05, -2.5272369384765625e-05, -0.04702472686767578, -0.0004673004150390625, -5.7220458984375e-06, -3.814697265625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.33514404296875e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.2040138244628906e-05, 0.0, -0.0007915496826171875, -0.0002899169921875, -0.00121307373046875, -0.0001163482666015625, -4.57763671875e-05, 0.0, -0.00025177001953125, 0.0, -0.000933402101509273, -2.622604142743512e-06, -0.010756373405456543, -1.9073486328125e-06, -9.5367431640625e-06, -0.000152587890625, -1.9073486328125e-06, -0.15670792758464813, -1.9073486328125e-06, -0.000209808349609375, -0.000461578369140625, -0.0005865097045898438, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -0.003574945731088519, -3.099440846199286e-06, -0.22821009159088135, 0.0, -3.0517578125e-05, -0.000911712646484375, -7.62939453125e-06, -0.033857159316539764, -1.3470649719238281e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.FREE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 3}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "3", "<EOS>"], "score": -4.424424057673853, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -0.5507745742797852, 0.0, -0.000738978385925293, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -8.7738037109375e-05, -0.00010609625314828008, -2.5272369384765625e-05, -0.050177574157714844, -0.0005283355712890625, -5.7220458984375e-06, -3.62396240234375e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.33514404296875e-05, -3.933906555175781e-06, -5.7220458984375e-06, 0.0, 0.0, -1.2278556823730469e-05, 0.0, -0.000469207763671875, -0.000202178955078125, -0.000949859619140625, -0.0001125335693359375, -5.14984130859375e-05, 0.0, -0.000408172607421875, 0.0, -0.0010577378561720252, -2.503394853192731e-06, -0.0106886625289917, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001697540283203125, -1.9073486328125e-06, -0.15288551151752472, -1.9073486328125e-06, -0.0002117156982421875, -0.0004482269287109375, -0.0006246566772460938, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.1920928244535389e-07, -0.003549316432327032, -2.9802317840221804e-06, -0.22354555130004883, 0.0, -3.0517578125e-05, -0.0008678436279296875, -5.7220458984375e-06, -3.423757314682007, -8.58306884765625e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(3)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.507398736285069, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -1.9703788757324219, 0.0, -0.0006985664367675781, 0.0, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0001201629638671875, -5.948542820988223e-05, -4.2319297790527344e-05, -0.03471183776855469, -0.0004596710205078125, -3.814697265625e-06, -4.00543212890625e-05, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.52587890625e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.001178741455078125, -0.0004138946533203125, -0.001506805419921875, -0.0001163482666015625, -4.38690185546875e-05, 0.0, -0.0002040863037109375, 0.0, -0.0008770156418904662, -2.622604142743512e-06, -0.010722041130065918, -1.9073486328125e-06, -9.5367431640625e-06, -0.00014495849609375, -3.814697265625e-06, -1.9557926654815674, -3.0517578125e-05, -0.014664649963378906, -0.000232696533203125, -0.0013990402221679688, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0033323552925139666, -2.861022494471399e-06, -0.46003830432891846, 0.0, -3.24249267578125e-05, -0.0006237030029296875, -7.62939453125e-06, -0.0477275475859642, -9.655952453613281e-06], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.change_temp_attack(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "SHAMAN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "increase_armor", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.880430669254594, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -1.7450628280639648, 0.0, -0.0007840394973754883, 0.0, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -6.67572021484375e-05, -8.344648813363165e-05, -2.9087066650390625e-05, -0.03936290740966797, -0.00045013427734375, -3.814697265625e-06, -4.1961669921875e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.52587890625e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.0010395050048828125, -0.0003719329833984375, -0.00135040283203125, -0.00011444091796875, -4.38690185546875e-05, 0.0, -0.0002079010009765625, 0.0, -0.000888459850102663, -2.741813204920618e-06, -0.01073920726776123, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001468658447265625, -1.9073486328125e-06, -1.9487335681915283, -3.0517578125e-05, -0.014687538146972656, -0.000232696533203125, -0.0014276504516601562, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.003325083525851369, -2.861022494471399e-06, -1.0872316360473633, -1.1563301086425781e-05, -8.20159912109375e-05, -0.002246856689453125, -2.47955322265625e-05, -0.0198163203895092, -2.300739288330078e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.increase_armor(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Heroic Strike", "hole1": 2, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "HeroicStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "hole1": "increase_armor", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -5.0891640229095, "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -1.9703788757324219, 0.0, -0.0006985664367675781, 0.0, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0001201629638671875, -5.948542820988223e-05, -4.2319297790527344e-05, -0.03471183776855469, -0.0004596710205078125, -3.814697265625e-06, -4.00543212890625e-05, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.52587890625e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.001178741455078125, -0.0004138946533203125, -0.001506805419921875, -0.0001163482666015625, -4.38690185546875e-05, 0.0, -0.0002040863037109375, 0.0, -0.0008770156418904662, -2.622604142743512e-06, -0.010722041130065918, -1.9073486328125e-06, -9.5367431640625e-06, -0.00014495849609375, -3.814697265625e-06, -1.9557926654815674, -3.0517578125e-05, -0.014664649963378906, -0.000232696533203125, -0.0013990402221679688, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0033323552925139666, -2.861022494471399e-06, -1.0677071809768677, -1.1563301086425781e-05, -8.20159912109375e-05, -0.002307891845703125, -2.47955322265625e-05, -0.020048096776008606, -2.300739288330078e-05], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.increase_armor(2)\n"}], "gold_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "taunt"}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.2925686222919168, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -0.01367044448852539, 0.0, -0.06959676742553711, 0.0, 0.0, -8.392333984375e-05, -4.1961669921875e-05, -1.1920932365683257e-06, -2.6225747205899097e-05, -4.77550202049315e-06, -1.9073468138230965e-06, -0.11812245845794678, 0.0, -2.288818359375e-05, -1.52587890625e-05, -9.5367431640625e-06, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "charge"}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -2.694419561088857, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -0.01367044448852539, 0.0, -0.06959676742553711, 0.0, 0.0, -8.392333984375e-05, -4.1961669921875e-05, -1.1920932365683257e-06, -2.6225747205899097e-05, -4.77550202049315e-06, -1.9073468138230965e-06, -2.519965410232544, -3.576278118089249e-07, -2.288818359375e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "taunt"}], "hole0": "IronbarkProtector", "hole4": "_"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.009592109818861, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -0.01367044448852539, 0.0, -2.7824559211730957, -1.9073486328125e-06, 0.0, -0.0014133453369140625, -4.76837158203125e-05, -2.145766984540387e-06, -0.0001180104591185227, -9.18835576158017e-06, -2.3841830625315197e-06, -0.120827317237854, 0.0, -4.1961669921875e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(8, 8, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Ironbark Protector"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "taunt"}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Ironbark", " ", "Protector", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.2935599795653587, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.495929718017578, -0.08634567260742188, -1.9073486328125e-06, 0.0, -5.483620952873025e-06, 0.0, -8.10622896096902e-06, 0.0, -0.0124664306640625, -9.5367431640625e-06, -7.62939453125e-06, -5.960462772236497e-07, -9.965896606445312e-05, -5.245207830739673e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -2.6492722099646926e-05, -1.0490362910786644e-05, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.340576171875e-05, -2.3126602172851562e-05, -0.0004949374706484377, -0.0003186464018654078, -1.1920928244535389e-07, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.2993786185688805e-05, -1.1920928244535389e-07, -0.00010347350325901061, 0.0, -3.814697265625e-06, -0.11598396301269531, -1.33514404296875e-05, -0.563409686088562, 0.0, -5.841255187988281e-06, 0.0, -0.00014019012451171875, 0.0, -1.9073486328125e-06, -0.0002346038818359375, -3.62396240234375e-05, -7.510190698667429e-06, -0.00011681871546898037, -1.323223204963142e-05, -1.1801649634435307e-05, -0.01658022403717041, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "divine_shield"}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.8855345827945413, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -0.01367044448852539, 0.0, -0.06959676742553711, 0.0, 0.0, -8.392333984375e-05, -4.1961669921875e-05, -1.1920932365683257e-06, -2.6225747205899097e-05, -4.77550202049315e-06, -1.9073468138230965e-06, -3.7110788822174072, 0.0, -2.86102294921875e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Ironbark Protector"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "taunt"}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Ironbark", " ", "Protector", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.908166711692772, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.495929718017578, -0.08634567260742188, -1.9073486328125e-06, 0.0, -5.483620952873025e-06, 0.0, -8.10622896096902e-06, 0.0, -0.0124664306640625, -9.5367431640625e-06, -7.62939453125e-06, -5.960462772236497e-07, -9.965896606445312e-05, -5.245207830739673e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -2.6492722099646926e-05, -1.0490362910786644e-05, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.340576171875e-05, -2.3126602172851562e-05, -0.0004949374706484377, -0.0003186464018654078, -1.1920928244535389e-07, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.2993786185688805e-05, -1.1920928244535389e-07, -0.00010347350325901061, 0.0, -3.814697265625e-06, -0.11598396301269531, -1.33514404296875e-05, -2.1804730892181396, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.00046014782856218517, 0.0, -1.9073486328125e-06, -0.0003299713134765625, -5.53131103515625e-05, -3.933907919417834e-06, -0.00016080100613180548, -1.370912286802195e-05, -1.5258672647178173e-05, -0.013639092445373535, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "charge"}], "hole0": "IronbarkProtector", "hole4": "_"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.256171995301308, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -0.01367044448852539, 0.0, -2.7824559211730957, -1.9073486328125e-06, 0.0, -0.0014133453369140625, -4.76837158203125e-05, -2.145766984540387e-06, -0.0001180104591185227, -9.18835576158017e-06, -2.3841830625315197e-06, -2.367379665374756, -8.344646857949556e-07, -5.7220458984375e-05, -3.4332275390625e-05, -7.62939453125e-06, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(8, 8, charge=True)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"_type": "Template14", "hole0": "Minion", "hole1": 8, "hole2": 8}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>"], "score": -5.352580300477477, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -4.33097505569458, 0.0, -0.09516441822052002, 0.0, 0.0, -0.33110618591308594, -0.5019111633300781, -0.002423405647277832, -1.9073486328125e-06, -1.7881470739666838e-06, -1.0728830375228426e-06, -2.3543951101601124e-05, -4.768370445162873e-07], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Minion(8, 8)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "windfury"}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.903629837692613, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -0.01367044448852539, 0.0, -0.06959676742553711, 0.0, 0.0, -8.392333984375e-05, -4.1961669921875e-05, -1.1920932365683257e-06, -2.6225747205899097e-05, -4.77550202049315e-06, -1.9073468138230965e-06, -5.7291741371154785, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, windfury=True)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "taunt"}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.060043030904801, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -4.33097505569458, 0.0, -0.09516441822052002, 0.0, 0.0, -1.2730388641357422, -0.00019073486328125, -2.2649762740911683e-06, -3.6596713471226394e-05, -4.29460487794131e-06, -2.9802276912960224e-06, -0.2695878744125366, 0.0, -3.0517578125e-05, -2.6702880859375e-05, -1.1444091796875e-05, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Minion(8, 8, taunt=True)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"hole3": [{"arg": "windfury", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "_type": "Template14", "hole0": "Minion", "hole1": 8, "hole2": 8}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 133, "Minion", "<EOS>", "8", "<EOS>", "8", "<EOS>", 176, 53, 159, "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.542004889320189, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -4.33097505569458, 0.0, -0.09516441822052002, 0.0, 0.0, -0.33110618591308594, -0.9454059600830078, -7.033347174001392e-06, -0.00018990039825439453, -2.7418182071414776e-06, -8.999896090244874e-05, -1.3787939678877592e-07, -7.748573807475623e-06, -0.08932018280029297, -9.34600830078125e-05, 0.0, -0.6335338354110718, 0.0, -0.025058746337890625, -1.52587890625e-05, -6.29425048828125e-05, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Minion(8, 8, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "taunt"}], "hole0": "IronbarkProtector", "hole4": "p"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.820050889958779, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -0.01367044448852539, 0.0, -6.636716842651367, 0.0, 0.0, -0.0002460479736328125, -8.7738037109375e-05, -2.1457672119140625e-06, -4.398734381538816e-05, -4.414934664964676e-06, -2.0265558760002023e-06, -0.07822000980377197, -1.1920928244535389e-07, -4.38690185546875e-05, -3.4332275390625e-05, -7.62939453125e-06, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(8, 8, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "DRUID"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "taunt"}], "hole0": "IronbarkProtector", "hole4": "MinionCard"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "Minion", "Card", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.882921743032725, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -0.01367044448852539, 0.0, -6.057540416717529, -0.1573505401611328, 0.0, -1.9073486328125e-06, -0.0002689361572265625, -2.47955322265625e-05, -1.4305117019830504e-06, -0.00016401945322286338, -5.3732364904135466e-06, -4.529942543740617e-06, -0.5627596378326416, -1.1920928244535389e-07, -7.82012939453125e-05, -7.43865966796875e-05, -5.7220458984375e-06, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, MinionCard):\n        return Minion(8, 8, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Ironbark Protector", "hole1": 8, "hole2": "PALADIN"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 8, "hole1": 8, "hole2": "taunt"}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.006621160757376, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -6.796647548675537, -3.814697265625e-06, -0.0004498915222939104, 0.0, -0.009390115737915039, 0.0, -0.016936421394348145, 0.0, 0.0, -8.20159912109375e-05, -8.20159912109375e-05, -1.311302526119107e-06, -3.09939932776615e-05, -2.2670719772577286e-06, -2.0265558760002023e-06, -0.09560178220272064, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "choices", "_type": "keyword", "value": {"_type": "Template18", "hole0": "Choice", "hole1": [{"_type": "Template19", "hole0": "Increase<UNK>"}, {"_type": "Template15", "hole0": "Heal", "hole1": 8}, {"_type": "Template19", "hole0": "HeroSelector"}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Choice", "hole1": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Template15", "hole0": "Draw", "hole1": 0}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Ironbark Protector"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 8, "hole1": 8}], "hole0": "IronbarkProtector", "hole4": "player"}, "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Ironbark", " ", "Protector", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "choices", "<EOS>", 28, 142, "Choice", "<EOS>", 171, 50, 146, "Increase", "<UNK>", "<EOS>", 47, 134, "Heal", "<EOS>", "8", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>", 169, 49, 145, "Choice", "<EOS>", 171, 50, 146, "<UNK>", "<EOS>", 47, 134, "Draw", "<EOS>", "0", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "8", "<EOS>", "8", "<EOS>"], "score": -8.802455856955746, "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.495929718017578, -0.08634567260742188, -1.9073486328125e-06, 0.0, -5.483620952873025e-06, 0.0, -8.10622896096902e-06, 0.0, -0.0124664306640625, -9.5367431640625e-06, -7.62939453125e-06, -5.960462772236497e-07, -9.965896606445312e-05, -5.245207830739673e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -2.6492722099646926e-05, -1.0490362910786644e-05, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.340576171875e-05, -2.3126602172851562e-05, -0.0004949374706484377, -0.0003186464018654078, -1.1920928244535389e-07, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.2993786185688805e-05, -1.1920928244535389e-07, -0.00010347350325901061, 0.0, -3.814697265625e-06, -2.213761329650879, -2.6702880859375e-05, -0.008855819702148438, -1.71661376953125e-05, -0.0007038116455078125, -0.015026092529296875, -0.0017528533935546875, -2.288818359375e-05, -3.4332275390625e-05, -0.00017547607421875, -9.72747802734375e-05, -0.2290460467338562, -0.10434621572494507, -0.0026749372482299805, -0.2794342041015625, -4.38690185546875e-05, -0.12885120511054993, -8.916833758121356e-05, -0.016364188864827156, -2.384185791015625e-06, -0.007836341857910156, -5.340576171875e-05, -0.040667057037353516, -5.340576171875e-05, 0.0, -3.0517578125e-05, -5.14984130859375e-05, -4.76837158203125e-05, -0.00895547866821289, -1.3470649719238281e-05, -8.58306884765625e-05, -0.002166748046875, -2.86102294921875e-05, -0.2932552099227905, -0.7455791234970093, -0.0912466049194336, -0.0004100799560546875, -0.6526458263397217, -0.004448648542165756, -1.1195515394210815, -3.32593554048799e-05, -0.0004100799560546875, -2.47955322265625e-05, -0.034595370292663574, -5.7220458984375e-06, 0.0, -1.1682510375976562e-05, 0.0, -0.0002452133339829743, 0.0, 0.0, -0.20161056518554688, -5.7220458984375e-06, -8.475420327158645e-05, -2.2649765014648438e-06, -5.009591404814273e-06, 0.0], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Increase<UNK>(), Heal(8),\n            HeroSelector()), Choice(<UNK>(), Draw(0), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n"}], "gold_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -2.0305652423184455, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.5413074493408203, -5.841255187988281e-06, -1.52587890625e-05, -0.0050106048583984375, -1.9073486328125e-05, -0.21083520352840424, 0.0, -0.0010585784912109375, -0.00028228759765625, -0.0001125335693359375, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -7.43865966796875e-05, -1.0728830375228426e-06, -0.034252285957336426, 0.0, -0.000118255615234375, -8.392333984375e-05, -0.0021343231201171875, -0.002556069754064083, -3.814697265625e-06], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -2.129115739872688, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.766561508178711, -1.9073486328125e-06, -5.7220458984375e-06, -0.002513885498046875, -9.5367431640625e-06, -0.09365685284137726, -1.9073486328125e-06, -0.000736236572265625, -0.0002155303955078125, -0.0003814697265625, 0.0, -1.33514404296875e-05, 0.0, -0.00028228759765625, 0.0, -7.43865966796875e-05, -1.0728830375228426e-06, -0.026795506477355957, 0.0, -0.0001735687255859375, -8.0108642578125e-05, -0.00228118896484375, -0.0027632247656583786, -3.814697265625e-06], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "set_health_to", "hole2": [{"_type": "Num", "n": 4}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 169, 42, 115, "4", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -2.5327005007191445, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -2.0670108795166016, -1.71661376953125e-05, -0.00016021728515625, -0.013867378234863281, -9.5367431640625e-06, -0.18040549755096436, -1.9073486328125e-06, -0.00055694580078125, -0.00020599365234375, -0.000244140625, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0002269744873046875, 0.0, -7.05718994140625e-05, -1.1920922133867862e-06, -0.03188621997833252, 0.0, -0.0001468658447265625, -7.82012939453125e-05, -0.002685546875, -0.0025435194838792086, -3.814697265625e-06], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(4)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 35, 85, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -3.3144891143666797, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.2902498245239258, 0.0, -0.0001392364501953125, -4.9591064453125e-05, -1.33514404296875e-05, -0.000213623046875, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -5.340576171875e-05, -4.768370445162873e-07, -0.003273009555414319, 0.0, -3.814697265625e-06, -0.17510128021240234, -0.0014743804931640625, -5.7220458984375e-05, -0.00016021728515625, -0.28782081604003906, 0.0, -0.4238252639770508, 0.0, -0.10058510303497314, -2.3841855067985307e-07, -0.002269744873046875, -3.814697265625e-06, -0.02673637866973877, 0.0, -0.3221931457519531, -0.37038230895996094, -0.0005893707275390625, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.0003795623779296875, 0.0, -0.000110626220703125, -7.152555099310121e-07, -0.03479337692260742, -2.2649765014648438e-06, -1.33514404296875e-05, -0.0017528533935546875, -0.0001220703125, -0.03949878364801407, 0.0], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target()), self)\n        self.target.change_attack(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -3.576401505421849, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.5413074493408203, -5.841255187988281e-06, -1.52587890625e-05, -0.0050106048583984375, -1.9073486328125e-05, -1.765040636062622, -1.1920928244535389e-07, -9.34600830078125e-05, -0.0001373291015625, -0.00026702880859375, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.000171661376953125, 0.0, -0.00011444091796875, -1.0728830375228426e-06, -0.027052998542785645, 0.0, -0.000141143798828125, -7.2479248046875e-05, -0.0005645751953125, -0.003806493943557143, -3.814697265625e-06], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -3.7675483145641095, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.2902498245239258, 0.0, -0.0001392364501953125, -4.9591064453125e-05, -1.33514404296875e-05, -0.000213623046875, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -5.340576171875e-05, -4.768370445162873e-07, -0.003273009555414319, 0.0, -3.814697265625e-06, -1.9639825820922852, -3.814697265625e-06, -0.037168197333812714, -7.152555099310121e-07, -4.00543212890625e-05, -1.9073486328125e-06, -0.003470778465270996, 0.0, -0.03171730041503906, -0.0037670135498046875, -0.0007228851318359375, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0029670000076293945, -1.9073486328125e-06, -0.0003871917724609375, -3.576278118089249e-07, -0.1496870517730713, -4.0531158447265625e-06, -1.71661376953125e-05, -0.000885009765625, -0.0003490447998046875, -0.04576759412884712, 0.0], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(2), self)\n        self.target.change_attack(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Num", "n": 4}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "4", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -4.164664337446922, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -3.5487422943115234, 0.0, -0.000118255615234375, -0.00447845458984375, -1.9073486328125e-06, -0.33483725786209106, -1.9073486328125e-06, -0.001567840576171875, -0.0002288818359375, -0.000171661376953125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001735687255859375, 0.0, -8.0108642578125e-05, -1.0728830375228426e-06, -0.03652298450469971, 0.0, -0.00014495849609375, -7.62939453125e-05, -0.00226593017578125, -0.0026692133396863937, -3.814697265625e-06], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(4)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -4.165862109547945, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -3.2928924560546875, 0.0, -2.86102294921875e-05, -0.009389877319335938, -1.9073486328125e-06, -0.013452529907226562, 0.0, -0.00034332275390625, -0.004146575927734375, -0.000102996826171875, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0005092620849609375, 0.0, -2.47955322265625e-05, -4.768370445162873e-07, -0.5980533361434937, -3.933906555175781e-06, -2.09808349609375e-05, -0.0005550384521484375, -0.0002841949462890625, -0.013445153832435608, -2.0265579223632812e-06], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "set_health_to", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -4.217468930909298, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -2.0670108795166016, -1.71661376953125e-05, -0.00016021728515625, -0.013867378234863281, -9.5367431640625e-06, -1.872106909751892, -1.1920928244535389e-07, -7.82012939453125e-05, -9.918212890625e-05, -0.0006122589111328125, 0.0, -1.33514404296875e-05, 0.0, -0.0002880096435546875, 0.0, -0.0001068115234375, -1.1920922133867862e-06, -0.025778889656066895, 0.0, -0.0001773834228515625, -6.103515625e-05, -0.000667572021484375, -0.003846349660307169, -3.814697265625e-06], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(2)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -4.327215813136249, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -3.7163538932800293, 0.0, -0.0001277923583984375, -0.0008106231689453125, -0.0007648468017578125, -1.33514404296875e-05, 0.0, -0.0001621246337890625, -3.814697265625e-06, -0.047441817820072174, -0.025910554453730583, -0.0054225921630859375, -0.0006809234619140625, -0.0001125335693359375, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -0.00012028217315673828, 0.0, -5.340576171875e-05, -3.576278118089249e-07, -0.2846165895462036, 0.0, -9.5367431640625e-06, -0.00087738037109375, -0.0002269744873046875, -0.010897969827055931, -1.9073486328125e-06], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 35, 85, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.374986778282064, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.2902498245239258, 0.0, -0.0001392364501953125, -4.9591064453125e-05, -1.33514404296875e-05, -0.000213623046875, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -5.340576171875e-05, -4.768370445162873e-07, -0.003273009555414319, 0.0, -3.814697265625e-06, -0.17510128021240234, -0.0014743804931640625, -5.7220458984375e-05, -0.00016021728515625, -0.28782081604003906, 0.0, -0.4238252639770508, 0.0, -0.10058510303497314, -2.3841855067985307e-07, -0.002269744873046875, -3.814697265625e-06, -0.02673637866973877, 0.0, -0.3221931457519531, -1.1747112274169922, -0.000461578369140625, 0.0, -0.32196044921875, 0.0, -0.011042118072509766, 0.0], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target()), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -4.524639726651273, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.766561508178711, -1.9073486328125e-06, -5.7220458984375e-06, -0.002513885498046875, -9.5367431640625e-06, -2.4952666759490967, -7.152555099310121e-07, -8.7738037109375e-05, -0.0001373291015625, -0.0006780624389648438, 0.0, -1.33514404296875e-05, 0.0, -0.000438690185546875, 0.0, -0.00011444091796875, -1.311301275563892e-06, -0.0212022066116333, -1.9073486328125e-06, -0.0002079010009765625, -5.91278076171875e-05, -0.000732421875, -0.004038800485432148, -3.814697265625e-06], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_max_health"}}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}], "value": {"_type": "Name", "id": "self"}}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 35, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 40, 110, "self", "<EOS>", 59, 79, 169, 32, 80, 21, 110, "minion", "<EOS>", "card", "<EOS>", 21, 110, "self", "<EOS>"], "score": -4.7613217935773235, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.2902498245239258, 0.0, -0.0001392364501953125, -4.9591064453125e-05, -1.33514404296875e-05, -0.000213623046875, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -5.340576171875e-05, -4.768370445162873e-07, -0.003273009555414319, 0.0, -3.814697265625e-06, -0.17510128021240234, -0.0014743804931640625, -5.7220458984375e-05, -0.00016021728515625, -1.3862924575805664, 0.0, -4.00543212890625e-05, 0.0, -0.02454090118408203, 0.0, -0.000301361083984375, -1.5497195136049413e-06, -0.12857270240783691, -4.57763671875e-05, -0.0016841888427734375, -2.288818359375e-05, -0.0005789995193481445, 0.0, -0.14992618560791016, -3.24249267578125e-05, 0.0, -0.0010128021240234375, -3.814697265625e-06, -0.08628654479980469, 0.0, -1.0264941453933716, -9.536738616588991e-07, -0.023627281188964844, 0.0, -0.06248760223388672, -5.7220458984375e-06, -0.1659865379333496, 0.0], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        minion.card = self\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}], "value": {"_type": "Name", "id": "self"}}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 35, 85, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 40, 110, "self", "<EOS>", 59, 79, 169, 32, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 21, 110, "self", "<EOS>"], "score": -5.198775301956076, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.2902498245239258, 0.0, -0.0001392364501953125, -4.9591064453125e-05, -1.33514404296875e-05, -0.000213623046875, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -5.340576171875e-05, -4.768370445162873e-07, -0.003273009555414319, 0.0, -3.814697265625e-06, -0.17510128021240234, -0.0014743804931640625, -5.7220458984375e-05, -0.00016021728515625, -0.28782081604003906, 0.0, -0.4238252639770508, 0.0, -0.10058510303497314, -2.3841855067985307e-07, -0.002269744873046875, -3.814697265625e-06, -0.02673637866973877, 0.0, -1.3929214477539062, -0.0002956390380859375, 0.0, -0.0018825531005859375, -5.7220458984375e-06, -0.04472160339355469, 0.0, -0.8466399908065796, 0.0, -0.10076522827148438, 0.0, -0.05419731140136719, -2.09808349609375e-05, -0.2127065658569336, 0.0], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target()), self)\n        self.target = self\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "MarkOfTheWild", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_max_health"}}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}], "value": {"_type": "Name", "id": "self"}}]}, "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 35, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 40, 110, "self", "<EOS>", 59, 79, 169, 32, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 21, 110, "self", "<EOS>"], "score": -5.698385964415181, "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.2902498245239258, 0.0, -0.0001392364501953125, -4.9591064453125e-05, -1.33514404296875e-05, -0.000213623046875, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -5.340576171875e-05, -4.768370445162873e-07, -0.003273009555414319, 0.0, -3.814697265625e-06, -0.17510128021240234, -0.0014743804931640625, -5.7220458984375e-05, -0.00016021728515625, -1.3862924575805664, 0.0, -4.00543212890625e-05, 0.0, -0.02454090118408203, 0.0, -0.000301361083984375, -1.5497195136049413e-06, -0.12857270240783691, -4.57763671875e-05, -0.0016841888427734375, -2.288818359375e-05, -0.0005789995193481445, 0.0, -0.14992618560791016, -3.24249267578125e-05, 0.0, -0.0010128021240234375, -3.814697265625e-06, -0.08628654479980469, 0.0, -1.3467484712600708, 0.0, -0.007419586181640625, 0.0, -0.10506343841552734, -1.9073486328125e-05, -0.756415843963623, 0.0], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target = self\n"}], "gold_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.taunt = True\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 2}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "score": -1.7688445229879264, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.13970279693603516, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.002058863639831543, 0.0, -0.03441333770751953, -3.4332275390625e-05, -0.000133514404296875, 0.0, -0.0010826587677001953, -2.3841855067985307e-07, -3.814697265625e-06, -0.0002288818359375, -1.1444091796875e-05, -0.0005199908628128469, -1.9073486328125e-06, -0.006987571716308594, -0.0002307891845703125, -0.025348089635372162, 0.0, -0.009310722351074219, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.0002613067626953125, -0.011809704825282097, -1.6450801922474056e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004255666281096637, -2.3841855067985307e-07, -0.006132245063781738, -0.0004589542804751545, -0.0002498626708984375, -0.000537872314453125, 0.0, -0.0075963763520121574, -1.7046926586772315e-05, -0.0005035400390625, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.0013764082686975598, -0.000727627135347575, -0.04343877732753754, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004383678548038006, -4.708655978902243e-05, -0.0005321502685546875, -0.0049686431884765625, -0.0003509521484375, -6.29425048828125e-05, -0.5667593479156494, -0.00011145447206217796, -0.0009521245956420898, -8.583032467868179e-06, -9.5367431640625e-06, -0.0003070831298828125, -6.67572021484375e-05, -7.43865966796875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.001864754012785852, -2.384185791015625e-06, -0.0007023783400654793, -0.0011548995971679688, -4.00543212890625e-05, -0.0053539276123046875, -0.000217437744140625, -0.0030214935541152954, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0059767961502075195, 0.0, -0.0003509521484375, -0.0002002716064453125, -0.00057220458984375, -0.0050754547119140625, -3.933906555175781e-06, -0.0010471343994140625, -1.33514404296875e-05, -0.0002689361572265625, -3.24249267578125e-05, -0.0001080036090570502, 0.0, -1.9073486328125e-05, -1.0132789611816406e-05, -3.3378546504536644e-06, -9.5367431640625e-06, -4.52994936495088e-06, -1.9073486328125e-06, -0.000179290771484375, -0.0006866455078125, -0.0001735687255859375, -0.00244140625, -0.000118255615234375, -0.000274658203125, -4.00543212890625e-05, -4.9591064453125e-05, -6.29425048828125e-05, -0.000118255615234375, -5.7220458984375e-06, -0.0002231597900390625, 0.0, -0.0010243654251098633, 0.0, -0.0003643035888671875, 0.0, -1.3947486877441406e-05, 0.0, -0.0026187896728515625, -7.62939453125e-06, -0.0015954971313476562, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0002455711364746094, 0.0, -0.0008392333984375, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -1.52587890625e-05, 0.0, -0.000257015140959993, -1.9073486328125e-06, -0.0015015602111816406, -1.1920928244535389e-07, -4.1961669921875e-05, -2.0265579223632812e-06, -0.0001125335693359375, -0.030340194702148438, -6.103515625e-05, -0.00042724609375, 0.0, -0.5250377655029297, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 1}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "1", "<EOS>"], "score": -2.1694907327047233, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.13970279693603516, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.002058863639831543, 0.0, -0.03441333770751953, -3.4332275390625e-05, -0.000133514404296875, 0.0, -0.0010826587677001953, -2.3841855067985307e-07, -3.814697265625e-06, -0.0002288818359375, -1.1444091796875e-05, -0.0005199908628128469, -1.9073486328125e-06, -0.006987571716308594, -0.0002307891845703125, -0.025348089635372162, 0.0, -0.009310722351074219, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.0002613067626953125, -0.011809704825282097, -1.6450801922474056e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004255666281096637, -2.3841855067985307e-07, -0.006132245063781738, -0.0004589542804751545, -0.0002498626708984375, -0.000537872314453125, 0.0, -0.0075963763520121574, -1.7046926586772315e-05, -0.0005035400390625, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.0013764082686975598, -0.000727627135347575, -0.04343877732753754, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004383678548038006, -4.708655978902243e-05, -0.0005321502685546875, -0.0049686431884765625, -0.0003509521484375, -6.29425048828125e-05, -0.5667593479156494, -0.00011145447206217796, -0.0009521245956420898, -8.583032467868179e-06, -9.5367431640625e-06, -0.0003070831298828125, -6.67572021484375e-05, -7.43865966796875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.001864754012785852, -2.384185791015625e-06, -0.0007023783400654793, -0.0011548995971679688, -4.00543212890625e-05, -0.0053539276123046875, -0.000217437744140625, -0.0030214935541152954, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0059767961502075195, 0.0, -0.0003509521484375, -0.0002002716064453125, -0.00057220458984375, -0.0050754547119140625, -3.933906555175781e-06, -0.0010471343994140625, -1.33514404296875e-05, -0.0002689361572265625, -3.24249267578125e-05, -0.0001080036090570502, 0.0, -1.9073486328125e-05, -1.0132789611816406e-05, -3.3378546504536644e-06, -9.5367431640625e-06, -4.52994936495088e-06, -1.9073486328125e-06, -0.000179290771484375, -0.0006866455078125, -0.0001735687255859375, -0.00244140625, -0.000118255615234375, -0.000274658203125, -4.00543212890625e-05, -4.9591064453125e-05, -6.29425048828125e-05, -0.000118255615234375, -5.7220458984375e-06, -0.0002231597900390625, 0.0, -0.0010243654251098633, 0.0, -0.0003643035888671875, 0.0, -1.3947486877441406e-05, 0.0, -0.0026187896728515625, -7.62939453125e-06, -0.0015954971313476562, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0002455711364746094, 0.0, -0.0008392333984375, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -1.52587890625e-05, 0.0, -0.000257015140959993, -1.9073486328125e-06, -0.0015015602111816406, -1.1920928244535389e-07, -4.1961669921875e-05, -2.0265579223632812e-06, -0.0001125335693359375, -0.030340194702148438, -6.103515625e-05, -0.00042724609375, 0.0, -0.9256839752197266, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 2}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "score": -2.2423894335407724, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.13970279693603516, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.002058863639831543, 0.0, -0.03441333770751953, -3.4332275390625e-05, -0.000133514404296875, 0.0, -0.0010826587677001953, -2.3841855067985307e-07, -3.814697265625e-06, -0.0002288818359375, -1.1444091796875e-05, -0.0005199908628128469, -1.9073486328125e-06, -0.006987571716308594, -0.0002307891845703125, -0.025348089635372162, 0.0, -0.009310722351074219, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.0002613067626953125, -0.011809704825282097, -1.6450801922474056e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004255666281096637, -2.3841855067985307e-07, -0.006132245063781738, -0.0004589542804751545, -0.0002498626708984375, -0.000537872314453125, 0.0, -0.0075963763520121574, -1.7046926586772315e-05, -0.0005035400390625, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.0013764082686975598, -0.000727627135347575, -0.04343877732753754, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004383678548038006, -4.708655978902243e-05, -0.0005321502685546875, -0.0049686431884765625, -0.0003509521484375, -6.29425048828125e-05, -0.8468883037567139, -1.2040065485052764e-05, -0.19784152507781982, -2.4318398573086597e-05, -1.1444091796875e-05, -0.0005054473876953125, -0.00034332275390625, -6.866455078125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.0019345299806445837, -2.2649765014648438e-06, -0.0008263562922365963, -0.0017794370651245117, -5.91278076171875e-05, -0.0056247711181640625, -0.0001888275146484375, -0.002673014998435974, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.005018353462219238, 0.0, -0.000362396240234375, -0.000213623046875, -0.0006237030029296875, -0.004992246627807617, -2.0265579223632812e-06, -0.000732421875, -1.1444091796875e-05, -0.00026702880859375, -3.24249267578125e-05, -9.810923802433535e-05, 0.0, -1.9073486328125e-05, -1.0132789611816406e-05, -2.9802276912960224e-06, -9.5367431640625e-06, -4.52994936495088e-06, -1.9073486328125e-06, -0.00019073486328125, -0.0006885528564453125, -0.0001773834228515625, -0.0026073455810546875, -0.0001201629638671875, -0.0002899169921875, -4.00543212890625e-05, -5.14984130859375e-05, -6.29425048828125e-05, -0.0001220703125, -5.7220458984375e-06, -0.0002231597900390625, 0.0, -0.0010148286819458008, 0.0, -0.0003643035888671875, 0.0, -1.3947486877441406e-05, 0.0, -0.0026378631591796875, -7.62939453125e-06, -0.0015926361083984375, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0002455711364746094, 0.0, -0.0008411407470703125, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -1.52587890625e-05, 0.0, -0.000257015140959993, -1.9073486328125e-06, -0.0015034675598144531, -1.1920928244535389e-07, -4.1961669921875e-05, -2.0265579223632812e-06, -0.0001125335693359375, -0.03032684326171875, -6.103515625e-05, -0.00042724609375, 0.0, -0.5215254426002502, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 1}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "1", "<EOS>"], "score": -2.6517970492023935, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.13970279693603516, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.002058863639831543, 0.0, -0.03441333770751953, -3.4332275390625e-05, -0.000133514404296875, 0.0, -0.0010826587677001953, -2.3841855067985307e-07, -3.814697265625e-06, -0.0002288818359375, -1.1444091796875e-05, -0.0005199908628128469, -1.9073486328125e-06, -0.006987571716308594, -0.0002307891845703125, -0.025348089635372162, 0.0, -0.009310722351074219, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.0002613067626953125, -0.011809704825282097, -1.6450801922474056e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004255666281096637, -2.3841855067985307e-07, -0.006132245063781738, -0.0004589542804751545, -0.0002498626708984375, -0.000537872314453125, 0.0, -0.0075963763520121574, -1.7046926586772315e-05, -0.0005035400390625, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.0013764082686975598, -0.000727627135347575, -0.04343877732753754, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004383678548038006, -4.708655978902243e-05, -0.0005321502685546875, -0.0049686431884765625, -0.0003509521484375, -6.29425048828125e-05, -0.8468883037567139, -1.2040065485052764e-05, -0.19784152507781982, -2.4318398573086597e-05, -1.1444091796875e-05, -0.0005054473876953125, -0.00034332275390625, -6.866455078125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.0019345299806445837, -2.2649765014648438e-06, -0.0008263562922365963, -0.0017794370651245117, -5.91278076171875e-05, -0.0056247711181640625, -0.0001888275146484375, -0.002673014998435974, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.005018353462219238, 0.0, -0.000362396240234375, -0.000213623046875, -0.0006237030029296875, -0.004992246627807617, -2.0265579223632812e-06, -0.000732421875, -1.1444091796875e-05, -0.00026702880859375, -3.24249267578125e-05, -9.810923802433535e-05, 0.0, -1.9073486328125e-05, -1.0132789611816406e-05, -2.9802276912960224e-06, -9.5367431640625e-06, -4.52994936495088e-06, -1.9073486328125e-06, -0.00019073486328125, -0.0006885528564453125, -0.0001773834228515625, -0.0026073455810546875, -0.0001201629638671875, -0.0002899169921875, -4.00543212890625e-05, -5.14984130859375e-05, -6.29425048828125e-05, -0.0001220703125, -5.7220458984375e-06, -0.0002231597900390625, 0.0, -0.0010148286819458008, 0.0, -0.0003643035888671875, 0.0, -1.3947486877441406e-05, 0.0, -0.0026378631591796875, -7.62939453125e-06, -0.0015926361083984375, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0002455711364746094, 0.0, -0.0008411407470703125, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -1.52587890625e-05, 0.0, -0.000257015140959993, -1.9073486328125e-06, -0.0015034675598144531, -1.1920928244535389e-07, -4.1961669921875e-05, -2.0265579223632812e-06, -0.0001125335693359375, -0.03032684326171875, -6.103515625e-05, -0.00042724609375, 0.0, -0.9309330582618713, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 2}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "score": -3.911467319168082, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -2.336289405822754, -4.0531158447265625e-06, -0.0026993751525878906, 0.0, -0.000637054443359375, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-05, -1.71661376953125e-05, -1.990795135498047e-05, 0.0, -0.05475330352783203, -0.0001316070556640625, -4.38690185546875e-05, -0.000156402587890625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005316734313964844, -7.62939453125e-06, -6.29425048828125e-05, -1.52587890625e-05, -0.000690460205078125, -0.008824348449707031, -1.5497207641601562e-05, -0.0001163482666015625, -1.71661376953125e-05, -0.000274658203125, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0013259649276733398, -5.960462772236497e-07, -0.0009543895721435547, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.00047206878662109375, 0.0, -6.29425048828125e-05, 0.0, -0.000126480998005718, -5.7220458984375e-06, -0.001953601837158203, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.14188575744628906, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.0020769834518432617, 0.0, -0.03445911407470703, -3.4332275390625e-05, -0.000133514404296875, 0.0, -0.0010845661163330078, -2.3841855067985307e-07, -3.814697265625e-06, -0.0002307891845703125, -1.1444091796875e-05, -0.0005198716535232961, -1.9073486328125e-06, -0.006989479064941406, -0.0002288818359375, -0.025263886898756027, 0.0, -0.009335517883300781, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.0002613067626953125, -0.011805890128016472, -1.633159445191268e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004256858373992145, -2.3841855067985307e-07, -0.006130337715148926, -0.0004589542804751545, -0.00025177001953125, -0.000537872314453125, 0.0, -0.007591607980430126, -1.7046926586772315e-05, -0.0005016326904296875, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.0013758130371570587, -0.0007273888913914561, -0.04343114793300629, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004383678548038006, -4.708655978902243e-05, -0.0005321502685546875, -0.004970550537109375, -0.0003509521484375, -6.29425048828125e-05, -0.566956639289856, -0.00011145447206217796, -0.0009521245956420898, -8.583032467868179e-06, -9.5367431640625e-06, -0.0003070831298828125, -6.67572021484375e-05, -7.43865966796875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0018646350363269448, -2.384185791015625e-06, -0.0007023783400654793, -0.0011548995971679688, -4.00543212890625e-05, -0.0053539276123046875, -0.000217437744140625, -0.0030213817954063416, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0059767961502075195, 0.0, -0.0003509521484375, -0.0002002716064453125, -0.00057220458984375, -0.0050754547119140625, -3.933906555175781e-06, -0.0010471343994140625, -1.33514404296875e-05, -0.0002689361572265625, -3.24249267578125e-05, -0.0001080036090570502, 0.0, -1.9073486328125e-05, -1.0132789611816406e-05, -3.3378546504536644e-06, -9.5367431640625e-06, -4.52994936495088e-06, -1.9073486328125e-06, -0.000179290771484375, -0.0006866455078125, -0.0001735687255859375, -0.00244140625, -0.000118255615234375, -0.000274658203125, -4.00543212890625e-05, -4.9591064453125e-05, -6.29425048828125e-05, -0.000118255615234375, -5.7220458984375e-06, -0.0002231597900390625, 0.0, -0.0010243654251098633, 0.0, -0.0003643035888671875, 0.0, -1.3947486877441406e-05, 0.0, -0.0026187896728515625, -7.62939453125e-06, -0.0015954971313476562, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0002455711364746094, 0.0, -0.0008392333984375, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -1.52587890625e-05, 0.0, -0.000257015140959993, -1.9073486328125e-06, -0.0015015602111816406, -1.1920928244535389e-07, -4.1961669921875e-05, -2.0265579223632812e-06, -0.0001125335693359375, -0.030340194702148438, -6.103515625e-05, -0.00042724609375, 0.0, -0.5250358581542969, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 2}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "score": -4.08281124546567, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.13970279693603516, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.002058863639831543, 0.0, -0.03441333770751953, -3.4332275390625e-05, -0.000133514404296875, 0.0, -0.0010826587677001953, -2.3841855067985307e-07, -3.814697265625e-06, -0.0002288818359375, -1.1444091796875e-05, -0.0005199908628128469, -1.9073486328125e-06, -0.006987571716308594, -0.0002307891845703125, -0.025348089635372162, 0.0, -0.009310722351074219, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.0002613067626953125, -0.011809704825282097, -1.6450801922474056e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004255666281096637, -2.3841855067985307e-07, -0.006132245063781738, -0.0004589542804751545, -0.0002498626708984375, -0.000537872314453125, 0.0, -0.0075963763520121574, -1.7046926586772315e-05, -0.0005035400390625, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.0013764082686975598, -0.000727627135347575, -0.04343877732753754, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004383678548038006, -4.708655978902243e-05, -0.0005321502685546875, -0.0049686431884765625, -0.0003509521484375, -6.29425048828125e-05, -0.8468883037567139, -1.2040065485052764e-05, -1.9974688291549683, -2.0265558760002023e-06, -0.0001125335693359375, -0.000701904296875, -1.9073486328125e-06, -0.002087235450744629, -7.390948667307384e-06, -0.0013370513916015625, -0.0010356903076171875, -0.0008144378662109375, -0.0008499622344970703, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -0.000179290771484375, -6.29425048828125e-05, -7.510185241699219e-05, 0.0, -2.6702880859375e-05, -6.198883056640625e-06, -3.6954863844584906e-06, -1.33514404296875e-05, -5.006785613659304e-06, -1.9073486328125e-06, -0.000209808349609375, -0.0007038116455078125, -0.0001926422119140625, -0.0028820037841796875, -0.0001316070556640625, -0.0003147125244140625, -3.814697265625e-05, -5.91278076171875e-05, -4.57763671875e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.0010071992874145508, 0.0, -0.0003719329833984375, 0.0, -1.3947486877441406e-05, 0.0, -0.00287628173828125, -7.62939453125e-06, -0.00152587890625, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.0002396106719970703, 0.0, -0.0008411407470703125, -5.7220458984375e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, 0.0, -0.00025773042580112815, -1.9073486328125e-06, -0.0014920234680175781, -1.1920928244535389e-07, -4.38690185546875e-05, -2.0265579223632812e-06, -0.00011444091796875, -0.03041362762451172, -6.103515625e-05, -0.0004291534423828125, 0.0, -0.5809474587440491, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 1}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "1", "<EOS>"], "score": -4.312116389907828, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -2.336289405822754, -4.0531158447265625e-06, -0.0026993751525878906, 0.0, -0.000637054443359375, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-05, -1.71661376953125e-05, -1.990795135498047e-05, 0.0, -0.05475330352783203, -0.0001316070556640625, -4.38690185546875e-05, -0.000156402587890625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005316734313964844, -7.62939453125e-06, -6.29425048828125e-05, -1.52587890625e-05, -0.000690460205078125, -0.008824348449707031, -1.5497207641601562e-05, -0.0001163482666015625, -1.71661376953125e-05, -0.000274658203125, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0013259649276733398, -5.960462772236497e-07, -0.0009543895721435547, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.00047206878662109375, 0.0, -6.29425048828125e-05, 0.0, -0.000126480998005718, -5.7220458984375e-06, -0.001953601837158203, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.14188575744628906, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.0020769834518432617, 0.0, -0.03445911407470703, -3.4332275390625e-05, -0.000133514404296875, 0.0, -0.0010845661163330078, -2.3841855067985307e-07, -3.814697265625e-06, -0.0002307891845703125, -1.1444091796875e-05, -0.0005198716535232961, -1.9073486328125e-06, -0.006989479064941406, -0.0002288818359375, -0.025263886898756027, 0.0, -0.009335517883300781, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.0002613067626953125, -0.011805890128016472, -1.633159445191268e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004256858373992145, -2.3841855067985307e-07, -0.006130337715148926, -0.0004589542804751545, -0.00025177001953125, -0.000537872314453125, 0.0, -0.007591607980430126, -1.7046926586772315e-05, -0.0005016326904296875, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.0013758130371570587, -0.0007273888913914561, -0.04343114793300629, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004383678548038006, -4.708655978902243e-05, -0.0005321502685546875, -0.004970550537109375, -0.0003509521484375, -6.29425048828125e-05, -0.566956639289856, -0.00011145447206217796, -0.0009521245956420898, -8.583032467868179e-06, -9.5367431640625e-06, -0.0003070831298828125, -6.67572021484375e-05, -7.43865966796875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0018646350363269448, -2.384185791015625e-06, -0.0007023783400654793, -0.0011548995971679688, -4.00543212890625e-05, -0.0053539276123046875, -0.000217437744140625, -0.0030213817954063416, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0059767961502075195, 0.0, -0.0003509521484375, -0.0002002716064453125, -0.00057220458984375, -0.0050754547119140625, -3.933906555175781e-06, -0.0010471343994140625, -1.33514404296875e-05, -0.0002689361572265625, -3.24249267578125e-05, -0.0001080036090570502, 0.0, -1.9073486328125e-05, -1.0132789611816406e-05, -3.3378546504536644e-06, -9.5367431640625e-06, -4.52994936495088e-06, -1.9073486328125e-06, -0.000179290771484375, -0.0006866455078125, -0.0001735687255859375, -0.00244140625, -0.000118255615234375, -0.000274658203125, -4.00543212890625e-05, -4.9591064453125e-05, -6.29425048828125e-05, -0.000118255615234375, -5.7220458984375e-06, -0.0002231597900390625, 0.0, -0.0010243654251098633, 0.0, -0.0003643035888671875, 0.0, -1.3947486877441406e-05, 0.0, -0.0026187896728515625, -7.62939453125e-06, -0.0015954971313476562, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0002455711364746094, 0.0, -0.0008392333984375, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -1.52587890625e-05, 0.0, -0.000257015140959993, -1.9073486328125e-06, -0.0015015602111816406, -1.1920928244535389e-07, -4.1961669921875e-05, -2.0265579223632812e-06, -0.0001125335693359375, -0.030340194702148438, -6.103515625e-05, -0.00042724609375, 0.0, -0.925684928894043, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 2}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "targets"}, "hole1": "extend", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}]}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 71, 137, 21, 110, "targets", "<EOS>", "extend", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "score": -4.323281766250986, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -2.5354537963867188, -8.96453857421875e-05, -0.010371208190917969, 0.0, -0.05944022908806801, -1.1920928244535389e-07, -0.08586478233337402, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.21598243713378906, 0.0, -0.0003986358642578125, 0.0, -0.00010800361633300781, -1.9073486328125e-06, -0.3918781280517578, -1.9073486328125e-06, -0.000202178955078125, -1.4185905456542969e-05, -7.62939453125e-05, -0.13312435150146484, -0.0021839141845703125, -0.015563130378723145, 0.0, -3.24249267578125e-05, -4.1961669921875e-05, -0.0001087188720703125, -4.57763671875e-05, -3.8623809814453125e-05, 0.0, -5.53131103515625e-05, -1.5854835510253906e-05, -3.099436753473128e-06, -1.9073486328125e-05, -5.9604562920867465e-06, 0.0, -0.018733978271484375, -0.00037384033203125, -0.000244140625, -0.00243377685546875, -0.0001621246337890625, -0.000247955322265625, -4.76837158203125e-05, -5.91278076171875e-05, -7.2479248046875e-05, -0.000202178955078125, -9.5367431640625e-06, -0.0001964569091796875, 0.0, -0.0011254549026489258, 0.0, -0.00037384033203125, 0.0, -1.1920928955078125e-05, 0.0, -0.0036449432373046875, -7.62939453125e-06, -0.00160980224609375, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.00022792816162109375, 0.0, -0.0008106231689453125, -5.7220458984375e-06, 0.0, -0.00018310546875, 0.0, -1.52587890625e-05, 0.0, -0.0002514123625587672, -1.9073486328125e-06, -0.0015513896942138672, -1.1920928244535389e-07, -4.38690185546875e-05, -2.0265579223632812e-06, -0.0001163482666015625, -0.030519485473632812, -5.91278076171875e-05, -0.0004329681396484375, 0.0, -0.50803142786026, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 1}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "1", "<EOS>"], "score": -4.350624928021823, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.13970279693603516, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.002058863639831543, 0.0, -0.03441333770751953, -3.4332275390625e-05, -0.000133514404296875, 0.0, -0.0010826587677001953, -2.3841855067985307e-07, -3.814697265625e-06, -0.0002288818359375, -1.1444091796875e-05, -0.0005199908628128469, -1.9073486328125e-06, -0.006987571716308594, -0.0002307891845703125, -0.025348089635372162, 0.0, -0.009310722351074219, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.0002613067626953125, -0.011809704825282097, -1.6450801922474056e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004255666281096637, -2.3841855067985307e-07, -0.006132245063781738, -0.0004589542804751545, -0.0002498626708984375, -0.000537872314453125, 0.0, -0.0075963763520121574, -1.7046926586772315e-05, -0.0005035400390625, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.0013764082686975598, -0.000727627135347575, -0.04343877732753754, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004383678548038006, -4.708655978902243e-05, -0.0005321502685546875, -0.0049686431884765625, -0.0003509521484375, -6.29425048828125e-05, -0.8468883037567139, -1.2040065485052764e-05, -1.9974688291549683, -2.0265558760002023e-06, -0.0001125335693359375, -0.000701904296875, -1.9073486328125e-06, -0.002087235450744629, -7.390948667307384e-06, -0.0013370513916015625, -0.0010356903076171875, -0.0008144378662109375, -0.0008499622344970703, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -0.000179290771484375, -6.29425048828125e-05, -7.510185241699219e-05, 0.0, -2.6702880859375e-05, -6.198883056640625e-06, -3.6954863844584906e-06, -1.33514404296875e-05, -5.006785613659304e-06, -1.9073486328125e-06, -0.000209808349609375, -0.0007038116455078125, -0.0001926422119140625, -0.0028820037841796875, -0.0001316070556640625, -0.0003147125244140625, -3.814697265625e-05, -5.91278076171875e-05, -4.57763671875e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.0010071992874145508, 0.0, -0.0003719329833984375, 0.0, -1.3947486877441406e-05, 0.0, -0.00287628173828125, -7.62939453125e-06, -0.00152587890625, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.0002396106719970703, 0.0, -0.0008411407470703125, -5.7220458984375e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, 0.0, -0.00025773042580112815, -1.9073486328125e-06, -0.0014920234680175781, -1.1920928244535389e-07, -4.38690185546875e-05, -2.0265579223632812e-06, -0.00011444091796875, -0.03041362762451172, -6.103515625e-05, -0.0004291534423828125, 0.0, -0.8487611413002014, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 2}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "score": -4.3845713898100485, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -2.336289405822754, -4.0531158447265625e-06, -0.0026993751525878906, 0.0, -0.000637054443359375, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-05, -1.71661376953125e-05, -1.990795135498047e-05, 0.0, -0.05475330352783203, -0.0001316070556640625, -4.38690185546875e-05, -0.000156402587890625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005316734313964844, -7.62939453125e-06, -6.29425048828125e-05, -1.52587890625e-05, -0.000690460205078125, -0.008824348449707031, -1.5497207641601562e-05, -0.0001163482666015625, -1.71661376953125e-05, -0.000274658203125, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0013259649276733398, -5.960462772236497e-07, -0.0009543895721435547, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.00047206878662109375, 0.0, -6.29425048828125e-05, 0.0, -0.000126480998005718, -5.7220458984375e-06, -0.001953601837158203, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.14188575744628906, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.0020769834518432617, 0.0, -0.03445911407470703, -3.4332275390625e-05, -0.000133514404296875, 0.0, -0.0010845661163330078, -2.3841855067985307e-07, -3.814697265625e-06, -0.0002307891845703125, -1.1444091796875e-05, -0.0005198716535232961, -1.9073486328125e-06, -0.006989479064941406, -0.0002288818359375, -0.025263886898756027, 0.0, -0.009335517883300781, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.0002613067626953125, -0.011805890128016472, -1.633159445191268e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004256858373992145, -2.3841855067985307e-07, -0.006130337715148926, -0.0004589542804751545, -0.00025177001953125, -0.000537872314453125, 0.0, -0.007591607980430126, -1.7046926586772315e-05, -0.0005016326904296875, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.0013758130371570587, -0.0007273888913914561, -0.04343114793300629, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004383678548038006, -4.708655978902243e-05, -0.0005321502685546875, -0.004970550537109375, -0.0003509521484375, -6.29425048828125e-05, -0.8466254472732544, -1.2040065485052764e-05, -0.19785964488983154, -2.4318398573086597e-05, -1.1444091796875e-05, -0.0005054473876953125, -0.00034332275390625, -6.866455078125e-05, -9.5367431640625e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.0019345299806445837, -2.2649765014648438e-06, -0.0008263562922365963, -0.0017794370651245117, -5.91278076171875e-05, -0.0056247711181640625, -0.0001888275146484375, -0.0026730187237262726, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.0050193071365356445, 0.0, -0.000362396240234375, -0.000213623046875, -0.0006237030029296875, -0.004992246627807617, -2.0265579223632812e-06, -0.000732421875, -1.1444091796875e-05, -0.00026702880859375, -3.24249267578125e-05, -9.810923802433535e-05, 0.0, -1.9073486328125e-05, -1.0132789611816406e-05, -2.9802276912960224e-06, -9.5367431640625e-06, -4.52994936495088e-06, -1.9073486328125e-06, -0.00019073486328125, -0.0006885528564453125, -0.0001773834228515625, -0.0026073455810546875, -0.0001201629638671875, -0.0002899169921875, -4.00543212890625e-05, -5.14984130859375e-05, -6.29425048828125e-05, -0.0001220703125, -5.7220458984375e-06, -0.0002231597900390625, 0.0, -0.0010148286819458008, 0.0, -0.0003643035888671875, 0.0, -1.3947486877441406e-05, 0.0, -0.0026378631591796875, -7.62939453125e-06, -0.0015935897827148438, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0002455711364746094, 0.0, -0.0008411407470703125, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -1.52587890625e-05, 0.0, -0.000257015140959993, -1.9073486328125e-06, -0.0015034675598144531, -1.1920928244535389e-07, -4.1961669921875e-05, -2.0265579223632812e-06, -0.0001125335693359375, -0.03032684326171875, -6.103515625e-05, -0.00042724609375, 0.0, -0.521522581577301, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 1}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "targets"}, "hole1": "extend", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "current_player"}, "attr": "minions"}]}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 71, 137, 21, 110, "targets", "<EOS>", "extend", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "1", "<EOS>"], "score": -4.766488553360361, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -2.5354537963867188, -8.96453857421875e-05, -0.010371208190917969, 0.0, -0.05944022908806801, -1.1920928244535389e-07, -0.08586478233337402, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.21598243713378906, 0.0, -0.0003986358642578125, 0.0, -0.00010800361633300781, -1.9073486328125e-06, -0.3918781280517578, -1.9073486328125e-06, -0.000202178955078125, -1.4185905456542969e-05, -7.62939453125e-05, -0.13312435150146484, -0.0021839141845703125, -0.015563130378723145, 0.0, -3.24249267578125e-05, -4.1961669921875e-05, -0.0001087188720703125, -4.57763671875e-05, -3.8623809814453125e-05, 0.0, -5.53131103515625e-05, -1.5854835510253906e-05, -3.099436753473128e-06, -1.9073486328125e-05, -5.9604562920867465e-06, 0.0, -0.018733978271484375, -0.00037384033203125, -0.000244140625, -0.00243377685546875, -0.0001621246337890625, -0.000247955322265625, -4.76837158203125e-05, -5.91278076171875e-05, -7.2479248046875e-05, -0.000202178955078125, -9.5367431640625e-06, -0.0001964569091796875, 0.0, -0.0011254549026489258, 0.0, -0.00037384033203125, 0.0, -1.1920928955078125e-05, 0.0, -0.0036449432373046875, -7.62939453125e-06, -0.00160980224609375, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.00022792816162109375, 0.0, -0.0008106231689453125, -5.7220458984375e-06, 0.0, -0.00018310546875, 0.0, -1.52587890625e-05, 0.0, -0.0002514123625587672, -1.9073486328125e-06, -0.0015513896942138672, -1.1920928244535389e-07, -4.38690185546875e-05, -2.0265579223632812e-06, -0.0001163482666015625, -0.030519485473632812, -5.91278076171875e-05, -0.0004329681396484375, 0.0, -0.951238214969635, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 2}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "score": -4.768046089718268, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.2052669525146484, 0.0, -0.0025559663772583008, 0.0, -0.0004749298095703125, 0.0, -7.748603820800781e-06, 0.0, -2.288818359375e-05, -1.52587890625e-05, -1.800060272216797e-05, 0.0, -0.04501914978027344, -0.000125885009765625, -4.9591064453125e-05, -0.0001773834228515625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.0051898956298828125, -7.62939453125e-06, -6.29425048828125e-05, -1.52587890625e-05, -0.00067138671875, -0.0088653564453125, -1.5497207641601562e-05, -0.0001163482666015625, -1.71661376953125e-05, -0.0002841949462890625, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0013450384140014648, -5.960462772236497e-07, -0.0009515285491943359, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004730224609375, 0.0, -6.29425048828125e-05, 0.0, -0.000126480998005718, -5.7220458984375e-06, -0.0019669532775878906, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.13981151580810547, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.002039790153503418, 0.0, -0.034071922302246094, -3.4332275390625e-05, -0.0001354217529296875, 0.0, -0.0010863542556762695, -2.3841855067985307e-07, -3.814697265625e-06, -0.000232696533203125, -1.1444091796875e-05, -0.0005198716535232961, -1.9073486328125e-06, -0.006988525390625, -0.0002288818359375, -0.02527463808655739, 0.0, -0.009281158447265625, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.000263214111328125, -0.011836526915431023, -1.6450801922474056e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004258049884811044, -2.3841855067985307e-07, -0.006132245063781738, -0.0004589542804751545, -0.00025177001953125, -0.0005359649658203125, 0.0, -0.007583978585898876, -1.7046926586772315e-05, -0.0005035400390625, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.001374265644699335, -0.0007271506474353373, -0.04343591630458832, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004381771199405193, -4.708655978902243e-05, -0.0005321502685546875, -0.004970550537109375, -0.0003509521484375, -6.29425048828125e-05, -0.5671544075012207, -0.00011157367407577112, -0.0009521245956420898, -8.583032467868179e-06, -9.5367431640625e-06, -0.0003070831298828125, -6.67572021484375e-05, -7.43865966796875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0018641590140759945, -2.384185791015625e-06, -0.0007023783400654793, -0.0011548995971679688, -4.00543212890625e-05, -0.0053539276123046875, -0.000217437744140625, -0.0030212998390197754, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0059767961502075195, 0.0, -0.0003509521484375, -0.0002002716064453125, -0.00057220458984375, -0.005076408386230469, -3.933906555175781e-06, -0.0010471343994140625, -1.33514404296875e-05, -0.0002689361572265625, -3.24249267578125e-05, -0.0001080036090570502, 0.0, -1.9073486328125e-05, -1.0132789611816406e-05, -3.3378546504536644e-06, -9.5367431640625e-06, -4.52994936495088e-06, -1.9073486328125e-06, -0.000179290771484375, -0.0006866455078125, -0.0001735687255859375, -0.00244140625, -0.000118255615234375, -0.000274658203125, -4.00543212890625e-05, -4.9591064453125e-05, -6.29425048828125e-05, -0.000118255615234375, -5.7220458984375e-06, -0.0002231597900390625, 0.0, -0.0010243654251098633, 0.0, -0.0003643035888671875, 0.0, -1.3947486877441406e-05, 0.0, -0.0026187896728515625, -7.62939453125e-06, -0.0015954971313476562, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0002455711364746094, 0.0, -0.0008392333984375, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -1.52587890625e-05, 0.0, -0.000257015140959993, -1.9073486328125e-06, -0.0015015602111816406, -1.1920928244535389e-07, -4.1961669921875e-05, -2.0265579223632812e-06, -0.0001125335693359375, -0.030340194702148438, -6.103515625e-05, -0.00042724609375, 0.0, -0.5250320434570312, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -4.9219299220576715, "score_history": [-5.7220458984375e-06, -4.015817642211914, -1.3113021850585938e-06, -6.556489552167477e-06, -3.574823495000601e-07, -2.288818359375e-05, 0.0, -6.29425048828125e-05, -0.2589893341064453, -7.05718994140625e-05, -1.0728836059570312e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.11699426174163818, -1.1920928244535389e-07, -0.0012371540069580078, 0.0, -4.0531158447265625e-06, 0.0, -7.033347174001392e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.0013580322265625e-05, -2.3841855067985307e-07, -0.010467529296875, -3.0517578125e-05, -7.62939453125e-06, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00041961669921875, -0.0001049041748046875, -0.0001068115234375, -1.9073486328125e-06, -0.4282904863357544, -6.675719760096399e-06, -0.00029754638671875, -7.62939453125e-06, -0.013874053955078125, 0.0, -1.71661376953125e-05, 0.0, -0.0020246505737304688, 0.0, -0.0010113716125488281, -4.768370445162873e-07, -5.14984130859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0004444122314453125, 0.0, -3.24249267578125e-05, 0.0, -0.00017309188842773438, -3.814697265625e-06, -0.003404974937438965, -1.1920928244535389e-07, -4.00543212890625e-05, -1.9073486328125e-06, -2.09808349609375e-05, -0.005657196044921875, -1.52587890625e-05, -0.000263214111328125, 0.0, -0.005590911954641342, -3.2186455882765586e-06, -0.0002905130386352539, 0.0, -3.814697265625e-06, -0.00026702880859375, -1.9073486328125e-05, -5.91278076171875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001660465932218358, -1.1920928244535389e-07, -0.0015270441072061658, -0.0014731884002685547, -4.57763671875e-05, -0.04222583770751953, -2.6702880859375e-05, -0.001405009999871254, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.008641481399536133, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 2}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "targets"}, "hole1": "extend", "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 71, 137, 21, 110, "targets", "<EOS>", "extend", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "score": -5.386746526888075, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -2.5354537963867188, -8.96453857421875e-05, -0.010371208190917969, 0.0, -0.05944022908806801, -1.1920928244535389e-07, -0.08586478233337402, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.641275405883789, 0.0, -0.04326069355010986, 0.0, -0.021436572074890137, -1.9073486328125e-06, -8.58306884765625e-05, -0.0018329620361328125, -0.0003986358642578125, -0.006900191307067871, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0002269744873046875, -4.9591064453125e-05, -5.996227264404297e-05, 0.0, -4.38690185546875e-05, -1.3947486877441406e-05, -2.7418097943154862e-06, -1.1444091796875e-05, -7.5101784204889555e-06, 0.0, -0.0062427520751953125, -0.0004901885986328125, -0.00023651123046875, -0.0026836395263671875, -0.000152587890625, -0.000240325927734375, -4.38690185546875e-05, -5.91278076171875e-05, -6.103515625e-05, -0.000171661376953125, -9.5367431640625e-06, -0.0001926422119140625, 0.0, -0.0009576082229614258, 0.0, -0.000370025634765625, 0.0, -1.2040138244628906e-05, 0.0, -0.0034313201904296875, -7.62939453125e-06, -0.001605987548828125, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.00023186206817626953, 0.0, -0.0008373260498046875, -5.7220458984375e-06, 0.0, -0.0001773834228515625, 0.0, -1.52587890625e-05, 0.0, -0.00025451177498325706, -1.9073486328125e-06, -0.0015131235122680664, -1.1920928244535389e-07, -4.3988111428916454e-05, -2.0265579223632812e-06, -0.00011444091796875, -0.03052806854248047, -5.91278076171875e-05, -0.00043487548828125, 0.0, -0.6283397078514099, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 2}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Multi-Shot", "hole1": 4, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Multi-Shot", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "targets"}, "hole1": "extend", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}]}, "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 71, 137, 21, 110, "targets", "<EOS>", "extend", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "score": -5.449160696341252, "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -2.5354537963867188, -8.96453857421875e-05, -0.010371208190917969, 0.0, -0.05944022908806801, -1.1920928244535389e-07, -0.08586478233337402, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.21598243713378906, 0.0, -0.0003986358642578125, 0.0, -0.00010800361633300781, -1.9073486328125e-06, -1.156447410583496, -2.0265579223632812e-06, -0.0021491050720214844, -6.198883056640625e-06, -4.9591064453125e-05, -0.4544496536254883, -0.0048656463623046875, -0.02192842960357666, 0.0, -6.29425048828125e-05, -5.14984130859375e-05, -0.0001087188720703125, -5.340576171875e-05, -4.2557716369628906e-05, 0.0, -6.4849853515625e-05, -1.5854835510253906e-05, -3.3378546504536644e-06, -1.9073486328125e-05, -6.198873961693607e-06, 0.0, -0.036734580993652344, -0.0003910064697265625, -0.000255584716796875, -0.00267791748046875, -0.0001697540283203125, -0.0002651214599609375, -4.76837158203125e-05, -5.340576171875e-05, -8.392333984375e-05, -0.000247955322265625, -9.5367431640625e-06, -0.0002117156982421875, 0.0, -0.0010682344436645508, 0.0, -0.000385284423828125, 0.0, -1.1920928955078125e-05, 0.0, -0.0035610198974609375, -7.62939453125e-06, -0.0015993118286132812, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.00022995471954345703, 0.0, -0.0008144378662109375, -5.7220458984375e-06, 0.0, -0.0001850128173828125, 0.0, -1.52587890625e-05, 0.0, -0.0002532005019020289, -1.9073486328125e-06, -0.0015532970428466797, -1.1920928244535389e-07, -4.38690185546875e-05, -2.0265579223632812e-06, -0.0001163482666015625, -0.030443191528320312, -5.91278076171875e-05, -0.00043487548828125, 0.0, -0.5188329815864563, 0.0], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.minions)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}], "gold_code": "class MultiShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            targets.remove(target)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -2.180786710346517, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -1.1658574342727661, -1.9073486328125e-06, -3.814697265625e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.14979511499404907, -1.9073486328125e-06, -0.000202178955078125, -0.0006237030029296875, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.02120208740234375, 0.0, -0.0002995729446411133, -1.6689286894688848e-06, -0.10760307312011719, -1.33514404296875e-05, -3.62396240234375e-05, -2.86102294921875e-05, -7.2479248046875e-05, -0.20127089321613312, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "Word", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -2.649088721836385, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.9565075635910034, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -1.1658574342727661, -1.9073486328125e-06, -3.814697265625e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.14979511499404907, -1.9073486328125e-06, -0.000202178955078125, -0.0006237030029296875, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.02120208740234375, 0.0, -0.0002995729446411133, -1.6689286894688848e-06, -0.10760307312011719, -1.33514404296875e-05, -3.62396240234375e-05, -2.86102294921875e-05, -7.2479248046875e-05, -0.20127089321613312, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -2.8299320583436014, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -0.8718920946121216, 0.0, -5.7220458984375e-06, -0.00376129150390625, -0.17490482330322266, -9.34600830078125e-05, -1.1920928244535389e-07, -0.0008792877197265625, -5.7220458984375e-06, -0.020553508773446083, -0.03714783862233162, -0.0006389617919921875, -0.05233192443847656, -0.0006275177001953125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.003908753395080566, 0.0, -0.000156402587890625, -1.9073468138230965e-06, -0.26025521755218506, -1.9073486328125e-06, -1.9073486328125e-06, -0.0018825531005859375, -7.62939453125e-06, -0.8676997423171997, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.increase_health(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -2.924007829393183, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -1.7969390153884888, -5.7220458984375e-06, -1.9073486328125e-06, -0.0054779052734375, -3.0517578125e-05, -0.20425227284431458, -1.9073486328125e-06, -5.91278076171875e-05, -0.001255035400390625, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.04439735412597656, 0.0, -0.0003414154052734375, -1.311301275563892e-06, -0.10956287384033203, -1.1444091796875e-05, -2.6702880859375e-05, -3.24249267578125e-05, -4.57763671875e-05, -0.22834748029708862, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 3}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "3", "<EOS>"], "score": -3.0297525768372537, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -0.8718920946121216, 0.0, -5.7220458984375e-06, -0.00376129150390625, -0.17490482330322266, -9.34600830078125e-05, -1.1920928244535389e-07, -0.0008792877197265625, -5.7220458984375e-06, -0.020553508773446083, -0.03714783862233162, -0.0006389617919921875, -0.05233192443847656, -0.0006275177001953125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.003908753395080566, 0.0, -0.000156402587890625, -1.9073468138230965e-06, -0.26025521755218506, -1.9073486328125e-06, -1.9073486328125e-06, -0.0018825531005859375, -7.62939453125e-06, -1.0675183534622192, -1.9073486328125e-06], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.increase_health(3)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "Word", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -3.2982340698334696, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.9565075635910034, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -0.8718920946121216, 0.0, -5.7220458984375e-06, -0.00376129150390625, -0.17490482330322266, -9.34600830078125e-05, -1.1920928244535389e-07, -0.0008792877197265625, -5.7220458984375e-06, -0.020553508773446083, -0.03714783862233162, -0.0006389617919921875, -0.05233192443847656, -0.0006275177001953125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.003908753395080566, 0.0, -0.000156402587890625, -1.9073468138230965e-06, -0.26025521755218506, -1.9073486328125e-06, -1.9073486328125e-06, -0.0018825531005859375, -7.62939453125e-06, -0.8676997423171997, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.increase_health(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "Word", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -3.392309840883051, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.9565075635910034, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -1.7969390153884888, -5.7220458984375e-06, -1.9073486328125e-06, -0.0054779052734375, -3.0517578125e-05, -0.20425227284431458, -1.9073486328125e-06, -5.91278076171875e-05, -0.001255035400390625, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.04439735412597656, 0.0, -0.0003414154052734375, -1.311301275563892e-06, -0.10956287384033203, -1.1444091796875e-05, -2.6702880859375e-05, -3.24249267578125e-05, -4.57763671875e-05, -0.22834748029708862, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -3.4690988903138162, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -0.8718920946121216, 0.0, -5.7220458984375e-06, -0.00376129150390625, -0.17490482330322266, -9.34600830078125e-05, -1.1920928244535389e-07, -0.0008792877197265625, -5.7220458984375e-06, -0.020553508773446083, -0.03714783862233162, -0.0006389617919921875, -0.05233192443847656, -0.0006275177001953125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.003908753395080566, 0.0, -0.000156402587890625, -1.9073468138230965e-06, -0.26025521755218506, -1.9073486328125e-06, -1.9073486328125e-06, -0.0018825531005859375, -7.62939453125e-06, -1.5068665742874146, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 3}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "Word", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "3", "<EOS>"], "score": -3.498054588327122, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.9565075635910034, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -0.8718920946121216, 0.0, -5.7220458984375e-06, -0.00376129150390625, -0.17490482330322266, -9.34600830078125e-05, -1.1920928244535389e-07, -0.0008792877197265625, -5.7220458984375e-06, -0.020553508773446083, -0.03714783862233162, -0.0006389617919921875, -0.05233192443847656, -0.0006275177001953125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.003908753395080566, 0.0, -0.000156402587890625, -1.9073468138230965e-06, -0.26025521755218506, -1.9073486328125e-06, -1.9073486328125e-06, -0.0018825531005859375, -7.62939453125e-06, -1.0675183534622192, -1.9073486328125e-06], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.increase_health(3)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -3.9118884637835905, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -0.8718920946121216, 0.0, -5.7220458984375e-06, -0.00376129150390625, -0.17490482330322266, -9.34600830078125e-05, -1.1920928244535389e-07, -0.0008792877197265625, -5.7220458984375e-06, -0.020553508773446083, -0.03714783862233162, -0.0006389617919921875, -0.05233192443847656, -0.0006275177001953125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.003908753395080566, 0.0, -0.000156402587890625, -1.9073468138230965e-06, -1.6644586324691772, 0.0, 0.0, -5.7220458984375e-05, -0.49127674102783203, -7.438637840095907e-05, -5.9604644775390625e-06, -0.000141143798828125, -3.814697265625e-05, -0.0018217270262539387, -0.019011493772268295, -4.00543212890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.03485875576734543, -1.1920928244535389e-07], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.add_buff(Buff(ChangeAttack(2)))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.139394309485731, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -1.1658574342727661, -1.9073486328125e-06, -3.814697265625e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.14979511499404907, -1.9073486328125e-06, -0.000202178955078125, -0.0006237030029296875, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.02120208740234375, 0.0, -0.0002995729446411133, -1.6689286894688848e-06, -0.10760307312011719, -1.33514404296875e-05, -3.62396240234375e-05, -2.86102294921875e-05, -7.2479248046875e-05, -2.1598784923553467, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(2)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -4.24267789360362, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -1.1658574342727661, -1.9073486328125e-06, -3.814697265625e-06, -0.0005664825439453125, -1.9073486328125e-06, -2.132483959197998, 0.0, -1.9073486328125e-05, -0.0006847381591796875, -4.1961669921875e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.020090103149414062, -1.9073486328125e-06, -0.0003396272659301758, -1.6689286894688848e-06, -0.10949146747589111, -1.33514404296875e-05, -4.1961669921875e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.27975404262542725, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -4.309069246451934, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -0.8718920946121216, 0.0, -5.7220458984375e-06, -0.00376129150390625, -1.831498146057129, -7.414811261696741e-05, -9.5367431640625e-06, -4.57763671875e-05, -9.5367431640625e-06, -0.0012614711886271834, -0.021244285628199577, -3.4332275390625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.06641281396150589, 0.0, -0.000110626220703125, -0.5092782974243164, -0.000446319580078125, 0.0, -5.7220458984375e-06, 0.0, -0.0018482208251953125, 0.0, -0.000164031982421875, -1.311301275563892e-06, -0.16916847229003906, -3.0517578125e-05, -2.6702880859375e-05, -5.340576171875e-05, -7.05718994140625e-05, -0.29844212532043457, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(2)))\n        self.target.increase_health(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.523971647423302, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -0.8718920946121216, 0.0, -5.7220458984375e-06, -0.00376129150390625, -1.831498146057129, -7.414811261696741e-05, -9.5367431640625e-06, -4.57763671875e-05, -9.5367431640625e-06, -0.0012614711886271834, -0.021244285628199577, -3.4332275390625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.06641281396150589, 0.0, -0.000110626220703125, -0.9242439270019531, -0.26566410064697266, -1.9073486328125e-06, -0.0009326934814453125, 0.0, -0.0035954713821411133, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(2)))\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "PowerWordShield", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 2}]}]}, "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "Word", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -4.607696320975599, "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.9565075635910034, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -1.1658574342727661, -1.9073486328125e-06, -3.814697265625e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.14979511499404907, -1.9073486328125e-06, -0.000202178955078125, -0.0006237030029296875, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.02120208740234375, 0.0, -0.0002995729446411133, -1.6689286894688848e-06, -0.10760307312011719, -1.33514404296875e-05, -3.62396240234375e-05, -2.86102294921875e-05, -7.2479248046875e-05, -2.1598784923553467, 0.0], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(2)\n"}], "gold_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word: Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n        player.draw()\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "taunt"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.23442107014019342, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -0.002456661779433489, 0.0, -0.008966445922851562, 0.0, -4.76837158203125e-05, -6.29425048828125e-05, -1.728534698486328e-05, 0.0], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sen'jin Shieldmasta"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "taunt"}], "hole0": "Sen'jinShieldmasta", "hole4": "p"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Sen'jin", " ", "Shieldmasta", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -2.4051239715906405, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -1.6645679473876953, -0.20712661743164062, -2.6702880859375e-05, 0.0, -2.2649765014648438e-06, 0.0, -4.208087921142578e-05, 0.0, -0.0009975433349609375, -9.5367431640625e-06, -5.340576171875e-05, -2.7418097943154862e-06, -0.00014734268188476562, -6.556507287314162e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -2.3841830625315197e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -5.173683166503906e-05, -0.0010547637939453125, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.3709019185625948e-05, 0.0, -0.00057220458984375, 0.0, -0.0004711151123046875, -1.52587890625e-05, -0.00010192394256591797, 0.0, -0.0001659393310546875, 0.0, -0.5150758028030396, 0.0, -1.71661376953125e-05, -0.0037689208984375, -0.000255584716796875, -0.00020587426843121648, -2.0265579223632812e-06, -0.0064345235005021095, -1.1920928244535389e-07, -0.0029870271682739258, 0.0, -6.103515625e-05, -4.76837158203125e-05, -1.7404556274414062e-05, 0.0], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, True)\n\n    def create_minion(self, p):\n        return Minion(3, 5, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sen'jin Shieldmasta"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "taunt"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Sen'jin", " ", "Shieldmasta", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -2.82736959156928, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -1.6645679473876953, -0.20712661743164062, -2.6702880859375e-05, 0.0, -2.2649765014648438e-06, 0.0, -4.208087921142578e-05, 0.0, -0.0009975433349609375, -9.5367431640625e-06, -5.340576171875e-05, -2.7418097943154862e-06, -0.00014734268188476562, -6.556507287314162e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -2.3841830625315197e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -5.173683166503906e-05, -0.0010547637939453125, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.3709019185625948e-05, 0.0, -0.00057220458984375, 0.0, -0.0004711151123046875, -1.52587890625e-05, -0.00010192394256591797, 0.0, -0.0001659393310546875, 0.0, -0.9402905702590942, 0.0, -7.62939453125e-06, -0.002452850341796875, -0.0002498626708984375, -0.00010192392801400274, -2.0265579223632812e-06, -0.0047788238152861595, -1.1920928244535389e-07, -0.00312042236328125, 0.0, -4.9591064453125e-05, -4.76837158203125e-05, -1.728534698486328e-05, 0.0], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, True)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "<UNK>"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sen'jin Shieldmasta"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "taunt"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sen'jin", " ", "Shieldmasta", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 52, 135, "<UNK>", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.293689888911274, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -1.6645679473876953, -1.68231201171875, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, 0.0, -2.1457672119140625e-05, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.960462772236497e-07, -9.40561294555664e-05, -7.271765298355604e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -3.576278118089249e-07, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -3.9577484130859375e-05, -0.0006256103515625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.837163265212439e-05, 0.0, -6.67572021484375e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.06412887573242188, -1.33514404296875e-05, -0.8761273622512817, 0.0, -1.1682510375976562e-05, 0.0, -7.176399230957031e-05, 0.0, -1.33514404296875e-05, -0.0001049041748046875, -6.4849853515625e-05, -2.396106719970703e-05, -1.1920928244535389e-07, -0.0007675716187804937, -1.1920928244535389e-07, -0.003582000732421875, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -1.919269561767578e-05, 0.0], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "taunt"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.89282637339678, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -4.668796539306641, -3.814697265625e-06, -0.0008069276809692383, 0.0, -2.47955322265625e-05, 0.0, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0007152557373046875, -4.38690185546875e-05, -6.580352783203125e-05, 0.0, -0.0024890860076993704, 0.0, -0.008668899536132812, 0.0, -4.57763671875e-05, -6.29425048828125e-05, -1.728534698486328e-05, 0.0], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "charge"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.5027775125916705, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -0.002456661779433489, 0.0, -5.277315139770508, -3.814697265625e-06, -2.47955322265625e-05, -8.96453857421875e-05, -1.5497207641601562e-05, -1.9073486328125e-06], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 3, "hole2": "taunt"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.325346051656048, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -6.1013503074646, 0.0, -0.0010071992874145508, 0.0, -3.4332275390625e-05, -6.103515625e-05, -2.1219253540039062e-05, -1.9073486328125e-06], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "FREE"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "FREE", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.399959142726253, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -0.002456661779433489, 0.0, -6.173464775085449, 0.0, -0.001079559326171875, -2.47955322265625e-05, -6.330013275146484e-05, 0.0], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, FREE=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -7.013785334535719, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -6.791121482849121, -0.0004138946533203125, -1.537799835205078e-05, -3.933906555175781e-06, -0.0006256432388909161, -2.3841855067985307e-07], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "taunt"}], "hole0": "<UNK>Shieldmasta", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.739229783240113, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -7.505388259887695, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -0.002456661779433489, 0.0, -0.008966445922851562, 0.0, -4.76837158203125e-05, -6.29425048828125e-05, -1.728534698486328e-05, 0.0], "inferred_code": "class <UNK>Shieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "spell_targetable"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.847550089877437, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -0.002456661779433489, 0.0, -7.621927261352539, -1.9073486328125e-06, -0.000171661376953125, -8.0108642578125e-05, -4.2438507080078125e-05, 0.0], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "divine_shield"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.996522243541072, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -0.002456661779433489, 0.0, -7.771021842956543, 0.0, -5.53131103515625e-05, -8.58306884765625e-05, -3.254413604736328e-05, 0.0], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 4, "hole2": "taunt"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.954197465382855, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -8.730184555053711, 0.0, -0.0010281801223754883, 0.0, -3.24249267578125e-05, -6.103515625e-05, -2.1219253540039062e-05, 0.0], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 4, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "taunt"}], "hole0": "Sen'jin<UNK>", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -9.04581553429201, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -8.811551094055176, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -0.002456661779433489, 0.0, -0.008966445922851562, 0.0, -4.76837158203125e-05, -6.29425048828125e-05, -1.728534698486328e-05, 0.0], "inferred_code": "class Sen'jin<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sen'jin Shieldmasta", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 3, "hole1": 5, "hole2": "WARRIOR"}], "hole0": "Sen'jinShieldmasta", "hole4": "player"}, "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 22, 111, "True", "<EOS>"], "score": -9.18119650654156, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -0.002456661779433489, 0.0, -8.955020904541016, -3.814697265625e-06, -0.0005855560302734375, -0.000240325927734375, -1.728534698486328e-05, -1.9073486328125e-06], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, WARRIOR=True)\n"}], "gold_code": "class SenjinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -0.3948271331895228, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -0.21945428848266602, -1.1920928244535389e-07, -0.006538867950439453, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -2.0265579223632812e-06, -0.01200103759765625, -1.1444091796875e-05, -7.62939453125e-06, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.043900489807128906, -0.000865936279296875, -0.0003204345703125, -7.82012939453125e-05, -0.00335693359375, -1.9073486328125e-06, -0.0003814697265625, -3.814697265625e-06, -0.0004062652587890625, -0.00055694580078125, -0.0037424564361572266, -2.2649765014648438e-06, -0.00969016458839178, 0.0, -0.000553131103515625, -1.33514404296875e-05, -2.288818359375e-05, -0.0002536773681640625, -3.24249267578125e-05, -0.000255584716796875, -0.0001506805419921875, -5.340576171875e-05, 0.0, -4.57763671875e-05, -4.1961669921875e-05, -0.0005078315734863281, -3.933906555175781e-06, -3.814697265625e-06, -0.000102996826171875, -9.5367431640625e-06, -0.001556992414407432, -8.344646857949556e-07, -8.7738037109375e-05, -6.866455078125e-05, -0.00026035308837890625, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "ROGUE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -2.0802519369457144, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -1.8683505058288574, 0.0, -0.008225679397583008, 0.0, -3.814697265625e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -3.933906555175781e-06, -0.017848968505859375, -9.5367431640625e-06, -9.5367431640625e-06, -0.0001277923583984375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.07273292541503906, -0.0012464523315429688, -0.000263214111328125, -6.67572021484375e-05, -0.0037021636962890625, -1.9073486328125e-06, -0.0003871917724609375, -3.814697265625e-06, -0.0003986358642578125, -0.0005741119384765625, -0.003587961196899414, -2.2649765014648438e-06, -0.00933360867202282, 0.0, -0.0005626678466796875, -1.1444091796875e-05, -2.09808349609375e-05, -0.000213623046875, -3.4332275390625e-05, -0.0002422332763671875, -0.00014495849609375, -5.53131103515625e-05, 0.0, -4.57763671875e-05, -4.1961669921875e-05, -0.0005192756652832031, -3.933906555175781e-06, -3.814697265625e-06, -0.0001010894775390625, -9.5367431640625e-06, -0.0015611647395417094, -8.344646857949556e-07, -8.7738037109375e-05, -7.2479248046875e-05, -0.00025844573974609375, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sinister Strike"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sinister", " ", "Strike", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -2.6621873403030705, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -2.475404739379883, -0.00049591064453125, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.3709068298339844e-05, -3.814697265625e-06, -0.017055511474609375, -1.1444091796875e-05, -1.9073486328125e-06, -1.311301275563892e-06, -7.462501525878906e-05, -6.31808916295995e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.933906555175781e-06, -1.5020257706055418e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.00010383116023149341, -0.00116729736328125, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -2.1219253540039062e-05, 0.0, -0.0011463165283203125, 0.0, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0012798309326171875, 0.0, -5.7220458984375e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001983642578125, -3.576278118089249e-07, -0.036332957446575165, -5.483625955093885e-06, -2.0265579223632812e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -0.06551551818847656, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.3589859008789062e-05, 0.0, -0.0007877349853515625, -0.000598907470703125, -8.58306884765625e-05, -9.72747802734375e-05, -0.04211902618408203, -2.47955322265625e-05, -0.0001678466796875, -5.7220458984375e-06, -0.0009670257568359375, -9.72747802734375e-05, -0.004637002944946289, -3.576278118089249e-07, -0.008530734106898308, 0.0, -0.000415802001953125, -7.62939453125e-06, -2.47955322265625e-05, -0.0001678466796875, -5.14984130859375e-05, -0.000274658203125, -0.0001354217529296875, -4.57763671875e-05, 0.0, -4.1604042053222656e-05, -4.00543212890625e-05, -0.0004717111587524414, -3.933906555175781e-06, -3.814697265625e-06, -9.34600830078125e-05, -9.5367431640625e-06, -0.0015720127848908305, -8.344646857949556e-07, -9.72747802734375e-05, -7.05718994140625e-05, -0.000240325927734375, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -3.5398248491394853, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -3.270728588104248, 0.0, -0.11918926239013672, -1.1920928244535389e-07, -2.6702880859375e-05, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -2.0265579223632812e-06, -0.011746406555175781, -1.33514404296875e-05, -7.62939453125e-06, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.02459239959716797, -0.0007419586181640625, -0.0002689361572265625, -8.96453857421875e-05, -0.0045146942138671875, -1.9073486328125e-06, -0.00037384033203125, -3.814697265625e-06, -0.00041961669921875, -0.0005512237548828125, -0.0038225650787353516, -3.576278118089249e-07, -0.009286521933972836, 0.0, -0.0005130767822265625, -1.33514404296875e-05, -2.288818359375e-05, -0.00026702880859375, -3.4332275390625e-05, -0.000263214111328125, -0.000148773193359375, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -4.1961669921875e-05, -0.0005002021789550781, -3.933906555175781e-06, -3.814697265625e-06, -0.000102996826171875, -9.5367431640625e-06, -0.001560807111673057, -8.344646857949556e-07, -8.7738037109375e-05, -6.866455078125e-05, -0.00025844573974609375, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -4.22989690739368, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -0.21945428848266602, -1.1920928244535389e-07, -0.006538867950439453, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -2.0265579223632812e-06, -0.01200103759765625, -1.1444091796875e-05, -7.62939453125e-06, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.3383846282958984, -0.000530242919921875, -0.0001220703125, 0.0, -0.4659900665283203, -1.33514404296875e-05, -0.039844512939453125, -1.71661376953125e-05, -0.0002422332763671875, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0003452301025390625, -6.103515625e-05, -0.00014495849609375, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00020599365234375, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00010132789611816406, -5.7220458984375e-06, -0.0012360811233520508, -4.0531158447265625e-06, -0.00027799373492598534, 0.0, -3.814697265625e-05, -0.04201984405517578, -1.33514404296875e-05, -0.0025959014892578125, 0.0, -0.006123542785644531, -1.4305104514278355e-06, -4.792213439941406e-05, 0.0, -1.33514404296875e-05, -3.0517578125e-05, -2.09808349609375e-05, -5.7220458984375e-05, -0.00037384033203125, -9.34600830078125e-05, 0.0, -6.794928049203008e-05, -5.841255187988281e-06, -0.0006799697293899953, -2.0265579223632812e-06, -3.814697265625e-06, -0.000186920166015625, -9.5367431640625e-06, -0.0014345645904541016, -6.794906312279636e-06, -6.103515625e-05, -5.14984130859375e-05, -0.00075531005859375, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "ROGUE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.296803955679124, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -1.8683505058288574, 0.0, -0.008225679397583008, 0.0, -3.814697265625e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -3.933906555175781e-06, -0.017848968505859375, -9.5367431640625e-06, -9.5367431640625e-06, -0.0001277923583984375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.814441680908203, -0.0003833770751953125, -0.0001468658447265625, 0.0, -0.395538330078125, -1.1444091796875e-05, -0.05175209045410156, -1.9073486328125e-05, -0.0002613067626953125, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.000354766845703125, -6.103515625e-05, -0.0001468658447265625, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.000202178955078125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00010132789611816406, -5.7220458984375e-06, -0.0012418031692504883, -4.0531158447265625e-06, -0.0002769209095276892, 0.0, -3.62396240234375e-05, -0.034915924072265625, -1.33514404296875e-05, -0.0025730133056640625, 0.0, -0.006279945373535156, -1.4305104514278355e-06, -4.982948303222656e-05, 0.0, -1.1444091796875e-05, -3.0517578125e-05, -2.09808349609375e-05, -5.53131103515625e-05, -0.000370025634765625, -9.34600830078125e-05, 0.0, -6.78300712024793e-05, -5.841255187988281e-06, -0.0006895064725540578, -2.0265579223632812e-06, -3.814697265625e-06, -0.0001850128173828125, -7.62939453125e-06, -0.0014308691024780273, -6.556489552167477e-06, -6.103515625e-05, -5.340576171875e-05, -0.000751495361328125, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.731213155578331, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -0.21945428848266602, -1.1920928244535389e-07, -0.006538867950439453, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -2.0265579223632812e-06, -4.973666191101074, -0.000118255615234375, -7.62939453125e-06, -0.0001277923583984375, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.35556507110595703, -0.0004901885986328125, -0.000347137451171875, -5.91278076171875e-05, -0.007121086120605469, -3.814697265625e-06, -0.0006198883056640625, -5.7220458984375e-06, -0.001209259033203125, -0.0004730224609375, -0.00379025936126709, -3.576278118089249e-07, -0.011382697150111198, 0.0, -0.00046539306640625, -5.7220458984375e-06, -1.9073486328125e-05, -0.000286102294921875, -2.47955322265625e-05, -0.000247955322265625, -0.0001964569091796875, -5.340576171875e-05, 0.0, -4.553794860839844e-05, -4.00543212890625e-05, -0.0005211830139160156, -3.933906555175781e-06, -1.9073486328125e-06, -9.1552734375e-05, -7.62939453125e-06, -0.0015797613887116313, -8.344646857949556e-07, -8.392333984375e-05, -6.103515625e-05, -0.0002574920654296875, 0.0, -0.0056591033935546875, -0.0002117156982421875, -3.814697265625e-06, -7.62939453125e-06, -0.03465843200683594, 0.0, -1.1444091796875e-05, 0.0, -0.000316619873046875, -1.9073486328125e-05, -0.002337217330932617, -4.768370445162873e-07, -0.00284224608913064, -1.6689286894688848e-06, -0.0005363225936889648, -2.0265579223632812e-06, -2.6702880859375e-05, -1.9073486328125e-05, -0.000286102294921875, -0.00012969970703125, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -0.00010752677917480469, -1.728534698486328e-05, -0.007075309753417969, -6.079673767089844e-06, -9.5367431640625e-06, -8.20159912109375e-05, -5.7220458984375e-06, -0.00206351256929338, -9.536738616588991e-07, -9.918212890625e-05, -0.00014495849609375, -0.000133514404296875, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.770079022418358, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -3.270728588104248, 0.0, -2.2506961822509766, 0.0, -2.110004425048828e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.894371032714844e-06, -3.933906555175781e-06, -0.018230438232421875, -9.5367431640625e-06, -9.5367431640625e-06, -0.0001506805419921875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.11863327026367188, -0.0014429092407226562, -0.000232696533203125, -9.5367431640625e-05, -0.0025529861450195312, -1.9073486328125e-06, -0.00038909912109375, -3.814697265625e-06, -0.000400543212890625, -0.0005645751953125, -0.0035479068756103516, -2.2649765014648438e-06, -0.009014486335217953, 0.0, -0.0005645751953125, -1.1444091796875e-05, -2.288818359375e-05, -0.0002269744873046875, -3.24249267578125e-05, -0.0002288818359375, -0.00014495849609375, -5.7220458984375e-05, 0.0, -4.565715789794922e-05, -4.00543212890625e-05, -0.0005269050598144531, -3.933906555175781e-06, -3.814697265625e-06, -0.0001010894775390625, -9.5367431640625e-06, -0.0015612839488312602, -8.344646857949556e-07, -8.58306884765625e-05, -7.2479248046875e-05, -0.0002651214599609375, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sinister Strike"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sinister", " ", "Strike", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.933714737282095, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -2.475404739379883, -0.00049591064453125, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.3709068298339844e-05, -3.814697265625e-06, -0.017055511474609375, -1.1444091796875e-05, -1.9073486328125e-06, -1.311301275563892e-06, -7.462501525878906e-05, -6.31808916295995e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.933906555175781e-06, -1.5020257706055418e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.00010383116023149341, -0.00116729736328125, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -2.1219253540039062e-05, 0.0, -0.0011463165283203125, 0.0, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0012798309326171875, 0.0, -5.7220458984375e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001983642578125, -3.576278118089249e-07, -0.036332957446575165, -5.483625955093885e-06, -2.0265579223632812e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.194894790649414, -0.00012969970703125, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -0.0009098052978515625, -0.00018310546875, -0.0001373291015625, -5.91278076171875e-05, -0.10796833038330078, -3.62396240234375e-05, -0.0003032684326171875, -7.62939453125e-06, -0.001953125, -8.392333984375e-05, -0.004769563674926758, -3.576278118089249e-07, -0.010840175673365593, 0.0, -0.0003757476806640625, -5.7220458984375e-06, -1.71661376953125e-05, -0.0001964569091796875, -4.38690185546875e-05, -0.000278472900390625, -0.000164031982421875, -4.38690185546875e-05, 0.0, -4.1484832763671875e-05, -4.1961669921875e-05, -0.0005441904067993164, -3.933906555175781e-06, -3.814697265625e-06, -8.58306884765625e-05, -7.62939453125e-06, -0.0015983580378815532, -9.536738616588991e-07, -9.1552734375e-05, -6.29425048828125e-05, -0.00022411346435546875, 0.0, -0.00240325927734375, -0.000232696533203125, -3.814697265625e-06, -5.7220458984375e-06, -0.054329872131347656, 0.0, -1.1444091796875e-05, 0.0, -0.0003795623779296875, -1.9073486328125e-05, -0.0021637678146362305, -4.768370445162873e-07, -0.0023945446591824293, -1.5497195136049413e-06, -0.0005323886871337891, -2.0265579223632812e-06, -2.47955322265625e-05, -2.09808349609375e-05, -0.0003147125244140625, -0.00012969970703125, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -0.00010180473327636719, -1.919269561767578e-05, -0.007170677185058594, -6.079673767089844e-06, -9.5367431640625e-06, -8.20159912109375e-05, -5.7220458984375e-06, -0.0020785329397767782, -8.344646857949556e-07, -9.72747802734375e-05, -0.0001506805419921875, -0.00011444091796875, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sinister Strike"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sinister", " ", "Strike", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.996551279543986, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -2.475404739379883, -0.00049591064453125, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.3709068298339844e-05, -3.814697265625e-06, -0.017055511474609375, -1.1444091796875e-05, -1.9073486328125e-06, -1.311301275563892e-06, -7.462501525878906e-05, -6.31808916295995e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.933906555175781e-06, -1.5020257706055418e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.00010383116023149341, -0.00116729736328125, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -2.1219253540039062e-05, 0.0, -0.0011463165283203125, 0.0, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0012798309326171875, 0.0, -5.7220458984375e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001983642578125, -3.576278118089249e-07, -0.036332957446575165, -5.483625955093885e-06, -2.0265579223632812e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -0.06551551818847656, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.3589859008789062e-05, 0.0, -0.0007877349853515625, -0.000598907470703125, -8.58306884765625e-05, -9.72747802734375e-05, -3.1990928649902344, -9.5367431640625e-06, -0.19031810760498047, -1.52587890625e-05, -0.0014028549194335938, 0.0, -0.00011074542999267578, -5.7220458984375e-06, -5.7220458984375e-06, -0.00016021728515625, -4.76837158203125e-05, -0.00023651123046875, -0.0003108978271484375, -2.86102294921875e-05, -1.9073486328125e-06, -3.516674041748047e-05, -6.103515625e-05, -0.0006922483444213867, -2.0265579223632812e-06, -5.7220458984375e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.001639366033487022, -3.576278118089249e-07, -6.103515625e-05, -0.0001163482666015625, -0.000255584716796875, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "player"}}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "player", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.162457947879005, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -0.21945428848266602, -1.1920928244535389e-07, -0.006538867950439453, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -2.0265579223632812e-06, -0.01200103759765625, -1.1444091796875e-05, -7.62939453125e-06, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.3383846282958984, -0.000530242919921875, -0.0001220703125, 0.0, -1.2831802368164062, -0.001926422119140625, -1.1341629028320312, -3.0517578125e-05, -0.01682281494140625, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.004063725471496582, -1.52587890625e-05, -0.0005971193313598633, 0.0, -1.9073486328125e-06, -0.00020599365234375, -1.9073486328125e-06, -0.0001354217529296875, -3.814697265625e-06, -8.0108642578125e-05, 0.0, -7.462501525878906e-05, -5.7220458984375e-06, -0.0011731386184692383, -4.0531158447265625e-06, -0.00027179543394595385, 0.0, -4.00543212890625e-05, -0.04102516174316406, -1.33514404296875e-05, -0.00244140625, 0.0, -0.005681157112121582, -1.4305104514278355e-06, -4.9948692321777344e-05, 0.0, -1.33514404296875e-05, -3.0517578125e-05, -2.09808349609375e-05, -5.53131103515625e-05, -0.0003757476806640625, -9.5367431640625e-05, 0.0, -6.59227225696668e-05, -7.748603820800781e-06, -0.000675797404255718, -2.0265579223632812e-06, -5.7220458984375e-06, -0.000194549560546875, -9.5367431640625e-06, -0.0014458894729614258, -9.417489309271332e-06, -6.103515625e-05, -5.340576171875e-05, -0.0007715225219726562, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for player in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "find_spell_target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "find_spell_target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.200074679363269, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -0.21945428848266602, -1.1920928244535389e-07, -0.006538867950439453, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -2.0265579223632812e-06, -0.01200103759765625, -1.1444091796875e-05, -7.62939453125e-06, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.043900489807128906, -0.000865936279296875, -0.0003204345703125, -7.82012939453125e-05, -0.00335693359375, -1.9073486328125e-06, -0.0003814697265625, -3.814697265625e-06, -0.0004062652587890625, -0.00055694580078125, -0.0037424564361572266, -2.2649765014648438e-06, -5.814452648162842, -7.62939453125e-06, -0.0012664794921875, -3.814697265625e-06, -1.1444091796875e-05, -0.00029754638671875, -2.288818359375e-05, -0.0001678466796875, -5.7220458984375e-05, -6.866455078125e-05, 0.0, -5.650520324707031e-05, -4.57763671875e-05, -0.0004056692123413086, -5.841255187988281e-06, -5.7220458984375e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0015871523646637797, -7.152555099310121e-07, -8.96453857421875e-05, -0.0001068115234375, -0.00022125244140625, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.find_spell_target.damage(player.\n            effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.293931846651823, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -0.21945428848266602, -1.1920928244535389e-07, -5.802271366119385, 0.0, -1.9311904907226562e-05, 0.0, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -9.894371032714844e-06, -3.933906555175781e-06, -0.017946243286132812, -9.5367431640625e-06, -9.5367431640625e-06, -0.0001468658447265625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.14236068725585938, -0.0015735626220703125, -0.00031280517578125, -8.0108642578125e-05, -0.0018796920776367188, -1.9073486328125e-06, -0.000396728515625, -3.814697265625e-06, -0.0003833770751953125, -0.000568389892578125, -0.0035097599029541016, -2.384185791015625e-06, -0.009624360129237175, 0.0, -0.0006046295166015625, -1.1444091796875e-05, -2.09808349609375e-05, -0.000217437744140625, -3.24249267578125e-05, -0.0002288818359375, -0.0001430511474609375, -5.7220458984375e-05, 0.0, -4.565715789794922e-05, -4.00543212890625e-05, -0.0005326271057128906, -3.933906555175781e-06, -3.814697265625e-06, -0.000102996826171875, -9.5367431640625e-06, -0.0015574692515656352, -8.344646857949556e-07, -8.58306884765625e-05, -7.2479248046875e-05, -0.00026416778564453125, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.6305058069116, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -0.21945428848266602, -1.1920928244535389e-07, -0.006538867950439453, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -2.0265579223632812e-06, -0.01200103759765625, -1.1444091796875e-05, -7.62939453125e-06, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.043900489807128906, -0.000865936279296875, -0.0003204345703125, -7.82012939453125e-05, -5.798940658569336, -7.62939453125e-06, -0.4532966613769531, -1.1444091796875e-05, -0.0015497207641601562, 0.0, -0.00011074542999267578, -7.62939453125e-06, -5.7220458984375e-06, -0.0004520416259765625, -3.0517578125e-05, -0.0002613067626953125, -0.00019073486328125, -3.24249267578125e-05, 0.0, -3.731250762939453e-05, -8.20159912109375e-05, -0.000664830207824707, -1.9073486328125e-06, -5.7220458984375e-06, -6.67572021484375e-05, -5.7220458984375e-06, -0.0016419886378571391, -4.768370445162873e-07, -6.103515625e-05, -0.000102996826171875, -0.000278472900390625, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Sinister Strike", "hole1": 1, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "SinisterStrike", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 3}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "players"}, "target": {"_type": "Name", "id": "player"}}]}, "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "player", "<EOS>", 13, 80, 21, 110, "game", "<EOS>", "players", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.7515047855262935, "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -0.21945428848266602, -1.1920928244535389e-07, -0.006538867950439453, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -2.0265579223632812e-06, -0.01200103759765625, -1.1444091796875e-05, -7.62939453125e-06, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.3383846282958984, -0.000530242919921875, -0.0001220703125, 0.0, -1.2831802368164062, -0.001926422119140625, -0.48163318634033203, -0.0001659393310546875, -0.030877113342285156, -3.814697265625e-06, -0.0018405914306640625, -0.00017547607421875, -0.5955994129180908, -1.537799835205078e-05, -0.5256757736206055, -0.020051956176757812, -1.71661376953125e-05, -0.1368846893310547, -2.6702880859375e-05, -0.00350034236907959, -2.384185791015625e-06, -0.00021564960479736328, -1.9073486328125e-06, -1.52587890625e-05, -7.05718994140625e-05, -3.4332275390625e-05, -0.0001087188720703125, -0.0001926422119140625, -6.29425048828125e-05, -1.9073486328125e-06, -4.112720489501953e-05, -1.9073486328125e-05, -0.0005075931549072266, -3.933906555175781e-06, -5.7220458984375e-06, -0.000133514404296875, -1.1444091796875e-05, -0.001412033918313682, -7.152555099310121e-07, -6.103515625e-05, -9.918212890625e-05, -0.00039768218994140625, 0.0], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for player in game.players:\n            minion.damage(player.effective_spell_damage(3), self)\n"}], "gold_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "card"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "card", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -1.893010867742504, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -0.3282508850097656, -0.07726287841796875, -0.5224630832672119, -2.9802276912960224e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.4682847857475281, -0.06128017604351044, -3.814697265625e-06, -7.62939453125e-06, -0.0016863346099853516, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -2.825234696501866e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.2649619495496154e-05, 0.0, -4.386846558190882e-05, -3.814697265625e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Summon(card()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "card"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "card", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -2.825654221687927, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -1.304885745048523, -1.1920928244535389e-07, -0.001430511474609375, -0.00045013427734375, -1.52587890625e-05, -0.002994537353515625, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0006184577941894531, 0.0, -0.007370948791503906, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.28235340118408203, -0.059126853942871094, -0.6115584969520569, -2.861018856492592e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.4732401669025421, -0.061700060963630676, -3.814697265625e-06, -7.62939453125e-06, -0.0015848875045776367, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -2.8013933842885308e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.2649619495496154e-05, 0.0, -4.386846558190882e-05, -3.814697265625e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Summon(card()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "SuccubusSuccubus"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Succubus", "Succubus", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -3.059644661524743, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -0.3282508850097656, -0.07726287841796875, -0.5224630832672119, -2.9802276912960224e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.2282620668411255, -0.4599829316139221, -0.009362097829580307, -2.86102294921875e-05, 0.0, -0.00026631137006916106, 0.0, 0.0, -1.1682510375976562e-05, 0.0, -2.5033763449755497e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -2.276882696605753e-05, 0.0, -4.1365023207617924e-05, -3.814697265625e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Summon(SuccubusSuccubus()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "ReplaceHeroWithMinion", "hole1": {"_type": "Name", "id": "card"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Replace", "Hero", "With", "Minion", "<EOS>", 21, 110, "card", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -3.0817560265515738, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -0.3282508850097656, -0.07726287841796875, -1.090770959854126, -0.08371257781982422, -0.46160805225372314, -0.032530780881643295, -0.0004901885986328125, -4.38690185546875e-05, -1.9073486328125e-06, -0.08773487061262131, -0.08850057423114777, -2.6702880859375e-05, -1.1444091796875e-05, -0.39698338508605957, 0.0, 0.0, -4.4226646423339844e-05, 0.0, -6.067640788387507e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.6106623408850282e-05, 0.0, -4.148435982642695e-05, -3.933906555175781e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(ReplaceHeroWithMinion(card()), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Succubus"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Succubus", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -3.7306236131055073, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -0.3282508850097656, -0.07726287841796875, -0.5224630832672119, -2.9802276912960224e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.2282620668411255, -1.1399083137512207, -9.5367431640625e-06, -3.814697265625e-06, -0.0007010521367192268, 0.0, 0.0, -9.655952453613281e-06, 0.0, -2.539138586143963e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.24112045543734e-05, 0.0, -4.148422522121109e-05, -3.814697265625e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Summon(Succubus()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "ReplaceHeroWithMinion", "hole1": {"_type": "Name", "id": "card"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Replace", "Hero", "With", "Minion", "<EOS>", 21, 110, "card", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -3.7467260035489005, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -1.304885745048523, -1.1920928244535389e-07, -0.001430511474609375, -0.00045013427734375, -1.52587890625e-05, -0.002994537353515625, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0006184577941894531, 0.0, -0.007370948791503906, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.28235340118408203, -0.059126853942871094, -0.9581876397132874, -0.07479171454906464, -0.412725567817688, -0.0374143049120903, -0.000476837158203125, -4.9591064453125e-05, -1.9073486328125e-06, -0.08569251745939255, -0.08725902438163757, -2.6702880859375e-05, -1.1444091796875e-05, -0.412469744682312, 0.0, 0.0, -4.4226646423339844e-05, 0.0, -6.043800021870993e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.813317951222416e-05, 0.0, -4.160356547799893e-05, -3.933906555175781e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(ReplaceHeroWithMinion(card()), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -3.9856068166447756, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.2779626846313477, -3.62396240234375e-05, -1.728094220161438, -4.076882032677531e-05, -0.5456581115722656, -1.1444091796875e-05, -4.589557647705078e-05, 0.0, 0.0, -7.62939453125e-06, 0.0, -2.4199445761041716e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.716607039270457e-05, 0.0, -5.4120057029649615e-05, -5.7220458984375e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "SuccubusSuccubus"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Succubus", "Succubus", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -3.999508322811579, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -1.304885745048523, -1.1920928244535389e-07, -0.001430511474609375, -0.00045013427734375, -1.52587890625e-05, -0.002994537353515625, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0006184577941894531, 0.0, -0.007370948791503906, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.28235340118408203, -0.059126853942871094, -0.6115584969520569, -2.861018856492592e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.2181963920593262, -0.48247966170310974, -0.009421473369002342, -2.86102294921875e-05, 0.0, -0.00026845710817724466, 0.0, 0.0, -1.1563301086425781e-05, 0.0, -2.4795350327622145e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -2.2649619495496154e-05, 0.0, -4.124581755604595e-05, -3.814697265625e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Summon(SuccubusSuccubus()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.055296787734932, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.2779626846313477, -3.62396240234375e-05, -0.36404719948768616, -1.1324817933200393e-05, -0.14527130126953125, -0.0050601959228515625, -7.62939453125e-05, -7.82012939453125e-05, -4.589556920109317e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.3692760467529297, -0.11677932739257812, -0.000186920166015625, -0.0001659393310546875, 0.0, -0.38457703590393066, -0.023670624941587448, 0.0, -3.4332275390625e-05, -0.00011444091796875, 0.0, -4.1961669921875e-05, 0.0, -0.0005636215209960938, -2.95634672511369e-05, -0.8181219100952148, -1.9073486328125e-06, -0.0001239776611328125, -3.814697265625e-06, -0.0036983489990234375, -2.47955322265625e-05, -1.9073486328125e-06, -0.000431060791015625, -3.814697265625e-06, -0.11088824272155762, -0.0001951456069946289, -1.919269561767578e-05, -4.0531158447265625e-06, 0.0, -1.0848032616195269e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.6450856492156163e-05, 0.0, -5.0424878281774e-05, -7.867813110351562e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.DRAGON),\n            BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Template13", "hole0": "WeaponSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 46, 128, "Weapon", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.184729769908898, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.2779626846313477, -3.62396240234375e-05, -0.36404719948768616, -1.1324817933200393e-05, -2.0075016021728516, -1.9073486328125e-05, -0.09958839416503906, -6.079673767089844e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0015359101817011833, -0.00016105175018310547, 0.0, -5.340576171875e-05, 0.0, -1.7881340681924485e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.7417898309067823e-05, 0.0, -6.699418736388907e-05, -5.841255187988281e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Kill(), WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "ReplaceHeroWithMinion", "hole1": {"_type": "Name", "id": "card"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Replace", "Hero", "With", "Minion", "<EOS>", 21, 110, "card", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.2408346254653395, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -0.3282508850097656, -0.07726287841796875, -1.090770959854126, -0.08371257781982422, -0.46160805225372314, -0.032530780881643295, -0.0004901885986328125, -4.38690185546875e-05, -1.9073486328125e-06, -0.08773487061262131, -0.08850057423114777, -2.6702880859375e-05, -1.1444091796875e-05, -1.5561153888702393, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -3.993475911556743e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.205358396167867e-05, 0.0, -3.993468635599129e-05, -3.814697265625e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(ReplaceHeroWithMinion(card()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.432194122715572, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.2779626846313477, -3.62396240234375e-05, -0.36404719948768616, -1.1324817933200393e-05, -0.14527130126953125, -0.0050601959228515625, -7.62939453125e-05, -7.82012939453125e-05, -4.589556920109317e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.3692760467529297, -0.11677932739257812, -0.000186920166015625, -0.0001659393310546875, 0.0, -0.38457703590393066, -0.023670624941587448, 0.0, -3.4332275390625e-05, -0.00011444091796875, 0.0, -4.1961669921875e-05, 0.0, -0.0005636215209960938, -2.95634672511369e-05, -1.1426153182983398, -9.5367431640625e-06, -0.00026702880859375, 0.0, -0.00302886962890625, -3.24249267578125e-05, -3.814697265625e-06, -0.0004405975341796875, -3.814697265625e-06, -0.163796067237854, -0.0001894235610961914, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -1.0609614946588408e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.6450856492156163e-05, 0.0, -5.2212944865459576e-05, -7.867813110351562e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.BEAST),\n            BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.452605988453996, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.2779626846313477, -3.62396240234375e-05, -1.728094220161438, -4.076882032677531e-05, -0.9217319488525391, -7.62939453125e-06, -0.08890771865844727, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.001627921941690147, -0.00032532215118408203, -3.814697265625e-06, -5.7220458984375e-05, 0.0, -1.7285328794969246e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.443772609694861e-05, 0.0, -7.819918391760439e-05, -5.7220458984375e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Draw(), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -5.075234153996206, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -1.304885745048523, -1.1920928244535389e-07, -0.001430511474609375, -0.00045013427734375, -1.52587890625e-05, -0.002994537353515625, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0006184577941894531, 0.0, -0.007370948791503906, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.152555099310121e-07, -5.7220458984375e-06, -1.4080619812011719, -2.47955322265625e-05, -0.3199889659881592, -1.2516897186287679e-05, -0.13631248474121094, -0.00606536865234375, -7.43865966796875e-05, -8.20159912109375e-05, -4.398822056828067e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.3816719055175781, -0.11608600616455078, -0.0002002716064453125, -0.000164031982421875, 0.0, -0.37460482120513916, -0.02230997011065483, 0.0, -3.4332275390625e-05, -0.0001125335693359375, 0.0, -4.1961669921875e-05, 0.0, -0.0005615949630737305, -2.8609820219571702e-05, -0.8583745956420898, -1.9073486328125e-06, -0.0001220703125, -3.814697265625e-06, -0.003635406494140625, -2.47955322265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -3.814697265625e-06, -0.10988211631774902, -0.0001932382583618164, -1.728534698486328e-05, -4.0531158447265625e-06, 0.0, -1.0848032616195269e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.6450856492156163e-05, 0.0, -5.0424878281774e-05, -7.867813110351562e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.DRAGON),\n            BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Succubus", "hole4": "player"}, "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -5.127062449000022, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.2779626846313477, -3.62396240234375e-05, -0.36404719948768616, -1.1324817933200393e-05, -0.14527130126953125, -0.0050601959228515625, -7.62939453125e-05, -7.82012939453125e-05, -4.589556920109317e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.3692760467529297, -0.11677932739257812, -0.000186920166015625, -0.0001659393310546875, 0.0, -0.38457703590393066, -0.023670624941587448, 0.0, -3.4332275390625e-05, -0.00011444091796875, 0.0, -4.1961669921875e-05, 0.0, -0.0005636215209960938, -2.95634672511369e-05, -1.933363914489746, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.00351715087890625, -3.24249267578125e-05, -3.814697265625e-06, -0.0004520416259765625, -3.814697265625e-06, -0.06764686107635498, -0.0002256631851196289, -1.728534698486328e-05, -4.172325134277344e-06, 0.0, -1.1205658665858209e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.6212439732044004e-05, 0.0, -4.970964801032096e-05, -7.987022399902344e-06], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}], "gold_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Thaddius"}}, {"_type": "Template19", "hole0": "PlayerSelector"}, {"_type": "Template13", "hole0": "InGraveyard", "hole1": {"_type": "Name", "id": "Stalagg"}}]}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "deathrattle"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 171, 46, 128, "Summon", "<EOS>", 21, 110, "Thaddius", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", 46, 128, "In", "Graveyard", "<EOS>", 21, 110, "Stalagg", "<EOS>"], "score": -0.9744388973439229, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -0.05914163589477539, 0.0, -0.004965782165527344, -3.24249267578125e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.0008164644241333008, -0.00042557716369628906, -0.0028896331787109375, -0.01882457733154297, -0.0003452301025390625, -0.0007358789443969727, -2.47955322265625e-05, -3.814697265625e-06, 0.0, -0.007551928982138634, -4.804092168342322e-05, -0.0001087188720703125, -5.7220458984375e-06, -0.0001468658447265625, -7.05718994140625e-05, -1.9073486328125e-06, -0.0008907318115234375, -0.00229644775390625, -0.0014592409133911133, -0.0028498172760009766, -0.05461883544921875, -1.33514404296875e-05, -7.62939453125e-06, -0.7121189832687378, -0.0030465126037597656], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Stalagg())))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Thaddius"}}, {"_type": "Template19", "hole0": "PlayerSelector"}, {"_type": "Template13", "hole0": "InGraveyard", "hole1": {"_type": "Name", "id": "Feugen"}}]}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "deathrattle"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 171, 46, 128, "Summon", "<EOS>", 21, 110, "Thaddius", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", 46, 128, "In", "Graveyard", "<EOS>", 21, 110, "Feugen", "<EOS>"], "score": -1.225080243321706, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -0.05914163589477539, 0.0, -0.004965782165527344, -3.24249267578125e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.0008164644241333008, -0.00042557716369628906, -0.0028896331787109375, -0.01882457733154297, -0.0003452301025390625, -0.0007358789443969727, -2.47955322265625e-05, -3.814697265625e-06, 0.0, -0.007551928982138634, -4.804092168342322e-05, -0.0001087188720703125, -5.7220458984375e-06, -0.0001468658447265625, -7.05718994140625e-05, -1.9073486328125e-06, -0.0008907318115234375, -0.00229644775390625, -0.0014592409133911133, -0.0028498172760009766, -0.05461883544921875, -1.33514404296875e-05, -7.62939453125e-06, -0.9650105237960815, -0.0007963180541992188], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Feugen())))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"_type": "Template11", "hole0": 7, "hole1": 7}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "7", "<EOS>", "7", "<EOS>"], "score": -2.5277114312929143, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -2.511725425720215, -7.43865966796875e-05, -0.0003196688194293529, 0.0, -5.0070502766175196e-06, 0.0], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "charge"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.3495108796877204, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -3.2483811378479004, -2.2649765014648438e-06, -4.1961669921875e-05, -0.0001220703125, -5.14984130859375e-05, -5.7220458984375e-06], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Thaddius"}}, {"_type": "Template19", "hole0": "PlayerSelector"}, {"_type": "Template13", "hole0": "InGraveyardGraveyard", "hole1": {"_type": "Name", "id": "Stalagg"}}]}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "deathrattle"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 171, 46, 128, "Summon", "<EOS>", 21, 110, "Thaddius", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", 46, 128, "In", "Graveyard", "Graveyard", "<EOS>", 21, 110, "Stalagg", "<EOS>"], "score": -3.9973345911229146, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -0.05914163589477539, 0.0, -0.004965782165527344, -3.24249267578125e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.0008164644241333008, -0.00042557716369628906, -0.0028896331787109375, -0.01882457733154297, -0.0003452301025390625, -0.0007358789443969727, -2.47955322265625e-05, -3.814697265625e-06, 0.0, -0.007551928982138634, -4.804092168342322e-05, -0.0001087188720703125, -5.7220458984375e-06, -0.0001468658447265625, -7.05718994140625e-05, -1.9073486328125e-06, -0.0008907318115234375, -0.00229644775390625, -0.0014592409133911133, -0.0028498172760009766, -3.047093391418457, -0.003002166748046875, -9.5367431640625e-06, -3.814697265625e-06, -0.7376669645309448, -0.004925131797790527], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyardGraveyard(Stalagg())))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Thaddius"}}, {"_type": "Template19", "hole0": "PlayerSelector"}, {"_type": "Template13", "hole0": "InGraveyardGraveyard", "hole1": {"_type": "Name", "id": "Feugen"}}]}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "deathrattle"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 171, 46, 128, "Summon", "<EOS>", 21, 110, "Thaddius", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", 46, 128, "In", "Graveyard", "Graveyard", "<EOS>", 21, 110, "Feugen", "<EOS>"], "score": -4.176041713925649, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -0.05914163589477539, 0.0, -0.004965782165527344, -3.24249267578125e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.0008164644241333008, -0.00042557716369628906, -0.0028896331787109375, -0.01882457733154297, -0.0003452301025390625, -0.0007358789443969727, -2.47955322265625e-05, -3.814697265625e-06, 0.0, -0.007551928982138634, -4.804092168342322e-05, -0.0001087188720703125, -5.7220458984375e-06, -0.0001468658447265625, -7.05718994140625e-05, -1.9073486328125e-06, -0.0008907318115234375, -0.00229644775390625, -0.0014592409133911133, -0.0028498172760009766, -3.047093391418457, -0.003002166748046875, -9.5367431640625e-06, -3.814697265625e-06, -0.9201773405075073, -0.0011218786239624023], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyardGraveyard(Feugen())))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "War Golem"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 7, "hole1": 7}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "War", " ", "Golem", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "7", "<EOS>", "7", "<EOS>"], "score": -5.343951341599265, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -4.7547607421875, -0.11207771301269531, -1.33514404296875e-05, -3.814697265625e-06, -6.079673767089844e-06, 0.0, -4.053113570989808e-06, 0.0, -0.00074005126953125, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -6.699562072753906e-05, -8.344650268554688e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000102996826171875, -0.004270047415047884, -1.1920928244535389e-07, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -6.008147101965733e-05, -0.0006545782089233398, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.3351424058782868e-05, -1.1920928244535389e-07, -2.2888181774760596e-05, 0.0, -7.62939453125e-06, -2.86102294921875e-05, -2.6702880859375e-05, -0.4607440233230591, 0.0, -9.655952453613281e-06, 0.0, -2.419947304588277e-05, 0.0, -1.9073486328125e-05, -0.0026950836181640625, -7.2479248046875e-05, -0.0009139225003309548, 0.0, -9.894349204842001e-06, -1.9073486328125e-06], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "minion"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "minion", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.738852353267127, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -5.636028289794922, 0.0, -0.0017557144165039062, -0.0001125335693359375, -4.1961669921875e-05, -7.62939453125e-06], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, minion=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "windfury"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.895437092952186, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -5.794200897216797, -1.9073486328125e-06, -0.0001068115234375, -0.0001201629638671875, -9.918212890625e-05, -1.9073486328125e-06], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "stealth"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "stealth", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.138886184863445, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -6.036837100982666, -3.576278118089249e-07, -0.000713348388671875, -0.0002422332763671875, -0.0001850128173828125, -1.9073486328125e-06], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, stealth=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "Effect"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "Effect", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.183725686244422, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -6.075219631195068, 0.0, -0.006669044494628906, -0.00054168701171875, -0.000385284423828125, -3.814697265625e-06], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, Effect=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "divine_shield"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.551578850917274, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -6.450443744659424, -3.814697265625e-06, -8.20159912109375e-05, -8.20159912109375e-05, -5.7220458984375e-05, -3.814697265625e-06], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 7, "hole1": 7, "hole2": "deathrattle"}], "hole0": "WarGolem", "hole4": "player"}, "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.559188695125037, "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -0.05914163589477539, 0.0, -6.398463726043701, -0.00041961669921875, -0.000232696533203125, -2.47955322265625e-05], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, deathrattle=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"_type": "Template11", "hole0": 7, "hole1": 7}], "hole0": "ForceTank", "hole4": "player"}, "choice_history": [54, 122, "Force", "Tank", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "7", "<EOS>", "7", "<EOS>"], "score": -8.515053826004532, "score_history": [-0.000415802001953125, -0.0007839202880859375, -6.021280765533447, -0.25185626745224, -0.954688310623169, -5.2988529205322266e-05, -1.7881393432617188e-05, -1.1920922133867862e-06, -2.47955322265625e-05, -0.01397705078125, -8.392333984375e-05, -1.311301275563892e-06, -0.00015509086370002478, -1.0251998901367188e-05, -1.2874602361989673e-05, -3.279144948464818e-05, -1.1920922133867862e-06, -3.62396240234375e-05, 0.0, -5.8293175243306905e-05, 0.0, -1.3470649719238281e-05, 0.0, -3.278253643657081e-05, 0.0, -3.814697265625e-06, -1.271113395690918, -7.2479248046875e-05, -0.0003203838423360139, 0.0, -6.55666553939227e-06, 0.0], "inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "War Golem", "hole1": 7, "hole2": "ALL"}], "hole6": [{"_type": "Template11", "hole0": 7, "hole1": 7}], "hole0": "<UNK>Golem", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "7", "<EOS>", "7", "<EOS>"], "score": -8.572192335764043, "score_history": [-0.000415802001953125, -0.0007839202880859375, -6.0494771003723145, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -2.511725425720215, -7.43865966796875e-05, -0.0003196688194293529, 0.0, -5.0070502766175196e-06, 0.0], "inferred_code": "class <UNK>Golem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n"}], "gold_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Acidmaw"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Acidmaw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -1.9503479839751066, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.8791103363037109, -3.814697265625e-06, -0.0026006698608398438, -6.687641143798828e-05, -0.0005474090576171875, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.7404556274414062e-05, -3.814697265625e-06, 0.0, -0.00171661376953125, -0.014476776123046875, -0.0056209564208984375, -0.00985729694366455, -1.1920928244535389e-07, -1.1444091796875e-05, -3.814697265625e-06, -0.5188502669334412, -0.0444893017411232, -0.0001964569091796875, -4.1961669921875e-05, -0.27857494354248047, -1.9073486328125e-06, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Summon(\n            Acidmaw()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Acidmaw"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Acidmaw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -2.4351608135967737, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.5387248992919922, -0.2717599868774414, -0.11059320718050003, -0.0039386749267578125, -2.384185791015625e-06, -1.9073486328125e-05, 0.0, -0.17133712768554688, -0.0027161836624145508, -1.33514404296875e-05, -4.1961669921875e-05, -0.000125885009765625, 0.0, -9.5367431640625e-06, 0.0, -0.0002747774124145508, -9.7632386314217e-05, -0.010492324829101562, -0.0001068115234375, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -0.0001316070556640625, -0.0026082992553710938, -0.013180732727050781, -0.14085149765014648, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.5916944146156311, -0.05934620276093483, -0.0002040863037109375, -4.57763671875e-05, -0.32256650924682617, 0.0, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .BEAST)), ActionTag(Summon(Acidmaw()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Acidmaw"}}, {"_type": "Template19", "hole0": "HeroSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Acidmaw", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -3.3859883190581144, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.8791103363037109, -3.814697265625e-06, -0.0026006698608398438, -6.687641143798828e-05, -0.0005474090576171875, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.7404556274414062e-05, -3.814697265625e-06, 0.0, -0.00171661376953125, -0.014476776123046875, -0.0056209564208984375, -0.00985729694366455, -1.1920928244535389e-07, -1.1444091796875e-05, -3.814697265625e-06, -0.5188502669334412, -0.0444893017411232, -0.0001964569091796875, -4.1961669921875e-05, -1.714188575744629, -2.86102294921875e-05, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Summon(\n            Acidmaw()), HeroSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Acidmaw"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Acidmaw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.584817539369162, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -1.813222885131836, -0.00012969970703125, -5.340576171875e-05, -2.622603005875135e-06, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -0.00015210169658530504, -1.8596476365928538e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00021374225616455078, -1.0251998901367188e-05, -0.001163482666015625, -1.1920922133867862e-06, -7.62939453125e-06, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -0.00015354156494140625, -2.0265579223632812e-06, -0.03644227981567383, -4.1961669921875e-05, -0.00016021728515625, -0.0001621246337890625, -1.7404556274414062e-05, -1.9073486328125e-05, -9.72747802734375e-05, -0.0002593994140625, -7.43865966796875e-05, -0.00046801523421891034, -1.33514404296875e-05, -1.919269561767578e-05, 0.0, -3.468988506938331e-05, 0.0, -4.00543212890625e-05, -0.000423431396484375, -9.5367431640625e-06, -8.2254373410251e-06, 0.0, -0.0015248291892930865, 0.0, -0.00046443939208984375, 0.0, -5.7220458984375e-06, -0.000720977783203125, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.8428277969360352, -1.9073486328125e-06, -0.0028951168060302734, -6.306171417236328e-05, -0.0012874603271484375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -2.3245811462402344e-05, -3.814697265625e-06, 0.0, -0.0022792816162109375, -0.01645660400390625, -0.004944801330566406, -0.009770392440259457, -1.1920928244535389e-07, -1.1444091796875e-05, -5.7220458984375e-06, -0.5303215980529785, -0.0461539626121521, -0.0002231597900390625, -4.38690185546875e-05, -0.2689216136932373, -1.9073486328125e-06, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Summon(\n            Acidmaw()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Acidmaw"}}, {"_type": "Template19", "hole0": "HeroSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Acidmaw", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -3.629088578489352, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.5387248992919922, -0.2717599868774414, -0.11059320718050003, -0.0039386749267578125, -2.384185791015625e-06, -1.9073486328125e-05, 0.0, -0.17133712768554688, -0.0027161836624145508, -1.33514404296875e-05, -4.1961669921875e-05, -0.000125885009765625, 0.0, -9.5367431640625e-06, 0.0, -0.0002747774124145508, -9.7632386314217e-05, -0.010492324829101562, -0.0001068115234375, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -0.0001316070556640625, -0.0026082992553710938, -0.013180732727050781, -0.14085149765014648, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.5916944146156311, -0.05934620276093483, -0.0002040863037109375, -4.57763671875e-05, -1.5164713859558105, -2.288818359375e-05, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .BEAST)), ActionTag(Summon(Acidmaw()), HeroSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "BlackAcidmaw"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Black", "Acidmaw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.70186577878313, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.8791103363037109, -3.814697265625e-06, -0.0026006698608398438, -6.687641143798828e-05, -0.0005474090576171875, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.7404556274414062e-05, -3.814697265625e-06, 0.0, -0.00171661376953125, -0.014476776123046875, -0.0056209564208984375, -0.00985729694366455, -1.1920928244535389e-07, -1.1444091796875e-05, -3.814697265625e-06, -1.8670402765274048, -0.718237042427063, -5.9127589338459074e-05, -3.24249267578125e-05, -2.6702880859375e-05, -0.008275151252746582, -1.9073486328125e-06, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Summon(\n            BlackAcidmaw()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Black"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Black", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.771045909959966, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.8791103363037109, -3.814697265625e-06, -0.0026006698608398438, -6.687641143798828e-05, -0.0005474090576171875, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.7404556274414062e-05, -3.814697265625e-06, 0.0, -0.00171661376953125, -0.014476776123046875, -0.0056209564208984375, -0.00985729694366455, -1.1920928244535389e-07, -1.1444091796875e-05, -3.814697265625e-06, -1.8670402765274048, -0.682864785194397, -0.0002613067626953125, -0.000942230224609375, -0.11174225807189941, -1.9073486328125e-06, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Summon(\n            Black()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "BlackAcidmaw"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Black", "Acidmaw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.792393886533425, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.5387248992919922, -0.2717599868774414, -0.11059320718050003, -0.0039386749267578125, -2.384185791015625e-06, -1.9073486328125e-05, 0.0, -0.17133712768554688, -0.0027161836624145508, -1.33514404296875e-05, -4.1961669921875e-05, -0.000125885009765625, 0.0, -9.5367431640625e-06, 0.0, -0.0002747774124145508, -9.7632386314217e-05, -0.010492324829101562, -0.0001068115234375, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -0.0001316070556640625, -0.0026082992553710938, -0.013180732727050781, -0.14085149765014648, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.8542516231536865, -0.4706130921840668, -8.106169116217643e-05, -4.00543212890625e-05, -2.47955322265625e-05, -0.00607752799987793, -1.9073486328125e-06, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .BEAST)), ActionTag(Summon(BlackAcidmaw()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "BloodFury"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Blood", "Fury", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.8110746906587423, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.8791103363037109, -3.814697265625e-06, -0.0026006698608398438, -6.687641143798828e-05, -0.0005474090576171875, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.7404556274414062e-05, -3.814697265625e-06, 0.0, -0.00171661376953125, -0.014476776123046875, -0.0056209564208984375, -0.00985729694366455, -1.1920928244535389e-07, -1.1444091796875e-05, -3.814697265625e-06, -2.4085536003112793, -0.29320821166038513, -0.00022709369659423828, -0.0001621246337890625, -3.814697265625e-06, -0.0007228851318359375, -3.814697265625e-06, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Summon(\n            BloodFury()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Battle"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Battle", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.99261931490593, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.5387248992919922, -0.2717599868774414, -0.11059320718050003, -0.0039386749267578125, -2.384185791015625e-06, -1.9073486328125e-05, 0.0, -0.17133712768554688, -0.0027161836624145508, -1.33514404296875e-05, -4.1961669921875e-05, -0.000125885009765625, 0.0, -9.5367431640625e-06, 0.0, -0.0002747774124145508, -9.7632386314217e-05, -0.010492324829101562, -0.0001068115234375, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -0.0001316070556640625, -0.0026082992553710938, -0.013180732727050781, -0.14085149765014648, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.3485524654388428, -0.13296692073345184, -0.000179290771484375, -2.86102294921875e-05, -0.049584388732910156, -3.814697265625e-06, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .BEAST)), ActionTag(Summon(Battle()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CharacterAttack", "hole1": {"_type": "Name", "id": "IsHero"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Acidmaw"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Character", "Attack", "<EOS>", 21, 110, "Is", "Hero", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Acidmaw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.113936325300628, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.5387248992919922, -1.45068359375, -0.1511549949645996, -0.0028384923934936523, 0.0, -3.814697265625e-06, 0.0, -0.01598522439599037, -0.07807641476392746, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001811981201171875, -2.86102294921875e-05, 0.0, -0.0059490203857421875, -0.007586479187011719, -0.5198898315429688, -0.02774810791015625, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.7100493311882019, -0.08471555262804031, -0.000186920166015625, -1.52587890625e-05, -0.325874924659729, -1.9073486328125e-06, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Summon(Acidmaw()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Acidmaw"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Acidmaw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.123293392745609, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -1.813222885131836, -0.00012969970703125, -5.340576171875e-05, -2.622603005875135e-06, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -0.00015210169658530504, -1.8596476365928538e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00021374225616455078, -1.0251998901367188e-05, -0.001163482666015625, -1.1920922133867862e-06, -7.62939453125e-06, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -0.00015354156494140625, -2.0265579223632812e-06, -0.03644227981567383, -4.1961669921875e-05, -0.00016021728515625, -0.0001621246337890625, -1.7404556274414062e-05, -1.9073486328125e-05, -9.72747802734375e-05, -0.0002593994140625, -7.43865966796875e-05, -0.00046801523421891034, -1.33514404296875e-05, -1.919269561767578e-05, 0.0, -3.468988506938331e-05, 0.0, -4.00543212890625e-05, -0.000423431396484375, -9.5367431640625e-06, -8.2254373410251e-06, 0.0, -0.0015248291892930865, 0.0, -0.00046443939208984375, 0.0, -5.7220458984375e-06, -0.000720977783203125, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.5638694763183594, -0.24317169189453125, -0.1586133986711502, -0.0043182373046875, -2.2649765014648438e-06, -2.09808349609375e-05, 0.0, -0.16248035430908203, -0.0029191970825195312, -1.33514404296875e-05, -3.814697265625e-05, -0.00012969970703125, 0.0, -7.62939453125e-06, 0.0, -0.0002595186233520508, -9.942053293343633e-05, -0.010956764221191406, -0.0001010894775390625, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -6.67572021484375e-05, -1.71661376953125e-05, 0.0, -0.000133514404296875, -0.0026960372924804688, -0.011995315551757812, -0.14113163948059082, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.5837244987487793, -0.06121942028403282, -0.0002117156982421875, -4.57763671875e-05, -0.31642770767211914, 0.0, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .BEAST)), ActionTag(Summon(Acidmaw()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Battle"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Battle", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.25446112616747, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.8791103363037109, -3.814697265625e-06, -0.0026006698608398438, -6.687641143798828e-05, -0.0005474090576171875, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.7404556274414062e-05, -3.814697265625e-06, 0.0, -0.00171661376953125, -0.014476776123046875, -0.0056209564208984375, -0.00985729694366455, -1.1920928244535389e-07, -1.1444091796875e-05, -3.814697265625e-06, -2.881613254547119, -0.223600834608078, -0.00012969970703125, -3.0517578125e-05, -0.040889859199523926, -3.814697265625e-06, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Summon(\n            Battle()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Thaddius"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "effects"}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Thaddius", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.521042806443901, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.8791103363037109, -3.814697265625e-06, -0.0026006698608398438, -6.687641143798828e-05, -0.0005474090576171875, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.7404556274414062e-05, -3.814697265625e-06, 0.0, -0.00171661376953125, -0.014476776123046875, -0.0056209564208984375, -0.00985729694366455, -1.1920928244535389e-07, -1.1444091796875e-05, -3.814697265625e-06, -3.30289888381958, -9.023735765367746e-05, -0.00012969970703125, -0.000156402587890625, -0.10957062244415283, -3.814697265625e-06, 0.0], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Summon(\n            Thaddius()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 2}], "hole0": "Acidmaw", "hole4": "player"}, "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "2", "<EOS>"], "score": -9.433825293607796, "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -9.241415977478027, -0.0007152557373046875, -0.00011884774721693248, 0.0, -3.707339783431962e-05, -1.1920928244535389e-07], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n"}], "gold_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(\n            MinionIsNotTarget(), BothPlayer()), [ActionTag(Kill(),\n            TargetSelector())])])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "charge"}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.17457415507123386, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -0.0017130374908447266, 0.0, -3.4332275390625e-05, 0.0, -0.005266070365905762, 0.0, -1.9073486328125e-06, -0.003215789794921875, -0.000102996826171875, -2.1457672119140625e-05, -1.1920928244535389e-07, -0.00010514167661312968, 0.0, -0.0026711225509643555, -9.5367431640625e-06, -3.0517578125e-05, -0.0001049041748046875, -1.1444091796875e-05, -7.62939453125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "charge"}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Boar", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -2.594402685526788, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9121170043945312, -0.038177490234375, -1.1444091796875e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.549720582261216e-05, 0.0, -0.6337165832519531, -1.71661376953125e-05, -7.2479248046875e-05, -1.1920928244535389e-07, -9.536466677673161e-05, -1.52587890625e-05, -3.814697265625e-06, -2.6701251044869423e-05, 0.0, -9.72747802734375e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -6.318092346191406e-06, -0.0002498626708984375, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.784360786899924e-05, 0.0, -0.0002034902572631836, 0.0, -1.9073486328125e-06, -0.0045375823974609375, -1.9073486328125e-06, -0.0006273979670368135, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001895427703857422, 0.0, -1.52587890625e-05, -0.0001010894775390625, -9.5367431640625e-06, -9.942054748535156e-05, -1.1920928244535389e-07, -0.00013089145068079233, 0.0, -0.0029985904693603516, -5.7220458984375e-06, -4.1961669921875e-05, -8.0108642578125e-05, -7.62939453125e-06, -1.1444091796875e-05], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "charge"}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Boar", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -2.7179552503239037, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9121170043945312, -0.038177490234375, -1.1444091796875e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.549720582261216e-05, 0.0, -0.7594766616821289, -0.000156402587890625, -6.103515625e-05, -2.3841855067985307e-07, -3.516663855407387e-05, -3.814697265625e-06, 0.0, -1.1085878213634714e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -6.079673767089844e-06, -0.000232696533203125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0001124143527704291, -1.9073486328125e-06, -4.112720489501953e-05, 0.0, -0.000213623046875, -7.2479248046875e-05, -3.3020973205566406e-05, -1.1682510375976562e-05, -5.14984130859375e-05, -0.0017185211181640625, -5.7220458984375e-06, -0.0004271268262527883, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.0007748603820800781, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -1.33514404296875e-05, -6.520748138427734e-05, 0.0, -0.00013863982167094946, 0.0, -0.003061532974243164, -7.62939453125e-06, -3.62396240234375e-05, -8.96453857421875e-05, -7.62939453125e-06, -1.33514404296875e-05], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "charge"}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Boar", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.709412236874286, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9121170043945312, -3.2919559478759766, -1.52587890625e-05, 0.0, -3.933904736186378e-06, 0.0, -6.0439109802246094e-05, 0.0, -0.07636165618896484, -3.4332275390625e-05, -9.5367431640625e-06, -4.768370445162873e-07, -2.4437878892058507e-05, 0.0, -3.814697265625e-06, -0.00019538530614227057, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -1.1682510375976562e-05, -0.0008869171142578125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -8.738039468880743e-05, 0.0, -4.076957702636719e-05, 0.0, -0.000141143798828125, -6.4849853515625e-05, -4.303455352783203e-05, -1.1682510375976562e-05, -0.000347137451171875, 0.0, -0.4207150936126709, 0.0, -1.71661376953125e-05, -0.0002040863037109375, -3.0517578125e-05, -3.635883331298828e-05, -1.1920928244535389e-07, -0.000136493137688376, 0.0, -0.004974484443664551, -3.814697265625e-06, -9.918212890625e-05, -8.20159912109375e-05, -7.62939453125e-06, -1.1444091796875e-05], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "charge"}], "hole0": "Boar", "hole4": "_"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.054641265649451, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -0.0017130374908447266, 0.0, -3.4332275390625e-05, 0.0, -5.864511489868164, -6.103515625e-05, -1.9073486328125e-06, -0.023891448974609375, -9.1552734375e-05, -2.8967857360839844e-05, -2.3841855067985307e-07, -9.477098501520231e-05, 0.0, -0.0027817487716674805, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001010894775390625, -9.5367431640625e-06, -7.62939453125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(4, 2, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": [{"arg": "charge", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}, {"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "_type": "Template14", "hole0": "Minion", "hole1": 4, "hole2": 2}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 70, 133, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 177, 53, 159, "charge", "<EOS>", 22, 111, "True", "<EOS>", 53, 159, "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.168600742376597, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -0.0017130374908447266, 0.0, -3.4332275390625e-05, 0.0, -0.005266070365905762, 0.0, -1.9073486328125e-06, -5.776511192321777, -0.000186920166015625, -1.084804353013169e-05, -9.655952453613281e-06, -0.00025391578674316406, -6.437280717364047e-06, -0.004830479621887207, -2.0265558760002023e-06, -0.012144088745117188, -7.62939453125e-06, -1.1444091796875e-05, -0.02283036708831787, -1.1444091796875e-05, -2.09808349609375e-05, -3.0517578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -4.00543212890625e-05, -0.0003871917724609375, -0.18255548179149628, -1.1920928244535389e-07, -0.000408172607421875, -2.6702880859375e-05, -6.198883056640625e-06, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "charge"}], "hole0": "Boar", "hole4": "p"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Boar", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.390975253294393, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9121170043945312, -3.2919559478759766, -1.52587890625e-05, 0.0, -3.933904736186378e-06, 0.0, -6.0439109802246094e-05, 0.0, -0.07636165618896484, -3.4332275390625e-05, -9.5367431640625e-06, -4.768370445162873e-07, -2.4437878892058507e-05, 0.0, -3.814697265625e-06, -0.00019538530614227057, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -1.1682510375976562e-05, -0.0008869171142578125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -8.738039468880743e-05, 0.0, -4.076957702636719e-05, 0.0, -0.000141143798828125, -6.4849853515625e-05, -4.303455352783203e-05, -1.1682510375976562e-05, -0.000347137451171875, 0.0, -1.1019599437713623, -1.9073486328125e-06, -2.09808349609375e-05, -0.0011005401611328125, -3.0517578125e-05, -1.7404556274414062e-05, -1.1920928244535389e-07, -0.0001816701260395348, -1.1920928244535389e-07, -0.004408001899719238, -1.9073486328125e-06, -7.05718994140625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -9.5367431640625e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "charge"}], "hole0": "Boar", "hole4": "p"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.447608489748717, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -0.0017130374908447266, 0.0, -3.4332275390625e-05, 0.0, -6.267792701721191, 0.0, -1.9073486328125e-06, -0.014072418212890625, -8.7738037109375e-05, -2.8848648071289062e-05, -2.3841855067985307e-07, -0.00010335403203498572, 0.0, -0.0023393630981445312, -9.5367431640625e-06, -2.6702880859375e-05, -0.0001010894775390625, -1.1444091796875e-05, -7.62939453125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "FREE", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "charge"}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.784044164060099, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -6.613588333129883, -5.7220458984375e-06, -6.103515625e-05, 0.0, -0.0011243820190429688, 0.0, -1.9073486328125e-06, -0.0048694610595703125, -0.0001354217529296875, -2.1576881408691406e-05, -1.1920928244535389e-07, -0.0001229030458489433, 0.0, -0.0026673078536987305, -1.1444091796875e-05, -2.86102294921875e-05, -0.0001087188720703125, -1.1444091796875e-05, -7.62939453125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "taunt"}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.535549539783453, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -0.0017130374908447266, 0.0, -3.4332275390625e-05, 0.0, -0.005266070365905762, 0.0, -1.9073486328125e-06, -0.003215789794921875, -0.000102996826171875, -2.1457672119140625e-05, -1.1920928244535389e-07, -0.00010514167661312968, 0.0, -7.363757133483887, 0.0, -1.52587890625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "divine_shield"}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.580609697559332, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -0.0017130374908447266, 0.0, -3.4332275390625e-05, 0.0, -0.005266070365905762, 0.0, -1.9073486328125e-06, -0.003215789794921875, -0.000102996826171875, -2.1457672119140625e-05, -1.1920928244535389e-07, -0.00010514167661312968, 0.0, -7.408748626708984, 0.0, -7.05718994140625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -3.814697265625e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "windfury"}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.581829447010016, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -0.0017130374908447266, 0.0, -3.4332275390625e-05, 0.0, -0.005266070365905762, 0.0, -1.9073486328125e-06, -0.003215789794921875, -0.000102996826171875, -2.1457672119140625e-05, -1.1920928244535389e-07, -0.00010514167661312968, 0.0, -7.409884452819824, 0.0, -9.1552734375e-05, -0.0001049041748046875, -5.7220458984375e-06, -3.814697265625e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "charge"}], "hole0": "<UNK>", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.976635432004954, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -7.896092414855957, -5.841255187988281e-06, -2.2426247596740723e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.06049156188964844, -1.9073486328125e-06, -2.861018856492592e-06, -0.00014007091522216797, -3.766941517824307e-05, -0.0001544952392578125, -0.0001678466796875, 0.0, -0.0014764070510864258, 0.0, -3.4332275390625e-05, 0.0, -0.010015010833740234, 0.0, -1.9073486328125e-06, -0.0047969818115234375, -0.0001277923583984375, -2.1457672119140625e-05, -1.1920928244535389e-07, -0.0001070489379344508, 0.0, -0.0025434494018554688, -1.71661376953125e-05, -4.57763671875e-05, -0.0001163482666015625, -1.33514404296875e-05, -7.62939453125e-06], "inferred_code": "class <UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "stealth"}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.291863817432379, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -0.0017130374908447266, 0.0, -3.4332275390625e-05, 0.0, -0.005266070365905762, 0.0, -1.9073486328125e-06, -0.003215789794921875, -0.000102996826171875, -2.1457672119140625e-05, -1.1920928244535389e-07, -0.00010514167661312968, 0.0, -8.119918823242188, 0.0, -0.0001010894775390625, -9.34600830078125e-05, -9.5367431640625e-06, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, stealth=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Boar", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 2, "hole2": "FREE"}], "hole0": "Boar", "hole4": "player"}, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.596823114612555, "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -0.0017130374908447266, 0.0, -3.4332275390625e-05, 0.0, -0.005266070365905762, 0.0, -1.9073486328125e-06, -0.003215789794921875, -0.000102996826171875, -2.1457672119140625e-05, -1.1920928244535389e-07, -0.00010514167661312968, 0.0, -8.303802490234375, 0.0, -0.12112140655517578, -0.0001392364501953125, -1.1444091796875e-05, -9.5367431640625e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, FREE=True)\n"}], "gold_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "taunt"}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.48958375679813315, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -0.06273937225341797, -1.9073486328125e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -8.346069080289453e-07, -2.3841855067985307e-07, -0.26713821291923523, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.019351601600646973, -1.1920928244535389e-07], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "divine_shield"}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.2021897398170154, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -0.06273937225341797, -1.9073486328125e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -8.346069080289453e-07, -2.3841855067985307e-07, -2.761263608932495, 0.0, -0.0016956329345703125, -7.62939453125e-06, -0.2362072467803955, 0.0], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": [{"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "_type": "Template14", "hole0": "Minion", "hole1": 2, "hole2": 2}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 70, 133, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 176, 53, 159, "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.454857187577403, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -2.840513229370117, -0.0003490447998046875, -2.7298927307128906e-05, -9.536741345073096e-06, -4.410744622873608e-06, -4.768370445162873e-07, -1.2129312381148338e-06, -2.264974000354414e-06, -0.05283164978027344, -1.71661376953125e-05, 0.0, -0.4130375385284424, 0.0, -0.000331878662109375, -2.09808349609375e-05, -0.007458806037902832, -4.768370445162873e-07], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Attack"}}], "_type": "List"}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "buffs"}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Attack", "<EOS>"], "score": -3.586387332552306, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -0.06273937225341797, -1.9073486328125e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -8.346069080289453e-07, -2.3841855067985307e-07, -2.6806600093841553, 0.0, -0.10412025451660156, -0.000133514404296875, -3.4332275390625e-05, -2.6702880859375e-05, -0.001483917236328125, -0.00015115737915039062, 0.0, -9.5367431640625e-06, 0.0, -0.5639232397079468, -0.03282904624938965], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, buffs=[Buff(Attack())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "spell_targetable"}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "False", "<EOS>"], "score": -3.8742889724906036, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -0.06273937225341797, -1.9073486328125e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -8.346069080289453e-07, -2.3841855067985307e-07, -3.0714614391326904, -1.9073486328125e-06, -0.0036754608154296875, -1.9073486328125e-05, -0.5961151123046875, -3.576278118089249e-07], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "spell_targetable"}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.081824477785453, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -0.06273937225341797, -1.9073486328125e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -8.346069080289453e-07, -2.3841855067985307e-07, -3.0714614391326904, -1.9073486328125e-06, -0.0036754608154296875, -1.9073486328125e-05, -0.8036508560180664, -1.1920928244535389e-07], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}], "_type": "List"}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "buffs"}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>"], "score": -4.1319432817634265, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -0.06273937225341797, -1.9073486328125e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -8.346069080289453e-07, -2.3841855067985307e-07, -2.6806600093841553, 0.0, -0.10412025451660156, -0.000133514404296875, -3.4332275390625e-05, -2.6702880859375e-05, -0.001483917236328125, -0.00015115737915039062, 0.0, -9.5367431640625e-06, 0.0, -1.0946305990219116, -0.04767763614654541], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, buffs=[Buff(Taunt())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "taunt"}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 111, "False", "<EOS>"], "score": -4.446060445182923, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -0.06273937225341797, -1.9073486328125e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -8.346069080289453e-07, -2.3841855067985307e-07, -0.26713821291923523, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -3.975827693939209, -7.152555099310121e-07], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "divine_shield"}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 111, "False", "<EOS>"], "score": -4.530551727884529, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -0.06273937225341797, -1.9073486328125e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -8.346069080289453e-07, -2.3841855067985307e-07, -2.761263608932495, 0.0, -0.0016956329345703125, -7.62939453125e-06, -1.5645687580108643, -4.768370445162873e-07], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Buff", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "auras"}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 28, 141, "Buff", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.305791547963338, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -0.06273937225341797, -1.9073486328125e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -8.346069080289453e-07, -2.3841855067985307e-07, -4.027294635772705, -5.7220458984375e-06, -9.1552734375e-05, -0.00061798095703125, -0.6597526669502258, -4.768360213347478e-06, -0.06786918640136719, -0.08486175537109375, -0.0027294158935546875, -0.010221414268016815, -0.0007749665528535843, -8.463837730232626e-06, -0.03563942015171051, -0.00022206267749425024, -0.2059001922607422, -7.62939453125e-06, -0.006770039442926645, -4.0531158447265625e-06, 0.0], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Buff(ChangeAttack(2), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": [{"arg": "buffs", "_type": "keyword", "value": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Attack"}}], "_type": "List"}}], "_type": "Template14", "hole0": "Minion", "hole1": 2, "hole2": 2}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 70, 133, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 176, 53, 159, "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Attack", "<EOS>"], "score": -5.797235386678011, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -2.840513229370117, -0.0003490447998046875, -2.7298927307128906e-05, -9.536741345073096e-06, -4.410744622873608e-06, -4.768370445162873e-07, -1.2129312381148338e-06, -2.264974000354414e-06, -0.05283164978027344, -1.71661376953125e-05, 0.0, -1.8120853900909424, -1.9073486328125e-06, -0.0032663345336914062, -0.0005130767822265625, -1.52587890625e-05, -1.9073486328125e-06, -0.00133514404296875, -0.00029587745666503906, 0.0, -1.1444091796875e-05, 0.0, -0.9396193623542786, -0.00608217716217041], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, buffs=[Buff(Attack())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "choices", "_type": "keyword", "value": {"_type": "Template18", "hole0": "Choice", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Choice", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 2}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "choices", "<EOS>", 28, 142, "Choice", "<EOS>", 171, 50, 146, "Attack", "<EOS>", 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 169, 49, 145, "Choice", "<EOS>", 171, 50, 146, "Attack", "<EOS>", 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "2", "<EOS>"], "score": -6.746684637352146, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -2.1421356201171875, -3.0517578125e-05, -0.019536972045898438, -1.9073486328125e-06, -0.0012760162353515625, -0.02429485321044922, -0.13893461227416992, -1.728534698486328e-05, -0.00720977783203125, -0.018552780151367188, -0.0068531036376953125, -0.15044796466827393, -0.013335704803466797, -0.32421112060546875, -3.62396240234375e-05, -1.2118432521820068, -0.0019587157294154167, -0.0003800677368417382, -6.592056161025539e-05, -0.017261505126953125, -0.0018367767333984375, -1.1444091796875e-05, -3.814697265625e-06, -0.006796357687562704, -5.18551460118033e-05, 0.0, -0.005756378173828125, -9.5367431640625e-06, -0.0001201629638671875, -0.0024646520614624023, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.011345267295837402, -5.543231964111328e-05, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.030826687812805176, 0.0, -0.0002346038818359375, -3.814697265625e-06, -0.058969855308532715, -0.0006150007247924805, -5.960462772236497e-07, -0.0001678466796875, -0.0011081695556640625, -0.0013980865478515625, -0.06769871711730957, -2.47955322265625e-05, -0.0002593994140625, -0.019617080688476562, -0.0003337860107421875, -0.13594679534435272, -0.005826473236083984, -0.26308345794677734, -0.000194549560546875, -1.550288438796997, -0.028497593477368355, -0.0019688631873577833, -0.00025007029762491584, -0.15105152130126953, -0.0021572113037109375, -7.62939453125e-06, -5.7220458984375e-06, -0.01818167418241501, -0.00016592990141361952, 0.0, -0.011005401611328125, -1.1444091796875e-05, -3.24249267578125e-05, -0.0024532079696655273, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.010842204093933105, -6.306171417236328e-05, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.03216373920440674, 0.0, -0.000213623046875, -3.814697265625e-06, -0.05813789367675781, -0.0005366802215576172, -5.960462772236497e-07, -0.00013101095100864768, 0.0, -0.0012613526778295636, 0.0, -5.7220458984375e-06, -0.1760387420654297, -3.814697265625e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.1958618415519595e-06, -3.576278118089249e-07], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Attack(), Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            Choice(Attack(), Damage(2), CharacterSelector(players=\n            BothPlayer(), picker=UserPicker()))])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "choices", "_type": "keyword", "value": {"_type": "Template18", "hole0": "Choice", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Attack"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Choice", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 2}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "choices", "<EOS>", 28, 142, "Choice", "<EOS>", 171, 50, 146, "Attack", "<EOS>", 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Attack", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 169, 49, 145, "Choice", "<EOS>", 171, 50, 146, "Attack", "<EOS>", 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "2", "<EOS>"], "score": -6.801349937385552, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -2.1421356201171875, -3.0517578125e-05, -0.019536972045898438, -1.9073486328125e-06, -0.0012760162353515625, -0.02429485321044922, -0.13893461227416992, -1.728534698486328e-05, -0.00720977783203125, -0.018552780151367188, -0.0068531036376953125, -0.15044796466827393, -0.013335704803466797, -1.5871992111206055, -0.006754875183105469, -9.5367431640625e-06, 0.0, -0.004127959720790386, -7.152555099310121e-07, -5.7220458984375e-05, -0.0002593994140625, -1.33514404296875e-05, -0.4503612518310547, -1.9073486328125e-06, -0.001556396484375, -0.0002341248473385349, -2.1457672119140625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -0.00040298615931533277, -0.1773541122674942, 0.0, -3.814697265625e-06, -0.05501365661621094, -1.9073486328125e-06, -0.002465771045535803, -4.839789107791148e-05, -3.814697265625e-05, -0.018566131591796875, -0.0006567239761352539, -2.3841855067985307e-07, -5.7220458984375e-06, -2.86102294921875e-05, -0.7361408472061157, -0.0013165837153792381, -0.0029888153076171875, 0.0, -0.00572604825720191, -8.940672159951646e-06, 0.0, -2.288818359375e-05, -0.000324249267578125, -0.00018310546875, -0.0017614332027733326, -2.09808349609375e-05, -0.005199432373046875, -0.12334632873535156, -0.0001506805419921875, -0.004720848053693771, -0.003083944320678711, -0.2244396209716797, -0.005984306335449219, -1.33514404296875e-05, -7.62939453125e-06, -0.030350346118211746, -2.4795384888420813e-05, -3.62396240234375e-05, -0.0028543472290039062, -0.0006351470947265625, -0.002582550048828125, -3.814697265625e-06, -0.07137203216552734, -0.006879074033349752, -6.675708846159978e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.004886542912572622, -0.04315221309661865, 0.0, -3.814697265625e-06, -0.5473117828369141, -1.9073486328125e-06, -0.0009406462777405977, -3.945770731661469e-05, -0.0018024444580078125, -7.62939453125e-05, -0.0001318453869316727, -8.106231689453125e-06, 0.0, -1.52587890625e-05, 0.0, -4.9114187277155e-05, 0.0, -1.9073486328125e-06, -0.1369304656982422, -3.814697265625e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.0738949640654027e-06, -3.576278118089249e-07], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Attack(), Give([Buff(\n            ChangeAttack(2)), Buff(Attack())]), SelfSelector()), Choice(\n            Attack(), Give([Buff(ChangeAttack(2))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "choices", "_type": "keyword", "value": {"_type": "Template18", "hole0": "Choice", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Choice", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Template15", "hole0": "Draw", "hole1": 2}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 2}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "choices", "<EOS>", 28, 142, "Choice", "<EOS>", 171, 50, 146, "Attack", "<EOS>", 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 169, 49, 145, "Choice", "<EOS>", 171, 50, 146, "Attack", "<EOS>", 47, 134, "Draw", "<EOS>", "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "2", "<EOS>"], "score": -6.8389449871234405, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -2.1421356201171875, -3.0517578125e-05, -0.019536972045898438, -1.9073486328125e-06, -0.0012760162353515625, -0.02429485321044922, -0.13893461227416992, -1.728534698486328e-05, -0.00720977783203125, -0.018552780151367188, -0.0068531036376953125, -0.15044796466827393, -0.013335704803466797, -0.32421112060546875, -3.62396240234375e-05, -1.2118432521820068, -0.0019587157294154167, -0.0003800677368417382, -6.592056161025539e-05, -0.017261505126953125, -0.0018367767333984375, -1.1444091796875e-05, -3.814697265625e-06, -0.006796357687562704, -5.18551460118033e-05, 0.0, -0.005756378173828125, -9.5367431640625e-06, -0.0001201629638671875, -0.0024646520614624023, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.011345267295837402, -5.543231964111328e-05, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.030826687812805176, 0.0, -0.0002346038818359375, -3.814697265625e-06, -0.058969855308532715, -0.0006150007247924805, -5.960462772236497e-07, -0.0001678466796875, -0.0011081695556640625, -0.0013980865478515625, -0.06769871711730957, -2.47955322265625e-05, -0.0002593994140625, -0.019617080688476562, -0.0003337860107421875, -0.13594679534435272, -0.005826473236083984, -0.26308345794677734, -0.000194549560546875, -1.4086525440216064, -0.0016766689950600266, -0.054054711014032364, -5.662291732733138e-05, -0.035826683044433594, -0.0001316070556640625, -0.5968188047409058, -3.814697265625e-06, 0.0, -1.3470649719238281e-05, 0.0, -6.055827907403e-05, 0.0, 0.0, -0.0404815673828125, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -2.392953319940716e-07, -2.3841855067985307e-07], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Attack(), Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            Choice(Attack(), Draw(2), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "choices", "_type": "keyword", "value": {"_type": "Template18", "hole0": "Choice", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Choice", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 2}], "hole0": "AnodizedRoboCub", "hole4": "player"}, "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "choices", "<EOS>", 28, 142, "Choice", "<EOS>", 171, 50, 146, "Attack", "<EOS>", 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 169, 49, 145, "Choice", "<EOS>", 171, 50, 146, "Attack", "<EOS>", 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "2", "<EOS>"], "score": -6.978880982695571, "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -2.1421356201171875, -3.0517578125e-05, -0.019536972045898438, -1.9073486328125e-06, -0.0012760162353515625, -0.02429485321044922, -0.13893461227416992, -1.728534698486328e-05, -0.00720977783203125, -0.018552780151367188, -0.0068531036376953125, -0.15044796466827393, -0.013335704803466797, -0.32421112060546875, -3.62396240234375e-05, -1.2118432521820068, -0.0019587157294154167, -0.0003800677368417382, -6.592056161025539e-05, -0.017261505126953125, -0.0018367767333984375, -1.1444091796875e-05, -3.814697265625e-06, -0.006796357687562704, -5.18551460118033e-05, 0.0, -0.005756378173828125, -9.5367431640625e-06, -0.0001201629638671875, -0.0024646520614624023, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.011345267295837402, -5.543231964111328e-05, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.030826687812805176, 0.0, -0.0002346038818359375, -3.814697265625e-06, -0.058969855308532715, -0.0006150007247924805, -5.960462772236497e-07, -0.0001678466796875, -0.0011081695556640625, -0.0013980865478515625, -0.06769871711730957, -2.47955322265625e-05, -0.0002593994140625, -0.019617080688476562, -0.0003337860107421875, -0.13594679534435272, -0.005826473236083984, -1.62939453125, -0.004694938659667969, -3.4332275390625e-05, -3.814697265625e-06, -0.0035812673158943653, -5.8412379075889476e-06, -1.1444091796875e-05, -0.0035228729248046875, -0.0001621246337890625, -0.04532432556152344, -5.7220458984375e-06, -0.1556224822998047, -0.0034856742713600397, -4.887576324108522e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0020715573336929083, -0.08024311065673828, 0.0, -3.814697265625e-06, -0.4871559143066406, 0.0, -0.0009222766384482384, -3.52855131495744e-05, -0.0019550323486328125, -6.29425048828125e-05, -0.00013792507525067776, -8.106231689453125e-06, 0.0, -1.52587890625e-05, 0.0, -5.352492371457629e-05, 0.0, -3.814697265625e-06, -0.12245941162109375, -3.814697265625e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3123899407219142e-06, -3.576278118089249e-07], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Attack(), Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            Choice(Attack(), Give([Buff(ChangeAttack(2))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}], "gold_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, choices=[\n            Choice(AttackMode(), Give([Buff(ChangeAttack(1))]),\n            SelfSelector()), Choice(TankMode(), Give([Buff(ChangeHealth(1))\n            ]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 10}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "10", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.44871096067159, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -1.602910041809082, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.6190719604492188, -3.814697265625e-06, -0.05161476135253906, -1.9073486328125e-06, -0.024994850158691406, 0.0, -0.000308990478515625, 0.0, -0.0744476318359375, -1.9073486328125e-06, -0.02302372455596924, 0.0, -0.005843556486070156, 0.0, -0.0002593994140625, -0.0039615631103515625, -0.0003986358642578125, -0.0057277679443359375, 0.0, -0.04409301280975342, -2.3841855067985307e-07, -0.03256523609161377, -2.3841855067985307e-07, -0.00012969970703125, -0.00180816650390625, -0.000125885009765625, -0.0029430389404296875, -9.5367431640625e-06, -0.000110626220703125, 0.0, -0.01229703426361084, -2.3841855067985307e-07, -0.09435378015041351, -1.3589859008789062e-05, -4.1961669921875e-05, -0.049651145935058594, -2.09808349609375e-05, -0.9153650999069214, -3.3855227229651064e-05, -0.022047042846679688, -3.24249267578125e-05, -0.084991455078125, 0.0, -0.3302745819091797, -8.0108642578125e-05, -1.33514404296875e-05, 0.0, -0.0032901763916015625, -1.1920928244535389e-07, -0.03776121139526367, -1.9073486328125e-06], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(10), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Burrowing"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "<UNK>"}], "value": {"_type": "NameConstant", "value": true}}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "players"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Burrowing", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "game", "<EOS>", "players", "<EOS>", 182, 59, 79, 169, 32, 80, 21, 110, "card", "<EOS>", "<UNK>", "<EOS>", 22, 111, "True", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>"], "score": -5.452868223465018, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.8203678131103516, -0.00084686279296875, -0.002055821241810918, -1.9073486328125e-06, -0.006932258605957031, -0.0018291473388671875, -0.007327420637011528, -0.7208805084228516, -0.003035886213183403, -1.1920928244535389e-07, -0.09963417053222656, -5.14984130859375e-05, -3.24249267578125e-05, 0.0, -0.05368149280548096, -1.9073486328125e-06, -0.009356498718261719, -1.9073486328125e-06, -0.02566242218017578, 0.0, -0.8758120536804199, 0.0, -0.37428009510040283, -2.0265579223632812e-06, -0.33811187744140625, -0.012909889221191406, -3.814697265625e-05, 0.0, -0.050746917724609375, -1.9073486328125e-06, -0.18870067596435547, -1.9073486328125e-06, -0.3934204578399658, 0.0, -0.22730636596679688, 0.0, -0.0010576248168945312, -0.0001201629638671875, -9.26254506339319e-05, -4.1723224057932384e-06, -0.15940570831298828, -0.0043087005615234375, -0.6294536590576172, -0.0001239776611328125, -0.002652963623404503, -9.226672409567982e-05, -0.038498397916555405, 0.0], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Burrowing\n        for minion in game.players:\n            card.<UNK> = True\n            super().reveal()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 0}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "0", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -5.880449086188442, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -1.602910041809082, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.6190719604492188, -3.814697265625e-06, -0.05161476135253906, -1.9073486328125e-06, -0.024994850158691406, 0.0, -0.000308990478515625, 0.0, -0.0744476318359375, -1.9073486328125e-06, -0.02302372455596924, 0.0, -0.005843556486070156, 0.0, -0.0002593994140625, -0.0039615631103515625, -0.0003986358642578125, -0.0057277679443359375, 0.0, -0.04409301280975342, -2.3841855067985307e-07, -0.03256523609161377, -2.3841855067985307e-07, -0.00012969970703125, -0.00180816650390625, -0.000125885009765625, -0.0029430389404296875, -9.5367431640625e-06, -0.000110626220703125, 0.0, -0.01229703426361084, -2.3841855067985307e-07, -0.09435378015041351, -1.3589859008789062e-05, -4.1961669921875e-05, -0.049651145935058594, -2.09808349609375e-05, -0.7353904247283936, -0.0001624693686608225, -0.002513885498046875, -1.52587890625e-05, -0.3509979248046875, -1.1920928244535389e-07, -1.6800661087036133, -0.0001697540283203125, -3.0517578125e-05, 0.0, -0.0018548965454101562, -1.1920928244535389e-07, -0.054424166679382324, -3.814697265625e-06], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Burrowing"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Num", "n": 10}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Burrowing", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 42, 115, "10", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.916878625270648, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.8203678131103516, -0.00084686279296875, -0.002055821241810918, -1.9073486328125e-06, -0.006932258605957031, -0.0018291473388671875, -0.007327420637011528, -0.7208805084228516, -0.003035886213183403, -1.1920928244535389e-07, -0.09963417053222656, -5.14984130859375e-05, -3.24249267578125e-05, 0.0, -0.05368149280548096, -1.9073486328125e-06, -0.009356498718261719, -1.9073486328125e-06, -0.02566242218017578, 0.0, -0.8137140274047852, -1.1920928244535389e-07, -0.024485468864440918, -2.0265579223632812e-06, -8.96453857421875e-05, -0.3340597152709961, -0.0001068115234375, -0.030938148498535156, 0.0, -0.10621356964111328, -7.152555099310121e-07, -0.7303096055984497, -3.576278118089249e-07, -0.0022945404052734375, -0.000675201416015625, -0.0004291534423828125, -0.0009746551513671875, -7.62939453125e-06, -0.0001068115234375, 0.0, -0.009647488594055176, -8.344646857949556e-07, -0.7728990316390991, 0.0, -9.34600830078125e-05, -0.13141727447509766, -3.0517578125e-05, -0.7026751041412354, -3.313985507702455e-05, -0.0020351409912109375, -6.4849853515625e-05, -0.09784793853759766, 0.0], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Burrowing\n        for minion in player.minions:\n            minion.damage(player.effective_heal_power(10), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Burrowing"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 0}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Burrowing", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "0", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.060790870157099, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.8203678131103516, -0.00084686279296875, -0.002055821241810918, -1.9073486328125e-06, -0.006932258605957031, -0.0018291473388671875, -0.007327420637011528, -0.7208805084228516, -0.003035886213183403, -1.1920928244535389e-07, -0.09963417053222656, -5.14984130859375e-05, -3.24249267578125e-05, 0.0, -0.05368149280548096, -1.9073486328125e-06, -0.009356498718261719, -1.9073486328125e-06, -0.02566242218017578, 0.0, -0.8137140274047852, -1.1920928244535389e-07, -0.024485468864440918, -2.0265579223632812e-06, -8.96453857421875e-05, -0.3340597152709961, -0.0001068115234375, -0.030938148498535156, 0.0, -0.10621356964111328, -7.152555099310121e-07, -0.7303096055984497, -3.576278118089249e-07, -0.0022945404052734375, -0.000675201416015625, -0.0004291534423828125, -0.0009746551513671875, -7.62939453125e-06, -0.0001068115234375, 0.0, -0.009647488594055176, -8.344646857949556e-07, -0.7584136724472046, -1.1801719665527344e-05, -6.29425048828125e-05, -0.032731056213378906, -3.62396240234375e-05, -0.614107072353363, -0.0001516230113338679, -0.0004100799560546875, -1.71661376953125e-05, -0.44506704807281494, 0.0], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Burrowing\n        for minion in player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 0}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "explodes", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -6.06530396410831, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -1.602910041809082, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.6190719604492188, -3.814697265625e-06, -0.05161476135253906, -1.9073486328125e-06, -0.024994850158691406, 0.0, -0.000308990478515625, 0.0, -0.0744476318359375, -1.9073486328125e-06, -0.02302372455596924, 0.0, -0.005843556486070156, 0.0, -0.0002593994140625, -0.0039615631103515625, -0.0003986358642578125, -0.0057277679443359375, 0.0, -0.04409301280975342, -2.3841855067985307e-07, -0.03256523609161377, -2.3841855067985307e-07, -0.00012969970703125, -0.00180816650390625, -0.000125885009765625, -0.0029430389404296875, -9.5367431640625e-06, -0.000110626220703125, 0.0, -0.01229703426361084, -2.3841855067985307e-07, -0.09435378015041351, -1.3589859008789062e-05, -4.1961669921875e-05, -0.049651145935058594, -2.09808349609375e-05, -2.5252227783203125, -3.254408875363879e-05, -0.00060272216796875, -0.0001125335693359375, -0.09597492218017578, 0.0, -0.3234100341796875, -6.4849853515625e-05, -2.09808349609375e-05, 0.0, -0.00531768798828125, -1.1920928244535389e-07, -0.05972325801849365, -1.9073486328125e-06], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Burrowing"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 10}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Burrowing", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "10", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.168595000798042, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.8203678131103516, -0.00084686279296875, -0.002055821241810918, -1.9073486328125e-06, -0.006932258605957031, -0.0018291473388671875, -0.007327420637011528, -0.7208805084228516, -0.003035886213183403, -1.1920928244535389e-07, -0.09963417053222656, -5.14984130859375e-05, -3.24249267578125e-05, 0.0, -0.05368149280548096, -1.9073486328125e-06, -0.009356498718261719, -1.9073486328125e-06, -0.02566242218017578, 0.0, -0.8137140274047852, -1.1920928244535389e-07, -0.024485468864440918, -2.0265579223632812e-06, -8.96453857421875e-05, -0.3340597152709961, -0.0001068115234375, -0.030938148498535156, 0.0, -0.10621356964111328, -7.152555099310121e-07, -0.7303096055984497, -3.576278118089249e-07, -0.0022945404052734375, -0.000675201416015625, -0.0004291534423828125, -0.0009746551513671875, -7.62939453125e-06, -0.0001068115234375, 0.0, -0.009647488594055176, -8.344646857949556e-07, -0.7584136724472046, -1.1801719665527344e-05, -6.29425048828125e-05, -0.032731056213378906, -3.62396240234375e-05, -1.0312453508377075, -2.5033799829543568e-05, -0.0022754669189453125, -3.62396240234375e-05, -0.13397502899169922, 0.0], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Burrowing\n        for minion in player.minions:\n            minion.damage(player.effective_spell_damage(10), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Burrowing"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Num", "n": 0}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Burrowing", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 42, 115, "0", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.680557998501492, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.8203678131103516, -0.00084686279296875, -0.002055821241810918, -1.9073486328125e-06, -0.006932258605957031, -0.0018291473388671875, -0.007327420637011528, -0.7208805084228516, -0.003035886213183403, -1.1920928244535389e-07, -0.09963417053222656, -5.14984130859375e-05, -3.24249267578125e-05, 0.0, -0.05368149280548096, -1.9073486328125e-06, -0.009356498718261719, -1.9073486328125e-06, -0.02566242218017578, 0.0, -0.8137140274047852, -1.1920928244535389e-07, -0.024485468864440918, -2.0265579223632812e-06, -8.96453857421875e-05, -0.3340597152709961, -0.0001068115234375, -0.030938148498535156, 0.0, -0.10621356964111328, -7.152555099310121e-07, -0.7303096055984497, -3.576278118089249e-07, -0.0022945404052734375, -0.000675201416015625, -0.0004291534423828125, -0.0009746551513671875, -7.62939453125e-06, -0.0001068115234375, 0.0, -0.009647488594055176, -8.344646857949556e-07, -0.7728990316390991, 0.0, -9.34600830078125e-05, -0.13141727447509766, -3.0517578125e-05, -1.1013439893722534, -0.0001586552825756371, -0.0008029937744140625, -2.6702880859375e-05, -0.46400320529937744, 0.0], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Burrowing\n        for minion in player.minions:\n            minion.damage(player.effective_heal_power(0), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Burrowing<UNK>"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Num", "n": 10}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Burrowing", "<UNK>", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 42, 115, "10", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.7509896824559945, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.8203678131103516, -0.00084686279296875, -0.002055821241810918, -1.9073486328125e-06, -0.006932258605957031, -0.0018291473388671875, -0.007327420637011528, -0.6899814605712891, -0.633731484413147, -0.0010379608720541, -3.576278118089249e-07, -0.10500717163085938, -0.000102996826171875, -3.0517578125e-05, 0.0, -0.019082188606262207, -1.9073486328125e-06, -0.010300636291503906, 0.0, -0.022787094116210938, 0.0, -0.7245650291442871, -1.1920928244535389e-07, -0.02818608283996582, -2.0265579223632812e-06, -7.62939453125e-05, -0.7734670639038086, -0.0001163482666015625, -0.025365829467773438, 0.0, -0.09900319576263428, -7.152555099310121e-07, -0.6621381044387817, -3.576278118089249e-07, -0.0019779205322265625, -0.000598907470703125, -0.000446319580078125, -0.0009708404541015625, -7.62939453125e-06, -0.0001068115234375, 0.0, -0.009917378425598145, -9.536738616588991e-07, -0.7677887678146362, 0.0, -0.0001010894775390625, -0.12993717193603516, -3.0517578125e-05, -0.7018402218818665, -3.457033017184585e-05, -0.0019168853759765625, -6.4849853515625e-05, -0.0968770980834961, 0.0], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Burrowing<UNK>\n        for minion in player.minions:\n            minion.damage(player.effective_heal_power(10), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Burrowing<UNK>"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 0}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Burrowing", "<UNK>", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "0", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.903473014805215, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.8203678131103516, -0.00084686279296875, -0.002055821241810918, -1.9073486328125e-06, -0.006932258605957031, -0.0018291473388671875, -0.007327420637011528, -0.6899814605712891, -0.633731484413147, -0.0010379608720541, -3.576278118089249e-07, -0.10500717163085938, -0.000102996826171875, -3.0517578125e-05, 0.0, -0.019082188606262207, -1.9073486328125e-06, -0.010300636291503906, 0.0, -0.022787094116210938, 0.0, -0.7245650291442871, -1.1920928244535389e-07, -0.02818608283996582, -2.0265579223632812e-06, -7.62939453125e-05, -0.7734670639038086, -0.0001163482666015625, -0.025365829467773438, 0.0, -0.09900319576263428, -7.152555099310121e-07, -0.6621381044387817, -3.576278118089249e-07, -0.0019779205322265625, -0.000598907470703125, -0.000446319580078125, -0.0009708404541015625, -7.62939453125e-06, -0.0001068115234375, 0.0, -0.009917378425598145, -9.536738616588991e-07, -0.7675789594650269, -9.894371032714844e-06, -6.866455078125e-05, -0.0323486328125, -3.4332275390625e-05, -0.6170576214790344, -0.00015746337885502726, -0.0004024505615234375, -1.71661376953125e-05, -0.4333993196487427, 0.0], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Burrowing<UNK>\n        for minion in player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 0}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}, "ops": [{"_type": "Is"}]}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "0", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -9.47518323896697, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -1.602910041809082, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.6190719604492188, -3.814697265625e-06, -0.05161476135253906, -1.9073486328125e-06, -0.024994850158691406, 0.0, -0.000308990478515625, 0.0, -0.0744476318359375, -1.9073486328125e-06, -0.02302372455596924, 0.0, -0.005843556486070156, 0.0, -0.0002593994140625, -0.0039615631103515625, -0.0003986358642578125, -0.0057277679443359375, 0.0, -0.04409301280975342, -2.3841855067985307e-07, -0.03256523609161377, -2.3841855067985307e-07, -0.00012969970703125, -0.00180816650390625, -0.000125885009765625, -0.0029430389404296875, -9.5367431640625e-06, -0.000110626220703125, 0.0, -0.01229703426361084, -2.3841855067985307e-07, -0.09435378015041351, -1.3589859008789062e-05, -4.1961669921875e-05, -0.049651145935058594, -2.09808349609375e-05, -0.7353904247283936, -0.0001624693686608225, -0.002513885498046875, -1.52587890625e-05, -0.3509979248046875, -1.1920928244535389e-07, -0.2488536834716797, -0.027311325073242188, -0.009963035583496094, -0.0007953643798828125, -0.08632373809814453, -0.0001468658447265625, -7.05718994140625e-05, -9.5367431640625e-06, -0.015559673309326172, -7.62939453125e-06, -0.00017547607421875, -0.0007381439208984375, 0.0, -0.10435867309570312, 0.0, -0.0010929107666015625, 0.0, -0.48046302795410156, 0.0, -0.17930889129638672, -1.1920928244535389e-07, -0.2272263765335083, -4.410743713378906e-06, -0.0001544952392578125, -0.9069433212280273, -3.814697265625e-06, -0.000164031982421875, -5.7220458984375e-06, -0.6440792083740234, -0.0012035369873046875, -0.0257720947265625, 0.0, -0.10661888122558594, -6.866455078125e-05, -0.0002574920654296875, -0.3124237060546875, -0.018655776977539062, -0.0018596649169921875, -8.0108642578125e-05, -0.9173235893249512, -2.0265579223632812e-06, -0.5135869979858398, 0.0, -4.00543212890625e-05, -0.0037336349487304688, -0.012582778930664062, -0.00709272176027298, -2.372264862060547e-05, -0.0002155303955078125, -0.000202178955078125, -0.2991511821746826, -0.026810286566615105, -0.0012153387069702148, -2.6702880859375e-05, -0.093719482421875, -0.0014171600341796875, -0.05343528091907501, -4.88758041683468e-06], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n        if len(self.target.card) is MINION_TYPE.DEMON:\n            card.add_buff(Buff(ManaChange(2)))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 0}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}, "ops": [{"_type": "Eq"}]}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "0", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 166, 4, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -10.120614782666912, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -1.602910041809082, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.6190719604492188, -3.814697265625e-06, -0.05161476135253906, -1.9073486328125e-06, -0.024994850158691406, 0.0, -0.000308990478515625, 0.0, -0.0744476318359375, -1.9073486328125e-06, -0.02302372455596924, 0.0, -0.005843556486070156, 0.0, -0.0002593994140625, -0.0039615631103515625, -0.0003986358642578125, -0.0057277679443359375, 0.0, -0.04409301280975342, -2.3841855067985307e-07, -0.03256523609161377, -2.3841855067985307e-07, -0.00012969970703125, -0.00180816650390625, -0.000125885009765625, -0.0029430389404296875, -9.5367431640625e-06, -0.000110626220703125, 0.0, -0.01229703426361084, -2.3841855067985307e-07, -0.09435378015041351, -1.3589859008789062e-05, -4.1961669921875e-05, -0.049651145935058594, -2.09808349609375e-05, -0.7353904247283936, -0.0001624693686608225, -0.002513885498046875, -1.52587890625e-05, -0.3509979248046875, -1.1920928244535389e-07, -0.2488536834716797, -0.027311325073242188, -0.009963035583496094, -0.0007953643798828125, -0.08632373809814453, -0.0001468658447265625, -7.05718994140625e-05, -9.5367431640625e-06, -0.015559673309326172, -7.62939453125e-06, -0.00017547607421875, -0.0007381439208984375, 0.0, -0.10435867309570312, 0.0, -0.0010929107666015625, 0.0, -0.48046302795410156, 0.0, -0.17930889129638672, -1.1920928244535389e-07, -0.2272263765335083, -4.410743713378906e-06, -0.0001544952392578125, -0.8188896179199219, -2.288818359375e-05, -0.0034999847412109375, -1.9073486328125e-05, -0.7015695571899414, -0.00144195556640625, -0.037670135498046875, 0.0, -0.062087059020996094, -4.9591064453125e-05, -0.00028228759765625, -0.42368412017822266, -0.0262603759765625, -0.0019512176513671875, -8.96453857421875e-05, -1.478453516960144, -1.9073486328125e-06, -0.562286376953125, 0.0, -3.814697265625e-05, -0.00311279296875, -0.012159347534179688, -0.00819795485585928, -2.5510787963867188e-05, -0.0001964569091796875, -0.0002040863037109375, -0.26117217540740967, -0.0260238628834486, -0.0011116266250610352, -2.288818359375e-05, -0.1074981689453125, -0.001220703125, -0.05490308627486229, -5.006789251638111e-06], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n        if len(self.target.card) == MINION_TYPE.DEMON:\n            card.add_buff(Buff(ManaChange(2)))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 0}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "summon", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}, "ops": [{"_type": "Is"}]}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "0", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "summon", "<EOS>", 171, 40, 110, "player", "<EOS>", 32, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>"], "score": -10.601239114760176, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -1.602910041809082, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.6190719604492188, -3.814697265625e-06, -0.05161476135253906, -1.9073486328125e-06, -0.024994850158691406, 0.0, -0.000308990478515625, 0.0, -0.0744476318359375, -1.9073486328125e-06, -0.02302372455596924, 0.0, -0.005843556486070156, 0.0, -0.0002593994140625, -0.0039615631103515625, -0.0003986358642578125, -0.0057277679443359375, 0.0, -0.04409301280975342, -2.3841855067985307e-07, -0.03256523609161377, -2.3841855067985307e-07, -0.00012969970703125, -0.00180816650390625, -0.000125885009765625, -0.0029430389404296875, -9.5367431640625e-06, -0.000110626220703125, 0.0, -0.01229703426361084, -2.3841855067985307e-07, -0.09435378015041351, -1.3589859008789062e-05, -4.1961669921875e-05, -0.049651145935058594, -2.09808349609375e-05, -0.7353904247283936, -0.0001624693686608225, -0.002513885498046875, -1.52587890625e-05, -0.3509979248046875, -1.1920928244535389e-07, -0.2488536834716797, -0.027311325073242188, -0.009963035583496094, -0.0007953643798828125, -0.08632373809814453, -0.0001468658447265625, -7.05718994140625e-05, -9.5367431640625e-06, -0.015559673309326172, -7.62939453125e-06, -0.00017547607421875, -0.0007381439208984375, 0.0, -0.10435867309570312, 0.0, -0.0010929107666015625, 0.0, -0.48046302795410156, 0.0, -0.17930889129638672, -1.1920928244535389e-07, -0.2272263765335083, -4.410743713378906e-06, -0.0001544952392578125, -0.9069433212280273, -3.814697265625e-06, -0.000164031982421875, -5.7220458984375e-06, -0.6440792083740234, -0.0012035369873046875, -0.0257720947265625, 0.0, -0.10661888122558594, -6.866455078125e-05, -0.0002574920654296875, -0.3124237060546875, -0.018655776977539062, -0.0018596649169921875, -8.0108642578125e-05, -0.9173235893249512, -2.0265579223632812e-06, -1.384037971496582, -1.1920928244535389e-07, -2.6702880859375e-05, -0.010069847106933594, -4.9591064453125e-05, -0.0012111663818359375, -8.344646857949556e-07, -0.6412763595581055, 0.0, -0.005652427673339844, -3.814697265625e-06, -0.06246185302734375, 0.0, -0.0008565187454223633, 0.0, -6.29425048828125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0009860992431640625, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -0.027998924255371094, 0.0, -3.62396240234375e-05, 0.0, -0.004504203796386719, -7.62939453125e-06], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n        if len(self.target.card) is MINION_TYPE.DEMON:\n            card.summon(player, player.game, len(player.minions))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 0}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "summon", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}, "ops": [{"_type": "Is"}]}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "0", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "summon", "<EOS>", 171, 40, 110, "player", "<EOS>", 40, 110, "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>"], "score": -10.616775065420882, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -1.602910041809082, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.6190719604492188, -3.814697265625e-06, -0.05161476135253906, -1.9073486328125e-06, -0.024994850158691406, 0.0, -0.000308990478515625, 0.0, -0.0744476318359375, -1.9073486328125e-06, -0.02302372455596924, 0.0, -0.005843556486070156, 0.0, -0.0002593994140625, -0.0039615631103515625, -0.0003986358642578125, -0.0057277679443359375, 0.0, -0.04409301280975342, -2.3841855067985307e-07, -0.03256523609161377, -2.3841855067985307e-07, -0.00012969970703125, -0.00180816650390625, -0.000125885009765625, -0.0029430389404296875, -9.5367431640625e-06, -0.000110626220703125, 0.0, -0.01229703426361084, -2.3841855067985307e-07, -0.09435378015041351, -1.3589859008789062e-05, -4.1961669921875e-05, -0.049651145935058594, -2.09808349609375e-05, -0.7353904247283936, -0.0001624693686608225, -0.002513885498046875, -1.52587890625e-05, -0.3509979248046875, -1.1920928244535389e-07, -0.2488536834716797, -0.027311325073242188, -0.009963035583496094, -0.0007953643798828125, -0.08632373809814453, -0.0001468658447265625, -7.05718994140625e-05, -9.5367431640625e-06, -0.015559673309326172, -7.62939453125e-06, -0.00017547607421875, -0.0007381439208984375, 0.0, -0.10435867309570312, 0.0, -0.0010929107666015625, 0.0, -0.48046302795410156, 0.0, -0.17930889129638672, -1.1920928244535389e-07, -0.2272263765335083, -4.410743713378906e-06, -0.0001544952392578125, -0.9069433212280273, -3.814697265625e-06, -0.000164031982421875, -5.7220458984375e-06, -0.6440792083740234, -0.0012035369873046875, -0.0257720947265625, 0.0, -0.10661888122558594, -6.866455078125e-05, -0.0002574920654296875, -0.3124237060546875, -0.018655776977539062, -0.0018596649169921875, -8.0108642578125e-05, -0.9173235893249512, -2.0265579223632812e-06, -1.384037971496582, -1.1920928244535389e-07, -2.6702880859375e-05, -0.010069847106933594, -4.9591064453125e-05, -0.0012111663818359375, -8.344646857949556e-07, -0.7489891052246094, -3.62396240234375e-05, -0.006029486656188965, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.002152562141418457, 0.0, -0.000102996826171875, -1.9073486328125e-06, 0.0, -0.0015802383422851562, 0.0, -2.47955322265625e-05, 0.0, -0.00039887428283691406, -5.7220458984375e-06], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n        if len(self.target.card) is MINION_TYPE.DEMON:\n            card.summon(player, game, len(player.minions))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Burrowing Mine", "hole1": 0, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BurrowingMine", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 0}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "hammer"}, "hole1": "<UNK>", "hole2": [{"_type": "Name", "id": "new_card"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}, "ops": [{"_type": "Eq"}]}}]}, "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "0", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 166, 4, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 181, 71, 137, 21, 110, "hammer", "<EOS>", "<UNK>", "<EOS>", 169, 40, 110, "new_card", "<EOS>"], "score": -11.70437458133339, "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -1.602910041809082, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.6190719604492188, -3.814697265625e-06, -0.05161476135253906, -1.9073486328125e-06, -0.024994850158691406, 0.0, -0.000308990478515625, 0.0, -0.0744476318359375, -1.9073486328125e-06, -0.02302372455596924, 0.0, -0.005843556486070156, 0.0, -0.0002593994140625, -0.0039615631103515625, -0.0003986358642578125, -0.0057277679443359375, 0.0, -0.04409301280975342, -2.3841855067985307e-07, -0.03256523609161377, -2.3841855067985307e-07, -0.00012969970703125, -0.00180816650390625, -0.000125885009765625, -0.0029430389404296875, -9.5367431640625e-06, -0.000110626220703125, 0.0, -0.01229703426361084, -2.3841855067985307e-07, -0.09435378015041351, -1.3589859008789062e-05, -4.1961669921875e-05, -0.049651145935058594, -2.09808349609375e-05, -0.7353904247283936, -0.0001624693686608225, -0.002513885498046875, -1.52587890625e-05, -0.3509979248046875, -1.1920928244535389e-07, -0.2488536834716797, -0.027311325073242188, -0.009963035583496094, -0.0007953643798828125, -0.08632373809814453, -0.0001468658447265625, -7.05718994140625e-05, -9.5367431640625e-06, -0.015559673309326172, -7.62939453125e-06, -0.00017547607421875, -0.0007381439208984375, 0.0, -0.10435867309570312, 0.0, -0.0010929107666015625, 0.0, -0.48046302795410156, 0.0, -0.17930889129638672, -1.1920928244535389e-07, -0.2272263765335083, -4.410743713378906e-06, -0.0001544952392578125, -0.8188896179199219, -2.288818359375e-05, -0.0034999847412109375, -1.9073486328125e-05, -0.7015695571899414, -0.00144195556640625, -0.037670135498046875, 0.0, -0.062087059020996094, -4.9591064453125e-05, -0.00028228759765625, -0.42368412017822266, -0.0262603759765625, -0.0019512176513671875, -8.96453857421875e-05, -2.0000648498535156, -2.3841830625315197e-06, -0.3848954439163208, -1.9073486328125e-06, -0.031106948852539062, -0.2931051254272461, -3.814697265625e-06, -1.3912127017974854, -2.3841855067985307e-07], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n        if len(self.target.card) == MINION_TYPE.DEMON:\n            hammer.<UNK>(new_card)\n"}], "gold_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False, effects=[Effect(Drawn(), ActionTag(\n            Damage(10), HeroSelector())), Effect(Drawn(), ActionTag(Discard\n            (query=CardQuery(source=CARD_SOURCE.LAST_DRAWN)),\n            PlayerSelector())), Effect(Drawn(), ActionTag(Draw(),\n            PlayerSelector()))])\n\n    def use(self, player, game):\n        super().use(player, game)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -0.560553608149398, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -0.04232501983642578, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, -0.0012516975402832031, 0.0, -0.2552957534790039, -1.52587890625e-05, -9.918212890625e-05, -0.0002269744873046875, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0001544952392578125, 0.0, -3.421306610107422e-05, -2.503394853192731e-06, -0.0006501674652099609, -1.049041748046875e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.007107973098754883, -6.4849853515625e-05, -2.6702880859375e-05, 0.0, -0.20968273282051086, -1.9073486328125e-06, -3.445148468017578e-05, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -4.589557647705078e-05, -9.5367431640625e-06, -0.0003452301025390625, -2.47955322265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.0021514892578125, -0.000308990478515625, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.392333984375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008072853088378906, -2.288818359375e-05, -1.9073486328125e-06, -0.00128173828125, -3.814697265625e-06, -0.03635326400399208, -1.1920928244535389e-07, -3.814697265625e-06, -3.814697265625e-05, -0.0002346038818359375, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -1.5876377910970447, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -0.04232501983642578, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, -0.0012516975402832031, 0.0, -1.491267204284668, -1.9073486328125e-06, -3.0517578125e-05, -0.008447647094726562, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00028228759765625, 0.0, -2.753734588623047e-05, -2.384185791015625e-06, -0.000792384147644043, -8.463859558105469e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -8.404254913330078e-05, -2.09808349609375e-05, -0.0004863739013671875, -3.24249267578125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.364416665543104e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2993811651540454e-05, 0.0, -0.00209808349609375, -0.0002899169921875, -7.05718994140625e-05, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0002040863037109375, 0.0, -0.00016605854034423828, 0.0, -1.1444091796875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008074045181274414, -2.288818359375e-05, -1.9073486328125e-06, -0.001300811767578125, -3.814697265625e-06, -0.03584875166416168, -1.1920928244535389e-07, -3.814697265625e-06, -3.62396240234375e-05, -0.0002384185791015625, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 1}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "1", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -2.0341338642538673, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -0.04232501983642578, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, -0.0012516975402832031, 0.0, -0.2552957534790039, -1.52587890625e-05, -9.918212890625e-05, -0.0002269744873046875, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0001544952392578125, 0.0, -3.421306610107422e-05, -2.503394853192731e-06, -0.0006501674652099609, -1.049041748046875e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.007107973098754883, -6.4849853515625e-05, -2.6702880859375e-05, 0.0, -1.6832689046859741, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -3.814697265625e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, -1.33514404296875e-05, -0.000331878662109375, -2.6702880859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.0022945404052734375, -0.000293731689453125, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.7738037109375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008053779602050781, -2.288818359375e-05, -1.9073486328125e-06, -0.0012722015380859375, -3.814697265625e-06, -0.03626342490315437, -1.1920928244535389e-07, -3.814697265625e-06, -3.814697265625e-05, -0.000232696533203125, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -3.9665582419038685, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -0.04232501983642578, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, -0.0012516975402832031, 0.0, -0.2552957534790039, -1.52587890625e-05, -9.918212890625e-05, -0.0002269744873046875, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0001544952392578125, 0.0, -3.421306610107422e-05, -2.503394853192731e-06, -0.0006501674652099609, -1.049041748046875e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.007107973098754883, -6.4849853515625e-05, -2.6702880859375e-05, 0.0, -0.20968273282051086, -1.9073486328125e-06, -3.445148468017578e-05, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -4.589557647705078e-05, -9.5367431640625e-06, -0.0003452301025390625, -2.47955322265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.0021514892578125, -0.000308990478515625, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.392333984375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008072853088378906, -2.288818359375e-05, -1.9073486328125e-06, -0.00128173828125, -3.814697265625e-06, -3.442371129989624, -2.3841855067985307e-07, -9.5367431640625e-06, -2.6702880859375e-05, -0.0002269744873046875, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -4.4659610294366345, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -4.049238204956055, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.0012822151184082031, 0.0, -0.15157699584960938, -1.33514404296875e-05, -8.7738037109375e-05, -0.0002193450927734375, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0001926422119140625, 0.0, -3.6358829675009474e-05, -2.503394853192731e-06, -0.0006554126739501953, -1.049041748046875e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.0071489810943603516, -5.91278076171875e-05, -2.6702880859375e-05, 0.0, -0.21180716156959534, -1.9073486328125e-06, -3.826618194580078e-05, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -4.589557647705078e-05, -9.5367431640625e-06, -0.0003452301025390625, -2.47955322265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.00215911865234375, -0.000308990478515625, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.392333984375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008072853088378906, -2.288818359375e-05, -1.9073486328125e-06, -0.00128173828125, -3.814697265625e-06, -0.0363629125058651, -1.1920928244535389e-07, -3.814697265625e-06, -3.814697265625e-05, -0.0002346038818359375, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.004879111111023, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -0.04232501983642578, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, -0.0012516975402832031, 0.0, -1.491267204284668, -1.9073486328125e-06, -3.0517578125e-05, -0.008447647094726562, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00028228759765625, 0.0, -2.753734588623047e-05, -2.384185791015625e-06, -0.000792384147644043, -8.463859558105469e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -8.404254913330078e-05, -2.09808349609375e-05, -0.0004863739013671875, -3.24249267578125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.364416665543104e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2993811651540454e-05, 0.0, -0.00209808349609375, -0.0002899169921875, -7.05718994140625e-05, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0002040863037109375, 0.0, -0.00016605854034423828, 0.0, -1.1444091796875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008074045181274414, -2.288818359375e-05, -1.9073486328125e-06, -0.001300811767578125, -3.814697265625e-06, -3.4531033039093018, -2.3841855067985307e-07, -9.5367431640625e-06, -2.6702880859375e-05, -0.0002288818359375, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.052947932541478, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -4.589618682861328, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.001522660255432129, 0.0, -0.2097921371459961, -1.52587890625e-05, -0.000118255615234375, -0.0001983642578125, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0001430511474609375, 0.0, -3.612041473388672e-05, -2.503394853192731e-06, -0.0006443262100219727, -1.049041748046875e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.0072138309478759766, -6.4849853515625e-05, -2.6702880859375e-05, 0.0, -0.19998052716255188, -1.9073486328125e-06, -3.826618194580078e-05, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -4.589557647705078e-05, -9.5367431640625e-06, -0.0003452301025390625, -2.47955322265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.0021514892578125, -0.000308990478515625, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.392333984375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008072853088378906, -2.288818359375e-05, -1.9073486328125e-06, -0.00128173828125, -3.814697265625e-06, -0.03635552525520325, -1.1920928244535389e-07, -3.814697265625e-06, -3.814697265625e-05, -0.0002346038818359375, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 1}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "1", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.442099684536544, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -0.04232501983642578, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, -0.0012516975402832031, 0.0, -0.2552957534790039, -1.52587890625e-05, -9.918212890625e-05, -0.0002269744873046875, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0001544952392578125, 0.0, -3.421306610107422e-05, -2.503394853192731e-06, -0.0006501674652099609, -1.049041748046875e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.007107973098754883, -6.4849853515625e-05, -2.6702880859375e-05, 0.0, -1.6832689046859741, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -3.814697265625e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, -1.33514404296875e-05, -0.000331878662109375, -2.6702880859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.0022945404052734375, -0.000293731689453125, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.7738037109375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008053779602050781, -2.288818359375e-05, -1.9073486328125e-06, -0.0012722015380859375, -3.814697265625e-06, -3.4442405700683594, -2.3841855067985307e-07, -9.5367431640625e-06, -2.6702880859375e-05, -0.0002269744873046875, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "targeting"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "targeting", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.914849800676215, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -5.464716911315918, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.0010209083557128906, 0.0, -0.19965171813964844, -1.52587890625e-05, -9.918212890625e-05, -0.000213623046875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.000148773193359375, 0.0, -3.62396240234375e-05, -2.503394853192731e-06, -0.0006444454193115234, -1.049041748046875e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.00717473030090332, -6.67572021484375e-05, -2.6702880859375e-05, 0.0, -0.19743873178958893, -1.9073486328125e-06, -3.826618194580078e-05, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -4.589557647705078e-05, -9.5367431640625e-06, -0.0003452301025390625, -2.47955322265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.002155303955078125, -0.000308990478515625, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.392333984375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008072853088378906, -2.288818359375e-05, -1.9073486328125e-06, -0.001285552978515625, -3.814697265625e-06, -0.036355290561914444, -1.1920928244535389e-07, -3.814697265625e-06, -3.814697265625e-05, -0.0002346038818359375, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.targeting,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 1}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "1", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.928405942078875, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -4.049238204956055, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.0012822151184082031, 0.0, -0.15157699584960938, -1.33514404296875e-05, -8.7738037109375e-05, -0.0002193450927734375, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0001926422119140625, 0.0, -3.6358829675009474e-05, -2.503394853192731e-06, -0.0006554126739501953, -1.049041748046875e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.0071489810943603516, -5.91278076171875e-05, -2.6702880859375e-05, 0.0, -1.6742626428604126, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -3.814697265625e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -4.780292510986328e-05, -1.33514404296875e-05, -0.000331878662109375, -2.6702880859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.002300262451171875, -0.000293731689453125, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.7738037109375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008053779602050781, -2.288818359375e-05, -1.9073486328125e-06, -0.0012722015380859375, -3.814697265625e-06, -0.03627414256334305, -1.1920928244535389e-07, -3.814697265625e-06, -3.814697265625e-05, -0.000232696533203125, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.024645263016332, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -5.558422088623047, -1.9073486328125e-06, -1.52587890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0007557868957519531, 0.0, -0.18946456909179688, -1.33514404296875e-05, -6.103515625e-05, -0.000202178955078125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.000194549560546875, 0.0, -3.230571746826172e-05, -2.622604142743512e-06, -0.0006498098373413086, -1.049041748046875e-05, -1.71661376953125e-05, -1.71661376953125e-05, -0.007295846939086914, -6.103515625e-05, -2.6702880859375e-05, 0.0, -0.2238505333662033, -1.9073486328125e-06, -3.635883331298828e-05, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -4.589557647705078e-05, -9.5367431640625e-06, -0.0003452301025390625, -2.47955322265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.0021533966064453125, -0.000308990478515625, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.392333984375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008072853088378906, -2.288818359375e-05, -1.9073486328125e-06, -0.0012798309326171875, -3.814697265625e-06, -0.03636719286441803, -1.1920928244535389e-07, -3.814697265625e-06, -3.814697265625e-05, -0.0002346038818359375, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.065429212212443, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -4.049238204956055, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.0012822151184082031, 0.0, -1.9631195068359375, -1.9073486328125e-06, -3.62396240234375e-05, -0.0074005126953125, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0002651214599609375, 0.0, -2.765655517578125e-05, -2.384185791015625e-06, -0.0008438825607299805, -8.344650268554688e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -8.213520050048828e-05, -1.9073486328125e-05, -0.0005054473876953125, -3.4332275390625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.364416665543104e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2993811651540454e-05, 0.0, -0.002094268798828125, -0.0002918243408203125, -7.05718994140625e-05, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.00016605854034423828, 0.0, -1.1444091796875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008074045181274414, -2.288818359375e-05, -1.9073486328125e-06, -0.0013027191162109375, -3.814697265625e-06, -0.0358588770031929, -1.1920928244535389e-07, -3.814697265625e-06, -3.62396240234375e-05, -0.00023651123046875, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}, {"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.281721761133717, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -5.895977020263672, 0.0, -7.62939453125e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.0011029243469238281, 0.0, -0.11419296264648438, -1.52587890625e-05, -8.392333984375e-05, -0.00025177001953125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.000186920166015625, 0.0, -3.6358829675009474e-05, -2.503394853192731e-06, -0.0006653070449829102, -8.58306884765625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -0.007188081741333008, -6.29425048828125e-05, -2.6702880859375e-05, 0.0, -0.21836449205875397, -1.9073486328125e-06, -3.826618194580078e-05, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -4.589557647705078e-05, -9.5367431640625e-06, -0.00034332275390625, -2.47955322265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.0021572113037109375, -0.000308990478515625, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.392333984375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008072853088378906, -2.288818359375e-05, -1.9073486328125e-06, -0.0012836456298828125, -3.814697265625e-06, -0.036351364105939865, -1.1920928244535389e-07, -3.814697265625e-06, -3.814697265625e-05, -0.0002346038818359375, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.3086644501088855, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -4.589618682861328, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.001522660255432129, 0.0, -1.665818214416504, -1.9073486328125e-06, -3.4332275390625e-05, -0.007415771484375, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0002880096435546875, 0.0, -2.753734588623047e-05, -2.2649765014648438e-06, -0.0007790327072143555, -1.0371208190917969e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -8.404254913330078e-05, -2.09808349609375e-05, -0.0004825592041015625, -3.24249267578125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.364416665543104e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2993811651540454e-05, 0.0, -0.00209808349609375, -0.0002899169921875, -7.05718994140625e-05, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0002040863037109375, 0.0, -0.00016605854034423828, 0.0, -1.1444091796875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008054971694946289, -2.288818359375e-05, -1.9073486328125e-06, -0.001300811767578125, -3.814697265625e-06, -0.035850897431373596, -1.1920928244535389e-07, -3.814697265625e-06, -3.62396240234375e-05, -0.0002384185791015625, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Crackle", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>"], "score": -7.5253994405864475, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -0.04232501983642578, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, -0.0012516975402832031, 0.0, -1.491267204284668, -1.9073486328125e-06, -3.0517578125e-05, -0.008447647094726562, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00028228759765625, 0.0, -2.753734588623047e-05, -2.384185791015625e-06, -0.000792384147644043, -8.463859558105469e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -8.404254913330078e-05, -2.09808349609375e-05, -0.0004863739013671875, -3.24249267578125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.364416665543104e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2993811651540454e-05, 0.0, -0.00209808349609375, -0.0002899169921875, -7.05718994140625e-05, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0002040863037109375, 0.0, -0.00016605854034423828, 0.0, -1.1444091796875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008074045181274414, -2.288818359375e-05, -1.9073486328125e-06, -0.001300811767578125, -3.814697265625e-06, -5.9737725257873535, -1.1920928244535389e-07, -7.62939453125e-06, -1.71661376953125e-05, -9.1552734375e-05, 0.0], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}], "gold_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(game.random_amount\n            (3, 6)), self)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "minion"}}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "minion", "<EOS>"], "score": -0.7299457624145518, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -0.3085670471191406, 0.0, -1.9073486328125e-06, -0.0010890960693359375, -0.00032806396484375, -0.00023174285888671875, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.3210172653198242, -0.0004221169219817966], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(minion()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Emergency"}}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Emergency", "<EOS>"], "score": -2.044416009459944, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -0.3085670471191406, 0.0, -1.9073486328125e-06, -0.0010890960693359375, -0.00032806396484375, -0.00023174285888671875, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.632686734199524, -0.00322289508767426], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Emergency()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "bounce"}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 136, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "score": -3.1174433100173857, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -3.0212059020996094, -0.0024957656860351562, 0.0, -5.53131103515625e-05, -3.24249267578125e-05, -1.5854835510253906e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.4781842764932662e-05, -0.052310943603515625, 0.0], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>"], "score": -3.3118836274485304, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -0.3085670471191406, 0.0, -1.9073486328125e-06, -0.0010890960693359375, -0.00032806396484375, -0.00023174285888671875, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -2.9001543521881104, -0.00322289508767426], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -3.444961370678918, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -3.237213611602783, 0.0, -5.7220458984375e-06, -0.10438728332519531, -1.9073486328125e-06, -0.005077555775642395, -2.0265579223632812e-06], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>"], "score": -4.147039400192277, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -4.029848098754883, 0.0, 0.0, -0.015924453735351562, -7.82012939453125e-05, -0.0029134750366210938, -1.9073486328125e-06], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_effect", "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "target", "<EOS>"], "score": -4.419086919876115, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -2.201481342315674, 0.0, -5.7220458984375e-06, -1.4854059219360352, 0.0, -0.6285190582275391, 0.0, -0.0044841766357421875, -7.62939453125e-06, -0.0009098052978515625, 0.0], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(self.target)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "set_health_to", "hole2": [{"_type": "Num", "n": 1}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -4.590758347662465, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -4.445769309997559, -1.9073486328125e-06, -9.5367431640625e-06, -0.04273509979248047, -5.7220458984375e-06, -0.003961481153964996, -2.0265579223632812e-06], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_effect", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_max_health"}]}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>"], "score": -4.813459383102426, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -2.201481342315674, 0.0, -5.7220458984375e-06, -0.3589468002319336, -0.002681732177734375, -0.00022125244140625, 0.0, -0.9980922937393188, -2.288818359375e-05, -0.0003261566162109375, -0.00029754638671875, -1.9073486328125e-06, -0.000507354736328125, 0.0, -0.000263214111328125, -1.9073486328125e-06, -0.0016133785247802734, -7.62939453125e-06, -0.012241363525390625, -1.1920928244535389e-07, -1.1384735107421875, 0.0], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(len(self.target.calculate_max_health))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -5.061303343402521, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -3.8475570678710938, 0.0, -9.5367431640625e-06, -1.1120214462280273, -3.814697265625e-06, -0.0034343991428613663, -3.814697265625e-06], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "score": -5.208647595491662, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -3.8475570678710938, 0.0, -9.5367431640625e-06, -0.47399044036865234, 0.0, -0.057793617248535156, 0.0, -3.4332275390625e-05, 0.0, -5.91278076171875e-05, -3.4332275390625e-05, -0.0010738372802734375, -3.3378546504536644e-06, -0.7298184633255005, -2.3841855067985307e-07], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.card)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_effect", "hole2": [{"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 169, 40, 110, "self", "<EOS>"], "score": -5.302835928054826, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -2.201481342315674, 0.0, -5.7220458984375e-06, -2.9906997680664062, -2.47955322265625e-05, -0.012343406677246094, -7.62939453125e-06], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_effect", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>"], "score": -5.419041262716625, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -2.201481342315674, 0.0, -5.7220458984375e-06, -1.4854059219360352, 0.0, -0.7624502182006836, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.58306884765625e-05, -5.53131103515625e-05, -0.000820159912109375, -1.7881377516459906e-06, -0.8704349994659424, 0.0], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(self.target.player)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>"], "score": -5.490666018572135, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -3.8475570678710938, 0.0, -9.5367431640625e-06, -0.47399044036865234, 0.0, -0.057793617248535156, 0.0, -3.4332275390625e-05, 0.0, -5.91278076171875e-05, -3.4332275390625e-05, -0.0010738372802734375, -3.3378546504536644e-06, -1.011837124824524, 0.0], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.player)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EmergencyCoolant", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_effect", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}]}, "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "score": -5.545461641401566, "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -2.201481342315674, 0.0, -5.7220458984375e-06, -1.4854059219360352, 0.0, -0.7624502182006836, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.58306884765625e-05, -5.53131103515625e-05, -0.000820159912109375, -1.7881377516459906e-06, -0.9968550205230713, -3.576278118089249e-07], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(self.target.card)\n"}], "gold_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "p"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.03663224243819485, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.020693540573120117, 0.0, -0.001331329345703125, -0.0003185272216796875, -4.00543212890625e-05, -4.899479608866386e-05, -5.125986263010418e-06, -0.0003956554864998907, 0.0, -0.0033452510833740234, 0.0, -0.000141143798828125, -1.9073486328125e-05, -2.6702880859375e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "player"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.497791232045579, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -4.482754230499268, 0.0, -0.000682830810546875, -0.00022125244140625, -2.288818359375e-05, -1.7166077668662183e-05, -1.7881377516459906e-06, -0.0002380593796260655, 0.0, -0.003412604331970215, 0.0, -0.0001239776611328125, -2.288818359375e-05, -2.6702880859375e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "p"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.80637890354847, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -6.77401065826416, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0010454654693603516, 0.0, -2.5033950805664062e-05, 0.0, -0.0004520416259765625, -0.00018310546875, -8.0108642578125e-05, -0.001384735107421875, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.020381689071655273, 0.0, -0.001285552978515625, -0.00032806396484375, -4.1961669921875e-05, -4.971003363607451e-05, -5.006777428206988e-06, -0.0003008840430993587, 0.0, -0.003412961959838867, 0.0, -0.0001430511474609375, -1.9073486328125e-05, -2.6702880859375e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "<UNK>Machine", "hole4": "p"}, "choice_history": [54, 122, "<UNK>", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.821786878456173, "score_history": [0.0, -2.47955322265625e-05, -6.786488056182861, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.020693540573120117, 0.0, -0.001331329345703125, -0.0003185272216796875, -4.00543212890625e-05, -4.899479608866386e-05, -5.125986263010418e-06, -0.0003956554864998907, 0.0, -0.0033452510833740234, 0.0, -0.000141143798828125, -1.9073486328125e-05, -2.6702880859375e-05, 0.0], "inferred_code": "class <UNK>Machine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "Flying<UNK>", "hole4": "p"}, "choice_history": [54, 122, "Flying", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.848920895310862, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -6.813390254974365, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.020693540573120117, 0.0, -0.001331329345703125, -0.0003185272216796875, -4.00543212890625e-05, -4.899479608866386e-05, -5.125986263010418e-06, -0.0003956554864998907, 0.0, -0.0033452510833740234, 0.0, -0.000141143798828125, -1.9073486328125e-05, -2.6702880859375e-05, 0.0], "inferred_code": "class Flying<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "divine_shield"}], "hole0": "FlyingMachine", "hole4": "p"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.89919036888778, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.020693540573120117, 0.0, -0.001331329345703125, -0.0003185272216796875, -4.00543212890625e-05, -4.899479608866386e-05, -5.125986263010418e-06, -0.0003956554864998907, 0.0, -6.8658766746521, 0.0, -0.000141143798828125, -2.09808349609375e-05, -5.14984130859375e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "c"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "c", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.945447984008119, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -6.925312519073486, -3.814697265625e-06, -0.0044231414794921875, -0.00025177001953125, -3.4332275390625e-05, -4.076943878317252e-05, -3.933898824470816e-06, -0.00046956518781371415, 0.0, -0.004456281661987305, 0.0, -0.0001316070556640625, -2.09808349609375e-05, -3.24249267578125e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, c):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MURLOC"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "p"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MURLOC", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.087477507773478, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -7.05325984954834, -9.5367431640625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0023751258850097656, 0.0, -4.6133995056152344e-05, 0.0, -0.0006961822509765625, -0.0002307891845703125, -7.62939453125e-05, -0.0014219284057617188, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.020571470260620117, 0.0, -0.0013790130615234375, -0.0003147125244140625, -4.00543212890625e-05, -4.887559043709189e-05, -4.887569048150908e-06, -0.00027310827863402665, 0.0, -0.0033681392669677734, 0.0, -0.0001392364501953125, -1.9073486328125e-05, -2.6702880859375e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.MURLOC,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "p"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.138956847397644, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -7.106098175048828, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0010745525360107422, 0.0, -2.5033950805664062e-05, 0.0, -0.000640869140625, -0.0002460479736328125, -7.62939453125e-05, -0.0013980865478515625, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.02063155174255371, 0.0, -0.0013294219970703125, -0.0003147125244140625, -4.1961669921875e-05, -4.899479608866386e-05, -5.006777428206988e-06, -0.0003061292809434235, 0.0, -0.003354787826538086, 0.0, -0.000141143798828125, -1.9073486328125e-05, -2.6702880859375e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "create_minion"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "create_minion", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.143173995531747, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -7.127354145050049, 0.0, -0.0016803741455078125, -0.000125885009765625, -2.86102294921875e-05, -3.43322244589217e-05, -6.6756979322235566e-06, -0.0004758834547828883, 0.0, -0.0030257701873779297, 0.0, -0.0001220703125, -1.9073486328125e-05, -3.4332275390625e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, create_minion):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "condition"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "condition", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.218446197265898, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -7.195553302764893, 0.0, -0.0067272186279296875, -0.0004100799560546875, -6.866455078125e-05, -6.842551374575123e-05, -4.172316494077677e-06, -0.0006974933203309774, 0.0, -0.004468798637390137, 0.0, -0.0001373291015625, -2.09808349609375e-05, -2.288818359375e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, condition):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "Died"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "Died", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.2843813328407165, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -7.269917964935303, 0.0, -0.00055694580078125, -0.000202178955078125, -3.4332275390625e-05, -3.9338963688351214e-05, -5.006777428206988e-06, -0.00031864637276157737, 0.0, -0.002828359603881836, 0.0, -0.0001583099365234375, -2.09808349609375e-05, -3.24249267578125e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, Died):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "p"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "PIRATE", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.509720147467128, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -7.460483551025391, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.029953956604003906, 0.0, -0.0058155059814453125, -0.000286102294921875, -8.392333984375e-05, -7.784210174577311e-05, -5.245195097813848e-06, -0.00016176639473997056, 0.0, -0.0037478208541870117, 0.0, -0.0001354217529296875, -1.9073486328125e-05, -2.86102294921875e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "ImportFrom", "names": [{"_type": "alias", "name": "spare_part_list"}], "level": 0, "module": "<UNK>"}, {"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "p"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 182, 67, 99, "<UNK>", "<EOS>", 160, 155, "spare_part_list", "<EOS>", "0", "<EOS>", 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.834572849303001, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.020693540573120117, 0.0, -6.747121810913086, -0.07212162017822266, -0.09813117980957031, -0.033288002014160156, -4.9591064453125e-05, -0.10161018371582031, -0.006404876708984375, -0.6025852560997009, -3.814697265625e-06, -0.01142618153244257, 0.0, -0.1231069564819336, -0.0001544952392578125, -0.0007251676870509982, -6.472854875028133e-05, -0.00035221187863498926, -1.1920928244535389e-07, -0.005823254585266113, -1.9073486328125e-06, -0.0004940032958984375, -9.1552734375e-05, -5.555152893066406e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        from <UNK> import spare_part_list\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "buffs", "_type": "keyword", "value": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}], "_type": "List"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "FlyingMachine", "hole4": "p"}, "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -9.530392466936455, "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -7.5489959716796875, -0.0002269744873046875, -4.1961669921875e-05, -0.0049457550048828125, -1.9073486328125e-06, -0.0008869171142578125, -1.9073486328125e-06, -0.1402454376220703, -9.72747802734375e-05, -0.0024938583374023438, -0.028952598571777344, -0.0009365081787109375, -0.0007343292236328125, -0.0010128021240234375, -0.0006448030471801758, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1168458461761475, -0.322567343711853, -3.62396240234375e-05, -0.00031280517578125, 0.0, -0.34075748920440674, 0.0, -0.00012969970703125, -0.0059185028076171875, -2.288818359375e-05, -3.135189035674557e-05, -1.5497195136049413e-06, -0.00012313931074459106, 0.0, -0.005304574966430664, 0.0, -0.0001201629638671875, -1.1444091796875e-05, -2.288818359375e-05, 0.0], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, buffs=[Buff(\n            EnemyPlayer())])\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n"}], "gold_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -1.6486196988595907, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.6377108693122864, -0.1852532923221588, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.24396014213562012, 0.0, -0.25342655181884766, 0.0, -0.00011897031799890101, -2.0265579223632812e-06, 0.0, -1.33514404296875e-05, 0.0, -1.0490395652595907e-05, 0.0, -2.09808349609375e-05, -0.000354766845703125, -4.38690185546875e-05, -3.4570632578834193e-06, -1.6689286894688848e-06, -7.724712486378849e-05, -4.768370445162873e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(3)), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "weapon"}}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "weapon", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -2.3721056897838366, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.8041175007820129, -0.2836228609085083, -2.09808349609375e-05, -0.07159233093261719, -0.0014514923095703125, -0.004102259874343872, -2.1457672119140625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.12123063206672668, -0.21613521873950958, -0.008014678955078125, -1.9073486328125e-06, -0.5335548520088196, -5.5431351938750595e-05, 0.0, -1.52587890625e-05, 0.0, -7.152543730626348e-06, 0.0, -2.6702880859375e-05, -0.000396728515625, -4.1961669921875e-05, -3.3378541957063135e-06, -1.0728830375228426e-06, -7.438607281073928e-05, -2.3841855067985307e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(Buff(weapon()))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "weapon"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "weapon", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -2.3743721183857573, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -1.6246309280395508, -0.023261575028300285, -2.3841855067985307e-07, -1.33514404296875e-05, -3.814697265625e-06, -0.07630866020917892, -0.14043451845645905, -0.009668350219726562, -3.814697265625e-06, -0.39934349060058594, -4.6013894461793825e-05, -1.1920928244535389e-07, -2.7298927307128906e-05, 0.0, -9.655922440288123e-06, 0.0, -2.47955322265625e-05, -0.000492095947265625, -4.9591064453125e-05, -3.457063030509744e-06, -1.1920922133867862e-06, -7.259804260684177e-05, -2.3841855067985307e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(weapon()), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "weapon"}}]}, {"_type": "Template19", "hole0": "MinionSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "weapon", "<EOS>", 50, 146, "Minion", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -2.9306998578276406, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.8041175007820129, -0.2836228609085083, -2.09808349609375e-05, -0.07159233093261719, -0.0014514923095703125, -0.004102259874343872, -2.1457672119140625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.12123063206672668, -0.21613521873950958, -0.008014678955078125, -1.9073486328125e-06, -1.090611457824707, -0.0017229318618774414, 0.0, -1.71661376953125e-05, 0.0, -7.987013304955326e-06, 0.0, -1.71661376953125e-05, -0.000278472900390625, -3.62396240234375e-05, -3.457062575762393e-06, -1.0728830375228426e-06, -7.522037776652724e-05, -1.1920928244535389e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(Buff(weapon()))), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -3.1080312835953805, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.6377108693122864, -0.1852532923221588, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.5599509477615356, 0.0, -0.03111553192138672, -0.2000904083251953, -4.38690185546875e-05, 0.0, -0.0004444122314453125, -6.67572021484375e-05, 0.0, -4.76837158203125e-05, -0.0009021759033203125, -4.38690185546875e-05, -0.00019192685431335121, 0.0, -0.000553131103515625, -0.00286865234375, -1.9073486328125e-06, -0.02782595157623291, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.07997747510671616, -0.0012025833129882812, -1.9073468138230965e-06, -0.0030013322830200195, 0.0, -9.775143553270027e-06, 0.0, -2.6702880859375e-05, -0.048651695251464844, -0.0002460479736328125, -1.1920928955078125e-05, -7.152531907195225e-06, -2.932545066869352e-05, -8.344646857949556e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(Null, picker=\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "weapon"}}, {"_type": "Template19", "hole0": "MinionSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "weapon", "<EOS>", 50, 146, "Minion", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -3.2742832844506182, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -1.6246309280395508, -0.023261575028300285, -2.3841855067985307e-07, -1.33514404296875e-05, -3.814697265625e-06, -0.07630866020917892, -0.14043451845645905, -0.009668350219726562, -3.814697265625e-06, -1.2987139225006104, -0.0006818771362304688, -1.1920928244535389e-07, -3.886222839355469e-05, 0.0, -9.059892363438848e-06, 0.0, -1.9073486328125e-05, -0.0003910064697265625, -5.14984130859375e-05, -3.5762720926868496e-06, -1.1920922133867862e-06, -7.14058696758002e-05, -1.1920928244535389e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(weapon()), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -3.6091480586034663, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.6377108693122864, -0.1852532923221588, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.24396014213562012, 0.0, -1.8411426544189453, -0.2115621566772461, -8.7738037109375e-05, 0.0, -0.001079559326171875, -5.7220458984375e-05, 0.0, -4.76837158203125e-05, -0.001186370849609375, -5.7220458984375e-05, -0.0001841782795963809, 0.0, -0.0004558563232421875, -0.002437591552734375, -1.9073486328125e-06, -0.034303903579711914, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.08447526395320892, -0.001172780990600586, -1.9073468138230965e-06, -0.0028069019317626953, 0.0, -1.0132769602932967e-05, 0.0, -3.4332275390625e-05, -0.03305530548095703, -0.0002346038818359375, -1.1920928955078125e-05, -7.033323527139146e-06, -2.8848617148469202e-05, -8.344646857949556e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(3)), MinionSelector(Null, picker=\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -3.821267615135916, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.6377108693122864, -1.7814173698425293, -1.9073468138230965e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.438412070274353, 0.0, -0.6351900100708008, 0.0, -0.0004050656280014664, -1.1920928244535389e-07, 0.0, -1.52587890625e-05, 0.0, -1.0132769602932967e-05, 0.0, -2.288818359375e-05, -0.0003376007080078125, -3.814697265625e-05, -3.337854423079989e-06, -1.311301275563892e-06, -7.617427036166191e-05, -2.3841855067985307e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(3)), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Attack"}}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Attack", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -4.0640924747844664, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.8041175007820129, -0.2836228609085083, -2.09808349609375e-05, -0.07159233093261719, -0.0014514923095703125, -0.004102259874343872, -2.1457672119140625e-06, -1.52587890625e-05, -7.62939453125e-06, -2.202209234237671, -0.0009052159730345011, -0.0005092620849609375, 0.0, -0.3670329749584198, -3.79079720005393e-05, 0.0, -1.537799835205078e-05, 0.0, -7.390960945485858e-06, 0.0, -3.0517578125e-05, -0.00066375732421875, -5.7220458984375e-05, -3.3378551052010152e-06, -1.0728830375228426e-06, -7.295560499187559e-05, -1.1920928244535389e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(Buff(Attack()))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "weaponweapon"}}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "weapon", "weapon", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -4.297665507412432, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.8041175007820129, -0.2836228609085083, -2.09808349609375e-05, -0.07159233093261719, -0.0014514923095703125, -0.004102259874343872, -2.1457672119140625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.12123063206672668, -1.969260573387146, -0.0025326742324978113, -0.0067157745361328125, 0.0, -0.7047131061553955, -4.0172999433707446e-05, 0.0, -1.52587890625e-05, 0.0, -6.318082796497038e-06, 0.0, -2.86102294921875e-05, -0.0004558563232421875, -4.38690185546875e-05, -3.218645360902883e-06, -1.1920922133867862e-06, -7.188275048974901e-05, -2.3841855067985307e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(Buff(weaponweapon()))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "Adjacent"}}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Minion", "Selector", "<EOS>", 21, 110, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -4.308323311332629, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.6377108693122864, -0.1852532923221588, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.24396014213562012, 0.0, -2.745382308959961, -0.0002880096435546875, -0.0302886962890625, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -0.13553555309772491, -0.00022683083079755306, -0.0002505778393242508, 0.0, -0.0012933717807754874, 0.0, -4.00543212890625e-05, -0.000225067138671875, -3.62396240234375e-05, -5.602800229098648e-06, -8.344646857949556e-07, -9.52463669818826e-05, -3.576278118089249e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(3)), MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "weapon"}}]}, {"_type": "Template19", "hole0": "WeaponSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "weapon", "<EOS>", 50, 146, "Weapon", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -4.494108707241217, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.8041175007820129, -0.2836228609085083, -2.09808349609375e-05, -0.07159233093261719, -0.0014514923095703125, -0.004102259874343872, -2.1457672119140625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.12123063206672668, -0.21613521873950958, -0.008014678955078125, -1.9073486328125e-06, -2.655465841293335, -0.0002822853857651353, 0.0, -9.5367431640625e-06, 0.0, -9.179100743494928e-06, 0.0, -1.71661376953125e-05, -0.0002803802490234375, -3.62396240234375e-05, -3.457062575762393e-06, -9.536738616588991e-07, -7.498196646338329e-05, -1.1920928244535389e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(Buff(weapon()))), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "weaponweapon"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "weapon", "weapon", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -4.518314956525529, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -1.6246309280395508, -0.023261575028300285, -2.3841855067985307e-07, -1.33514404296875e-05, -3.814697265625e-06, -0.07630866020917892, -2.274900436401367, -0.0014425708213821054, -0.0124969482421875, -1.9073486328125e-06, -0.40458786487579346, -1.4066622497921344e-05, 0.0, -2.1338462829589844e-05, 0.0, -6.914126061019488e-06, 0.0, -2.86102294921875e-05, -0.0004940032958984375, -4.76837158203125e-05, -3.457063030509744e-06, -1.311301275563892e-06, -7.271730282809585e-05, -2.3841855067985307e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(weaponweapon()), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -4.740123409190112, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.6377108693122864, -1.7814173698425293, -1.9073468138230965e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.0422900915145874, -1.1920928244535389e-07, -0.012060165405273438, -0.6373434066772461, -8.20159912109375e-05, 0.0, -0.0005283355712890625, -5.91278076171875e-05, 0.0, -0.0002193450927734375, -2.86102294921875e-05, 0.0, -0.16426777839660645, 0.0, -0.0002956390380859375, -2.09808349609375e-05, -0.13455736637115479, -0.0011394023895263672, -2.3841855067985307e-07, -3.6835670471191406e-05, 0.0, -3.373622530489229e-05, 0.0, -2.288818359375e-05, -0.0002918243408203125, -3.0517578125e-05, -2.9802288281643996e-06, -1.6689286894688848e-06, -5.4716772865504026e-05, -3.576278118089249e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(1)), MinionSelector(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}], "hole0": "GoblinAuto-Barber", "hole4": "player"}, "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -5.004031586793388, "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.6377108693122864, -0.1852532923221588, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.5599509477615356, 0.0, -0.03111553192138672, -1.7694263458251953, -8.392333984375e-05, 0.0, -0.0004558563232421875, -6.67572021484375e-05, 0.0, -0.00038909912109375, -2.6702880859375e-05, 0.0, -0.23453247547149658, 0.0, -0.0003223419189453125, -2.09808349609375e-05, -0.25549471378326416, -0.0010900497436523438, -2.3841855067985307e-07, -3.8623809814453125e-05, 0.0, -2.7894968297914602e-05, 0.0, -2.288818359375e-05, -0.0002899169921875, -3.0517578125e-05, -2.9802288281643996e-06, -1.6689286894688848e-06, -5.507438982021995e-05, -3.576278118089249e-07], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}], "gold_code": "class GoblinAutoBarber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(IncreaseWeaponAttack(1), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "TurnEnded", "hole1": {"_type": "Name", "id": "HasMech"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Turn", "Ended", "<EOS>", 21, 110, "Has", "Mech", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -1.4970984769224032, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.5585489273071289, -0.014950752258300781, -0.026034116744995117, -0.0017974376678466797, -9.5367431640625e-06, -6.866455078125e-05, 0.0, -0.212149977684021, -0.011995673179626465, -0.0033522837329655886, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.167194366455078e-05, -1.9073486328125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0713663101196289, -0.0001049041748046875, -0.24610567092895508, -4.017353057861328e-05, -0.016233131289482117, -3.457069396972656e-05, -0.0001010894775390625, -0.08078765869140625, -3.814697265625e-06, 0.0, -0.022130966186523438, -0.001026153564453125, -9.5367431640625e-06, -0.043712615966796875, -0.0016384124755859375, -0.000278472900390625, -5.352497100830078e-05, 0.0, -2.6702880859375e-05, 0.0, -0.017847061157226562, -4.1961669921875e-05, -0.000110626220703125], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(HasMech()), ActionTag\n            (Damage(2), MinionSelector(Null, BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -2.4135525543878913, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.907343864440918, -4.00543212890625e-05, -9.78708267211914e-05, -0.000621795654296875, -0.000194549560546875, -0.0031147003173828125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.03183174133300781, -0.000102996826171875, -0.43341588973999023, -2.1457672119140625e-06, -0.2430603951215744, -2.6106834411621094e-05, -4.00543212890625e-05, -0.07091045379638672, -3.814697265625e-06, -1.9073486328125e-06, -0.4000891447067261, -0.001483917236328125, -9.5367431640625e-06, -0.14183807373046875, -0.0009431838989257812, -0.0003681182861328125, -5.364418029785156e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0114593505859375, -3.24249267578125e-05, -9.34600830078125e-05], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(2\n            ), MinionSelector(Null, BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 87, 21, 110, "Character", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -3.1678912956903815, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.907343864440918, -4.00543212890625e-05, -9.78708267211914e-05, -0.000621795654296875, -0.000194549560546875, -0.0031147003173828125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.03183174133300781, -0.000102996826171875, -0.43341588973999023, -2.1457672119140625e-06, -0.2430603951215744, -2.6106834411621094e-05, -4.00543212890625e-05, -0.07091045379638672, -3.814697265625e-06, -1.9073486328125e-06, -1.1190625429153442, -0.0008431673049926758, 0.0, -0.17810535430908203, -0.00047588348388671875, -0.00025177001953125, -4.0411949157714844e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.0117950439453125, -2.86102294921875e-05, -6.103515625e-05], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(2\n            ), CharacterSelector(Null, BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 0}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "Mech", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -3.568734275240743, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.907343864440918, -4.00543212890625e-05, -9.78708267211914e-05, -0.000621795654296875, -0.000194549560546875, -0.0031147003173828125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.03183174133300781, -0.000102996826171875, -0.43341588973999023, -2.1457672119140625e-06, -1.813873529434204, -0.0005066394805908203, -0.0001163482666015625, -0.03094768524169922, -5.7220458984375e-06, 0.0, -0.012788772583007812, -0.0012569427490234375, -1.52587890625e-05, -0.1535930633544922, -0.0004901885986328125, -0.0004787445068359375, -6.115436553955078e-05, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.011333465576171875, -3.0517578125e-05, -9.1552734375e-05], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(0\n            ), MinionSelector(Null, BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "TurnEnded", "hole1": {"_type": "Name", "id": "HasMech"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Turn", "Ended", "<EOS>", 21, 110, "Has", "Mech", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -3.961816505941833, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -2.630443572998047, 0.0, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0001888275146484375, -3.814697265625e-06, -0.00125885009765625, -1.9073486328125e-06, -5.14984130859375e-05, -2.86102294921875e-05, -0.000102996826171875, -0.00084686279296875, -0.0001544952392578125, -0.00048828125, 0.0, -4.7087654820643365e-05, 0.0, -1.71661376953125e-05, -0.0004119873046875, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013539763167500496, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.000453948974609375, -0.00013756752014160156, -5.7220458984375e-06, -4.00543212890625e-05, -0.5541467666625977, -0.015325546264648438, -0.02623605728149414, -0.0017802715301513672, -9.5367431640625e-06, -6.67572021484375e-05, 0.0, -0.21076953411102295, -0.011865854263305664, -0.0033489458728581667, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.167194366455078e-05, -1.9073486328125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.07145881652832031, -0.0001049041748046875, -0.24563932418823242, -4.017353057861328e-05, -0.016221851110458374, -3.266334533691406e-05, -0.0001010894775390625, -0.08090877532958984, -3.814697265625e-06, 0.0, -0.022165298461914062, -0.0010242462158203125, -9.5367431640625e-06, -0.043628692626953125, -0.0016374588012695312, -0.000278472900390625, -5.352497100830078e-05, 0.0, -2.6702880859375e-05, 0.0, -0.017848968505859375, -4.1961669921875e-05, -0.000110626220703125], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(HasMech()), ActionTag\n            (Damage(2), MinionSelector(Null, BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 0}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "Mech", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -4.428641604323232, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.907343864440918, -4.00543212890625e-05, -9.78708267211914e-05, -0.000621795654296875, -0.000194549560546875, -0.0031147003173828125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.03183174133300781, -0.000102996826171875, -1.934070110321045, -2.1219253540039062e-05, -0.5452002882957458, -0.0018155574798583984, -0.018518447875976562, -0.7497444152832031, -5.7220458984375e-06, 0.0, -0.006805419921875, -0.0014820098876953125, -1.33514404296875e-05, -0.04020214080810547, -0.0009670257568359375, -0.00045013427734375, -8.213520050048828e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.019397735595703125, -3.24249267578125e-05, -0.0001049041748046875], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(0),\n            MinionSelector(Null, BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "TurnEnded", "hole1": {"_type": "Name", "id": "HasMech"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Turn", "Ended", "<EOS>", 21, 110, "Has", "Mech", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -4.55269959691752, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.5585489273071289, -0.014950752258300781, -0.026034116744995117, -0.0017974376678466797, -9.5367431640625e-06, -6.866455078125e-05, 0.0, -0.212149977684021, -0.011995673179626465, -0.0033522837329655886, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.167194366455078e-05, -1.9073486328125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0713663101196289, -0.0001049041748046875, -0.24610567092895508, -4.017353057861328e-05, -0.016233131289482117, -3.457069396972656e-05, -0.0001010894775390625, -2.6023244857788086, -3.814697265625e-06, 0.0, -0.1290721893310547, -0.0004119873046875, 0.0, -0.4032926559448242, -3.4332275390625e-05, -9.5367431640625e-06, -0.00659942626953125, -3.814697265625e-05, -0.000102996826171875, -3.814697265625e-06, -0.08077049255371094, -0.0003606081008911133, -0.000244140625], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(HasMech()), ActionTag\n            (Damage(2), CharacterSelector(players=BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "TurnEnded", "hole1": {"_type": "Name", "id": "HasMech"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Turn", "Ended", "<EOS>", 21, 110, "Has", "Mech", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -4.694498033559221, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -3.3644495010375977, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0011559724807739258, -1.9073486328125e-06, -4.57763671875e-05, -2.86102294921875e-05, -0.0001068115234375, -0.0008544921875, -0.00016021728515625, -0.0004940032958984375, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004100799560546875, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013508767588064075, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.000453948974609375, -0.00013756752014160156, -5.7220458984375e-06, -4.00543212890625e-05, -0.5530796051025391, -0.015271186828613281, -0.026245713233947754, -0.0017821788787841797, -9.5367431640625e-06, -6.866455078125e-05, 0.0, -0.2110079526901245, -0.011863887310028076, -0.0033478729892522097, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.357929229736328e-05, -1.9073486328125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0712432861328125, -0.0001049041748046875, -0.24567747116088867, -4.017353057861328e-05, -0.016252920031547546, -3.266334533691406e-05, -0.0001010894775390625, -0.08077335357666016, -3.814697265625e-06, 0.0, -0.02228546142578125, -0.0010242462158203125, -9.5367431640625e-06, -0.04356956481933594, -0.001636505126953125, -0.000278472900390625, -5.352497100830078e-05, 0.0, -2.6702880859375e-05, 0.0, -0.017826080322265625, -4.1961669921875e-05, -0.000110626220703125], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(HasMech()), ActionTag\n            (Damage(2), MinionSelector(Null, BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "TurnEnded", "hole1": {"_type": "Name", "id": "HasMech"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Turn", "Ended", "<EOS>", 21, 110, "Has", "Mech", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -4.711647735273729, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.5585489273071289, -0.014950752258300781, -0.026034116744995117, -0.0017974376678466797, -9.5367431640625e-06, -6.866455078125e-05, 0.0, -0.212149977684021, -0.011995673179626465, -0.0033522837329655886, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.167194366455078e-05, -1.9073486328125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -2.6810359954833984, -0.08248138427734375, -0.0014119148254394531, -1.9073486328125e-06, -2.86102294921875e-05, -7.62939453125e-06, -0.02342057228088379, -0.38549911975860596, -1.33514404296875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.538777232170105, -1.9073486328125e-06, -0.00054931640625, -1.9073486328125e-06, -0.002956390380859375, -5.841255187988281e-06, 0.0], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(HasMech()), ActionTag\n            (Give(ChangeAttack(2)), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "IncreaseWeapon", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Increase", "Weapon", "<EOS>", "2", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -4.773683117755311, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.907343864440918, -4.00543212890625e-05, -9.78708267211914e-05, -0.000621795654296875, -0.000194549560546875, -0.0031147003173828125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.03183174133300781, -0.000102996826171875, -1.7991070747375488, -0.9256955981254578, -0.005051612854003906, -0.7530660629272461, -2.9444683605106547e-05, -0.0001888275146484375, -0.03589439392089844, -3.814697265625e-06, -1.9073486328125e-06, -0.0708160400390625, -0.000568389892578125, -9.5367431640625e-06, -0.05702686309814453, -0.0009899139404296875, -0.0003795623779296875, -7.653236389160156e-05, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.014949798583984375, -3.24249267578125e-05, -7.05718994140625e-05], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(\n            IncreaseWeapon(2), MinionSelector(Null, BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -4.871560307399669, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -2.630443572998047, 0.0, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0001888275146484375, -3.814697265625e-06, -0.00125885009765625, -1.9073486328125e-06, -5.14984130859375e-05, -2.86102294921875e-05, -0.000102996826171875, -0.00084686279296875, -0.0001544952392578125, -0.00048828125, 0.0, -4.7087654820643365e-05, 0.0, -1.71661376953125e-05, -0.0004119873046875, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013539763167500496, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.000453948974609375, -0.00013756752014160156, -5.7220458984375e-06, -4.00543212890625e-05, -0.9154090881347656, -4.00543212890625e-05, -9.59634780883789e-05, -0.0006465911865234375, -0.0001964569091796875, -0.0028362274169921875, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.031703948974609375, -0.000102996826171875, -0.4211832284927368, -2.1457672119140625e-06, -0.23538659512996674, -2.6106834411621094e-05, -4.00543212890625e-05, -0.07033920288085938, -3.814697265625e-06, -1.9073486328125e-06, -0.399804949760437, -0.0014858245849609375, -9.5367431640625e-06, -0.14252281188964844, -0.000942230224609375, -0.0003662109375, -5.364418029785156e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.011468887329101562, -3.24249267578125e-05, -9.34600830078125e-05], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(2\n            ), MinionSelector(Null, BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "TurnEnded", "hole1": {"_type": "Name", "id": "HasMech"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Turn", "Ended", "<EOS>", 21, 110, "Has", "Mech", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "2", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -5.020276652014147, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.5585489273071289, -0.014950752258300781, -0.026034116744995117, -0.0017974376678466797, -9.5367431640625e-06, -6.866455078125e-05, 0.0, -0.212149977684021, -0.011995673179626465, -0.0033522837329655886, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.167194366455078e-05, -1.9073486328125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0713663101196289, -0.0001049041748046875, -2.571101665496826, -7.62939453125e-06, -0.4247192144393921, -2.7418136596679688e-05, -0.0019168853759765625, -0.458892822265625, -3.814697265625e-06, -1.9073486328125e-06, -0.2250347137451172, -0.0006256103515625, 0.0, -0.20076942443847656, -2.6702880859375e-05, -9.5367431640625e-06, -0.008333206176757812, -2.47955322265625e-05, -0.00012969970703125, -3.814697265625e-06, -0.06120109558105469, -0.0003129243850708008, -0.000217437744140625], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(HasMech()), ActionTag\n            (Heal(2), CharacterSelector(players=BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -5.045643003721082, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.907343864440918, -4.00543212890625e-05, -9.78708267211914e-05, -0.000621795654296875, -0.000194549560546875, -0.0031147003173828125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.03183174133300781, -0.000102996826171875, -0.43341588973999023, -2.1457672119140625e-06, -0.2430603951215744, -2.6106834411621094e-05, -4.00543212890625e-05, -2.688826560974121, -5.7220458984375e-06, 0.0, -0.012996673583984375, -0.000446319580078125, 0.0, -0.1308116912841797, -9.918212890625e-05, -5.7220458984375e-06, -0.000347137451171875, -3.814697265625e-06, -0.00016021728515625, -1.9073486328125e-06, -0.05511665344238281, -0.0001049041748046875, -0.0001964569091796875, -3.814697265625e-06, -2.6702880859375e-05, -0.00634002685546875, 0.0, -0.00054168701171875, -9.5367431640625e-06, -0.3631401062011719, -0.0002117156982421875, -7.62939453125e-06], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(2\n            ), CharacterSelector(players=BothPlayer(), picker=RandomPicker(\n            ))))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -5.3159186709799116, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.907343864440918, -4.00543212890625e-05, -9.78708267211914e-05, -0.000621795654296875, -0.000194549560546875, -0.0031147003173828125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.03183174133300781, -0.000102996826171875, -1.934070110321045, -2.1219253540039062e-05, -1.5188814401626587, -2.9206225008238107e-05, -7.43865966796875e-05, -0.023235321044921875, -3.814697265625e-06, -1.9073486328125e-06, -0.09684371948242188, -0.000156402587890625, 0.0, -0.2313222885131836, -7.2479248046875e-05, -5.7220458984375e-06, -0.0004787445068359375, -7.62939453125e-06, -0.0002040863037109375, -1.9073486328125e-06, -0.06107902526855469, -0.000125885009765625, -0.000141143798828125, -3.814697265625e-06, -1.71661376953125e-05, -0.005474090576171875, 0.0, -0.0003871917724609375, -7.62939453125e-06, -0.3333759307861328, -0.0001964569091796875, -5.7220458984375e-06], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            CharacterSelector(players=BothPlayer(), picker=RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnEnded"}, "keywords": [{"arg": "player", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}]}, "_type": "Template9", "hole0": 2, "hole1": 2, "hole2": "effects"}], "hole0": "IronSensei", "hole4": "player"}, "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Turn", "Ended", "<EOS>", 176, 53, 159, "player", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -5.42018848850234, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -4.097949028015137, -0.0004405975341796875, -0.0002498626708984375, -0.000202178955078125, -0.004374027252197266, -0.0004044771194458008, -6.103515625e-05, -0.0001049041748046875, -0.0003452301025390625, -7.05718994140625e-05, -0.04120171070098877, 0.0, -0.0009288787841796875, -1.9073486328125e-06, -0.0009633302688598633, -0.00023055076599121094, -7.05718994140625e-05, -0.001953125, -1.52587890625e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -3.814697265625e-06, -0.0045833587646484375, -2.86102294921875e-05, -0.0958935022354126, -8.106231689453125e-06, -0.11656172573566437, -0.00016260147094726562, -3.814697265625e-05, -0.5918560028076172, -1.9073486328125e-06, 0.0, -0.14069747924804688, -0.000911712646484375, -1.52587890625e-05, -0.13676834106445312, -0.0011320114135742188, -0.0003376007080078125, -5.173683166503906e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.015066146850585938, -3.24249267578125e-05, -0.000102996826171875], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Damage(2), MinionSelector(Null, BothPlayer())))])\n"}], "gold_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.MECH), picker=RandomPicker())))])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Immune"}, {"_type": "Template13", "hole0": "CharacterSelector", "hole1": {"_type": "Name", "id": "IsHero"}}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Immune", "<EOS>", 46, 128, "Character", "Selector", "<EOS>", 21, 110, "Is", "Hero", "<EOS>"], "score": -2.2557715751555563, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -0.3780231475830078, -9.918212890625e-05, -0.7852404117584229, -0.01033782958984375, -0.1443157196044922, -0.18468093872070312, -0.5165870189666748, -0.009905099868774414, 0.0, -4.57763671875e-05, 0.0, -0.08624763786792755, -0.035286515951156616, -1.9073486328125e-06], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), CharacterSelector(IsHero()))]\n            )\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Heal<UNK>Damage"}, {"_type": "Template19", "hole0": "HeroSelector"}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Heal", "<UNK>", "Damage", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -2.5037105477332418, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -0.3780231475830078, -9.918212890625e-05, -0.8933048248291016, -0.0033636968582868576, -0.4598596692085266, -6.914013647474349e-05, -0.09810829162597656, 0.0, -0.5658726692199707, -9.5367431640625e-06, 0.0], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Heal<UNK>Damage(), HeroSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template19", "hole0": "TurnEnded"}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>"], "score": -2.735132334412917, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -1.4489526748657227, -0.0001049041748046875, -0.05717039108276367, -0.0009502172470092773, -2.110004425048828e-05, -0.029696568846702576, -3.3378591979271732e-06, -0.3839750289916992, -1.9073486328125e-06, -0.7087578773498535, -0.0004922151565551758, -5.7220458984375e-06], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), TurnEnded())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Heal<UNK><UNK>"}, {"_type": "Template19", "hole0": "HeroSelector"}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Heal", "<UNK>", "<UNK>", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -2.8370297913298756, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -0.3780231475830078, -9.918212890625e-05, -0.8933048248291016, -0.0033636968582868576, -1.274219274520874, -0.0025625184644013643, -0.13692665100097656, -1.9073486328125e-06, -0.04351675510406494, -1.1444091796875e-05, 0.0], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Heal<UNK><UNK>(), HeroSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Heal<UNK>Damage"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Heal", "<UNK>", "Damage", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -2.8753059304236714, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -0.3780231475830078, -9.918212890625e-05, -0.8933048248291016, -0.0033636968582868576, -0.4598596692085266, -6.914013647474349e-05, -0.09810829162597656, 0.0, -0.9374604225158691, -9.5367431640625e-06, -7.62939453125e-06], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Heal<UNK>Damage(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Immune"}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "IsHero"}}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Immune", "<EOS>", 46, 128, "Minion", "Selector", "<EOS>", 21, 110, "Is", "Hero", "<EOS>"], "score": -3.0105817258682848, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -0.3780231475830078, -9.918212890625e-05, -0.7852404117584229, -0.01033782958984375, -0.1443157196044922, -0.18468093872070312, -1.343593955039978, -0.0037994384765625, 0.0, -0.0001983642578125, 0.0, -0.019566968083381653, -0.03572538122534752, 0.0], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), MinionSelector(IsHero()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Immune"}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Immune", "<EOS>", 46, 130, "Minion", "Selector", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "score": -3.396942598383326, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -0.3780231475830078, -9.918212890625e-05, -0.7852404117584229, -0.01033782958984375, -0.1443157196044922, -1.7901248931884766, -0.013999074697494507, -0.010351181030273438, -2.3841855067985307e-07, -5.7220458984375e-06, 0.0, -0.0002995729446411133, -0.0012104511260986328, -0.00014495849609375, -3.814697265625e-06, -0.00020599365234375, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -1.9311904907226562e-05, -7.8558899986092e-05, -0.15744400024414062, -1.71661376953125e-05], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), MinionSelector(IsType(\n            MINION_TYPE.BEAST)))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template19", "hole0": "MinionSelector"}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 50, 146, "Minion", "Selector", "<EOS>"], "score": -3.502902624787673, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -1.4489526748657227, -0.0001049041748046875, -0.05717039108276367, -0.0009502172470092773, -2.110004425048828e-05, -0.029696568846702576, -3.3378591979271732e-06, -0.3839750289916992, -1.9073486328125e-06, -1.4768086671829224, -0.000217437744140625, 0.0], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), MinionSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "IsHero"}}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 46, 128, "Minion", "Selector", "<EOS>", 21, 110, "Is", "Hero", "<EOS>"], "score": -3.6187911160605992, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -1.4489526748657227, -0.0001049041748046875, -0.05717039108276367, -0.0009502172470092773, -2.110004425048828e-05, -0.029696568846702576, -3.3378591979271732e-06, -1.1472406387329102, -0.2866811752319336, -0.04257798194885254, -4.00543212890625e-05, 0.0, -4.1961669921875e-05, 0.0, -0.3100733458995819, -0.19023637473583221, 0.0], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), MinionSelector(\n            IsHero()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Immune"}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Immune", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -3.9741251595643163, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -0.3780231475830078, -9.918212890625e-05, -0.7852404117584229, -0.01033782958984375, -2.0969581604003906, -0.12768268585205078, -3.814697265625e-06, 0.0, -0.0027251243591308594, -0.0025920867919921875, 0.0, -0.036660194396972656, -1.1444091796875e-05, 0.0, -0.40839505195617676, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.019958853721618652, -0.0003910064697265625, -3.24249267578125e-05], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), CharacterSelector(players\n            =BothPlayer()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "BuffUntil"}, "hole2": [{"_type": "Template19", "hole0": "Immune"}, {"_type": "Template19", "hole0": "Attack<UNK>"}]}, {"_type": "Template19", "hole0": "HeroSelector"}]}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "effects"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "Until", "<EOS>", 170, 50, 146, "Immune", "<EOS>", 50, 146, "Attack", "<UNK>", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -4.327622187216626, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -3.5205445289611816, -2.3841855067985307e-07, -5.7220458984375e-06, -0.000579833984375, -3.933906555175781e-06, 0.0, -1.1444091796875e-05, -0.26590633392333984, -4.1961669921875e-05, -0.21471066772937775, -0.010966776870191097, -0.0004405975341796875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.028530120849609375, -0.005127906799316406, -0.0006887910421937704, -0.001026153564453125, -1.71661376953125e-05, -3.814697265625e-06, -0.11958110332489014, -0.008564591407775879, -4.0531158447265625e-06, -0.000125885009765625, -0.0037736892700195312, -5.340576171875e-05, -0.01523685734719038, -0.005224456544965506, -0.0033588409423828125, -3.24249267578125e-05, -0.06387632340192795, -0.02342534065246582, -0.004037141799926758, -0.0002498626708984375, 0.0, -0.00960087776184082, -6.103515625e-05, 0.0], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(Damaged(), ActionTag(Give(\n            BuffUntil(Immune(), Attack<UNK>())), HeroSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 46, 130, "Minion", "Selector", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "score": -4.8001623727571925, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -1.4489526748657227, -0.0001049041748046875, -0.05717039108276367, -0.0009502172470092773, -2.110004425048828e-05, -0.029696568846702576, -3.3378591979271732e-06, -1.1472406387329102, -1.3946971893310547, -0.0147743821144104, -0.0006409883499145508, -1.7881377516459906e-06, -3.24249267578125e-05, 0.0, -6.496906280517578e-05, -0.0011687278747558594, -2.86102294921875e-05, -3.814697265625e-06, -0.000415802001953125, -0.000118255615234375, -2.09808349609375e-05, 0.0, -1.919269561767578e-05, -5.9843052440555766e-05, -0.5989751815795898, 0.0], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.MECH)))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Immune"}, {"_type": "Template13", "hole0": "WeaponSelector", "hole1": {"_type": "Name", "id": "IsHero"}}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Immune", "<EOS>", 46, 128, "Weapon", "Selector", "<EOS>", 21, 110, "Is", "Hero", "<EOS>"], "score": -4.904982266607583, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -0.3780231475830078, -9.918212890625e-05, -0.7852404117584229, -0.01033782958984375, -0.1443157196044922, -0.18468093872070312, -2.998624563217163, -0.000194549560546875, 0.0, -4.00543212890625e-05, 0.0, -0.22616367042064667, -0.07226181030273438, 0.0], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), WeaponSelector(IsHero()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Immune"}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Immune", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>"], "score": -4.924880133601725, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -0.3780231475830078, -9.918212890625e-05, -0.7852404117584229, -0.01033782958984375, -2.0969581604003906, -0.12768268585205078, -3.814697265625e-06, 0.0, -0.0027251243591308594, -0.0025920867919921875, 0.0, -0.036660194396972656, -1.1444091796875e-05, 0.0, -1.0985090732574463, -1.9073486328125e-06, -0.06249523162841797, -2.47955322265625e-05, -0.06190411373972893, -0.11865323036909103, -0.03795731067657471], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), CharacterSelector(\n            condition=IsSpell()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 0}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}]}, "_type": "Template9", "hole0": 9, "hole1": 7, "hole2": "auras"}], "hole0": "Mal'Ganis", "hole4": "player"}, "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "Immune", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>"], "score": -5.235422240222867, "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -2.5753889083862305, -0.0011196136474609375, -6.4849853515625e-05, -9.5367431640625e-06, -1.0160260200500488, -0.027775168418884277, -1.1563301086425781e-05, -0.0014476776123046875, -0.0002155303955078125, -1.9073486328125e-05, -0.001407623291015625, -0.000232696533203125, -0.000232696533203125, -0.46931910514831543, -0.00011694430577335879, -0.3584871292114258, -0.000377655029296875, -9.5367431640625e-05, -3.814697265625e-06, -0.6217706203460693, -0.007196545600891113, 0.0, -6.4849853515625e-05, -0.0006923675537109375, 0.0, -0.002621769905090332, -1.9073486328125e-06, -0.0026226043701171875, -2.09808349609375e-05, -0.01253478042781353, -0.022356202825903893, -0.008188247680664062], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ManaChange(-0), CardSelector(\n            condition=IsSpell()))])\n"}], "gold_code": "class MalGanis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeHealth(2), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeAttack(2),\n            MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(Immune(),\n            HeroSelector())])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 4}, {"_type": "Template19", "hole0": "HeroSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "4", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -0.3172959434598539, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -0.03296375274658203, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.398822784423828e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010204315185546875, -0.02050495147705078, -0.000438690185546875, -0.012589097023010254, -6.079669401515275e-05, -0.12092940509319305, -5.125998541188892e-06, -0.0003108978271484375, -9.5367431640625e-06, -0.00051116943359375, -8.7738037109375e-05, 0.0], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 4}, {"_type": "Template19", "hole0": "HeroSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "4", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -2.6683957177172175, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -2.3047256469726562, -0.0021648406982421875, -1.52587890625e-05, -0.0016927719116210938, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.00075531005859375, -0.12437057495117188, -0.0006275177001953125, -0.037102341651916504, -6.663796375505626e-05, -0.18122157454490662, -7.390974587906385e-06, -0.0003986358642578125, -1.1444091796875e-05, -0.00093841552734375, -3.814697265625e-05, 0.0], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Heal(4),\n            HeroSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 2}, {"_type": "Template19", "hole0": "HeroSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "2", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -2.828100432715715, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -0.03296375274658203, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.398822784423828e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010204315185546875, -0.02050495147705078, -0.000438690185546875, -0.012589097023010254, -6.079669401515275e-05, -2.6308248043060303, -4.410743713378906e-06, -0.0010223388671875, -3.62396240234375e-05, -0.0006885528564453125, -8.20159912109375e-05, 0.0], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(2),\n            HeroSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -4.308736671747525, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -0.03296375274658203, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.398822784423828e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010204315185546875, -0.02050495147705078, -0.000438690185546875, -0.012589097023010254, -6.079669401515275e-05, -3.260077714920044, -6.318072337307967e-06, -0.2965574264526367, -0.000614166259765625, -1.1444091796875e-05, -5.7220458984375e-06, -0.0037021636962890625, -0.0006818771362304688, -1.9073486328125e-06, -0.43628883361816406, -6.866455078125e-05, -1.1444091796875e-05, -0.11404812335968018, -9.72747802734375e-05, -5.91278076171875e-05, -1.33514404296875e-05, -0.000850677490234375, -9.72747802734375e-05, -0.0001010894775390625], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(1),\n            CharacterSelector(players=BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 1}, {"_type": "Template19", "hole0": "HeroSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "1", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -4.822542895616849, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -0.03296375274658203, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.398822784423828e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010204315185546875, -0.02050495147705078, -0.000438690185546875, -0.012589097023010254, -6.079669401515275e-05, -3.260077714920044, -6.318072337307967e-06, -1.363734245300293, -3.814697265625e-06, -0.0031909942626953125, -8.7738037109375e-05, 0.0], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(1),\n            HeroSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 2}, {"_type": "Template19", "hole0": "HeroSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "2", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -4.844856967308274, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -2.3047256469726562, -0.0021648406982421875, -1.52587890625e-05, -0.0016927719116210938, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.00075531005859375, -0.12437057495117188, -0.0006275177001953125, -0.037102341651916504, -6.663796375505626e-05, -2.356775999069214, -2.503394853192731e-06, -0.0011692047119140625, -3.4332275390625e-05, -0.0010623931884765625, -3.24249267578125e-05, 0.0], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Heal(2),\n            HeroSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template19", "hole0": "<UNK>Attack"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 50, 146, "<UNK>", "Attack", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -4.880256881123628, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -0.03296375274658203, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.398822784423828e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010204315185546875, -4.002616882324219, -0.3503875732421875, -0.05291104316711426, -0.0008072853088378906, -1.1444091796875e-05, -2.86102294921875e-05, -0.010905861854553223, -0.13739347457885742, -0.0001239776611328125, -0.0018568038940429688, -0.0001239776611328125, -0.05846524238586426, -0.05012214183807373, -0.00036537647247314453, -8.7738037109375e-05, -1.9073486328125e-06, -0.052104949951171875, -3.6835670471191406e-05, -5.7220458984375e-05], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Attack())), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "<UNK>Heal", "hole1": 4}, {"_type": "Template19", "hole0": "HeroSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "<UNK>", "Heal", "<EOS>", "4", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -5.261589843253901, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -0.03296375274658203, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.398822784423828e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010204315185546875, -0.02050495147705078, -0.000438690185546875, -4.515896320343018, -0.527971625328064, -0.000490663864184171, -0.033444732427597046, -4.41074053014745e-06, -9.918212890625e-05, -7.62939453125e-06, -0.000835418701171875, -4.76837158203125e-05, 0.0], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(<UNK>Heal(\n            4), HeroSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"arg": "source_list", "_type": "keyword", "value": {"_type": "Name", "id": "<UNK>"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 177, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 53, 159, "source_list", "<EOS>", 21, 110, "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -5.77812144390488, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -2.3047256469726562, -0.0021648406982421875, -1.52587890625e-05, -0.0016927719116210938, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.00075531005859375, -2.2004804611206055, -1.046879768371582, -0.07375489175319672, -0.0014505386352539062, -0.01114654541015625, -0.0001468658447265625, -1.9073486328125e-06, -0.0014071464538574219, -0.002917051315307617, -3.62396240234375e-05, -0.018646240234375, -0.000171661376953125, -4.9591064453125e-05, -0.005648612976074219, -3.62396240234375e-05, -0.0015249252319335938, -5.91278076171875e-05, -7.05718994140625e-05, 0.0, -0.0023775100708007812, -1.9311904907226562e-05, -0.0745229721069336, -9.930133819580078e-05, -0.0002994537353515625, -2.86102294921875e-05, -0.0032079233787953854, -0.0002425870334263891, -0.0025014877319335938, -0.0008144378662109375, -0.0037260055541992188, -0.0020171403884887695, -4.00543212890625e-05, -3.814697265625e-06, -0.00015842914581298828, -1.71661376953125e-05, -3.814697265625e-06], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>)),\n            PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template19", "hole0": "<UNK>Attack"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 50, 146, "<UNK>", "Attack", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.792562116988179, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -2.3047256469726562, -0.0021648406982421875, -1.52587890625e-05, -0.0016927719116210938, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.00075531005859375, -2.2004804611206055, -0.8030662536621094, -0.05969250202178955, -0.0012652873992919922, -1.1444091796875e-05, -4.00543212890625e-05, -0.008118391036987305, -0.2080141305923462, -8.0108642578125e-05, -0.0026292800903320312, -0.0001354217529296875, -0.0729830265045166, -0.05520796775817871, -0.0003528594970703125, -9.5367431640625e-05, -1.9073486328125e-06, -0.05667877197265625, -3.4809112548828125e-05, -6.103515625e-05], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Give(\n            Buff(<UNK>Attack())), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -6.008284200968106, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -0.03296375274658203, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.398822784423828e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010204315185546875, -0.02050495147705078, -0.000438690185546875, -0.012589097023010254, -6.079669401515275e-05, -3.260077714920044, -6.318072337307967e-06, -0.2965574264526367, -0.000614166259765625, -1.1444091796875e-05, -5.7220458984375e-06, -0.0037021636962890625, -0.0006818771362304688, -1.9073486328125e-06, -1.0657958984375, -0.000244140625, -2.288818359375e-05, -0.029290318489074707, -2.6702880859375e-05, -9.1552734375e-05, -9.5367431640625e-06, -0.0018388032913208008, -7.832050323486328e-05, -0.000133514404296875, -2.09808349609375e-05, -5.7220458984375e-06, -0.24188435077667236, 0.0, -0.023059844970703125, -2.09808349609375e-05, -0.8875303268432617, -0.0009444952011108398, -0.0001850128173828125], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(1),\n            CharacterSelector(players=BothPlayer(), picker=BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -6.110475649208425, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -2.3047256469726562, -0.0021648406982421875, -1.52587890625e-05, -0.0016927719116210938, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.00075531005859375, -0.12437057495117188, -0.0006275177001953125, -0.037102341651916504, -6.663796375505626e-05, -2.7309203147888184, -3.933898824470816e-06, -0.22074222564697266, -0.0002651214599609375, -1.1444091796875e-05, -5.7220458984375e-06, -0.005153656005859375, -0.00040435791015625, -3.814697265625e-06, -0.5701627731323242, -7.62939453125e-05, -1.33514404296875e-05, -0.09542763233184814, -0.0001220703125, -6.103515625e-05, -1.33514404296875e-05, -0.0011196136474609375, -9.72747802734375e-05, -9.1552734375e-05], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            CharacterSelector(players=BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -7.02502392709836, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -6.2516584396362305, -3.814697265625e-06, -0.6366873979568481, -0.008695602416992188, -0.0001926422119140625], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -7.185916652089205, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -6.2516584396362305, -3.814697265625e-06, -0.805329442024231, -0.0010721683502197266, -6.67572021484375e-05], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "Damaged"}, {"_type": "Name", "id": "ActionTag"}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "effects"}], "hole0": "MistressOfPain", "hole4": "player"}, "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 40, 110, "Action", "Tag", "<EOS>"], "score": -7.756208052044954, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -7.403227806091309, -8.58306884765625e-05, -0.22487926483154297, -0.0002269744873046875, -2.1457672119140625e-06], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag)])\n"}], "gold_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Heal(\n            EventValue()), HeroSelector()))])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionDied", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Mech"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Died", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -2.880363884194338, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.9569177627563477, -8.344646857949556e-07, -3.62396240234375e-05, 0.0, -0.02132701873779297, -0.00044274330139160156, -2.6702880859375e-05, -7.05718994140625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.398822784423828e-05, -0.00026977062225341797, -0.19108200073242188, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -5.7220458984375e-06, 0.0, -0.0002384185791015625, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.0021514892578125, -0.09024906158447266, -0.009385943412780762, -4.768370445162873e-07, -1.9073486328125e-05, 0.0, -0.21884950995445251, -0.14443039894104004, -0.001720428466796875, -1.9073486328125e-06, -0.5754821300506592, 0.0, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(Give(Mech()), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Mech"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.3637521591025745, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.7596750259399414, -5.960462772236497e-07, -5.7220458984375e-05, -3.814697265625e-06, -0.4540109634399414, -0.0021680593490600586, -1.52587890625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, -0.0004451274871826172, -0.4428844451904297, -1.9073486328125e-06, -1.33514404296875e-05, -0.000164031982421875, -5.7220458984375e-06, 0.0, -0.0002880096435546875, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.0016927719116210938, -0.07432174682617188, -0.009089827537536621, -4.768370445162873e-07, -1.9073486328125e-05, 0.0, -0.2105775773525238, -0.1410580575466156, -0.0015773773193359375, -1.9073486328125e-06, -0.598108172416687, 0.0, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give(Mech()), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "Template18", "hole0": "IsMinion"}}], "_type": "Template13", "hole0": "random", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "deathrattle"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 129, "random", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 28, 139, "Is", "Minion", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -3.6678711290171293, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -1.7249442338943481, 0.0, -0.000621795654296875, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005246400833129883, -2.09808349609375e-05, -7.62939453125e-06, -0.019934654235839844, -0.3074970245361328, -0.6847807765007019, -0.00030445767333731055, -3.24249267578125e-05, 0.0, -0.003211346920579672, -0.00018393993377685547, -4.9591064453125e-05, -0.0002689361572265625, -5.7220458984375e-06, -2.47955322265625e-05, -0.0036209821701049805, -0.0051116943359375, -0.008702278137207031, -0.3492469787597656, -0.00020265489001758397, -0.017726778984069824, -0.0003986358642578125, -0.021526336669921875, -0.015967369079589844, -1.1444091796875e-05, 0.0, -0.047829627990722656, -0.000186920166015625, -1.9073486328125e-06, -0.009499549865722656, -1.1444091796875e-05, -1.33514404296875e-05, -0.0007498264312744141, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.21543312072753906, -0.0001316070556640625, -3.814697265625e-06], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, deathrattle=Deathrattle(random(CardQuery(\n            conditions=[IsMinion()])), CharacterSelector(players=BothPlayer()))\n            )\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionDied", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Frozen"}}, {"_type": "Template19", "hole0": "TargetSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Died", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Frozen", "<EOS>", 50, 146, "Target", "Selector", "<EOS>"], "score": -4.103284993526103, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.9569177627563477, -8.344646857949556e-07, -3.62396240234375e-05, 0.0, -0.02132701873779297, -0.00044274330139160156, -2.6702880859375e-05, -7.05718994140625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.398822784423828e-05, -0.00026977062225341797, -0.19108200073242188, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -5.7220458984375e-06, 0.0, -0.0002384185791015625, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.0021514892578125, -0.09024906158447266, -0.009385943412780762, -4.768370445162873e-07, -1.9073486328125e-05, 0.0, -1.9595005512237549, -0.0003556670271791518, -0.024383544921875, -1.1444091796875e-05, -0.17914235591888428, -1.1920909855689388e-05, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(Give(Frozen()), TargetSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Mech"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -4.161598937864227, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.7596750259399414, -5.960462772236497e-07, -5.7220458984375e-05, -3.814697265625e-06, -0.4540109634399414, -0.0021680593490600586, -1.52587890625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, -0.0004451274871826172, -1.2290658950805664, -4.57763671875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.000102996826171875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -0.0017328262329101562, -0.1234731674194336, -0.007343530189245939, -3.576278118089249e-07, -1.52587890625e-05, 0.0, -0.21154803037643433, -0.1233273595571518, -0.0014324188232421875, 0.0, -0.5795407295227051, 0.0, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .BEAST)), ActionTag(Give(Mech()), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionDied", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Mech"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Died", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.1904749300317405, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.9569177627563477, -8.344646857949556e-07, -3.62396240234375e-05, 0.0, -0.02132701873779297, -0.00044274330139160156, -2.6702880859375e-05, -7.05718994140625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.398822784423828e-05, -0.00026977062225341797, -0.19108200073242188, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -5.7220458984375e-06, 0.0, -0.0002384185791015625, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.0021514892578125, -0.09024906158447266, -0.009385943412780762, -4.768370445162873e-07, -1.9073486328125e-05, 0.0, -0.21884950995445251, -0.14443039894104004, -0.001720428466796875, -1.9073486328125e-06, -1.8855912685394287, -1.9073486328125e-06, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(Give(Mech()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionDied", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Mech"}}, {"_type": "Template19", "hole0": "TargetSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Died", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "<EOS>", 50, 146, "Target", "Selector", "<EOS>"], "score": -4.205454769285751, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.9569177627563477, -8.344646857949556e-07, -3.62396240234375e-05, 0.0, -0.02132701873779297, -0.00044274330139160156, -2.6702880859375e-05, -7.05718994140625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.398822784423828e-05, -0.00026977062225341797, -0.19108200073242188, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -5.7220458984375e-06, 0.0, -0.0002384185791015625, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.0021514892578125, -0.09024906158447266, -0.009385943412780762, -4.768370445162873e-07, -1.9073486328125e-05, 0.0, -0.21884950995445251, -0.14443039894104004, -0.001720428466796875, -1.9073486328125e-06, -1.9005591869354248, -1.3828206647303887e-05, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(Give(Mech()), TargetSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Mech"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -4.307025344855013, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -2.07077693939209, -1.1920928244535389e-07, -0.0001659393310546875, 0.0, -0.02208995819091797, -0.0007481575012207031, -2.09808349609375e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -0.00040340423583984375, -0.5129308700561523, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011444091796875, -5.7220458984375e-06, 0.0, -0.00028228759765625, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -0.000911712646484375, -0.041649818420410156, -0.00876843836158514, -5.960462772236497e-07, -1.71661376953125e-05, 0.0, -0.18969255685806274, -0.1470043659210205, -0.0017223358154296875, -1.9073486328125e-06, -0.6420983076095581, 0.0, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.MECH)), ActionTag(Give(Mech()), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "Template18", "hole0": "IsMinion"}}], "_type": "Template13", "hole0": "Mech", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "deathrattle"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 129, "Mech", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 28, 139, "Is", "Minion", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -4.361537646751657, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -1.7249442338943481, 0.0, -0.000621795654296875, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005246400833129883, -2.09808349609375e-05, -7.62939453125e-06, -0.019934654235839844, -0.3074970245361328, -1.3784472942352295, -0.00030445767333731055, -3.24249267578125e-05, 0.0, -0.003211346920579672, -0.00018393993377685547, -4.9591064453125e-05, -0.0002689361572265625, -5.7220458984375e-06, -2.47955322265625e-05, -0.0036209821701049805, -0.0051116943359375, -0.008702278137207031, -0.3492469787597656, -0.00020265489001758397, -0.017726778984069824, -0.0003986358642578125, -0.021526336669921875, -0.015967369079589844, -1.1444091796875e-05, 0.0, -0.047829627990722656, -0.000186920166015625, -1.9073486328125e-06, -0.009499549865722656, -1.1444091796875e-05, -1.33514404296875e-05, -0.0007498264312744141, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.21543312072753906, -0.0001316070556640625, -3.814697265625e-06], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, deathrattle=Deathrattle(Mech(CardQuery(\n            conditions=[IsMinion()])), CharacterSelector(players=BothPlayer()))\n            )\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionDied", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "MechPowermace"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Died", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "Powermace", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.5369172695079385, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.9569177627563477, -8.344646857949556e-07, -3.62396240234375e-05, 0.0, -0.02132701873779297, -0.00044274330139160156, -2.6702880859375e-05, -7.05718994140625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.398822784423828e-05, -0.00026977062225341797, -0.19108200073242188, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -5.7220458984375e-06, 0.0, -0.0002384185791015625, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.0021514892578125, -0.09024906158447266, -0.009385943412780762, -4.768370445162873e-07, -1.9073486328125e-05, 0.0, -0.21884950995445251, -2.349722146987915, -0.0029278970323503017, -0.000881195068359375, 0.0, -0.02465510368347168, -1.9073486328125e-06, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(Give(MechPowermace()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Frozen"}}, {"_type": "Template19", "hole0": "TargetSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Frozen", "<EOS>", 50, 146, "Target", "Selector", "<EOS>"], "score": -4.593138497611022, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.7596750259399414, -5.960462772236497e-07, -5.7220458984375e-05, -3.814697265625e-06, -0.4540109634399414, -0.0021680593490600586, -1.52587890625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, -0.0004451274871826172, -0.4428844451904297, -1.9073486328125e-06, -1.33514404296875e-05, -0.000164031982421875, -5.7220458984375e-06, 0.0, -0.0002880096435546875, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.0016927719116210938, -0.07432174682617188, -0.009089827537536621, -4.768370445162873e-07, -1.9073486328125e-05, 0.0, -1.988401174545288, -0.0003451793745625764, -0.01973724365234375, -1.1444091796875e-05, -0.172202467918396, -1.1920909855689388e-05, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give(Frozen()), TargetSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Mech"}}, {"_type": "Template19", "hole0": "TargetSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "<EOS>", 50, 146, "Target", "Selector", "<EOS>"], "score": -4.612864765080218, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.7596750259399414, -5.960462772236497e-07, -5.7220458984375e-05, -3.814697265625e-06, -0.4540109634399414, -0.0021680593490600586, -1.52587890625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, -0.0004451274871826172, -0.4428844451904297, -1.9073486328125e-06, -1.33514404296875e-05, -0.000164031982421875, -5.7220458984375e-06, 0.0, -0.0002880096435546875, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.0016927719116210938, -0.07432174682617188, -0.009089827537536621, -4.768370445162873e-07, -1.9073486328125e-05, 0.0, -0.2105775773525238, -0.1410580575466156, -0.0015773773193359375, -1.9073486328125e-06, -1.847206950187683, -1.3828206647303887e-05, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give(Mech()), TargetSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "MechPowermace"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "deathrattle"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Mech", "Powermace", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.621220950315681, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -1.7249442338943481, 0.0, -0.000621795654296875, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005246400833129883, -2.09808349609375e-05, -7.62939453125e-06, -0.019934654235839844, -1.6570930480957031, -0.07898309081792831, -3.576278118089249e-07, -3.62396240234375e-05, 0.0, -0.3280642032623291, -0.48023682832717896, -0.01971455104649067, -0.07598209381103516, -1.9073486328125e-06, -0.006039477419108152, -1.1920928244535389e-07, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, deathrattle=Deathrattle(Summon(MechPowermace()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Mech"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.648019584639684, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.7596750259399414, -5.960462772236497e-07, -5.7220458984375e-05, -3.814697265625e-06, -0.4540109634399414, -0.0021680593490600586, -1.52587890625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, -0.0004451274871826172, -0.4428844451904297, -1.9073486328125e-06, -1.33514404296875e-05, -0.000164031982421875, -5.7220458984375e-06, 0.0, -0.0002880096435546875, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.0016927719116210938, -0.07432174682617188, -0.009089827537536621, -4.768370445162873e-07, -1.9073486328125e-05, 0.0, -0.2105775773525238, -0.1410580575466156, -0.0015773773193359375, -1.9073486328125e-06, -1.8823736906051636, -1.9073486328125e-06, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give(Mech()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Powermace", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "WeaponPlaced", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Mech"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "Powermace", "hole4": "player"}, "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Weapon", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -4.658638301118202, "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -1.769716501235962, -0.4311199188232422, -2.384185791015625e-06, -0.0001220703125, -3.814697265625e-06, -0.7606792449951172, -0.002771615982055664, -1.1444091796875e-05, -6.866455078125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.4332275390625e-05, -0.0002429485321044922, -0.21714019775390625, 0.0, -1.71661376953125e-05, -0.000141143798828125, -7.62939453125e-06, 0.0, -0.000354766845703125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -0.0009508132934570312, -0.04359245300292969, -0.008901476860046387, -4.768370445162873e-07, -1.71661376953125e-05, 0.0, -0.20510275661945343, -0.13125371932983398, -0.001407623291015625, -1.9073486328125e-06, -0.6277683973312378, 0.0, 0.0], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(WeaponPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give(Mech()), SelfSelector()))])\n"}], "gold_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeHealth\n            (2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=RandomPicker())))\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -2.1741682247942293, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.6043635606765747, -5.543231964111328e-05, -3.814697265625e-06, -0.003780364990234375, -1.9073486328125e-06, 0.0, -0.001251220703125, -1.9073486328125e-06, -0.0006986856460571289, -7.62939453125e-06, -0.0014581680297851562, -9.1552734375e-05, -0.000110626220703125, -0.0037527084350585938, 0.0, -2.288818359375e-05, -0.0001697540283203125, -0.0005950927734375, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0003681182861328125, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.06180000305175781, -0.07972145080566406, -0.0013100161449983716, -8.797645568847656e-05, -0.00031566619873046875, 0.0, -0.057050108909606934, -0.05424678325653076, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11438309401273727, 0.0, -0.005153656005859375, -0.3256053924560547, -2.47955322265625e-05, 0.0, -0.017526626586914062, -2.09808349609375e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.35624027252197266, -1.33514404296875e-05, -4.5299530029296875e-05, -1.9073486328125e-06, -0.0007648468017578125, -2.288818359375e-05, -8.58306884765625e-05, -0.004016876220703125, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -0.00573575496673584, -0.0008782148361206055, -4.768370445162873e-07, -0.4690518379211426, 0.0, -5.209329538047314e-05, 0.0, -3.62396240234375e-05, -0.0004482269287109375, -9.5367431640625e-06, -4.410734163684538e-06, -3.933898824470816e-06, -6.949900125619024e-05, -4.0888025978347287e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(Null, picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -2.436885814533852, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.8714600801467896, -1.1444091796875e-05, -3.814697265625e-06, -0.0011234283447265625, -1.9073486328125e-06, 0.0, -0.00086212158203125, -1.9073486328125e-06, -0.0007327795028686523, -9.5367431640625e-06, -0.0014123916625976562, -8.7738037109375e-05, -0.0001068115234375, -0.0038003921508789062, 0.0, -2.09808349609375e-05, -0.00019073486328125, -0.000591278076171875, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.000392913818359375, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.05945110321044922, -0.07303237915039062, -0.0013166769640520215, -8.797645568847656e-05, -0.00031280517578125, 0.0, -0.05272197723388672, -0.054393649101257324, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11535715311765671, 0.0, -0.0052032470703125, -0.33186817169189453, -2.47955322265625e-05, 0.0, -0.017461776733398438, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -0.3568544387817383, -1.33514404296875e-05, -4.5299530029296875e-05, -1.9073486328125e-06, -0.000762939453125, -2.288818359375e-05, -8.58306884765625e-05, -0.0040435791015625, -1.9073486328125e-06, -0.00029754638671875, 0.0, -0.005749106407165527, -0.0008761882781982422, -4.768370445162873e-07, -0.47304201126098633, 0.0, -5.209329538047314e-05, 0.0, -3.62396240234375e-05, -0.000446319580078125, -9.5367431640625e-06, -4.410734163684538e-06, -3.933898824470816e-06, -6.949900125619024e-05, -4.076882032677531e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(Null, picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -2.708633777520035, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.6043635606765747, -5.543231964111328e-05, -3.814697265625e-06, -0.003780364990234375, -1.9073486328125e-06, 0.0, -0.001251220703125, -1.9073486328125e-06, -0.0006986856460571289, -7.62939453125e-06, -0.0014581680297851562, -9.1552734375e-05, -0.000110626220703125, -0.0037527084350585938, 0.0, -2.288818359375e-05, -0.0001697540283203125, -0.0005950927734375, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0003681182861328125, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.06180000305175781, -0.07972145080566406, -0.0013100161449983716, -8.797645568847656e-05, -0.00031566619873046875, 0.0, -0.057050108909606934, -0.05424678325653076, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11438309401273727, 0.0, -0.005153656005859375, -0.3256053924560547, -2.47955322265625e-05, 0.0, -0.017526626586914062, -2.09808349609375e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.3015432357788086, -0.0001163482666015625, -2.47955322265625e-05, 0.0, -0.00016617773508187383, -3.7312503991415724e-05, -7.62939453125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -8.785724639892578e-05, -1.3947486877441406e-05, -0.009531021118164062, -3.62396240234375e-05, -0.030012130737304688, -5.7220458984375e-06, -4.00543212890625e-05, -0.0250396728515625, 0.0, -0.003935813903808594, -1.33514404296875e-05, -0.000764012336730957, -0.0004363059997558594, -5.841255187988281e-06, -7.653236389160156e-05, 0.0, -1.9788669305853546e-05, 0.0, -0.0001468658447265625, -9.1552734375e-05, -2.288818359375e-05, -2.217275687144138e-05, -1.5497195136049413e-06, -2.8967704565729946e-05, -2.1457481125253253e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template14", "hole0": "Minion", "hole1": 2, "hole2": 4}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>"], "score": -2.884497275695466, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.6043635606765747, -5.543231964111328e-05, -3.814697265625e-06, -0.003780364990234375, -1.9073486328125e-06, 0.0, -0.001251220703125, -1.9073486328125e-06, -0.0006986856460571289, -7.62939453125e-06, -0.0014581680297851562, -9.1552734375e-05, -0.000110626220703125, -0.0037527084350585938, 0.0, -2.288818359375e-05, -0.0001697540283203125, -0.0005950927734375, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0003681182861328125, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.06180000305175781, -0.07972145080566406, -0.0013100161449983716, -8.797645568847656e-05, -0.00031566619873046875, 0.0, -0.057050108909606934, -0.05424678325653076, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11438309401273727, 0.0, -0.005153656005859375, -0.3256053924560547, -2.47955322265625e-05, 0.0, -0.017526626586914062, -2.09808349609375e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.35624027252197266, -1.33514404296875e-05, -4.5299530029296875e-05, -1.9073486328125e-06, -0.0007648468017578125, -2.288818359375e-05, -8.58306884765625e-05, -0.004016876220703125, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -0.00573575496673584, -0.0008782148361206055, -4.768370445162873e-07, -0.9861865043640137, -0.000209808349609375, -2.4795530407573096e-05, 0.0, -0.0003108978271484375, -0.01568889617919922, -0.00206756591796875, -0.0003176859172526747, -4.1961669921875e-05, -0.0006148815155029297, 0.0, -0.17458271980285645, 0.0], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(Null, picker=\n            UserPicker())))\n\n    def create_weapon(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -2.8883779022360017, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.6043635606765747, -5.543231964111328e-05, -3.814697265625e-06, -0.003780364990234375, -1.9073486328125e-06, 0.0, -0.001251220703125, -1.9073486328125e-06, -0.0006986856460571289, -7.62939453125e-06, -0.0014581680297851562, -9.1552734375e-05, -0.000110626220703125, -0.0037527084350585938, 0.0, -2.288818359375e-05, -0.0001697540283203125, -0.0005950927734375, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0003681182861328125, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.06180000305175781, -0.07972145080566406, -0.0013100161449983716, -8.797645568847656e-05, -0.00031566619873046875, 0.0, -0.057050108909606934, -0.05424678325653076, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11438309401273727, 0.0, -0.005153656005859375, -1.6023874282836914, -2.288818359375e-05, 0.0, -0.13566100597381592, -8.7738037109375e-05, -1.9073486328125e-06, -0.0008373260498046875, -1.9073486328125e-06, -0.0002231597900390625, -0.14950668811798096, 0.0, -0.0028104782104492188, -2.288818359375e-05, -0.0031262636184692383, -0.0002503395080566406, -2.1457672119140625e-06, -0.00013756752014160156, 0.0, -1.6808484360808507e-05, 0.0, -1.33514404296875e-05, -7.05718994140625e-05, -5.7220458984375e-06, -1.013275596051244e-05, -1.1920922133867862e-06, -2.8252517950022593e-05, -1.9788581994362175e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -2.9652231753080827, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.8714600801467896, -1.1444091796875e-05, -3.814697265625e-06, -0.0011234283447265625, -1.9073486328125e-06, 0.0, -0.00086212158203125, -1.9073486328125e-06, -0.0007327795028686523, -9.5367431640625e-06, -0.0014123916625976562, -8.7738037109375e-05, -0.0001068115234375, -0.0038003921508789062, 0.0, -2.09808349609375e-05, -0.00019073486328125, -0.000591278076171875, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.000392913818359375, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.05945110321044922, -0.07303237915039062, -0.0013166769640520215, -8.797645568847656e-05, -0.00031280517578125, 0.0, -0.05272197723388672, -0.054393649101257324, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11535715311765671, 0.0, -0.0052032470703125, -0.33186817169189453, -2.47955322265625e-05, 0.0, -0.017461776733398438, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.3000268936157227, -0.0001125335693359375, -2.47955322265625e-05, 0.0, -0.00016617773508187383, -3.719329470186494e-05, -7.62939453125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -8.785724639892578e-05, -1.3947486877441406e-05, -0.009573936462402344, -3.62396240234375e-05, -0.029999732971191406, -5.7220458984375e-06, -4.00543212890625e-05, -0.02503490447998047, 0.0, -0.0039386749267578125, -1.33514404296875e-05, -0.000764012336730957, -0.0004343986511230469, -5.841255187988281e-06, -7.843971252441406e-05, 0.0, -1.9788669305853546e-05, 0.0, -0.0001468658447265625, -9.1552734375e-05, -2.288818359375e-05, -2.217275687144138e-05, -1.5497195136049413e-06, -2.8967704565729946e-05, -2.1457481125253253e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -3.1198887649440934, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.8714600801467896, -1.1444091796875e-05, -3.814697265625e-06, -0.0011234283447265625, -1.9073486328125e-06, 0.0, -0.00086212158203125, -1.9073486328125e-06, -0.0007327795028686523, -9.5367431640625e-06, -0.0014123916625976562, -8.7738037109375e-05, -0.0001068115234375, -0.0038003921508789062, 0.0, -2.09808349609375e-05, -0.00019073486328125, -0.000591278076171875, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.000392913818359375, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.05945110321044922, -0.07303237915039062, -0.0013166769640520215, -8.797645568847656e-05, -0.00031280517578125, 0.0, -0.05272197723388672, -0.054393649101257324, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11535715311765671, 0.0, -0.0052032470703125, -1.582850456237793, -2.288818359375e-05, 0.0, -0.13551044464111328, -8.58306884765625e-05, -1.9073486328125e-06, -0.0008258819580078125, -1.9073486328125e-06, -0.00022125244140625, -0.14885151386260986, 0.0, -0.0028095245361328125, -2.288818359375e-05, -0.0031090974807739258, -0.0002503395080566406, -2.1457672119140625e-06, -0.00013756752014160156, 0.0, -1.6808484360808507e-05, 0.0, -1.33514404296875e-05, -7.05718994140625e-05, -5.7220458984375e-06, -1.013275596051244e-05, -1.1920922133867862e-06, -2.8252517950022593e-05, -1.9788581994362175e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template14", "hole0": "Minion", "hole1": 2, "hole2": 4}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Minion", "<EOS>", "2", "<EOS>", "4", "<EOS>"], "score": -3.1366529224063555, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.8714600801467896, -1.1444091796875e-05, -3.814697265625e-06, -0.0011234283447265625, -1.9073486328125e-06, 0.0, -0.00086212158203125, -1.9073486328125e-06, -0.0007327795028686523, -9.5367431640625e-06, -0.0014123916625976562, -8.7738037109375e-05, -0.0001068115234375, -0.0038003921508789062, 0.0, -2.09808349609375e-05, -0.00019073486328125, -0.000591278076171875, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.000392913818359375, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.05945110321044922, -0.07303237915039062, -0.0013166769640520215, -8.797645568847656e-05, -0.00031280517578125, 0.0, -0.05272197723388672, -0.054393649101257324, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11535715311765671, 0.0, -0.0052032470703125, -0.33186817169189453, -2.47955322265625e-05, 0.0, -0.017461776733398438, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -0.3568544387817383, -1.33514404296875e-05, -4.5299530029296875e-05, -1.9073486328125e-06, -0.000762939453125, -2.288818359375e-05, -8.58306884765625e-05, -0.0040435791015625, -1.9073486328125e-06, -0.00029754638671875, 0.0, -0.005749106407165527, -0.0008761882781982422, -4.768370445162873e-07, -0.9795365333557129, -0.000209808349609375, -2.4795530407573096e-05, 0.0, -0.00031280517578125, -0.01572704315185547, -0.0020656585693359375, -0.0003175667370669544, -4.1961669921875e-05, -0.0006148815155029297, 0.0, -0.1746208667755127, 0.0], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(Null, picker=\n            UserPicker())))\n\n    def create_weapon(self, player):\n        return Minion(2, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -3.7674757289396297, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.6043635606765747, -5.543231964111328e-05, -3.814697265625e-06, -0.003780364990234375, -1.9073486328125e-06, 0.0, -0.001251220703125, -1.9073486328125e-06, -0.0006986856460571289, -7.62939453125e-06, -0.0014581680297851562, -9.1552734375e-05, -0.000110626220703125, -0.0037527084350585938, 0.0, -2.288818359375e-05, -0.0001697540283203125, -0.0005950927734375, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0003681182861328125, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.06180000305175781, -0.07972145080566406, -0.0013100161449983716, -8.797645568847656e-05, -0.00031566619873046875, 0.0, -0.057050108909606934, -0.05424678325653076, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -2.2435038089752197, 0.0, -0.02591705322265625, -0.39858055114746094, -4.1961669921875e-05, 0.0, -0.1334857940673828, -0.000102996826171875, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.000213623046875, -0.08422577381134033, 0.0, -0.00247955322265625, -1.71661376953125e-05, -0.004543423652648926, -0.0002980232238769531, -2.0265579223632812e-06, -0.00013363361358642578, 0.0, -1.955029074451886e-05, 0.0, -2.86102294921875e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.5258699932019226e-05, -9.536738616588991e-07, -2.968300941574853e-05, -1.9430961401667446e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(3)), MinionSelector(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -3.8381796973823015, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.6043635606765747, -5.543231964111328e-05, -3.814697265625e-06, -0.003780364990234375, -1.9073486328125e-06, 0.0, -0.001251220703125, -1.9073486328125e-06, -0.0006986856460571289, -7.62939453125e-06, -0.0014581680297851562, -9.1552734375e-05, -0.000110626220703125, -0.0037527084350585938, 0.0, -2.288818359375e-05, -0.0001697540283203125, -0.0005950927734375, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0003681182861328125, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.06180000305175781, -0.07972145080566406, -0.0013100161449983716, -8.797645568847656e-05, -0.00031566619873046875, 0.0, -0.057050108909606934, -0.05424678325653076, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11438309401273727, 0.0, -0.005153656005859375, -2.6350202560424805, -1.1444091796875e-05, 0.0, -0.0059051513671875, -0.000225067138671875, -1.52587890625e-05, -0.006969451904296875, -0.002857208251953125, -0.00040435791015625, -0.09048246592283249, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.10280227661132812, -2.6702880859375e-05, -1.1444091796875e-05, -4.76837158203125e-05, 0.0, -2.384165782132186e-05, 0.0, -1.1444091796875e-05, -0.0001087188720703125, -7.62939453125e-06, -4.529942543740617e-06, -8.344646857949556e-07, -1.943108145496808e-05, -1.5854737284826115e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(Null,\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -4.001404156039811, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.8714600801467896, -1.1444091796875e-05, -3.814697265625e-06, -0.0011234283447265625, -1.9073486328125e-06, 0.0, -0.00086212158203125, -1.9073486328125e-06, -0.0007327795028686523, -9.5367431640625e-06, -0.0014123916625976562, -8.7738037109375e-05, -0.0001068115234375, -0.0038003921508789062, 0.0, -2.09808349609375e-05, -0.00019073486328125, -0.000591278076171875, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.000392913818359375, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.05945110321044922, -0.07303237915039062, -0.0013166769640520215, -8.797645568847656e-05, -0.00031280517578125, 0.0, -0.05272197723388672, -0.054393649101257324, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -2.235318899154663, 0.0, -0.026117324829101562, -0.3898124694824219, -4.1961669921875e-05, 0.0, -0.1335916519165039, -0.0001010894775390625, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.0002117156982421875, -0.08395874500274658, 0.0, -0.0024852752685546875, -1.71661376953125e-05, -0.004518628120422363, -0.0002999305725097656, -2.0265579223632812e-06, -0.00013363361358642578, 0.0, -1.955029074451886e-05, 0.0, -2.86102294921875e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.5258699932019226e-05, -9.536738616588991e-07, -2.968300941574853e-05, -1.9430961401667446e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(3)), MinionSelector(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -4.081463907945917, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.8714600801467896, -1.1444091796875e-05, -3.814697265625e-06, -0.0011234283447265625, -1.9073486328125e-06, 0.0, -0.00086212158203125, -1.9073486328125e-06, -0.0007327795028686523, -9.5367431640625e-06, -0.0014123916625976562, -8.7738037109375e-05, -0.0001068115234375, -0.0038003921508789062, 0.0, -2.09808349609375e-05, -0.00019073486328125, -0.000591278076171875, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.000392913818359375, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.05945110321044922, -0.07303237915039062, -0.0013166769640520215, -8.797645568847656e-05, -0.00031280517578125, 0.0, -0.05272197723388672, -0.054393649101257324, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11535715311765671, 0.0, -0.0052032470703125, -2.627568244934082, -1.1444091796875e-05, 0.0, -0.00591278076171875, -0.00022125244140625, -1.52587890625e-05, -0.00698089599609375, -0.0028543472290039062, -0.0004024505615234375, -0.08964847773313522, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.10247516632080078, -2.6702880859375e-05, -1.1444091796875e-05, -4.76837158203125e-05, 0.0, -2.384165782132186e-05, 0.0, -1.1444091796875e-05, -0.0001087188720703125, -7.62939453125e-06, -4.410734163684538e-06, -8.344646857949556e-07, -1.943108145496808e-05, -1.5854737284826115e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(Null,\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template14", "hole0": "Minion", "hole1": 2, "hole2": 2}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>"], "score": -4.58491252933468, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.6043635606765747, -5.543231964111328e-05, -3.814697265625e-06, -0.003780364990234375, -1.9073486328125e-06, 0.0, -0.001251220703125, -1.9073486328125e-06, -0.0006986856460571289, -7.62939453125e-06, -0.0014581680297851562, -9.1552734375e-05, -0.000110626220703125, -0.0037527084350585938, 0.0, -2.288818359375e-05, -0.0001697540283203125, -0.0005950927734375, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0003681182861328125, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.06180000305175781, -0.07972145080566406, -0.0013100161449983716, -8.797645568847656e-05, -0.00031566619873046875, 0.0, -0.057050108909606934, -0.05424678325653076, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11438309401273727, 0.0, -0.005153656005859375, -0.3256053924560547, -2.47955322265625e-05, 0.0, -0.017526626586914062, -2.09808349609375e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.35624027252197266, -1.33514404296875e-05, -4.5299530029296875e-05, -1.9073486328125e-06, -0.0007648468017578125, -2.288818359375e-05, -8.58306884765625e-05, -0.004016876220703125, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -0.00573575496673584, -0.0008782148361206055, -4.768370445162873e-07, -0.9861865043640137, -0.000209808349609375, -2.4795530407573096e-05, 0.0, -0.0003108978271484375, -0.01568889617919922, -0.00206756591796875, -0.0003176859172526747, -4.1961669921875e-05, -0.0006148815155029297, 0.0, -1.874997854232788, -1.1920928244535389e-07], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(Null, picker=\n            UserPicker())))\n\n    def create_weapon(self, player):\n        return Minion(2, 2)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -4.7672603102343984, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.6043635606765747, -5.543231964111328e-05, -3.814697265625e-06, -0.003780364990234375, -1.9073486328125e-06, 0.0, -0.001251220703125, -1.9073486328125e-06, -0.0006986856460571289, -7.62939453125e-06, -0.0014581680297851562, -9.1552734375e-05, -0.000110626220703125, -0.0037527084350585938, 0.0, -2.288818359375e-05, -0.0001697540283203125, -0.0005950927734375, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0003681182861328125, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.06180000305175781, -0.07972145080566406, -0.0013100161449983716, -8.797645568847656e-05, -0.00031566619873046875, 0.0, -0.057050108909606934, -2.952106237411499, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -0.022779816761612892, -1.9073486328125e-06, -0.030271530151367188, -0.1412210464477539, -2.86102294921875e-05, 0.0, -0.04991722106933594, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -0.27656078338623047, -1.33514404296875e-05, -4.756450653076172e-05, -1.9073486328125e-06, -0.000881195068359375, -2.09808349609375e-05, -8.58306884765625e-05, -0.003864288330078125, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.00556337833404541, -0.0010036230087280273, -7.152555099310121e-07, -0.4624124765396118, 0.0, -5.292771675158292e-05, 0.0, -3.4332275390625e-05, -0.0005550384521484375, -9.5367431640625e-06, -4.410734163684538e-06, -4.0531076592742465e-06, -6.97374198352918e-05, -4.815948341274634e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(2)), MinionSelector(Null, picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 5}], "hole0": "ScrewjankClunker", "hole4": "player"}, "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -5.018455487670273, "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.8714600801467896, -1.1444091796875e-05, -3.814697265625e-06, -0.0011234283447265625, -1.9073486328125e-06, 0.0, -0.00086212158203125, -1.9073486328125e-06, -0.0007327795028686523, -9.5367431640625e-06, -0.0014123916625976562, -8.7738037109375e-05, -0.0001068115234375, -0.0038003921508789062, 0.0, -2.09808349609375e-05, -0.00019073486328125, -0.000591278076171875, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.000392913818359375, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.05945110321044922, -0.07303237915039062, -0.0013166769640520215, -8.797645568847656e-05, -0.00031280517578125, 0.0, -0.05272197723388672, -2.9493567943573, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -0.022771233692765236, -1.9073486328125e-06, -0.0302276611328125, -0.13999271392822266, -2.86102294921875e-05, 0.0, -0.05000877380371094, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -0.2796630859375, -1.33514404296875e-05, -4.756450653076172e-05, -1.9073486328125e-06, -0.000881195068359375, -2.09808349609375e-05, -8.58306884765625e-05, -0.0038661956787109375, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.005565285682678223, -0.0010036230087280273, -7.152555099310121e-07, -0.4637256860733032, 0.0, -5.292771675158292e-05, 0.0, -3.4332275390625e-05, -0.000553131103515625, -9.5367431640625e-06, -4.410734163684538e-06, -4.0531076592742465e-06, -6.97374198352918e-05, -4.815948341274634e-05], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(2)), MinionSelector(Null, picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}], "gold_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -1.8472736903952338, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -0.4873104691505432, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -0.2772305905818939, -0.015685003250837326, -0.16142749786376953, -5.7220458984375e-06, -0.07097041606903076, -1.9073486328125e-06, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sneed Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -2.54522900073993, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -1.1852657794952393, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -0.2772305905818939, -0.015685003250837326, -0.16142749786376953, -5.7220458984375e-06, -0.07097041606903076, -1.9073486328125e-06, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -2.679233928474723, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -0.4873104691505432, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -1.2892497777938843, 0.0, -0.003964066039770842, 0.0, -0.0001316070556640625, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0003643035888671875, -3.933906555175781e-06, -1.1444091796875e-05, -0.00093841552734375, -0.0253448486328125, -0.007260635495185852, -9.536738616588991e-07, -1.71661376953125e-05, 0.0, -0.27566254138946533, -0.023482078686356544, -0.11419868469238281, -3.814697265625e-06, -0.03501296043395996, -1.9073486328125e-06, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 5, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "OldOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Old", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.3082383701132514, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -1.7349021434783936, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -0.4873104691505432, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -0.2772305905818939, -0.015685003250837326, -0.16142749786376953, -5.7220458984375e-06, -0.07097041606903076, -1.9073486328125e-06, 0.0], "inferred_code": "class OldOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sneed Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.377189238819419, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -1.1852657794952393, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -1.2892497777938843, 0.0, -0.003964066039770842, 0.0, -0.0001316070556640625, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0003643035888671875, -3.933906555175781e-06, -1.1444091796875e-05, -0.00093841552734375, -0.0253448486328125, -0.007260635495185852, -9.536738616588991e-07, -1.71661376953125e-05, 0.0, -0.27566254138946533, -0.023482078686356544, -0.11419868469238281, -3.814697265625e-06, -0.03501296043395996, -1.9073486328125e-06, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 5, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "legendaryOld"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "legendary", "Old", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.5220047098430243, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -0.4873104691505432, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -1.4916023015975952, -0.5005810856819153, -0.19003386795520782, -0.017354965209960938, 0.0, -0.00047993616317398846, 0.0, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(legendaryOld()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>"], "score": -3.737920436646384, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -0.4873104691505432, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -0.2772305905818939, -0.015685003250837326, -1.9300298690795898, -0.00023651123046875, -0.18447303771972656, -2.86102294921875e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.008065631613135338, -0.00014042841212358326, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector(EnemyPlayer())))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "Sneed<UNK>Shredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "<UNK>", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.8718860053943374, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -2.149566411972046, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -0.4873104691505432, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -0.2772305905818939, -0.015685003250837326, -0.16142749786376953, -5.7220458984375e-06, -0.07097041606903076, -1.9073486328125e-06, 0.0], "inferred_code": "class Sneed<UNK>Shredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Old Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Old", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.964311165504334, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -2.6043479442596436, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -0.2772305905818939, -0.015685003250837326, -0.16142749786376953, -5.7220458984375e-06, -0.07097041606903076, -1.9073486328125e-06, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Old Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "legendaryShredder"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "legendary", "Shredder", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.9754043680461493, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -0.4873104691505432, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -1.4916023015975952, -0.9539807438850403, -0.19003386795520782, -0.017354965209960938, 0.0, -0.00047993616317398846, 0.0, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(\n            legendaryShredder()), PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sneed Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "OldOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Old", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.006193680457947, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -1.7349021434783936, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -1.1852657794952393, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -0.2772305905818939, -0.015685003250837326, -0.16142749786376953, -5.7220458984375e-06, -0.07097041606903076, -1.9073486328125e-06, 0.0], "inferred_code": "class OldOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "deathrattle"}], "hole0": "OldOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Old", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.14019860819274, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -1.7349021434783936, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -0.4873104691505432, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -1.2892497777938843, 0.0, -0.003964066039770842, 0.0, -0.0001316070556640625, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0003643035888671875, -3.933906555175781e-06, -1.1444091796875e-05, -0.00093841552734375, -0.0253448486328125, -0.007260635495185852, -9.536738616588991e-07, -1.71661376953125e-05, 0.0, -0.27566254138946533, -0.023482078686356544, -0.11419868469238281, -3.814697265625e-06, -0.03501296043395996, -1.9073486328125e-06, 0.0], "inferred_code": "class OldOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 5, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sneed Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "legendaryOld"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "legendary", "Old", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.21996002018772, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -1.1852657794952393, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -1.4916023015975952, -0.5005810856819153, -0.19003386795520782, -0.017354965209960938, 0.0, -0.00047993616317398846, 0.0, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(legendaryOld()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"elts": [{"_type": "Template15", "hole0": "ManaCost", "hole1": 2}, {"_type": "Template18_expr_seq", "hole0": "IsMinion"}], "_type": "List"}}], "_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 129, "Summon", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 19, 106, 170, 47, 134, "Mana", "Cost", "<EOS>", "2", "<EOS>", 49, 143, "Is", "Minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.258829927707829, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -0.4873104691505432, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -2.5204343795776367, -0.05826960876584053, -6.437280717364047e-06, -0.0008192062377929688, 0.0, -0.0017962830606848001, -0.001285791164264083, -7.152555099310121e-07, -0.00101470947265625, -7.62939453125e-06, -3.814697265625e-06, -0.002804753603413701, 0.0, -0.006773948669433594, -3.62396240234375e-05, -0.00157928466796875, -0.22697925567626953, -5.91278076171875e-05, -0.043807484209537506, -0.008369684219360352, -0.0046215057373046875, -0.12920573353767395, -0.0003349781036376953, -0.000286102294921875, -0.0030422210693359375, -0.016672009602189064, -0.00014996500976849347, -5.7220458984375e-06, -0.001178741455078125, -1.9073486328125e-06, -0.0001697540283203125, 0.0, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sneed Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "minion"}}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "deathrattle"}], "hole0": "SneedOldShredder", "hole4": "player"}, "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>"], "score": -4.43587574699108, "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -1.1852657794952393, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -0.2772305905818939, -0.015685003250837326, -1.9300298690795898, -0.00023651123046875, -0.18447303771972656, -2.86102294921875e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.008065631613135338, -0.00014042841212358326, 0.0], "inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector(EnemyPlayer())))\n"}], "gold_code": "class SneedsOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sneed's Old Shredder\", 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[IsRarity(CARD_RARITY.LEGENDARY), IsMinion()])),\n            PlayerSelector()))\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"arg": "source_list", "_type": "keyword", "value": {"_type": "Name", "id": "spare_part_list"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 177, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 53, 159, "source_list", "<EOS>", 21, 110, "spare_part_list", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -0.9999545948346906, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -0.5144195556640625, -0.0029391497373580933, -0.000869868672452867, -0.0063533782958984375, -0.003368377685546875, -5.7220458984375e-06, -2.7418125682743266e-05, -0.00012493133544921875, -5.7220458984375e-06, -0.005162239074707031, -1.1444091796875e-05, -2.09808349609375e-05, -0.0040721893310546875, -0.0003110170364379883, -0.0001201629638671875, 0.0, -1.33514404296875e-05, 0.0, -0.0002834796905517578, -5.483620952873025e-06, -0.00653529167175293, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, -0.007832775823771954, -0.0014279705937951803, -0.0073108673095703125, -1.9073486328125e-06, -0.1630476713180542, -0.0002984993043355644, -0.000499725341796875, -2.288818359375e-05, -3.0398339731618762e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.8014157578581944e-05, 0.0, -0.00025177001953125, -0.0001430511474609375, -7.62939453125e-06, -1.311301275563892e-06, -1.4305104514278355e-06, -0.14372050762176514, -2.3841855067985307e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Draw", "hole1": {"_type": "Name", "id": "Attribute"}, "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Template13", "hole0": "HeroSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Draw", "<EOS>", 21, 110, "Attribute", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 46, 128, "Hero", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -2.794508052179765, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -1.9506797790527344, -0.3503514528274536, -2.1219253540039062e-05, -5.7220458984375e-06, 0.0, -0.058492038398981094, -0.0006164310616441071, -0.0013275146484375, -0.023681640625, -0.00026702880859375, -0.22557783126831055, -0.0004540681838989258, -0.006028175354003906, -2.6702880859375e-05, -0.016585230827331543, -7.2479248046875e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.004076818935573101, -0.00014233587717171758, -5.7220458984375e-06, -1.52587890625e-05, -1.52587890625e-05, -0.0003877878189086914, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -9.059900548891164e-06, 0.0, -0.0002536773681640625, -8.7738037109375e-05, -9.5367431640625e-06, -1.6689286894688848e-06, -1.1920922133867862e-06, -0.024658560752868652, -8.344646857949556e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Draw(Attribute('<UNK>',\n            HeroSelector(EnemyPlayer()))), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"arg": "source_list", "_type": "keyword", "value": {"_type": "Name", "id": "spare_part_list"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 5}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 177, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 53, 159, "source_list", "<EOS>", 21, 110, "spare_part_list", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "5", "<EOS>"], "score": -2.867185487014524, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -0.5144195556640625, -0.0029391497373580933, -0.000869868672452867, -0.0063533782958984375, -0.003368377685546875, -5.7220458984375e-06, -2.7418125682743266e-05, -0.00012493133544921875, -5.7220458984375e-06, -0.005162239074707031, -1.1444091796875e-05, -2.09808349609375e-05, -0.0040721893310546875, -0.0003110170364379883, -0.0001201629638671875, 0.0, -1.33514404296875e-05, 0.0, -0.0002834796905517578, -5.483620952873025e-06, -0.00653529167175293, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, -0.007832775823771954, -0.0014279705937951803, -0.0073108673095703125, -1.9073486328125e-06, -0.1630476713180542, -0.0002984993043355644, -0.000499725341796875, -2.288818359375e-05, -3.0398339731618762e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.8014157578581944e-05, 0.0, -0.00025177001953125, -0.0001430511474609375, -7.62939453125e-06, -1.311301275563892e-06, -1.4305104514278355e-06, -2.0109498500823975, -1.7881377516459906e-06], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"arg": "source_list", "_type": "keyword", "value": {"_type": "Name", "id": "<UNK>"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 177, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 53, 159, "source_list", "<EOS>", 21, 110, "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -2.908353460524296, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -0.5144195556640625, -0.0029391497373580933, -0.000869868672452867, -0.0063533782958984375, -0.003368377685546875, -5.7220458984375e-06, -2.7418125682743266e-05, -0.00012493133544921875, -5.7220458984375e-06, -0.005162239074707031, -1.1444091796875e-05, -2.09808349609375e-05, -0.0040721893310546875, -0.0003110170364379883, -0.0001201629638671875, 0.0, -1.33514404296875e-05, 0.0, -0.0002834796905517578, -5.483620952873025e-06, -0.00653529167175293, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, -0.007832775823771954, -0.0014279705937951803, -0.0073108673095703125, -1.9073486328125e-06, -2.032794237136841, -0.013087510131299496, -0.0012569427490234375, -1.9073486328125e-05, -6.699480582028627e-05, -3.814697265625e-06, 0.0, -7.748603820800781e-06, 0.0, -3.790852497331798e-05, 0.0, -0.00025177001953125, -0.0001773834228515625, -7.62939453125e-06, -1.4305104514278355e-06, -1.1920922133867862e-06, -0.16874957084655762, -2.3841855067985307e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=<UNK>)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Add"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Add", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -3.04181333404523, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -1.3780555725097656, -0.3059290945529938, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.009039472788572311, -1.160935401916504, -6.29425048828125e-05, -5.7220458984375e-06, -0.001015047775581479, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.4305092918220907e-05, 0.0, -0.000156402587890625, -7.62939453125e-05, -9.5367431640625e-06, -1.7881377516459906e-06, -1.0728830375228426e-06, -0.055855751037597656, -4.768370445162873e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Summon(Add()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "AddOfAdd"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Add", "Of", "Add", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -3.212890753810825, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -1.3780555725097656, -0.3059290945529938, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.009039472788572311, -0.9698724150657654, -0.38091322779655457, -0.0014443397521972656, -5.91278076171875e-05, -1.1444091796875e-05, -1.4066685253055766e-05, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -1.5258772691595368e-05, 0.0, -0.000156402587890625, -8.0108642578125e-05, -9.5367431640625e-06, -1.4305104514278355e-06, -1.311301275563892e-06, -0.036630988121032715, -5.960462772236497e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Summon(AddOfAdd()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Add", "Card", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -3.418172815668129, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -1.3780555725097656, -0.3059290945529938, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.009039472788572311, -1.5462665557861328, -6.1034937971271574e-05, -1.9073486328125e-05, -7.62939453125e-06, -2.872921686503105e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.4305092918220907e-05, 0.0, -0.00017547607421875, -7.82012939453125e-05, -9.5367431640625e-06, -1.6689286894688848e-06, -1.1920922133867862e-06, -0.04783034324645996, -4.768370445162873e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Summon(AddCard()), PlayerSelector())\n            )\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "AddOfToshley"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Add", "Of", "Toshley", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -4.412801997782708, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -1.3780555725097656, -0.3059290945529938, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.009039472788572311, -0.9698724150657654, -1.58347749710083, -0.0012486949563026428, -6.29425048828125e-05, -5.7220458984375e-06, -3.1947838579071686e-05, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -1.7404538084520027e-05, 0.0, -0.0001621246337890625, -8.96453857421875e-05, -9.5367431640625e-06, -1.4305104514278355e-06, -1.1920922133867862e-06, -0.03414034843444824, -5.960462772236497e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Summon(AddOfToshley()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "AddCard"}, "args": [{"_type": "Template19", "hole0": "AddCard"}, {"_type": "Num", "n": 2}]}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Add", "Card", "<EOS>", 170, 50, 146, "Add", "Card", "<EOS>", 42, 115, "2", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -4.501076754830137, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -2.872279167175293, -0.005061149597167969, -2.6702880859375e-05, 0.0, -0.03691702336072922, -0.00021181847841944546, -2.1934505639364943e-05, -0.4578580856323242, -0.19728755950927734, -0.0001583099365234375, -0.3375001549720764, -0.32964348793029785, -0.012015461921691895, -0.08804893493652344, -0.00043487548828125, -0.06603606790304184, -1.1444091796875e-05, -0.00507354736328125, -7.62939453125e-06, -0.000179290771484375, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -2.6106834411621094e-05, 0.0, -6.103515625e-05, -7.05718994140625e-05, -1.1444091796875e-05, -1.1920922133867862e-06, -1.311301275563892e-06, -0.050849199295043945, -5.960462772236497e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(AddCard(), 2),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -4.50702191733302, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -3.637300491333008, -8.96453857421875e-05, -0.1258394867181778, -6.318082796497038e-06, -0.5579910278320312, -9.5367431640625e-06, -5.388259523897432e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, 0.0, -1.0251998901367188e-05, 0.0, -0.000217437744140625, -0.000156402587890625, -9.5367431640625e-06, -2.0265558760002023e-06, -5.960462772236497e-07, -0.14404845237731934, -3.576278118089249e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "AddToshley"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Add", "Toshley", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -4.66244747775562, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -1.3780555725097656, -0.3059290945529938, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.009039472788572311, -2.763888359069824, -0.027528930455446243, -8.0108642578125e-05, -3.814697265625e-06, -8.928473107516766e-05, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -1.5616398741258308e-05, 0.0, -0.0001773834228515625, -9.34600830078125e-05, -7.62939453125e-06, -1.5497195136049413e-06, -1.0728830375228426e-06, -0.046877384185791016, -4.768370445162873e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Summon(AddToshley()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Draw"}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -4.74670074205261, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -3.637300491333008, -8.96453857421875e-05, -0.1258394867181778, -6.318082796497038e-06, -0.8512773513793945, -1.52587890625e-05, -0.009133066982030869, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -0.004739998374134302, -9.632110595703125e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.00039112562080845237, 0.0, -0.001293182373046875, -0.0003795623779296875, -9.5367431640625e-06, -5.006777428206988e-06, -9.536738616588991e-07, -0.07480502128601074, -1.4305104514278355e-06], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Draw(), PlayerSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "ReplaceHeroWithMinion", "hole1": {"_type": "Name", "id": "AddCard"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Replace", "Hero", "With", "Minion", "<EOS>", 21, 110, "Add", "Card", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -4.843755844766747, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -1.3780555725097656, -1.6370590925216675, -0.03301488235592842, -0.05214989185333252, -0.5406804084777832, -0.002033233642578125, -2.6702880859375e-05, -3.814697265625e-06, -0.016171980649232864, -1.0236421823501587, -0.0003465093905106187, -8.20159912109375e-05, -2.09808349609375e-05, -8.547291508875787e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -1.406666160619352e-05, 0.0, -0.00018310546875, -8.58306884765625e-05, -9.5367431640625e-06, -1.7881377516459906e-06, -1.311301275563892e-06, -0.029448747634887695, -5.960462772236497e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(ReplaceHeroWithMinion(AddCard()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Draw", "hole1": {"_type": "Name", "id": "Attribute"}, "hole2": [{"_type": "Str", "s": "health"}, {"_type": "Template13", "hole0": "HeroSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Draw", "<EOS>", 21, 110, "Attribute", "<EOS>", 170, 43, 119, "health", "<EOS>", 46, 128, "Hero", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -4.977522762615365, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -1.9506797790527344, -0.3503514528274536, -2.1219253540039062e-05, -5.7220458984375e-06, 0.0, -0.058492038398981094, -0.0006164310616441071, -0.0013275146484375, -0.023681640625, -0.00026702880859375, -2.176090717315674, -1.9073486328125e-06, -0.08555793762207031, -2.6702880859375e-05, -0.17048203945159912, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.004033029079437256, -0.00012624262308236212, -3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -0.0004316568374633789, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -8.463855920126662e-06, 0.0, -0.000247955322265625, -9.1552734375e-05, -9.5367431640625e-06, -1.6689286894688848e-06, -1.1920922133867862e-06, -0.02426934242248535, -8.344646857949556e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Draw(Attribute('health',\n            HeroSelector(EnemyPlayer()))), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "AddCard"}}]}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 7}], "hole0": "Toshley", "hole4": "player"}, "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Add", "Card", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -5.012773988258402, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -1.9506797790527344, -1.558777928352356, -0.27562594413757324, -0.0001049041748046875, -1.9073486328125e-06, -0.03049660101532936, -0.35244858264923096, -7.62939453125e-06, -0.17552757263183594, -0.021248817443847656, -0.1168203204870224, 0.0, -5.7220458984375e-06, 0.0, -0.034380953758955, -0.33629342913627625, -0.0028873675037175417, -3.4332275390625e-05, -1.9073486328125e-06, -0.0012900828151032329, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -8.463848644169047e-06, 0.0, -0.0002307891845703125, -7.43865966796875e-05, -9.5367431640625e-06, -1.5497195136049413e-06, -1.4305104514278355e-06, -0.025173306465148926, -7.152555099310121e-07], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Give(Buff(Buff(AddCard()))),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}], "gold_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 5}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "5", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -1.6188589024508104, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -0.343658447265625, -0.0010683536529541016, -2.3484230041503906e-05, -0.001186370849609375, -0.0009584426879882812, -0.001125335693359375, -0.0010443748906254768, -0.00010704994201660156, -2.300739288330078e-05, -0.7102088332176208, -4.076957702636719e-05, -0.15093708038330078, -1.9073486328125e-06, -0.020779836922883987, -6.306171417236328e-05, 0.0], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -2.5589886849569297, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -0.343658447265625, -0.0010683536529541016, -2.3484230041503906e-05, -0.001186370849609375, -0.0009584426879882812, -0.001125335693359375, -0.0010443748906254768, -0.00010704994201660156, -2.300739288330078e-05, -1.047878623008728, -3.516624929034151e-05, -0.6828908920288086, 0.0, -0.09129174053668976, -6.484984623966739e-05, 0.0], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "MinionSelector"}}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 46, 128, "Minion", "Selector", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>"], "score": -3.4102602397913273, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -0.343658447265625, -0.0010683536529541016, -2.3484230041503906e-05, -0.001186370849609375, -0.0009584426879882812, -0.001125335693359375, -0.0010443748906254768, -0.00010704994201660156, -2.300739288330078e-05, -1.047878623008728, -3.516624929034151e-05, -0.7271194458007812, -0.005574226379394531, -0.002748250961303711, -7.641315460205078e-05, -9.536738616588991e-07, -0.000225067138671875, -2.47955322265625e-05, -0.43392956256866455, -0.45581984519958496, -4.768370445162873e-07], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            MinionSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.745133508190847, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -0.343658447265625, -0.0010683536529541016, -2.3484230041503906e-05, -0.001186370849609375, -0.0009584426879882812, -0.001125335693359375, -0.0010443748906254768, -0.00010704994201660156, -2.300739288330078e-05, -2.7687630653381348, -0.00011193146929144859, -0.04213237762451172, -1.9073486328125e-06, -0.19722767174243927, -6.914138066349551e-05, 0.0], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(2), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "divine_shield"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.8029522502014146, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -3.5320568084716797, 0.0, -0.03180503845214844, -5.7220458984375e-06, -0.00025260448455810547, 0.0], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "Attack"}}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 46, 128, "Minion", "Selector", "<EOS>", 21, 110, "Attack", "<EOS>"], "score": -4.063602009919904, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -0.343658447265625, -0.0010683536529541016, -2.3484230041503906e-05, -0.001186370849609375, -0.0009584426879882812, -0.001125335693359375, -0.0010443748906254768, -0.00010704994201660156, -2.300739288330078e-05, -1.047878623008728, -3.516624929034151e-05, -0.7271194458007812, -0.005574226379394531, -0.002748250961303711, -7.641315460205078e-05, -9.536738616588991e-07, -0.000225067138671875, -2.47955322265625e-05, -1.542948603630066, -0.00014305110380519181], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            Attack()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 5}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "5", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -4.174072634031283, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -2.509612560272217, -1.6689286894688848e-06, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.0265579223632812e-06, -0.07230496406555176, -5.841255187988281e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003855228133033961, 0.0, -5.626674828818068e-05, 0.0, -0.0012149810791015625, -0.000232696533203125, -8.7738037109375e-05, -0.17580187320709229, 0.0, -0.00015091896057128906, 0.0, -0.0021955964621156454, 0.0, -1.52587890625e-05, -0.01685619354248047, -2.09808349609375e-05, -6.079672857595142e-06, -1.1920922133867862e-06, -0.0009268915164284408, 0.0, -0.11680310219526291, 0.0, -0.03468894958496094, -0.34780216217041016, -0.001070261001586914, -2.5391578674316406e-05, -0.0011615753173828125, -0.0009565353393554688, -0.0011310577392578125, -0.0010393679840490222, -0.00010716914403019473, -2.300739288330078e-05, -0.711982786655426, -4.076957702636719e-05, -0.15153884887695312, -1.9073486328125e-06, -0.02056719735264778, -6.29425048828125e-05, 0.0], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 3}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -4.196705813254866, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -0.343658447265625, -0.0010683536529541016, -2.3484230041503906e-05, -0.001186370849609375, -0.0009584426879882812, -0.001125335693359375, -0.0010443748906254768, -0.00010704994201660156, -2.300739288330078e-05, -3.333531141281128, -9.536738616588991e-07, -0.09838008880615234, 0.0, -0.027926519513130188, -3.9696693420410156e-05, 0.0], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "taunt"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.4229343735763536, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -4.17931604385376, 0.0, -0.00449371337890625, -5.7220458984375e-06, -0.0002868175506591797, 0.0], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template19", "hole0": "SelfSelector"}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "+1"}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 142, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 169, 49, 145, "Aura", "<EOS>", 170, 50, 146, "+1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -4.46870063186212, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -1.252293586730957, -0.003832101821899414, -1.9073486328125e-06, -9.918212890625e-05, -0.0039691925048828125, -0.000659942626953125, -0.0013929563574492931, -6.520747410831973e-05, -1.537799835205078e-05, -0.45366978645324707, -1.4424245819100179e-05, -0.3978443145751953, -1.9073486328125e-06, -0.04866323620080948, -5.292891728458926e-05, 0.0, -3.814697265625e-06, -9.72747802734375e-05, -0.0013484954833984375, -0.0022314453963190317, -2.110004425048828e-05, -0.0001163482666015625, -0.30341434478759766, -2.6702880859375e-05, -1.1100671291351318, -0.4784214198589325, -0.0032863616943359375, 0.0, -0.01945437677204609, -3.218649908376392e-06, 0.0], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(+1(), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "Minion"}}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 46, 128, "Minion", "Selector", "<EOS>", 21, 110, "Minion", "<EOS>"], "score": -4.780709782790709, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -0.343658447265625, -0.0010683536529541016, -2.3484230041503906e-05, -0.001186370849609375, -0.0009584426879882812, -0.001125335693359375, -0.0010443748906254768, -0.00010704994201660156, -2.300739288330078e-05, -1.047878623008728, -3.516624929034151e-05, -0.7271194458007812, -0.005574226379394531, -0.002748250961303711, -7.641315460205078e-05, -9.536738616588991e-07, -0.000225067138671875, -2.47955322265625e-05, -0.43392956256866455, -1.8262698650360107], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            Minion()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template19", "hole0": "SelfSelector"}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "MinionSelector"}}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 142, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 169, 49, 145, "Aura", "<EOS>", 170, 50, 146, "Attack", "<EOS>", 46, 128, "Minion", "Selector", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>"], "score": -4.943897691867598, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -1.252293586730957, -0.003832101821899414, -1.9073486328125e-06, -9.918212890625e-05, -0.0039691925048828125, -0.000659942626953125, -0.0013929563574492931, -6.520747410831973e-05, -1.537799835205078e-05, -0.45366978645324707, -1.4424245819100179e-05, -0.3978443145751953, -1.9073486328125e-06, -0.04866323620080948, -5.292891728458926e-05, 0.0, -3.814697265625e-06, -9.72747802734375e-05, -0.0013484954833984375, -0.0022314453963190317, -2.110004425048828e-05, -0.0001163482666015625, -0.30341434478759766, -2.6702880859375e-05, -0.5733887553215027, -0.00041902062366716564, -0.03965187072753906, -0.00151824951171875, -0.47641614079475403, -3.4332275390625e-05, 0.0, -0.000102996826171875, -0.000102996826171875, -0.7716485261917114, -0.22314655780792236, -1.1920928244535389e-07], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(Attack(), MinionSelector(MinionSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template19", "hole0": "SelfSelector"}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 142, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 169, 49, 145, "Aura", "<EOS>", 170, 50, 146, "Attack", "<EOS>", 46, 128, "Minion", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>"], "score": -5.283529964529734, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -1.252293586730957, -0.003832101821899414, -1.9073486328125e-06, -9.918212890625e-05, -0.0039691925048828125, -0.000659942626953125, -0.0013929563574492931, -6.520747410831973e-05, -1.537799835205078e-05, -0.45366978645324707, -1.4424245819100179e-05, -0.3978443145751953, -1.9073486328125e-06, -0.04866323620080948, -5.292891728458926e-05, 0.0, -3.814697265625e-06, -9.72747802734375e-05, -0.0013484954833984375, -0.0022314453963190317, -2.110004425048828e-05, -0.0001163482666015625, -0.30341434478759766, -2.6702880859375e-05, -0.5733887553215027, -0.00041902062366716564, -0.03965187072753906, -0.00151824951171875, -0.47641614079475403, -3.4332275390625e-05, 0.0, -0.000102996826171875, -0.000102996826171875, -1.3342609405517578, -0.000164627970661968, -1.9073486328125e-06], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(Attack(), MinionSelector(EnemyPlayer()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 5}, {"_type": "Template19", "hole0": "SelfSelector"}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "MinionSelector"}}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 142, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "5", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 169, 49, 145, "Aura", "<EOS>", 170, 50, 146, "Attack", "<EOS>", 46, 128, "Minion", "Selector", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>"], "score": -5.691143172754302, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -1.252293586730957, -0.003832101821899414, -1.9073486328125e-06, -9.918212890625e-05, -0.0039691925048828125, -0.000659942626953125, -0.0013929563574492931, -6.520747410831973e-05, -1.537799835205078e-05, -1.366753339767456, -3.063678741455078e-05, -0.1420154571533203, -1.9073486328125e-06, -0.014972547069191933, -5.340576171875e-05, 0.0, -3.814697265625e-06, -9.72747802734375e-05, -0.001598358154296875, -0.00224991119466722, -2.682209014892578e-05, -0.0001163482666015625, -0.32996273040771484, -2.09808349609375e-05, -0.6480123996734619, -0.0005159378051757812, -0.055339813232421875, -0.001186370849609375, -0.4582829773426056, -3.4332275390625e-05, 0.0, -0.000102996826171875, -0.000110626220703125, -0.8225140571594238, -0.19717800617218018, -1.1920928244535389e-07], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(5), SelfSelector()),\n            Aura(Attack(), MinionSelector(MinionSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MECH"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 5}, {"_type": "Template18_expr_seq", "hole0": "IncreaseMinion"}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "enrage"}], "hole0": "Warbot", "hole4": "player"}, "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "5", "<EOS>", 49, 143, "Increase", "Minion", "<EOS>"], "score": -6.803639868941318, "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -0.343658447265625, -0.0010683536529541016, -2.3484230041503906e-05, -0.001186370849609375, -0.0009584426879882812, -0.001125335693359375, -0.0010443748906254768, -0.00010704994201660156, -2.300739288330078e-05, -0.7102088332176208, -4.076957702636719e-05, -2.8928422927856445, -0.01096343994140625, -0.6557815074920654, -0.7338535785675049, -1.063122034072876], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(5), IncreaseMinion())])\n"}], "gold_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "fromDeathlord"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "deathrattle"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "from", "Deathlord", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -2.529204867078491, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -0.1225748062133789, -0.5596895217895508, -0.011950276792049408, -5.960462772236497e-07, -2.09808349609375e-05, 0.0, -0.4595978260040283, -0.2534554600715637, -0.3382287621498108, -0.040302276611328125, -3.814697265625e-06, -0.0002613063552416861, 0.0, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Summon(fromDeathlord()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "from"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "deathrattle"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "from", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.456654807287535, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -0.1225748062133789, -0.5596895217895508, -0.011950276792049408, -5.960462772236497e-07, -2.09808349609375e-05, 0.0, -0.4595978260040283, -1.552804946899414, -0.0065364837646484375, -3.814697265625e-06, -0.0003563147329259664, 0.0, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Summon(from()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "Template18", "hole0": "IsMinion"}}], "_type": "Template13", "hole0": "deck", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "deathrattle"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 129, "deck", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 28, 139, "Is", "Minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.539274303763378, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -0.1225748062133789, -0.9141731262207031, -1.238560438156128, -0.011849641799926758, -4.9591064453125e-05, 0.0, -0.00028215465135872364, -0.0003224611282348633, -2.0265579223632812e-06, -0.07094192504882812, -3.814697265625e-05, -3.814697265625e-06, -0.032292842864990234, -5.7220458984375e-06, -0.018054962158203125, -0.2838621139526367, -0.000510796788148582, -0.001551029970869422, -7.43865966796875e-05, -0.10040855407714844, -0.000232696533203125, -0.0003600120544433594, -3.814697265625e-06, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(deck(CardQuery(\n            conditions=[IsMinion()])), PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "Template18", "hole0": "IsMinion"}}], "_type": "Template13", "hole0": "MinionCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "deathrattle"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 129, "Minion", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 28, 139, "Is", "Minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.5769709705533757, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -0.1225748062133789, -0.9141731262207031, -0.5835254788398743, -0.058246612548828125, -0.00026702880859375, -0.00014495849609375, 0.0, -4.661050479626283e-05, -0.00014030933380126953, -1.9073486328125e-06, -0.5008878707885742, -1.52587890625e-05, -1.9073486328125e-06, -0.07166886329650879, -3.814697265625e-06, -0.02855682373046875, -0.454071044921875, -0.0005506107117980719, -0.0020068821031600237, -4.38690185546875e-05, -0.09576797485351562, -0.000911712646484375, -0.00023853777383919805, -5.7220458984375e-06, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(MinionCard(CardQuery(\n            conditions=[IsMinion()])), PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}}, {"arg": "source_list", "_type": "keyword", "value": {"_type": "Name", "id": "<UNK>"}}], "_type": "Template13", "hole0": "MinionCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "deathrattle"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 129, "Minion", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 177, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 53, 159, "source_list", "<EOS>", 21, 110, "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.6132771066518288, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -0.1225748062133789, -0.9141731262207031, -0.5835254788398743, -0.058246612548828125, -0.00026702880859375, -0.00014495849609375, 0.0, -4.661050479626283e-05, -0.00014030933380126953, -1.9073486328125e-06, -0.9383621215820312, -9.1552734375e-05, -1.9073486328125e-06, -0.007408499717712402, -1.1920928244535389e-07, -0.00038909912109375, 0.0, -0.004291534423828125, 0.0, -0.0007505416870117188, -4.768370445162873e-07, -0.05095517635345459, -2.0265579223632812e-06, -0.0001392364501953125, 0.0, -0.00293161254376173, -0.0003274203627370298, -0.02929401397705078, 0.0, -0.0007281303405761719, -3.8146827137097716e-05, -0.15511131286621094, -2.288818359375e-05, -0.00019121170043945312, 0.0, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(MinionCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=<UNK>)), PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "putsDeathlord"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "deathrattle"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "puts", "Deathlord", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.6835580088631588, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -0.1225748062133789, -0.5596895217895508, -0.011950276792049408, -5.960462772236497e-07, -2.09808349609375e-05, 0.0, -1.6139509677886963, -0.2534554600715637, -0.3382287621498108, -0.040302276611328125, -3.814697265625e-06, -0.0002613063552416861, 0.0, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Summon(putsDeathlord()),\n            PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "deathrattle"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>"], "score": -3.7978972291426913, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -2.277888298034668, -6.103515625e-05, -0.2517004609107971, -0.3578147292137146, -0.10098075866699219, -1.71661376953125e-05, -0.05898349732160568, -3.814697265625e-06, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.006593900267034769, -0.0006694793701171875, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>(), PlayerSelector\n            (EnemyPlayer())))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": [{"arg": "divine_shield", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}, {"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "_type": "Template14", "hole0": "Minion", "hole1": 2, "hole2": 8}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 70, 133, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 177, 53, 159, "divine_shield", "<EOS>", 22, 111, "True", "<EOS>", 53, 159, "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.811685204212637, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -1.9097585678100586, -0.0001049041748046875, -4.0531158447265625e-06, -1.1444091796875e-05, -0.0007706880569458008, 0.0, -9.131431579589844e-05, -3.576278118089249e-07, -0.581120491027832, -3.24249267578125e-05, -1.9073486328125e-06, -1.1673446893692017, 0.0, -4.1961669921875e-05, -3.4332275390625e-05, -4.649161837733118e-06, -2.503394853192731e-06, -0.0001220703125, -0.0012111663818359375, -0.1424931287765503, -3.933906555175781e-06, -0.000118255615234375, -1.33514404296875e-05, -2.8014183044433594e-05, -2.9802317840221804e-06], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "fromDeathlordDeathlord"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "deathrattle"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "from", "Deathlord", "Deathlord", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.058841146059827, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -0.1225748062133789, -0.5596895217895508, -0.011950276792049408, -5.960462772236497e-07, -2.09808349609375e-05, 0.0, -0.4595978260040283, -0.2534554600715637, -1.7975728511810303, -0.06598146259784698, -0.043975830078125, -3.814697265625e-06, -0.0008983610314317048, -1.1920928244535389e-07, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Summon(\n            fromDeathlordDeathlord()), PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>Windfury"}}], "_type": "List"}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "buffs"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "Windfury", "<EOS>"], "score": -4.433849930243596, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -2.2266054153442383, 0.0, -1.5911970138549805, -0.0001354217529296875, -3.4332275390625e-05, -8.392333984375e-05, -0.0016613006591796875, -0.00025677678058855236, 0.0, -1.71661376953125e-05, 0.0, -0.27093660831451416, -0.17300200462341309, -3.8862031942699105e-05], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, buffs=[Buff(<UNK>Windfury())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "Template18", "hole0": "IsType", "hole1": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}}], "_type": "Template13", "hole0": "MinionCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "deathrattle"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 129, "Minion", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 28, 141, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.8078971497776735, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -0.1225748062133789, -0.9141731262207031, -0.5835254788398743, -0.058246612548828125, -0.00026702880859375, -0.00014495849609375, 0.0, -4.661050479626283e-05, -0.00014030933380126953, -1.9073486328125e-06, -0.5008878707885742, -1.52587890625e-05, -1.9073486328125e-06, -0.07166886329650879, -3.814697265625e-06, -0.02855682373046875, -1.0572500228881836, -0.0015966891078278422, -0.003499627113342285, 0.0, -0.003170013427734375, -0.00014495849609375, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, -1.311301275563892e-06, -0.7185869216918945, 0.0, -0.0001316070556640625, -5.7220458984375e-06, -7.43865966796875e-05, -1.9073486328125e-06, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(MinionCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH)])), PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "Template18", "hole0": "IsType", "hole1": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}}], "_type": "Template13", "hole0": "MinionCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "deathrattle"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 129, "Minion", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 28, 141, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.863019525265955, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -0.1225748062133789, -0.9141731262207031, -0.5835254788398743, -0.058246612548828125, -0.00026702880859375, -0.00014495849609375, 0.0, -4.661050479626283e-05, -0.00014030933380126953, -1.9073486328125e-06, -0.5008878707885742, -1.52587890625e-05, -1.9073486328125e-06, -0.07166886329650879, -3.814697265625e-06, -0.02855682373046875, -1.0572500228881836, -0.0015966891078278422, -0.003499627113342285, 0.0, -0.003170013427734375, -0.00014495849609375, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, -1.311301275563892e-06, -0.7732152938842773, 0.0, -0.0006275177001953125, -5.7220458984375e-06, -7.2479248046875e-05, -1.9073486328125e-06, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(MinionCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.BEAST)])), PlayerSelector()))\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "Attack", "hole1": {"_type": "Name", "id": "IsHero"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "fromDeathlord"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "effects"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Attack", "<EOS>", 21, 110, "Is", "Hero", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "from", "Deathlord", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.924710715928661, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -1.1884642839431763, 0.0, -3.814697265625e-05, -0.000896453857421875, -7.390975952148438e-05, 0.0, -0.000514984130859375, -0.2217998504638672, -0.020940780639648438, -0.7359648942947388, -0.00011372566223144531, -7.62939453125e-06, 0.0, -0.09608306735754013, -0.2937946319580078, 0.0, -0.000762939453125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00022161006927490234, -1.919269561767578e-05, -2.2649765014648438e-06, -1.1444091796875e-05, -0.0018939971923828125, -1.215998649597168, -0.01953919604420662, -1.1920928244535389e-07, -5.7220458984375e-06, 0.0, -0.449142724275589, -0.41884467005729675, -0.08939264714717865, -9.1552734375e-05, -3.814697265625e-06, -0.00019907868409063667, -1.9073486328125e-06, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, effects=[Effect(Attack(IsHero()), ActionTag(\n            Summon(fromDeathlord()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "Attack", "hole1": {"_type": "Name", "id": "IsHero"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}, "args": [{"_type": "Num", "n": 4}]}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "effects"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Attack", "<EOS>", 21, 110, "Is", "Hero", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 35, 87, 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "4", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.411821133628692, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -1.1884642839431763, 0.0, -3.814697265625e-05, -0.000896453857421875, -7.390975952148438e-05, 0.0, -0.000514984130859375, -0.2217998504638672, -0.020940780639648438, -0.7359648942947388, -0.00011372566223144531, -7.62939453125e-06, 0.0, -0.09608306735754013, -0.2937946319580078, 0.0, -0.000762939453125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00022161006927490234, -1.919269561767578e-05, -2.2649765014648438e-06, -1.1444091796875e-05, -0.0018939971923828125, -0.8456506729125977, -0.0073090787045657635, -0.00014638900756835938, -1.9073486328125e-05, -2.47955322265625e-05, -0.12887130677700043, -0.17438483238220215, -0.000171661376953125, -0.5044727325439453, -0.005031585693359375, 0.0, -1.9073486328125e-06, -0.5328361392021179, -0.06928342580795288, -2.5033950805664062e-05, -0.0002079010009765625, -0.032959938049316406, -2.09808349609375e-05, -0.3784741163253784, -4.0531158447265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -0.0003337860107421875, -3.814697265625e-06, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, effects=[Effect(Attack(IsHero()), ActionTag(\n            Give(Buff(ChangeAttack(4))), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Deathlord", "hole1": 3, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CharacterAttack", "hole1": {"_type": "Name", "id": "IsHero"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}, "args": [{"_type": "Num", "n": 4}]}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "effects"}], "hole0": "Deathlord", "hole4": "player"}, "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Character", "Attack", "<EOS>", 21, 110, "Is", "Hero", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 35, 87, 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "4", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.65002958348181, "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -1.1884642839431763, 0.0, -3.814697265625e-05, -0.000896453857421875, -7.390975952148438e-05, 0.0, -0.000514984130859375, -0.2217998504638672, -0.020940780639648438, -0.9412976503372192, -0.0006238221540115774, 0.0, -3.814697265625e-06, 0.0, -0.027499228715896606, -0.295207679271698, 0.0, -0.000576019287109375, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.00028264522552490234, -2.682209014892578e-05, -2.384185791015625e-06, -1.1444091796875e-05, -0.001834869384765625, -0.8854837417602539, -0.010153054259717464, -0.00014269351959228516, -1.71661376953125e-05, -2.288818359375e-05, -0.1370004266500473, -0.17997634410858154, -0.0001983642578125, -0.5116338729858398, -0.00506591796875, 0.0, -1.9073486328125e-06, -0.44299688935279846, -0.10941380262374878, -2.5033950805664062e-05, -0.0002117156982421875, -0.04774284362792969, -2.6702880859375e-05, -0.4495033025741577, -4.0531158447265625e-06, -2.86102294921875e-05, -7.2479248046875e-05, -0.0003204345703125, -3.814697265625e-06, 0.0], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(Buff(ChangeAttack(4))), SelfSelector()))])\n"}], "gold_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(Summon(\n            CardQuery(conditions=[IsMinion()], source=CARD_SOURCE.MY_DECK)),\n            PlayerSelector(EnemyPlayer())))\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ManaChange", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Mana", "Change", "<EOS>", "4", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>"], "score": -1.1633106377508966, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -0.029572486877441406, -2.0265579223632812e-06, -0.0002040863037109375, -0.026981353759765625, -0.0004940032958984375, -3.24249267578125e-05, -0.022176742553710938, -0.05121326446533203, -7.62939453125e-06, -0.2723059356212616, -0.003693340113386512, -0.00011289119720458984, -0.04451266676187515, -0.0003941059112548828, -0.05328941345214844, -0.0973958969116211, -0.0001316070556640625, -7.05718994140625e-05, -0.01297450065612793, -3.194808232365176e-05, 0.0, -0.11021232604980469, -1.9073486328125e-05, 0.0, -0.004244804382324219, 0.0, -0.004204750061035156, -7.62939453125e-06, -0.0004000108456239104, -0.2176179140806198, -0.009317398071289062], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(4), CardSelector(\n            condition=IsSpell()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ManaChange", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsMinion"}}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Mana", "Change", "<EOS>", "4", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Minion", "<EOS>"], "score": -2.5917889532234994, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -0.029572486877441406, -2.0265579223632812e-06, -0.0002040863037109375, -0.026981353759765625, -0.0004940032958984375, -3.24249267578125e-05, -0.022176742553710938, -0.05121326446533203, -7.62939453125e-06, -0.2723059356212616, -0.003693340113386512, -0.00011289119720458984, -0.04451266676187515, -0.0003941059112548828, -0.05328941345214844, -0.0973958969116211, -0.0001316070556640625, -7.05718994140625e-05, -0.01297450065612793, -3.194808232365176e-05, 0.0, -0.11021232604980469, -1.9073486328125e-05, 0.0, -0.004244804382324219, 0.0, -0.004204750061035156, -7.62939453125e-06, -0.0004000108456239104, -1.6552343368530273, -0.000179290771484375], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(4), CardSelector(\n            condition=IsMinion()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 4}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "4", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.2301969485439486, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -0.029572486877441406, -2.0265579223632812e-06, -0.0002040863037109375, -0.026981353759765625, -0.0004940032958984375, -3.24249267578125e-05, -0.022176742553710938, -0.05121326446533203, -7.62939453125e-06, -1.447192668914795, -0.00014615009422414005, -0.0022814273834228516, -0.5673650503158569, -0.001835942268371582, -0.758305549621582, -1.9073486328125e-06, -0.12069034576416016, -4.0531158447265625e-06, 0.0], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ChangeAttack(4), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ManaChange", "hole1": 4}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Mana", "Change", "<EOS>", "4", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.7177473322395826, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -0.029572486877441406, -2.0265579223632812e-06, -0.0002040863037109375, -0.026981353759765625, -0.0004940032958984375, -3.24249267578125e-05, -0.022176742553710938, -0.05121326446533203, -7.62939453125e-06, -0.2723059356212616, -0.003693340113386512, -0.00011289119720458984, -0.04451266676187515, -0.0003941059112548828, -2.973804473876953, 0.0, -0.0905461311340332, -3.933906555175781e-06, 0.0], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(4), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ManaChange", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsMinion"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Mana", "Change", "<EOS>", "4", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 177, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Minion", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -3.880179226801033, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -0.029572486877441406, -2.0265579223632812e-06, -0.0002040863037109375, -0.026981353759765625, -0.0004940032958984375, -3.24249267578125e-05, -0.022176742553710938, -0.05121326446533203, -7.62939453125e-06, -0.2723059356212616, -0.003693340113386512, -0.00011289119720458984, -0.04451266676187515, -0.0003941059112548828, -0.05328941345214844, -0.0973958969116211, -0.0001316070556640625, -7.05718994140625e-05, -0.01297450065612793, -3.194808232365176e-05, 0.0, -2.3576908111572266, -0.000232696533203125, -1.9073486328125e-06, -0.008925199508666992, 0.0, -0.009303092956542969, -1.52587890625e-05, -0.0010943401139229536, -0.3677040934562683, -0.0007114410400390625, -0.000179290771484375, -1.1444091796875e-05, -0.15872979164123535, 0.0, -3.814697265625e-06, 0.0, -0.15828168392181396, -7.62939453125e-06, 0.0], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(4), CardSelector(\n            condition=IsMinion(), players=BothPlayer()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>"], "score": -3.896727936854063, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -0.029572486877441406, -2.0265579223632812e-06, -0.0002040863037109375, -0.026981353759765625, -0.0004940032958984375, -3.24249267578125e-05, -0.022176742553710938, -0.05121326446533203, -7.62939453125e-06, -1.447192668914795, -0.00014615009422414005, -0.0022814273834228516, -1.3753584623336792, -0.0001806020300136879, -0.19203567504882812, -0.0009784698486328125, -0.0001068115234375, -0.000171661376953125, -0.0051727294921875, -7.486340473406017e-05, 0.0, -0.2342853546142578, -1.52587890625e-05, 0.0, -0.0017529726028442383, 0.0, -0.002239227294921875, -7.62939453125e-06, -0.00021945612388662994, -0.29264846444129944, -0.009486198425292969], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ChangeAttack(2), CardSelector(\n            condition=IsSpell()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>"], "score": -4.104288390148781, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -0.029572486877441406, -2.0265579223632812e-06, -0.0002040863037109375, -0.026981353759765625, -0.0004940032958984375, -3.24249267578125e-05, -0.022176742553710938, -0.05121326446533203, -7.62939453125e-06, -1.447192668914795, -0.00014615009422414005, -0.0022814273834228516, -1.7820711135864258, -0.0003830192727036774, -0.13434696197509766, -0.0029163360595703125, -0.0001220703125, -0.0001125335693359375, -0.0048732757568359375, -4.827971133636311e-05, 0.0, -0.06083393096923828, -2.47955322265625e-05, 0.0, -0.0015174150466918945, 0.0, -0.001617431640625, -9.5367431640625e-06, -0.00019287606119178236, -0.3252663016319275, -0.007958412170410156], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ChangeAttack(1), CardSelector(\n            condition=IsSpell()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Nerub'ar Weblord"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ManaChange", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Nerub'ar", " ", "Weblord", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Mana", "Change", "<EOS>", "4", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>"], "score": -4.452764380712374, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.7052364349365234, -0.014406204223632812, -1.1444091796875e-05, 0.0, 0.0, 0.0, -8.10622896096902e-06, 0.0, -0.000335693359375, -5.7220458984375e-06, -7.62939453125e-06, -9.536738616588991e-07, -8.213520050048828e-05, -1.01327859738376e-05, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, -4.291534423828125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.4066696166992188e-05, -0.0002155303955078125, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.77621805050876e-05, 0.0, -2.1576881408691406e-05, 0.0, -9.5367431640625e-06, -9.1552734375e-05, -9.5367431640625e-06, -0.20119380950927734, 0.0, -0.0005779266357421875, 0.0, -0.059614397585392, 0.0, -0.000110626220703125, 0.0, -3.3616979635553434e-05, 0.0, -3.814697265625e-06, -0.001251220703125, -1.33514404296875e-05, -2.0265579223632812e-06, -1.9073468138230965e-06, -7.152553962441743e-07, -1.1920928244535389e-07, -0.7752600908279419, -2.1457672119140625e-06, -0.000102996826171875, -0.5856161117553711, -0.001621246337890625, -0.00041961669921875, -0.015470504760742188, -0.06559467315673828, -1.33514404296875e-05, -0.5228867530822754, -0.0010507089318707585, -0.00013768672943115234, -0.04606527462601662, -0.00040638440987095237, -0.03322601318359375, -0.08269977569580078, -0.0001220703125, -6.29425048828125e-05, -0.008711695671081543, -3.409384953556582e-05, 0.0, -0.0844564437866211, -1.9073486328125e-05, 0.0, -0.0038793087005615234, 0.0, -0.004904747009277344, -7.62939453125e-06, -0.00042312947334721684, -0.22688283026218414, -0.009243011474609375], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, overload=2)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(4), CardSelector(\n            condition=IsSpell()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Nerub'ar Weblord"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ManaChange", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsMinion"}}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Nerub'ar", " ", "Weblord", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Mana", "Change", "<EOS>", "4", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Minion", "<EOS>"], "score": -5.834621164936884, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.7052364349365234, -0.014406204223632812, -1.1444091796875e-05, 0.0, 0.0, 0.0, -8.10622896096902e-06, 0.0, -0.000335693359375, -5.7220458984375e-06, -7.62939453125e-06, -9.536738616588991e-07, -8.213520050048828e-05, -1.01327859738376e-05, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, -4.291534423828125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.4066696166992188e-05, -0.0002155303955078125, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.77621805050876e-05, 0.0, -2.1576881408691406e-05, 0.0, -9.5367431640625e-06, -9.1552734375e-05, -9.5367431640625e-06, -0.20119380950927734, 0.0, -0.0005779266357421875, 0.0, -0.059614397585392, 0.0, -0.000110626220703125, 0.0, -3.3616979635553434e-05, 0.0, -3.814697265625e-06, -0.001251220703125, -1.33514404296875e-05, -2.0265579223632812e-06, -1.9073468138230965e-06, -7.152553962441743e-07, -1.1920928244535389e-07, -0.7752600908279419, -2.1457672119140625e-06, -0.000102996826171875, -0.5856161117553711, -0.001621246337890625, -0.00041961669921875, -0.015470504760742188, -0.06559467315673828, -1.33514404296875e-05, -0.5228867530822754, -0.0010507089318707585, -0.00013768672943115234, -0.04606527462601662, -0.00040638440987095237, -0.03322601318359375, -0.08269977569580078, -0.0001220703125, -6.29425048828125e-05, -0.008711695671081543, -3.409384953556582e-05, 0.0, -0.0844564437866211, -1.9073486328125e-05, 0.0, -0.0038793087005615234, 0.0, -0.004904747009277344, -7.62939453125e-06, -0.00042312947334721684, -1.6178033351898193, -0.000179290771484375], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, overload=2)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(4), CardSelector(\n            condition=IsMinion()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Nerub'ar Weblord"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template19", "hole0": "SelfSelector"}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Nerub'ar", " ", "Weblord", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 142, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 169, 49, 145, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -6.805498516067068, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.7052364349365234, -0.014406204223632812, -1.1444091796875e-05, 0.0, 0.0, 0.0, -8.10622896096902e-06, 0.0, -0.000335693359375, -5.7220458984375e-06, -7.62939453125e-06, -9.536738616588991e-07, -8.213520050048828e-05, -1.01327859738376e-05, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, -4.291534423828125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.4066696166992188e-05, -0.0002155303955078125, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.77621805050876e-05, 0.0, -2.1576881408691406e-05, 0.0, -9.5367431640625e-06, -9.1552734375e-05, -9.5367431640625e-06, -0.20119380950927734, 0.0, -0.0005779266357421875, 0.0, -0.059614397585392, 0.0, -0.000110626220703125, 0.0, -3.3616979635553434e-05, 0.0, -3.814697265625e-06, -0.001251220703125, -1.33514404296875e-05, -2.0265579223632812e-06, -1.9073468138230965e-06, -7.152553962441743e-07, -1.1920928244535389e-07, -0.7752600908279419, -2.1457672119140625e-06, -0.000102996826171875, -0.8304338455200195, -0.00018525123596191406, -1.9073486328125e-06, -0.05222511291503906, -0.0007305145263671875, -1.9073486328125e-06, -0.03564739227294922, -0.0004180667456239462, -0.0010281801223754883, -0.42961424589157104, -0.00022923946380615234, -0.10636520385742188, 0.0, -0.057073116302490234, -2.1457672119140625e-06, 0.0, -5.7220458984375e-06, -8.392333984375e-05, -0.000331878662109375, -0.001084446907043457, -0.00011098384857177734, -0.0011272430419921875, -0.2770204544067383, 0.0, -1.1711984872817993, -1.0083351135253906, -0.056896209716796875, -1.9073486328125e-06, -0.0165252685546875, -1.1444091796875e-05, 0.0], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, overload=2)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ChangeAttack(2), SelfSelector()),\n            Aura(<UNK>(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Num", "n": 1}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "spell_damage"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 115, "1", "<EOS>"], "score": -7.050639469120711, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -6.790611743927002, 0.0, -0.0025758743286132812, -3.814697265625e-06, -0.05575820058584213, 0.0], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "stealth"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.199384089503042, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -6.9921746253967285, 0.0, -0.000965118408203125, -3.814697265625e-05, -0.00451350212097168, -2.861022494471399e-06], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Num", "n": 1}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "Aura"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "Aura", "<EOS>", 23, 115, "1", "<EOS>"], "score": -7.408497374448984, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -6.505776405334473, 0.0, -0.4845285415649414, -3.814697265625e-05, -0.21646444499492645, 0.0], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, Aura=1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "windfury"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.926311131510943, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -7.711589336395264, 0.0, -0.0099334716796875, -5.91278076171875e-05, -0.0030330419540405273, -6.318092346191406e-06], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Nerub'ar Weblord", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura"}, "_type": "Template9", "hole0": 1, "hole1": 4, "hole2": "auras"}], "hole0": "Nerub'arWeblord", "hole4": "player"}, "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 139, "Aura", "<EOS>"], "score": -7.932530280146807, "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -0.029572486877441406, -2.0265579223632812e-06, -0.0002040863037109375, -7.649377346038818, -0.05168449878692627, 0.0], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura()])\n"}], "gold_code": "class NerubarWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            BothPlayer(), HasBattlecry()))])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral Knight", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "spell_targetable"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "False", "<EOS>"], "score": -0.235222307830945, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -0.006325681693851948, -1.788138979463838e-05, -1.9073486328125e-06, -6.902110908413306e-05, -1.1920928244535389e-07, -8.20159912109375e-05, 0.0, -8.153915405273438e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0018144845962524414, 0.0, -1.9073486328125e-06, -0.0002689361572265625, -6.103515625e-05, -3.361701965332031e-05, -3.576278118089249e-07, -0.0001417365565430373, -2.1457672119140625e-06, -0.043753743171691895, -5.7220458984375e-06, -8.7738037109375e-05, -0.0004329681396484375, -0.003505706787109375, -1.9073486328125e-06], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spectral Knight"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "spell_targetable"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Spectral", " ", "Knight", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "False", "<EOS>"], "score": -1.9082781640172186, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.817148208618164, -0.0084991455078125, -5.7220458984375e-06, 0.0, -6.31808916295995e-06, 0.0, -5.865091225132346e-05, 0.0, -0.0002651214599609375, -1.71661376953125e-05, -4.00543212890625e-05, -3.576277322281385e-06, -0.0005739576299674809, -1.8358230590820312e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -0.00020609160128515214, -1.1682462172757369e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -1.9788742065429688e-05, -0.0022716522216796875, -2.2649765014648438e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.254408875363879e-05, 0.0, -1.52587890625e-05, 0.0, -3.4332275390625e-05, -8.96453857421875e-05, -2.0861609300482087e-05, -1.9073486328125e-06, -0.0002899169921875, 0.0, -0.01067650131881237, 0.0, -7.62939453125e-06, -0.0001983642578125, -6.4849853515625e-05, -7.021427154541016e-05, -2.3841855067985307e-07, -0.00029383384389802814, -2.0265579223632812e-06, -0.0634082555770874, -1.33514404296875e-05, -0.0001220703125, -0.00048065185546875, -0.00266265869140625, -1.9073486328125e-06], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral Knight", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "taunt"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 22, 111, "False", "<EOS>"], "score": -3.575039235740796, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -0.006325681693851948, -1.788138979463838e-05, -1.9073486328125e-06, -6.902110908413306e-05, -1.1920928244535389e-07, -8.20159912109375e-05, 0.0, -8.153915405273438e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0018144845962524414, 0.0, -1.9073486328125e-06, -0.0002689361572265625, -6.103515625e-05, -3.361701965332031e-05, -3.576278118089249e-07, -0.0001417365565430373, -2.1457672119140625e-06, -3.3573617935180664, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.030195236206054688, -1.9073486328125e-06], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spectral Knight"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "taunt"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Spectral", " ", "Knight", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 22, 111, "False", "<EOS>"], "score": -4.744957503426093, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.817148208618164, -0.0084991455078125, -5.7220458984375e-06, 0.0, -6.31808916295995e-06, 0.0, -5.865091225132346e-05, 0.0, -0.0002651214599609375, -1.71661376953125e-05, -4.00543212890625e-05, -3.576277322281385e-06, -0.0005739576299674809, -1.8358230590820312e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -0.00020609160128515214, -1.1682462172757369e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -1.9788742065429688e-05, -0.0022716522216796875, -2.2649765014648438e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.254408875363879e-05, 0.0, -1.52587890625e-05, 0.0, -3.4332275390625e-05, -8.96453857421875e-05, -2.0861609300482087e-05, -1.9073486328125e-06, -0.0002899169921875, 0.0, -0.01067650131881237, 0.0, -7.62939453125e-06, -0.0001983642578125, -6.4849853515625e-05, -7.021427154541016e-05, -2.3841855067985307e-07, -0.00029383384389802814, -2.0265579223632812e-06, -2.8815290927886963, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-05, -0.021778106689453125, -1.9073486328125e-06], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(4, 6, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "SpectralSpectral", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "spell_targetable"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", "Spectral", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "False", "<EOS>"], "score": -5.576709130560147, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -5.354367256164551, -0.0018952800892293453, -9.059905096364673e-06, 0.0, -6.866455078125e-05, 0.0, -7.331370579777285e-05, 0.0, -1.52587890625e-05, 0.0, -0.0016335248947143555, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -8.392333984375e-05, -5.221366882324219e-05, -2.3841855067985307e-07, -0.00015770898608025163, -2.0265579223632812e-06, -0.03546023368835449, -5.7220458984375e-06, -8.96453857421875e-05, -0.0004940032958984375, -0.003589630126953125, -1.9073486328125e-06], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('SpectralSpectral', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral Knight", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "spell_targetable"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.000444857269422, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -0.006325681693851948, -1.788138979463838e-05, -1.9073486328125e-06, -6.902110908413306e-05, -1.1920928244535389e-07, -8.20159912109375e-05, 0.0, -8.153915405273438e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0018144845962524414, 0.0, -1.9073486328125e-06, -0.0002689361572265625, -6.103515625e-05, -3.361701965332031e-05, -3.576278118089249e-07, -0.0001417365565430373, -2.1457672119140625e-06, -0.043753743171691895, -5.7220458984375e-06, -8.7738037109375e-05, -0.0004329681396484375, -5.768730163574219, 0.0], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spectral Knight"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "spell_targetable"}], "hole0": "SpectralKnight", "hole4": "p"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Spectral", " ", "Knight", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "False", "<EOS>"], "score": -6.61221330469516, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.817148208618164, -0.0084991455078125, -5.7220458984375e-06, 0.0, -6.31808916295995e-06, 0.0, -5.865091225132346e-05, 0.0, -0.0002651214599609375, -1.71661376953125e-05, -4.00543212890625e-05, -3.576277322281385e-06, -0.0005739576299674809, -1.8358230590820312e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -0.00020609160128515214, -1.1682462172757369e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -1.9788742065429688e-05, -0.0022716522216796875, -2.2649765014648438e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.254408875363879e-05, 0.0, -1.52587890625e-05, 0.0, -3.4332275390625e-05, -8.96453857421875e-05, -2.0861609300482087e-05, -1.9073486328125e-06, -0.0002899169921875, 0.0, -4.712156295776367, 0.0, -7.62939453125e-06, -0.0007266998291015625, -9.72747802734375e-05, -8.583068120060489e-05, -9.536738616588991e-07, -0.00039133953396230936, -2.384185791015625e-06, -0.06540417671203613, -9.5367431640625e-06, -0.0001506805419921875, -0.0003757476806640625, -0.0025272369384765625, -1.9073486328125e-06], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, p):\n        return Minion(4, 6, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral<UNK>", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "spell_targetable"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", "<UNK>", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "False", "<EOS>"], "score": -6.817307956844466, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -6.596562385559082, -0.0005036592483520508, -4.768370445162873e-07, -1.1920928244535389e-07, -7.82012939453125e-05, 0.0, -5.328655242919922e-05, 0.0, -2.09808349609375e-05, 0.0, -0.002131342887878418, 0.0, -1.9073486328125e-06, -0.0001544952392578125, -8.96453857421875e-05, -6.365776062011719e-05, -2.3841855067985307e-07, -0.0001606892910785973, -2.1457672119140625e-06, -0.03441500663757324, -5.7220458984375e-06, -9.1552734375e-05, -0.00051116943359375, -0.00394439697265625, -1.9073486328125e-06], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral<UNK>', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral Knight", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "spell_targetable"}], "hole0": "SpectralKnight", "hole4": "p"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "False", "<EOS>"], "score": -7.094532576924671, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -0.006325681693851948, -1.788138979463838e-05, -1.9073486328125e-06, -6.902110908413306e-05, -1.1920928244535389e-07, -8.20159912109375e-05, 0.0, -8.153915405273438e-05, 0.0, -1.71661376953125e-05, 0.0, -6.848812580108643, 0.0, -1.9073486328125e-06, -0.00028228759765625, -6.67572021484375e-05, -5.042552947998047e-05, -5.960462772236497e-07, -0.000173445965629071, -2.2649765014648438e-06, -0.05470860004425049, -5.7220458984375e-06, -9.34600830078125e-05, -0.0003376007080078125, -0.0048847198486328125, -1.9073486328125e-06], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(4, 6, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral Knight", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "taunt"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.094697324424878, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -0.006325681693851948, -1.788138979463838e-05, -1.9073486328125e-06, -6.902110908413306e-05, -1.1920928244535389e-07, -8.20159912109375e-05, 0.0, -8.153915405273438e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0018144845962524414, 0.0, -1.9073486328125e-06, -0.0002689361572265625, -6.103515625e-05, -3.361701965332031e-05, -3.576278118089249e-07, -0.0001417365565430373, -2.1457672119140625e-06, -3.3573617935180664, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -3.5498552322387695, 0.0], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral Knight", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "MinionAttack"}}], "_type": "List"}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "buffs"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Minion", "Attack", "<EOS>"], "score": -7.328517762809888, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -0.006325681693851948, -1.788138979463838e-05, -1.9073486328125e-06, -6.902110908413306e-05, -1.1920928244535389e-07, -8.20159912109375e-05, 0.0, -8.153915405273438e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0018144845962524414, 0.0, -1.9073486328125e-06, -0.0002689361572265625, -6.103515625e-05, -3.361701965332031e-05, -3.576278118089249e-07, -0.0001417365565430373, -2.1457672119140625e-06, -5.5849609375, -1.9073486328125e-06, -0.015935897827148438, -0.000972747802734375, -0.008908271789550781, -2.288818359375e-05, -0.0004425048828125, -0.0007623434066772461, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.016672134399414, -0.5122967958450317, -7.2479248046875e-05], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, buffs=[Buff(MinionAttack())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral Knight", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "byWindfury"}}], "_type": "List"}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "buffs"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "by", "Windfury", "<EOS>"], "score": -7.415693057566777, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -0.006325681693851948, -1.788138979463838e-05, -1.9073486328125e-06, -6.902110908413306e-05, -1.1920928244535389e-07, -8.20159912109375e-05, 0.0, -8.153915405273438e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0018144845962524414, 0.0, -1.9073486328125e-06, -0.0002689361572265625, -6.103515625e-05, -3.361701965332031e-05, -3.576278118089249e-07, -0.0001417365565430373, -2.1457672119140625e-06, -5.5849609375, -1.9073486328125e-06, -0.015935897827148438, -0.000972747802734375, -0.008908271789550781, -2.288818359375e-05, -0.0004425048828125, -0.0007623434066772461, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.392501950263977, -0.22361890971660614, -9.584426879882812e-05], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, buffs=[Buff(byWindfury())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral Knight", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Hero"}}], "_type": "List"}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "buffs"}], "hole0": "SpectralKnight", "hole4": "player"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Hero", "<EOS>"], "score": -7.629494039207593, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -0.006325681693851948, -1.788138979463838e-05, -1.9073486328125e-06, -6.902110908413306e-05, -1.1920928244535389e-07, -8.20159912109375e-05, 0.0, -8.153915405273438e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0018144845962524414, 0.0, -1.9073486328125e-06, -0.0002689361572265625, -6.103515625e-05, -3.361701965332031e-05, -3.576278118089249e-07, -0.0001417365565430373, -2.1457672119140625e-06, -5.5849609375, -1.9073486328125e-06, -0.015935897827148438, -0.000972747802734375, -0.008908271789550781, -2.288818359375e-05, -0.0004425048828125, -0.0007623434066772461, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.8042347431182861, -0.02578294277191162], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, buffs=[Buff(Hero())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral Knight", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "spell_targetable"}], "hole0": "<UNK>Knight", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "False", "<EOS>"], "score": -7.762439450555959, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -7.688185214996338, -0.00015591418195981532, -1.1920928244535389e-07, -1.2852251529693604e-06, -1.728534698486328e-05, 0.0, -3.814697265625e-06, -0.017702102661132812, -9.5367431640625e-06, -2.145764938177308e-06, -0.009007580578327179, -1.978873842745088e-05, 0.0, -0.00010549613944021985, -1.1920928244535389e-07, -7.82012939453125e-05, 0.0, -6.973743438720703e-05, 0.0, -1.71661376953125e-05, 0.0, -0.00211942195892334, 0.0, -1.9073486328125e-06, -0.00022125244140625, -7.62939453125e-05, -4.482269287109375e-05, -3.576278118089249e-07, -0.0001537754578748718, -2.1457672119140625e-06, -0.04016005992889404, -5.7220458984375e-06, -8.96453857421875e-05, -0.0004634857177734375, -0.0036792755126953125, -1.9073486328125e-06], "inferred_code": "class <UNK>Knight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Spectral Knight", "hole1": 5, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 6, "hole2": "spell_targetable"}], "hole0": "SpectralKnight", "hole4": "_"}, "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "False", "<EOS>"], "score": -7.886246167264737, "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -0.006325681693851948, -1.788138979463838e-05, -1.9073486328125e-06, -6.902110908413306e-05, -1.1920928244535389e-07, -8.20159912109375e-05, 0.0, -8.153915405273438e-05, 0.0, -1.71661376953125e-05, 0.0, -7.629897594451904, -0.000347137451171875, -1.9073486328125e-06, -0.001003265380859375, -0.000141143798828125, -0.00012767314910888672, -1.311301275563892e-06, -0.00023554895597044379, -2.384185791015625e-06, -0.06279563903808594, -5.7220458984375e-06, -0.0001430511474609375, -0.0003662109375, -0.00606536865234375, -1.9073486328125e-06], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(4, 6, spell_targetable=True)\n"}], "gold_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=False)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -1.0062364868668467, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -0.13852310180664062, -0.0005922317504882812, -2.47955322265625e-05, -5.7220458984375e-06, -0.03496519476175308, -0.0015356505755335093, -0.0002536773681640625, -6.67572021484375e-05, -2.288818359375e-05, -0.000476837158203125, -3.814697265625e-06, -0.0007476806640625, -0.0003544777864590287, -1.1920928244535389e-07, -2.09808349609375e-05, -7.62939453125e-06, -0.00021004219888709486, -0.000694034737534821, -1.1920928244535389e-07, -0.002086639404296875, -0.00411224365234375, -3.814697265625e-06, -0.5131653547286987, 0.0, -1.9073486328125e-05, -0.0019664764404296875, -5.936621892033145e-05, -2.86102294921875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -5.054471694165841e-05, -0.0001918058260343969, -2.3841855067985307e-07, -0.0002727508544921875, -0.0001163482666015625, 0.0, -0.2836264371871948, -2.0265579223632812e-06, -0.00064849853515625, -1.9073486328125e-06, -0.0004035232705064118, -4.0531158447265625e-06, 0.0, -2.110004425048828e-05, 0.0, -3.731200922629796e-05, 0.0, -2.288818359375e-05, -0.0001220703125, -1.52587890625e-05, -4.8875799620873295e-06, -3.933898824470816e-06, -0.0022258758544921875, -5.960446742392378e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -1.6236903317113232, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -0.13852310180664062, -0.0005922317504882812, -2.47955322265625e-05, -5.7220458984375e-06, -0.03496519476175308, -0.0015356505755335093, -0.0002536773681640625, -6.67572021484375e-05, -2.288818359375e-05, -0.000476837158203125, -3.814697265625e-06, -0.0007476806640625, -0.0003544777864590287, -1.1920928244535389e-07, -2.09808349609375e-05, -7.62939453125e-06, -0.00021004219888709486, -0.000694034737534821, -1.1920928244535389e-07, -0.002086639404296875, -0.00411224365234375, -3.814697265625e-06, -0.9432384967803955, -1.33514404296875e-05, -7.62939453125e-05, -0.027916908264160156, -9.071821114048362e-05, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -6.0439095250330865e-05, -0.00012469242210499942, -2.3841855067985307e-07, -0.00029754638671875, -0.0001583099365234375, 0.0, -0.44514110684394836, -2.0265579223632812e-06, -0.00046539306640625, -1.9073486328125e-06, -0.0003212689480278641, -4.0531158447265625e-06, 0.0, -2.110004425048828e-05, 0.0, -3.671598096843809e-05, 0.0, -2.288818359375e-05, -0.000125885009765625, -1.52587890625e-05, -4.768370672536548e-06, -3.933898824470816e-06, -0.0023039579391479492, -5.722029527532868e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(3\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -2.2454065602210633, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -0.13852310180664062, -0.0005922317504882812, -2.47955322265625e-05, -5.7220458984375e-06, -0.03496519476175308, -0.0015356505755335093, -0.0002536773681640625, -6.67572021484375e-05, -2.288818359375e-05, -0.000476837158203125, -3.814697265625e-06, -0.0007476806640625, -0.0003544777864590287, -1.1920928244535389e-07, -2.09808349609375e-05, -7.62939453125e-06, -0.00021004219888709486, -0.000694034737534821, -1.1920928244535389e-07, -0.002086639404296875, -0.00411224365234375, -3.814697265625e-06, -0.5131653547286987, 0.0, -1.9073486328125e-05, -0.0019664764404296875, -5.936621892033145e-05, -2.86102294921875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -5.054471694165841e-05, -0.0001918058260343969, -2.3841855067985307e-07, -0.0002727508544921875, -0.0001163482666015625, 0.0, -1.522817611694336, -1.9073486328125e-05, -0.0004558563232421875, 0.0, -0.00023472301836591214, -3.933906555175781e-06, 0.0, -1.7404556274414062e-05, 0.0, -6.401368591468781e-05, 0.0, -2.86102294921875e-05, -9.918212890625e-05, -1.71661376953125e-05, -4.8875799620873295e-06, -4.172316494077677e-06, -0.0025423765182495117, -6.794906312279636e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(3))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -2.2767738636485504, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -0.13852310180664062, -0.0005922317504882812, -2.47955322265625e-05, -5.7220458984375e-06, -0.03496519476175308, -0.0015356505755335093, -0.0002536773681640625, -6.67572021484375e-05, -2.288818359375e-05, -0.000476837158203125, -3.814697265625e-06, -0.0007476806640625, -0.0003544777864590287, -1.1920928244535389e-07, -2.09808349609375e-05, -7.62939453125e-06, -0.00021004219888709486, -0.000694034737534821, -1.1920928244535389e-07, -0.002086639404296875, -0.00411224365234375, -3.814697265625e-06, -0.9432384967803955, -1.33514404296875e-05, -7.62939453125e-05, -0.027916908264160156, -9.071821114048362e-05, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -6.0439095250330865e-05, -0.00012469242210499942, -2.3841855067985307e-07, -0.00029754638671875, -0.0001583099365234375, 0.0, -1.0982520580291748, -2.47955322265625e-05, -0.000240325927734375, 0.0, -0.0002189874358009547, -3.933906555175781e-06, 0.0, -1.7404556274414062e-05, 0.0, -6.115272117312998e-05, 0.0, -3.0517578125e-05, -0.000102996826171875, -1.71661376953125e-05, -4.768370672536548e-06, -4.172316494077677e-06, -0.0025748014450073242, -6.437280717364047e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(3\n            )), Buff(ChangeHealth(3))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Silence"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Silence", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -3.582165868971053, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -2.7486019134521484, -7.62939453125e-06, -0.020439915359020233, -0.00038036098703742027, -0.045334815979003906, -5.91278076171875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.21230554580688477, -5.7220458984375e-06, 0.0, -0.48958492279052734, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004703998565673828, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.044623907655477524, -4.6133995056152344e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.3232223864179105e-05, 0.0, -1.71661376953125e-05, -8.7738037109375e-05, -1.71661376953125e-05, -4.649161837733118e-06, -1.4305104514278355e-06, -0.001652836799621582, -3.3378546504536644e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector\n            (players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Silence"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Silence", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -4.077940348346701, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -2.7486019134521484, -7.62939453125e-06, -0.020439915359020233, -0.00038036098703742027, -0.045334815979003906, -5.91278076171875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.21230554580688477, -5.7220458984375e-06, 0.0, -0.9677000045776367, -5.340576171875e-05, -5.7220458984375e-06, -0.00020706647774204612, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-06, -0.024365846067667007, -3.8743019104003906e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -0.02870917320251465, 0.0, -0.00037384033203125, -1.33514404296875e-05, -0.004765357356518507, -0.00024688098346814513, -8.940672159951646e-06, -1.859664735093247e-05, 0.0, -2.2649703169008717e-05, 0.0, -6.29425048828125e-05, -6.866455078125e-05, -2.288818359375e-05, -6.556510470545618e-06, -2.3841830625315197e-06, -0.005574226379394531, -5.245195097813848e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 1}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -4.5477755591242115, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -0.13852310180664062, -0.0005922317504882812, -2.47955322265625e-05, -5.7220458984375e-06, -0.03496519476175308, -0.0015356505755335093, -0.0002536773681640625, -6.67572021484375e-05, -2.288818359375e-05, -0.000476837158203125, -3.814697265625e-06, -0.0007476806640625, -0.0003544777864590287, -1.1920928244535389e-07, -2.09808349609375e-05, -7.62939453125e-06, -0.00021004219888709486, -0.000694034737534821, -1.1920928244535389e-07, -0.002086639404296875, -0.00411224365234375, -3.814697265625e-06, -0.5131653547286987, 0.0, -1.9073486328125e-05, -0.0019664764404296875, -5.936621892033145e-05, -2.86102294921875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -5.054471694165841e-05, -0.0001918058260343969, -2.3841855067985307e-07, -0.0002727508544921875, -0.0001163482666015625, 0.0, -3.755798101425171, -3.0875205993652344e-05, -0.07020759582519531, 0.0, -0.00012373877689242363, -2.1457672119140625e-06, 0.0, -1.3470649719238281e-05, 0.0, -4.911328505841084e-05, 0.0, -2.09808349609375e-05, -9.72747802734375e-05, -1.9073486328125e-05, -4.8875799620873295e-06, -4.172316494077677e-06, -0.002307891845703125, -5.483612312673358e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(1))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Silence"}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Silence", "<EOS>", 35, 86, 21, 110, "Player", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -4.579820485790371, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -2.7486019134521484, -7.62939453125e-06, -0.020439915359020233, -0.00038036098703742027, -0.045334815979003906, -5.91278076171875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.6861014366149902, -7.033347174001392e-06, 0.0, -0.0026454925537109375, -5.7220458984375e-06, 0.0, -0.0001370906684314832, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.05574118718504906, -7.081031799316406e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.2993807104066946e-05, 0.0, -1.33514404296875e-05, -0.000110626220703125, -1.71661376953125e-05, -4.529952548182337e-06, -1.4305104514278355e-06, -0.0016205310821533203, -3.2186455882765586e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), PlayerSelector\n            (players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Silence"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Silence", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -4.954331507120038, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -0.13852310180664062, -0.0005922317504882812, -2.47955322265625e-05, -5.7220458984375e-06, -0.03496519476175308, -0.0015356505755335093, -0.0002536773681640625, -6.67572021484375e-05, -2.288818359375e-05, -0.000476837158203125, -3.814697265625e-06, -0.0007476806640625, -0.0003544777864590287, -1.1920928244535389e-07, -2.09808349609375e-05, -7.62939453125e-06, -0.00021004219888709486, -0.000694034737534821, -1.1920928244535389e-07, -0.002086639404296875, -0.00411224365234375, -3.814697265625e-06, -0.9432384967803955, -1.33514404296875e-05, -7.62939453125e-05, -3.6384944915771484, -0.000301361083984375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.13047784566879272, -0.0004107892164029181, -2.09808349609375e-05, 0.0, -0.03670024871826172, -2.2649765014648438e-06, 0.0, -9.5367431640625e-06, 0.0, -9.655922440288123e-06, 0.0, -2.6702880859375e-05, -0.0004444122314453125, -7.62939453125e-06, -2.5033946258190554e-06, -1.0728830375228426e-06, -0.0009156465530395508, -1.9073468138230965e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(3\n            )), Buff(Silence())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 1}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -5.092704707642561, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -0.13852310180664062, -0.0005922317504882812, -2.47955322265625e-05, -5.7220458984375e-06, -0.03496519476175308, -0.0015356505755335093, -0.0002536773681640625, -6.67572021484375e-05, -2.288818359375e-05, -0.000476837158203125, -3.814697265625e-06, -0.0007476806640625, -0.0003544777864590287, -1.1920928244535389e-07, -2.09808349609375e-05, -7.62939453125e-06, -0.00021004219888709486, -0.000694034737534821, -1.1920928244535389e-07, -0.002086639404296875, -0.00411224365234375, -3.814697265625e-06, -0.9432384967803955, -1.33514404296875e-05, -7.62939453125e-05, -0.027916908264160156, -9.071821114048362e-05, -2.47955322265625e-05, -3.814697265625e-06, -4.00543212890625e-05, -6.0439095250330865e-05, -0.00012469242210499942, -2.3841855067985307e-07, -0.00029754638671875, -0.0001583099365234375, 0.0, -3.866215944290161, -3.063678741455078e-05, -0.04859733581542969, 0.0, -0.0001215931770275347, -2.1457672119140625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.42259042756632e-05, 0.0, -2.288818359375e-05, -0.000102996826171875, -1.71661376953125e-05, -4.8875799620873295e-06, -4.0531076592742465e-06, -0.002307891845703125, -5.245195097813848e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(3\n            )), Buff(ChangeHealth(1))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Silence"}, "args": [{"_type": "Template19", "hole0": "Silence"}, {"_type": "Num", "n": 2}]}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Silence", "<EOS>", 170, 50, 146, "Silence", "<EOS>", 42, 115, "2", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -5.311503181056757, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -0.13852310180664062, -0.0005922317504882812, -2.47955322265625e-05, -5.7220458984375e-06, -3.905900478363037, -0.0010495185852050781, -0.022195816040039062, -0.649693489074707, -5.7220458984375e-06, -0.28423598408699036, -7.33121414668858e-05, -0.2679910659790039, -0.00250244140625, -0.010091922245919704, -1.3947486877441406e-05, -0.0036563873291015625, -3.4332275390625e-05, -0.0052748918533325195, -1.33514404296875e-05, 0.0, -7.748603820800781e-06, 0.0, -1.764294211170636e-05, 0.0, -1.33514404296875e-05, -0.00035858154296875, -9.5367431640625e-06, -2.3841855636419496e-06, -1.1920922133867862e-06, -0.0007523298263549805, -1.6689286894688848e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(Silence(), 2),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Silence"}}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Silence", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -5.436137065769337, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -4.40307092666626, -0.008909225463867188, -0.005863014608621597, -0.001678466796875, -2.6702880859375e-05, -1.9073486328125e-06, -0.010827009566128254, -0.005740160588175058, -0.000457763671875, -0.0862436294555664, -0.6382064819335938, -0.09613163024187088, 0.0, -3.814697265625e-06, 0.0, -0.005469069816172123, -0.001123651396483183, -7.62939453125e-05, -1.9073486328125e-06, -0.15233133733272552, -3.6954863844584906e-06, 0.0, -9.5367431640625e-06, 0.0, -7.510169325541938e-06, 0.0, -4.1961669921875e-05, -0.0004558563232421875, -5.7220458984375e-06, -2.5033946258190554e-06, -1.0728830375228426e-06, -0.00098419189453125, -1.7881377516459906e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Buff(Silence())\n            )), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -5.575712437184912, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -0.13852310180664062, -0.0005922317504882812, -2.47955322265625e-05, -5.7220458984375e-06, -0.03496519476175308, -0.0015356505755335093, -0.0002536773681640625, -6.67572021484375e-05, -2.288818359375e-05, -0.000476837158203125, -3.814697265625e-06, -0.0007476806640625, -0.0003544777864590287, -1.1920928244535389e-07, -2.09808349609375e-05, -7.62939453125e-06, -0.00021004219888709486, -0.000694034737534821, -1.1920928244535389e-07, -0.002086639404296875, -0.00411224365234375, -3.814697265625e-06, -4.772003173828125, -1.9073486328125e-05, -2.288818359375e-05, -0.006824493408203125, -0.00011396405170671642, -7.05718994140625e-05, -5.7220458984375e-06, -7.05718994140625e-05, -6.270407902775332e-05, -8.225399506045505e-05, -2.3841855067985307e-07, -0.000148773193359375, -0.0001201629638671875, 0.0, -0.5892049670219421, -2.0265579223632812e-06, -0.0008678436279296875, -1.9073486328125e-06, -0.00043809396447613835, -4.0531158447265625e-06, 0.0, -2.110004425048828e-05, 0.0, -3.695439227158204e-05, 0.0, -2.288818359375e-05, -0.0001220703125, -1.71661376953125e-05, -4.8875799620873295e-06, -3.933898824470816e-06, -0.0022449493408203125, -6.318072337307967e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"elts": [{"_type": "Template15", "hole0": "IncreaseSilence", "hole1": 1}, {"_type": "Template18_expr_seq", "hole0": "IncreaseDurability"}], "_type": "List"}, {"_type": "Template19", "hole0": "WeaponSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 38, 106, 170, 47, 134, "Increase", "Silence", "<EOS>", "1", "<EOS>", 49, 143, "Increase", "Durability", "<EOS>", 50, 146, "Weapon", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -5.930299358590553, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -3.3252763748168945, -0.0011749267578125, -0.0007171630859375, -0.4101247787475586, -0.0001506805419921875, -0.42218509316444397, -0.2598366439342499, -4.4345855712890625e-05, -0.802514910697937, -8.857034845277667e-05, -0.22182559967041016, -0.0030269622802734375, -0.13664638996124268, -0.28989580273628235, -0.0002900362014770508, -0.00167083740234375, 0.0, -0.03444072604179382, -0.00021278858184814453, 0.0, -5.841255187988281e-06, 0.0, -2.1815245418110862e-05, 0.0, -9.5367431640625e-06, -0.000438690185546875, -9.5367431640625e-06, -4.291534423828125e-06, -2.0265558760002023e-06, -0.0012226104736328125, -2.145764938177308e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry([IncreaseSilence(1),\n            IncreaseDurability()], WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "IncreaseSilence", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 5}], "hole0": "WailingSoul", "hole4": "player"}, "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Increase", "Silence", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -5.995452128680078, "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -4.3908371925354, -1.1444091796875e-05, -0.06580965220928192, -0.027906421571969986, -2.586841583251953e-05, -0.5523912906646729, -1.764281842042692e-05, -0.507476806640625, -1.71661376953125e-05, -5.340576171875e-05, -3.814697265625e-06, -0.27723801136016846, -1.621246337890625e-05, 0.0, -0.020050048828125, -7.62939453125e-06, -1.9073486328125e-06, -0.00047004222869873047, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.13259144127368927, -0.00014126300811767578, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -1.561641511216294e-05, 0.0, -1.9073486328125e-05, -7.82012939453125e-05, -1.71661376953125e-05, -4.529952548182337e-06, -1.311301275563892e-06, -0.0017577409744262695, -4.291525328881107e-06], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(IncreaseSilence(3),\n            CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}], "gold_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": [{"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}, {"arg": "enrage", "_type": "keyword", "value": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template14", "hole0": "Minion", "hole1": 2, "hole2": 3}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 70, 133, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 177, 53, 159, "taunt", "<EOS>", 22, 111, "True", "<EOS>", 53, 159, "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -2.056822869524666, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -1.6955375671386719, -0.0003261566162109375, -2.2649762740911683e-06, -0.00012433528900146484, -0.0002028942108154297, -5.960462772236497e-07, -0.06066024303436279, -3.576278118089249e-07, -0.0022373199462890625, -6.67572021484375e-05, -1.9073486328125e-06, -0.009397029876708984, 0.0, -0.0003528594970703125, -1.9073486328125e-05, -4.279612403479405e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.00045013427734375, -0.018448399379849434, -7.867813110351562e-06, -0.00096893310546875, -0.007081031799316406, -0.0016351898666471243, -0.0001316070556640625, -0.0030069351196289062, -0.0002193450927734375, -4.57763671875e-05, -0.0051309214904904366, -0.00019002892076969147, -3.683512477437034e-05, -0.20196983218193054, -0.00041500141378492117, -0.00031280517578125, 0.0, -0.036972276866436005, -1.931189763126895e-05, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True, enrage=[Aura(ChangeAttack(2),\n            SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template19", "hole0": "SelfSelector"}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "enrage"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 142, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 169, 49, 145, "Aura", "<EOS>", 170, 50, 146, "Attack", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -2.1170053140242473, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -0.16050374507904053, 0.0, -0.000240325927734375, -0.30810070037841797, -0.0012580155162140727, -9.5367431640625e-06, -0.000988006591796875, -7.05718994140625e-05, -3.62396240234375e-05, -0.0002698894531931728, -9.930092346621677e-05, -1.1920928244535389e-07, -0.6264063715934753, -3.898136128555052e-05, -0.000461578369140625, 0.0, -0.018298018723726273, -2.515315827622544e-05, 0.0, 0.0, -0.00052642822265625, -0.0018405914306640625, -0.00363922119140625, -7.62939453125e-06, -0.0001926422119140625, -0.03852558135986328, -5.91278076171875e-05, -0.7049668431282043, -0.004284024238586426, -0.004665374755859375, 0.0, -0.02308162860572338, -1.2278556823730469e-05, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(Attack(), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "taunt"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -2.647770056835043, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -2.412039041519165, 0.0, -0.015888214111328125, -4.38690185546875e-05, -0.0014015436172485352, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template19", "hole0": "SelfSelector"}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "+3"}, {"_type": "Template19", "hole0": "WeaponSelector"}]}]}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "enrage"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 142, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 169, 49, 145, "Aura", "<EOS>", 170, 50, 146, "+3", "<EOS>", 50, 146, "Weapon", "Selector", "<EOS>"], "score": -2.9232872699314996, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -0.16050374507904053, 0.0, -0.000240325927734375, -0.30810070037841797, -0.0012580155162140727, -9.5367431640625e-06, -0.000988006591796875, -7.05718994140625e-05, -3.62396240234375e-05, -0.0002698894531931728, -9.930092346621677e-05, -1.1920928244535389e-07, -0.6264063715934753, -3.898136128555052e-05, -0.000461578369140625, 0.0, -0.018298018723726273, -2.515315827622544e-05, 0.0, 0.0, -0.00052642822265625, -0.0018405914306640625, -0.00363922119140625, -7.62939453125e-06, -0.0001926422119140625, -0.03852558135986328, -5.91278076171875e-05, -0.9990519285202026, -0.28070616722106934, -8.20159912109375e-05, 0.0, -0.2634276747703552, -2.4318689611391164e-05, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(+3(), WeaponSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 3}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "enrage"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.1003587321378063, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -0.16050374507904053, 0.0, -0.000240325927734375, -1.345137596130371, -0.0003415345854591578, -3.826618194580078e-05, -0.014951705932617188, -0.00012969970703125, -6.29425048828125e-05, -0.0004385701904539019, -6.210675201145932e-05, -8.344646857949556e-07, -1.327161192893982, -4.768371127283899e-06, -0.0004520416259765625, -1.9073486328125e-06, -0.03241407871246338, -2.002716064453125e-05, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "enrage"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.1302993360631035, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -0.16050374507904053, 0.0, -0.000240325927734375, -1.345137596130371, -0.0003415345854591578, -3.826618194580078e-05, -0.014951705932617188, -0.00012969970703125, -6.29425048828125e-05, -0.0004385701904539019, -6.210675201145932e-05, -8.344646857949556e-07, -1.2780883312225342, -5.543108272831887e-05, -0.00030517578125, -1.9073486328125e-06, -0.11152255535125732, -2.121925172104966e-05, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 5}, {"_type": "Template19", "hole0": "SelfSelector"}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Attack"}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "enrage"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 142, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "5", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 169, 49, 145, "Aura", "<EOS>", 170, 50, 146, "Attack", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.1939952200111676, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -0.16050374507904053, 0.0, -0.000240325927734375, -0.30810070037841797, -0.0012580155162140727, -9.5367431640625e-06, -0.000988006591796875, -7.05718994140625e-05, -3.62396240234375e-05, -0.0002698894531931728, -9.930092346621677e-05, -1.1920928244535389e-07, -1.6416288614273071, -6.0677528381347656e-05, -8.20159912109375e-05, -3.814697265625e-06, -0.006276369094848633, -1.7523765563964844e-05, 0.0, 0.0, -0.000370025634765625, -0.0014400482177734375, -0.004536747932434082, -5.7220458984375e-06, -0.0002899169921875, -0.05402088165283203, -0.0001010894775390625, -0.7567123174667358, -0.004291653633117676, -0.0065364837646484375, 0.0, -0.02763495221734047, -1.2278556823730469e-05, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(5), SelfSelector()),\n            Aura(Attack(), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 5}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "enrage"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "5", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.3022435978990643, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -0.16050374507904053, 0.0, -0.000240325927734375, -1.345137596130371, -0.0003415345854591578, -3.826618194580078e-05, -0.014951705932617188, -0.00012969970703125, -6.29425048828125e-05, -0.0004385701904539019, -6.210675201145932e-05, -8.344646857949556e-07, -1.551496982574463, -8.058547973632812e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.010196805000305176, -1.5735626220703125e-05, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template19", "hole0": "SelfSelector"}]}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "enrage"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.3140593801607565, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -0.16050374507904053, 0.0, -0.000240325927734375, -1.345137596130371, -0.0003415345854591578, -3.826618194580078e-05, -0.014951705932617188, -0.00012969970703125, -6.29425048828125e-05, -0.0004385701904539019, -6.210675201145932e-05, -8.344646857949556e-07, -1.5418362617492676, -0.0001187320813187398, -0.0013256072998046875, 0.0, -0.030429121106863022, -4.4941898522665724e-05, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "divine_shield"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.724526176563131, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -4.290961265563965, 0.0, -0.20887374877929688, -4.38690185546875e-05, -0.006249904632568359, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Num", "n": 1}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "spell_targetable"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "spell_targetable", "<EOS>", 23, 115, "1", "<EOS>"], "score": -6.16957835513972, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -5.344130516052246, 0.0, -0.5904579162597656, -8.58306884765625e-05, -0.016506703570485115, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, spell_targetable=1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "spell_targetable"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.645697126499044, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -5.344130516052246, 0.0, -0.9375104904174805, -7.82012939453125e-05, -0.14558053016662598, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Num", "n": 1}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "divine_shield"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "divine_shield", "<EOS>", 23, 115, "1", "<EOS>"], "score": -6.862311808726417, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -4.290961265563965, 0.0, -2.3115501403808594, -9.1552734375e-05, -0.041311461478471756, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, divine_shield=1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Num", "n": 1}, "_type": "Template9", "hole0": 2, "hole1": 3, "hole2": "spell_damage"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "spell_damage", "<EOS>", 23, 115, "1", "<EOS>"], "score": -6.908857958725321, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -6.6813788414001465, 0.0, -0.0011882781982421875, -1.9073486328125e-06, -0.007891543209552765, 0.0], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, spell_damage=1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Amani Berserker", "hole1": 2, "hole2": "ALL"}], "hole6": [{"_type": "Break"}], "hole0": "AmaniBerserker", "hole4": "player"}, "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 61], "score": -10.317477474966381, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -10.306678771972656], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        break\n"}], "gold_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 7, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "SpellCast", "hole1": {"_type": "Name", "id": "ManaCost"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Spell", "Cast", "<EOS>", 21, 110, "Mana", "Cost", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.39034439723698, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.8275485038757324, -9.536738616588991e-07, -0.0002162456512451172, -3.576278118089249e-07, -6.4849853515625e-05, -0.13281536102294922, -0.00012421607971191406, 0.0, -3.814697265625e-06, -0.010709762573242188, -0.7877483367919922, -0.2330591380596161, -0.004625439643859863, 0.0, -5.53131103515625e-05, 0.0, -0.013149261474609375, -0.01228475570678711, -0.000823974609375, -4.38690185546875e-05, -0.10252189636230469, -0.00012969970703125, -0.0006985664367675781, -7.62939453125e-06, -0.0016117095947265625, -0.0003147125244140625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002803802490234375, -0.000164031982421875, -1.9073486328125e-05, -4.1961669921875e-05, -9.1552734375e-05, -0.2148599624633789, -0.001227954518981278, -0.0005435943603515625, -1.33514404296875e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0004146099090576172, -0.000796198844909668, -1.1444091796875e-05, -0.0056896209716796875, -1.9073486328125e-06, -1.1444091796875e-05, -0.008431553840637207, -7.62939453125e-06, -0.00043582916259765625, -1.33514404296875e-05, -0.001178741455078125, 0.0, -0.0003204345703125, -1.5497195136049413e-06, -0.03452897071838379, -0.00016415119171142578, -0.30658531188964844, -0.000492095947265625, -0.0007572174072265625, -5.7220458984375e-06, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 5, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "SpellCast", "hole1": {"_type": "Name", "id": "ManaCost"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Spell", "Cast", "<EOS>", 21, 110, "Mana", "Cost", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.489661352729051, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.862059473991394, -2.3841855067985307e-07, -0.1103668212890625, 0.0, -0.00011849403381347656, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -3.62396240234375e-05, -1.33514404296875e-05, -3.0517578125e-05, -3.6954863844584906e-06, -0.6451060771942139, -1.0728830375228426e-06, -0.0002180337905883789, -3.576278118089249e-07, -6.103515625e-05, -0.1461629867553711, -0.00012040138244628906, 0.0, -3.814697265625e-06, -0.009632110595703125, -0.7695140838623047, -0.23289820551872253, -0.004674077033996582, 0.0, -5.53131103515625e-05, 0.0, -0.012900352478027344, -0.01215982437133789, -0.0008172988891601562, -4.38690185546875e-05, -0.10027122497558594, -0.0001277923583984375, -0.0007004737854003906, -7.62939453125e-06, -0.001605987548828125, -0.0003147125244140625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002803802490234375, -0.000164031982421875, -1.9073486328125e-05, -4.1961669921875e-05, -9.1552734375e-05, -0.2136821746826172, -0.0012298618676140904, -0.00054168701171875, -1.33514404296875e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0004146099090576172, -0.000796198844909668, -1.1444091796875e-05, -0.00563812255859375, -1.9073486328125e-06, -1.1444091796875e-05, -0.008401989936828613, -7.62939453125e-06, -0.00043392181396484375, -1.33514404296875e-05, -0.001178741455078125, 0.0, -0.0003204345703125, -1.5497195136049413e-06, -0.0345156192779541, -0.00016415119171142578, -0.3066120147705078, -0.000492095947265625, -0.0007572174072265625, -5.7220458984375e-06, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 7, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "SpellCast", "hole1": {"_type": "Name", "id": "ManaCost"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Spell", "Cast", "<EOS>", 21, 110, "Mana", "Cost", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.9293389179505525, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.5746912956237793, -5.960462772236497e-07, -0.00013565893459599465, -7.152555099310121e-07, -7.43865966796875e-05, -0.5788164138793945, -0.00019085407257080078, 0.0, -3.814697265625e-06, -0.00998687744140625, -1.0819272994995117, -0.29717618227005005, -0.005046963691711426, 0.0, -4.57763671875e-05, 0.0, -0.01096343994140625, -0.011077404022216797, -0.00078582763671875, -4.38690185546875e-05, -0.10892677307128906, -0.000125885009765625, -0.0006623268127441406, -7.62939453125e-06, -0.001689910888671875, -0.000335693359375, -3.814697265625e-06, -1.9073486328125e-06, -0.0003796815872192383, -0.00016021728515625, -1.9073486328125e-05, -4.38690185546875e-05, -8.7738037109375e-05, -0.18688201904296875, -0.00125322793610394, -0.0005435943603515625, -1.33514404296875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.00042617321014404297, -0.000777125358581543, -1.1444091796875e-05, -0.005649566650390625, -1.9073486328125e-06, -1.1444091796875e-05, -0.008916974067687988, -7.62939453125e-06, -0.0004329681396484375, -1.33514404296875e-05, -0.00118255615234375, 0.0, -0.000324249267578125, -1.5497195136049413e-06, -0.03516983985900879, -0.00016415119171142578, -0.3181924819946289, -0.000492095947265625, -0.0007610321044921875, -5.7220458984375e-06, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 7, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "ArchmageAntonidas"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Archmage", "Antonidas", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.96181036216219, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.5746912956237793, -5.960462772236497e-07, -0.00013565893459599465, -7.152555099310121e-07, -7.43865966796875e-05, -0.5788164138793945, -0.00019085407257080078, 0.0, -3.814697265625e-06, -0.00998687744140625, -0.41829490661621094, -0.9978654384613037, -0.04451584815979004, -5.91278076171875e-05, -1.9073486328125e-05, 0.0, -0.061733994632959366, -0.07369363307952881, -0.0003757476806640625, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -1.9073486328125e-06, -8.7738037109375e-05, -8.0108642578125e-05, -0.07610702514648438, -0.0017177993431687355, 0.0, -3.814697265625e-06, 0.0, -0.2843307554721832, -0.026850635185837746, -0.12660391628742218, -0.0007686614990234375, 0.0, -6.306169962044805e-05, -1.33514404296875e-05, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Summon(ArchmageAntonidas()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 5, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "SpellCast", "hole1": {"_type": "Name", "id": "ManaCost"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Spell", "Cast", "<EOS>", 21, 110, "Mana", "Cost", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.406124847306607, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.862059473991394, -2.3841855067985307e-07, -0.1103668212890625, 0.0, -0.00011849403381347656, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -3.62396240234375e-05, -1.33514404296875e-05, -3.0517578125e-05, -3.6954863844584906e-06, -0.7436168193817139, -5.960462772236497e-07, -0.0001251689827768132, -7.152555099310121e-07, -7.05718994140625e-05, -0.6378250122070312, -0.00018131732940673828, 0.0, -3.814697265625e-06, -0.01064300537109375, -1.043050765991211, -0.29588982462882996, -0.0051261186599731445, 0.0, -4.57763671875e-05, 0.0, -0.010771751403808594, -0.01100778579711914, -0.0007762908935546875, -4.1961669921875e-05, -0.10644912719726562, -0.0001239776611328125, -0.0006642341613769531, -7.62939453125e-06, -0.0016880035400390625, -0.0003376007080078125, -3.814697265625e-06, -1.9073486328125e-06, -0.0003796815872192383, -0.0001583099365234375, -1.9073486328125e-05, -4.38690185546875e-05, -8.7738037109375e-05, -0.18597984313964844, -0.0012551352847367525, -0.0005397796630859375, -1.33514404296875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.00042617321014404297, -0.000777125358581543, -1.1444091796875e-05, -0.005596160888671875, -1.9073486328125e-06, -1.1444091796875e-05, -0.008885502815246582, -7.62939453125e-06, -0.000431060791015625, -1.33514404296875e-05, -0.00118255615234375, 0.0, -0.000324249267578125, -1.5497195136049413e-06, -0.03516507148742676, -0.00016415119171142578, -0.31851768493652344, -0.000492095947265625, -0.0007610321044921875, -5.7220458984375e-06, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 7, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "SpellCast", "hole1": {"_type": "Name", "id": "ManaCost"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "<UNK>Player"}}]}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Spell", "Cast", "<EOS>", 21, 110, "Mana", "Cost", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "<UNK>", "Player", "<EOS>"], "score": -4.432133564331956, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.8275485038757324, -9.536738616588991e-07, -0.0002162456512451172, -3.576278118089249e-07, -6.4849853515625e-05, -0.13281536102294922, -0.00012421607971191406, 0.0, -3.814697265625e-06, -0.010709762573242188, -0.7877483367919922, -0.2330591380596161, -0.004625439643859863, 0.0, -5.53131103515625e-05, 0.0, -0.013149261474609375, -0.01228475570678711, -0.000823974609375, -4.38690185546875e-05, -0.10252189636230469, -0.00012969970703125, -0.0006985664367675781, -7.62939453125e-06, -0.0016117095947265625, -0.0003147125244140625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002803802490234375, -0.000164031982421875, -1.9073486328125e-05, -4.1961669921875e-05, -9.1552734375e-05, -0.2148599624633789, -0.001227954518981278, -0.0005435943603515625, -1.33514404296875e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0004146099090576172, -0.000796198844909668, -1.1444091796875e-05, -0.0056896209716796875, -1.9073486328125e-06, -1.1444091796875e-05, -0.008431553840637207, -7.62939453125e-06, -0.00043582916259765625, -1.33514404296875e-05, -0.001178741455078125, 0.0, -0.0003204345703125, -1.5497195136049413e-06, -0.03452897071838379, -0.00016415119171142578, -1.3414678573608398, -2.86102294921875e-05, -0.00023698806762695312, -5.340576171875e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.002093791961669922, -0.005649678874760866, -8.20159912109375e-05], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 5, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "ArchmageAntonidas"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Archmage", "Antonidas", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.4725287744583895, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.862059473991394, -2.3841855067985307e-07, -0.1103668212890625, 0.0, -0.00011849403381347656, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -3.62396240234375e-05, -1.33514404296875e-05, -3.0517578125e-05, -3.6954863844584906e-06, -0.7436168193817139, -5.960462772236497e-07, -0.0001251689827768132, -7.152555099310121e-07, -7.05718994140625e-05, -0.6378250122070312, -0.00018131732940673828, 0.0, -3.814697265625e-06, -0.01064300537109375, -0.43903446197509766, -0.9671597480773926, -0.044306039810180664, -5.53131103515625e-05, -1.9073486328125e-05, 0.0, -0.06257884204387665, -0.07331636548042297, -0.00037384033203125, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -8.594989776611328e-05, -2.6702880859375e-05, -1.9073486328125e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.07600975036621094, -0.0017170842038467526, 0.0, -3.814697265625e-06, 0.0, -0.2848237454891205, -0.026982996612787247, -0.12621283531188965, -0.00077056884765625, 0.0, -6.496904825326055e-05, -1.33514404296875e-05, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Summon(ArchmageAntonidas()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 7, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "TurnEnded", "hole1": {"_type": "Name", "id": "Has'"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "ArchmageAntonidas"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Turn", "Ended", "<EOS>", 21, 110, "Has", "'", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Archmage", "Antonidas", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.482531091126148, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.8275485038757324, -9.536738616588991e-07, -0.0002162456512451172, -3.576278118089249e-07, -6.4849853515625e-05, -0.13281536102294922, -0.00012421607971191406, 0.0, -3.814697265625e-06, -0.010709762573242188, -0.6131219863891602, -0.8077923059463501, -0.007479071617126465, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.2293214052915573, -0.4928187131881714, -0.18123134970664978, -0.0020503997802734375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0002020592801272869, -3.814697265625e-05, -3.933906555175781e-06, -0.0003452301025390625, -1.52587890625e-05, -0.02901744842529297, -0.004452317487448454, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -0.2983914613723755, -0.025536775588989258, -0.13358661532402039, -0.0009326934814453125, 0.0, -8.392331073991954e-05, -1.1444091796875e-05, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(TurnEnded(Has'()), ActionTag(\n            Summon(ArchmageAntonidas()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 7, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "ArchmageAntonidas"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Archmage", "Antonidas", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.482733411998787, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.8275485038757324, -9.536738616588991e-07, -0.0002162456512451172, -3.576278118089249e-07, -6.4849853515625e-05, -0.13281536102294922, -0.00012421607971191406, 0.0, -3.814697265625e-06, -0.010709762573242188, -0.6131219863891602, -1.5333105325698853, -0.042186856269836426, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -0.04498640075325966, -0.07179639488458633, -0.000270843505859375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -8.022785186767578e-05, -2.86102294921875e-05, -1.9073486328125e-06, -8.58306884765625e-05, -8.58306884765625e-05, -0.08008384704589844, -0.0016593871405348182, 0.0, -3.814697265625e-06, 0.0, -0.28496482968330383, -0.027042390778660774, -0.12602072954177856, -0.0007686614990234375, 0.0, -6.532666884595528e-05, -1.33514404296875e-05, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Summon(ArchmageAntonidas()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 5, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "SpellCast", "hole1": {"_type": "Name", "id": "ManaCost"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "<UNK>Player"}}]}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Spell", "Cast", "<EOS>", 21, 110, "Mana", "Cost", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "<UNK>", "Player", "<EOS>"], "score": -4.531337867045401, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.862059473991394, -2.3841855067985307e-07, -0.1103668212890625, 0.0, -0.00011849403381347656, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -3.62396240234375e-05, -1.33514404296875e-05, -3.0517578125e-05, -3.6954863844584906e-06, -0.6451060771942139, -1.0728830375228426e-06, -0.0002180337905883789, -3.576278118089249e-07, -6.103515625e-05, -0.1461629867553711, -0.00012040138244628906, 0.0, -3.814697265625e-06, -0.009632110595703125, -0.7695140838623047, -0.23289820551872253, -0.004674077033996582, 0.0, -5.53131103515625e-05, 0.0, -0.012900352478027344, -0.01215982437133789, -0.0008172988891601562, -4.38690185546875e-05, -0.10027122497558594, -0.0001277923583984375, -0.0007004737854003906, -7.62939453125e-06, -0.001605987548828125, -0.0003147125244140625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002803802490234375, -0.000164031982421875, -1.9073486328125e-05, -4.1961669921875e-05, -9.1552734375e-05, -0.2136821746826172, -0.0012298618676140904, -0.00054168701171875, -1.33514404296875e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0004146099090576172, -0.000796198844909668, -1.1444091796875e-05, -0.00563812255859375, -1.9073486328125e-06, -1.1444091796875e-05, -0.008401989936828613, -7.62939453125e-06, -0.00043392181396484375, -1.33514404296875e-05, -0.001178741455078125, 0.0, -0.0003204345703125, -1.5497195136049413e-06, -0.0345156192779541, -0.00016415119171142578, -1.3413887023925781, -2.86102294921875e-05, -0.00023698806762695312, -5.340576171875e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.002094745635986328, -0.005643837619572878, -8.0108642578125e-05], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 7, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "Attack", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "ArchmageAntonidas"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Attack", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Archmage", "Antonidas", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.623746934532981, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.8275485038757324, -9.536738616588991e-07, -0.0002162456512451172, -3.576278118089249e-07, -6.4849853515625e-05, -0.13281536102294922, -0.00012421607971191406, 0.0, -3.814697265625e-06, -0.010709762573242188, -0.6131219863891602, -1.5347896814346313, -8.988380432128906e-05, -1.9073486328125e-06, 0.0, -0.056753236800432205, -0.28870266675949097, -0.0012636184692382812, -3.24249267578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -9.000301361083984e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, -3.4332275390625e-05, -0.06085395812988281, -0.002908583963289857, 0.0, -3.814697265625e-06, 0.0, -0.25958359241485596, -0.027951668947935104, -0.12039998173713684, -0.0008544921875, 0.0, -4.291534060030244e-05, -5.7220458984375e-06, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(Attack(IsSpell()), ActionTag(\n            Summon(ArchmageAntonidas()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 5, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "TurnEnded", "hole1": {"_type": "Name", "id": "Has'"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "ArchmageAntonidas"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Turn", "Ended", "<EOS>", 21, 110, "Has", "'", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Archmage", "Antonidas", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.651762209242847, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.862059473991394, -2.3841855067985307e-07, -0.1103668212890625, 0.0, -0.00011849403381347656, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -3.62396240234375e-05, -1.33514404296875e-05, -3.0517578125e-05, -3.6954863844584906e-06, -0.6451060771942139, -1.0728830375228426e-06, -0.0002180337905883789, -3.576278118089249e-07, -6.103515625e-05, -0.1461629867553711, -0.00012040138244628906, 0.0, -3.814697265625e-06, -0.009632110595703125, -0.6285934448242188, -0.834208607673645, -0.007415294647216797, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.23200397193431854, -0.4948709011077881, -0.18223467469215393, -0.0020275115966796875, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0002021784894168377, -3.814697265625e-05, -3.933906555175781e-06, -0.00034332275390625, -1.52587890625e-05, -0.02888011932373047, -0.004451483488082886, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -0.29901111125946045, -0.025694891810417175, -0.1330910176038742, -0.000934600830078125, 0.0, -8.392331073991954e-05, -1.1444091796875e-05, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(TurnEnded(Has'()), ActionTag(\n            Summon(ArchmageAntonidas()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 7, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "SpellCast", "hole1": {"_type": "Name", "id": "ManaCost"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"hole3": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "<UNK>"}}], "_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "<UNK>Player"}}]}]}, "_type": "Template9", "hole0": 5, "hole1": 7, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Spell", "Cast", "<EOS>", 21, 110, "Mana", "Cost", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "<UNK>", "Player", "<EOS>"], "score": -4.927553275017452, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.5746912956237793, -5.960462772236497e-07, -0.00013565893459599465, -7.152555099310121e-07, -7.43865966796875e-05, -0.5788164138793945, -0.00019085407257080078, 0.0, -3.814697265625e-06, -0.00998687744140625, -1.0819272994995117, -0.29717618227005005, -0.005046963691711426, 0.0, -4.57763671875e-05, 0.0, -0.01096343994140625, -0.011077404022216797, -0.00078582763671875, -4.38690185546875e-05, -0.10892677307128906, -0.000125885009765625, -0.0006623268127441406, -7.62939453125e-06, -0.001689910888671875, -0.000335693359375, -3.814697265625e-06, -1.9073486328125e-06, -0.0003796815872192383, -0.00016021728515625, -1.9073486328125e-05, -4.38690185546875e-05, -8.7738037109375e-05, -0.18688201904296875, -0.00125322793610394, -0.0005435943603515625, -1.33514404296875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.00042617321014404297, -0.000777125358581543, -1.1444091796875e-05, -0.005649566650390625, -1.9073486328125e-06, -1.1444091796875e-05, -0.008916974067687988, -7.62939453125e-06, -0.0004329681396484375, -1.33514404296875e-05, -0.00118255615234375, 0.0, -0.000324249267578125, -1.5497195136049413e-06, -0.03516983985900879, -0.00016415119171142578, -1.3095283508300781, -2.6702880859375e-05, -0.00023698806762695312, -5.340576171875e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.002075672149658203, -0.0056472946889698505, -8.0108642578125e-05], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 7, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "SpellCast", "hole1": {"_type": "Name", "id": "ManaCost"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "ArchmageAntonidas"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Spell", "Cast", "<EOS>", 21, 110, "Mana", "Cost", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Archmage", "Antonidas", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -5.636746347838788, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.8275485038757324, -9.536738616588991e-07, -0.0002162456512451172, -3.576278118089249e-07, -6.4849853515625e-05, -0.13281536102294922, -0.00012421607971191406, 0.0, -3.814697265625e-06, -0.010709762573242188, -0.7877483367919922, -0.2330591380596161, -0.004625439643859863, 0.0, -5.53131103515625e-05, 0.0, -0.013149261474609375, -0.01228475570678711, -0.000823974609375, -4.38690185546875e-05, -0.10252189636230469, -0.00012969970703125, -0.0006985664367675781, -7.62939453125e-06, -0.0016117095947265625, -0.0003147125244140625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002803802490234375, -0.000164031982421875, -1.9073486328125e-05, -4.1961669921875e-05, -9.1552734375e-05, -1.6671409606933594, -0.7690932750701904, 0.0, -3.814697265625e-06, 0.0, -0.14301204681396484, -0.011804604902863503, -0.22569537162780762, -0.0061359405517578125, 0.0, -0.00011348724365234375, -7.62939453125e-06, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(Summon(ArchmageAntonidas()), PlayerSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "LEGENDARY", "_type": "Template6", "hole0": "Archmage Antonidas", "hole1": 7, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "SpellCast", "hole1": {"_type": "Name", "id": "ManaCost"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "AddCard", "hole1": {"_type": "Name", "id": "<UNK>'"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}]}, "_type": "Template9", "hole0": 5, "hole1": 5, "hole2": "effects"}], "hole0": "ArchmageAntonidas", "hole4": "player"}, "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Spell", "Cast", "<EOS>", 21, 110, "Mana", "Cost", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Add", "Card", "<EOS>", 21, 110, "<UNK>", "'", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -6.193798228123931, "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.8275485038757324, -9.536738616588991e-07, -0.0002162456512451172, -3.576278118089249e-07, -6.4849853515625e-05, -0.13281536102294922, -0.00012421607971191406, 0.0, -3.814697265625e-06, -0.010709762573242188, -0.7877483367919922, -0.2330591380596161, -0.004625439643859863, 0.0, -5.53131103515625e-05, 0.0, -0.013149261474609375, -0.01228475570678711, -0.000823974609375, -4.38690185546875e-05, -0.10252189636230469, -0.00012969970703125, -0.0006985664367675781, -7.62939453125e-06, -0.0016117095947265625, -0.0003147125244140625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002803802490234375, -0.000164031982421875, -1.9073486328125e-05, -4.1961669921875e-05, -9.1552734375e-05, -1.6671409606933594, -0.6799085140228271, -0.0004711151123046875, -0.049056053161621094, -1.1444091796875e-05, 0.0, -0.04323691874742508, -0.8396439552307129, -0.09830158948898315, -0.0006961822509765625, 0.0, -0.0015865564346313477, -5.7220458984375e-06, 0.0], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(<UNK>'()), PlayerSelector()))])\n"}], "gold_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(\n            hearthbreaker.cards.Fireball()), PlayerSelector()))])\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -2.042935803589323, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.8599863052368164, -2.09808349609375e-05, -5.7220458984375e-06, -6.318092346191406e-05, 0.0, -4.4345855712890625e-05, 0.0, -0.016469955444335938, -0.00018310546875, -7.62939453125e-06, -8.22540732769994e-06, 0.0, -2.288818359375e-05, 0.0, -2.25233961828053e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00011444091796875, -7.43865966796875e-05, -0.000652313232421875, 0.0, -0.000545501708984375, 0.0, -1.33514404296875e-05, 0.0, -0.0007712841033935547, 0.0, -0.0001373291015625, 0.0, -7.82012939453125e-05, -4.76837158203125e-05, -8.404254913330078e-05, -3.576278118089249e-07, -2.6702880859375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0002460479736328125, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.10528290271759033, -1.9073486328125e-06, -0.0005435943603515625, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00010144710540771484, -5.7220458984375e-06, -0.17749881744384766, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0005248785018920898, 0.0, -1.1444091796875e-05, 0.0, -2.9444683605106547e-05, 0.0, -0.0001888275146484375, -0.059299468994140625, -3.814697265625e-06, 0.0, -0.000484466552734375, -8.58306884765625e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.9802317840221804e-06, -0.2545309066772461, 0.0, -1.9073486328125e-06, -0.09540653228759766, -0.45826148986816406, -0.00037956179585307837, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.00478825019672513, -0.0029035801999270916, -9.5367431640625e-06, -2.86102294921875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0017756223678588867, 0.0], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -2.440074247687548, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.5570468902587891, -0.0002422332763671875, -7.62939453125e-06, -0.00010728836059570312, 0.0, -0.00011515617370605469, 0.0, -1.0674285888671875, -0.000110626220703125, -3.814697265625e-06, -1.8596476365928538e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -6.905035115778446e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0002346038818359375, -0.000209808349609375, -0.0018634796142578125, 0.0, -0.000579833984375, 0.0, -1.1444091796875e-05, 0.0, -0.0007445812225341797, 0.0, -0.0001468658447265625, 0.0, -0.0002269744873046875, -3.4332275390625e-05, -0.00011277198791503906, -7.152555099310121e-07, -0.0022029876708984375, 0.0, -0.006188511848449707, 0.0, -0.0001468658447265625, -1.9073486328125e-05, -0.00038635730743408203, -1.9073486328125e-06, -0.03703880310058594, -0.00019073486328125, -1.9073486328125e-05, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0009692907333374023, 0.0, -1.1444091796875e-05, 0.0, -2.264975046273321e-05, 0.0, -0.0004024505615234375, -0.05964851379394531, -5.7220458984375e-06, 0.0, -0.0005035400390625, -0.0001010894775390625, -1.1444091796875e-05, -3.814697265625e-06, -9.5367431640625e-06, -2.861022494471399e-06, -0.2175922393798828, 0.0, -1.9073486328125e-06, -0.07145118713378906, -0.40470027923583984, -0.0002769221900962293, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.0032903184182941914, -0.003070592414587736, -9.5367431640625e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-05, -0.00168609619140625, 0.0], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DREAM"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -2.844070852452873, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.5570468902587891, -0.0002422332763671875, -7.62939453125e-06, -0.00010728836059570312, 0.0, -0.00011515617370605469, 0.0, -0.44107627868652344, -3.62396240234375e-05, -1.9073486328125e-06, -1.4662635294371285e-05, -1.1444091796875e-05, -0.000125885009765625, -9.5367431640625e-06, -2.7072615921497345e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0010395050048828125, -1.52587890625e-05, -0.7198162078857422, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -0.00024437904357910156, 0.0, -0.0015411376953125, 0.0, -0.005405426025390625, -0.000362396240234375, -0.0003647804260253906, -1.1920922133867862e-06, -0.0002422332763671875, 0.0, -0.0023832321166992188, 0.0, -3.4332275390625e-05, 0.0, -0.0040988922119140625, 0.0, -0.0011692047119140625, -1.9073486328125e-06, -0.009748458862304688, 0.0, -1.9073486328125e-05, 0.0, -0.000438690185546875, 0.0, -1.52587890625e-05, -2.6702880859375e-05, -8.83340835571289e-05, -1.9073486328125e-06, -0.2670869827270508, -7.05718994140625e-05, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0004962682723999023, 0.0, -9.5367431640625e-06, 0.0, -2.801417031150777e-05, 0.0, -0.0002040863037109375, -0.05346202850341797, -3.814697265625e-06, 0.0, -0.0005035400390625, -8.20159912109375e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.861022494471399e-06, -0.24600982666015625, 0.0, -1.9073486328125e-06, -0.09717273712158203, -0.42263126373291016, -0.00038766805664636195, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.004439291078597307, -0.002933382522314787, -9.5367431640625e-06, -2.86102294921875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0018157958984375, 0.0], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.DREAM, CARD_RARITY.\n            COMMON, True, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -2.986991877879049, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.5570468902587891, -0.0002422332763671875, -7.62939453125e-06, -0.00010728836059570312, 0.0, -0.00011515617370605469, 0.0, -0.44107627868652344, -3.62396240234375e-05, -1.9073486328125e-06, -1.4662635294371285e-05, -1.1444091796875e-05, -0.000125885009765625, -9.5367431640625e-06, -2.7072615921497345e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0010395050048828125, -1.52587890625e-05, -0.8696060180664062, 0.0, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.0004944801330566406, 0.0, -0.001087188720703125, 0.0, -0.0062808990478515625, -0.0004673004150390625, -0.0003666877746582031, -1.311301275563892e-06, -0.0003681182861328125, 0.0, -0.0025014877319335938, 0.0, -3.4332275390625e-05, 0.0, -0.004375457763671875, 0.0, -0.00118255615234375, -1.9073486328125e-06, -0.010653495788574219, 0.0, -1.9073486328125e-05, 0.0, -0.00043487548828125, 0.0, -1.52587890625e-05, -2.6702880859375e-05, -9.02414321899414e-05, -1.9073486328125e-06, -0.25777721405029297, -7.43865966796875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0004981756210327148, 0.0, -9.5367431640625e-06, 0.0, -2.8133377782069147e-05, 0.0, -0.000202178955078125, -0.05230903625488281, -3.814697265625e-06, 0.0, -0.0005054473876953125, -8.20159912109375e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.861022494471399e-06, -0.246337890625, 0.0, -1.9073486328125e-06, -0.09657001495361328, -0.42426490783691406, -0.0003894562250934541, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.004456750117242336, -0.0029313559643924236, -9.5367431640625e-06, -2.86102294921875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.001811981201171875, 0.0], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+1/+1"}}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "+1/+1", "<EOS>"], "score": -3.34939956728919, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.8599863052368164, -2.09808349609375e-05, -5.7220458984375e-06, -6.318092346191406e-05, 0.0, -4.4345855712890625e-05, 0.0, -0.016469955444335938, -0.00018310546875, -7.62939453125e-06, -8.22540732769994e-06, 0.0, -2.288818359375e-05, 0.0, -2.25233961828053e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00011444091796875, -7.43865966796875e-05, -0.000652313232421875, 0.0, -0.000545501708984375, 0.0, -1.33514404296875e-05, 0.0, -0.0007712841033935547, 0.0, -0.0001373291015625, 0.0, -7.82012939453125e-05, -4.76837158203125e-05, -8.404254913330078e-05, -3.576278118089249e-07, -2.6702880859375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0002460479736328125, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.10528290271759033, -1.9073486328125e-06, -0.0005435943603515625, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00010144710540771484, -5.7220458984375e-06, -0.17749881744384766, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0005248785018920898, 0.0, -1.1444091796875e-05, 0.0, -2.9444683605106547e-05, 0.0, -0.0001888275146484375, -0.059299468994140625, -3.814697265625e-06, 0.0, -0.000484466552734375, -8.58306884765625e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.9802317840221804e-06, -0.2545309066772461, 0.0, -1.9073486328125e-06, -0.09540653228759766, -1.0015745162963867, -1.919269561767578e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.7019776105880737, -0.07112301886081696], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(+1/+1()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -3.5245091772506996, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.8599863052368164, -2.09808349609375e-05, -5.7220458984375e-06, -6.318092346191406e-05, 0.0, -4.4345855712890625e-05, 0.0, -0.016469955444335938, -0.00018310546875, -7.62939453125e-06, -8.22540732769994e-06, 0.0, -2.288818359375e-05, 0.0, -2.25233961828053e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00011444091796875, -7.43865966796875e-05, -0.000652313232421875, 0.0, -0.000545501708984375, 0.0, -1.33514404296875e-05, 0.0, -0.0007712841033935547, 0.0, -0.0001373291015625, 0.0, -7.82012939453125e-05, -4.76837158203125e-05, -8.404254913330078e-05, -3.576278118089249e-07, -2.6702880859375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0002460479736328125, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.10528290271759033, -1.9073486328125e-06, -0.0005435943603515625, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00010144710540771484, -5.7220458984375e-06, -0.17749881744384766, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0005248785018920898, 0.0, -1.1444091796875e-05, 0.0, -2.9444683605106547e-05, 0.0, -0.0001888275146484375, -0.059299468994140625, -3.814697265625e-06, 0.0, -0.000484466552734375, -8.58306884765625e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.9802317840221804e-06, -2.2187957763671875, 0.0, -5.7220458984375e-06, -0.001537322998046875, -3.814697265625e-06, -0.07941019535064697, 0.0], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+1/+1"}}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "+1/+1", "<EOS>"], "score": -3.937813802128616, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.5570468902587891, -0.0002422332763671875, -7.62939453125e-06, -0.00010728836059570312, 0.0, -0.00011515617370605469, 0.0, -1.0674285888671875, -0.000110626220703125, -3.814697265625e-06, -1.8596476365928538e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -6.905035115778446e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0002346038818359375, -0.000209808349609375, -0.0018634796142578125, 0.0, -0.000579833984375, 0.0, -1.1444091796875e-05, 0.0, -0.0007445812225341797, 0.0, -0.0001468658447265625, 0.0, -0.0002269744873046875, -3.4332275390625e-05, -0.00011277198791503906, -7.152555099310121e-07, -0.0022029876708984375, 0.0, -0.006188511848449707, 0.0, -0.0001468658447265625, -1.9073486328125e-05, -0.00038635730743408203, -1.9073486328125e-06, -0.03703880310058594, -0.00019073486328125, -1.9073486328125e-05, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0009692907333374023, 0.0, -1.1444091796875e-05, 0.0, -2.264975046273321e-05, 0.0, -0.0004024505615234375, -0.05964851379394531, -5.7220458984375e-06, 0.0, -0.0005035400390625, -0.0001010894775390625, -1.1444091796875e-05, -3.814697265625e-06, -9.5367431640625e-06, -2.861022494471399e-06, -0.2175922393798828, 0.0, -1.9073486328125e-06, -0.07145118713378906, -1.1011085510253906, -1.728534698486328e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.7232963442802429, -0.08647128194570541], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(+1/+1()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "bounce"}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 136, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "score": -4.151193008466002, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.8599863052368164, -2.09808349609375e-05, -5.7220458984375e-06, -6.318092346191406e-05, 0.0, -4.4345855712890625e-05, 0.0, -0.016469955444335938, -0.00018310546875, -7.62939453125e-06, -8.22540732769994e-06, 0.0, -2.288818359375e-05, 0.0, -2.25233961828053e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00011444091796875, -7.43865966796875e-05, -0.000652313232421875, 0.0, -0.000545501708984375, 0.0, -1.33514404296875e-05, 0.0, -0.0007712841033935547, 0.0, -0.0001373291015625, 0.0, -7.82012939453125e-05, -4.76837158203125e-05, -8.404254913330078e-05, -3.576278118089249e-07, -2.6702880859375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0002460479736328125, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.10528290271759033, -1.9073486328125e-06, -0.0005435943603515625, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00010144710540771484, -5.7220458984375e-06, -0.17749881744384766, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0005248785018920898, 0.0, -1.1444091796875e-05, 0.0, -2.9444683605106547e-05, 0.0, -0.0001888275146484375, -2.9593372344970703, -0.002147674560546875, 0.0, -9.34600830078125e-05, -3.62396240234375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.576278118089249e-07, -0.02468109130859375, -7.62939453125e-06], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -4.223305842345539, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.5570468902587891, -0.0002422332763671875, -7.62939453125e-06, -0.00010728836059570312, 0.0, -0.00011515617370605469, 0.0, -1.0674285888671875, -0.000110626220703125, -3.814697265625e-06, -1.8596476365928538e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -6.905035115778446e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0002346038818359375, -0.000209808349609375, -0.0018634796142578125, 0.0, -0.000579833984375, 0.0, -1.1444091796875e-05, 0.0, -0.0007445812225341797, 0.0, -0.0001468658447265625, 0.0, -0.0002269744873046875, -3.4332275390625e-05, -0.00011277198791503906, -7.152555099310121e-07, -0.0022029876708984375, 0.0, -0.006188511848449707, 0.0, -0.0001468658447265625, -1.9073486328125e-05, -0.00038635730743408203, -1.9073486328125e-06, -0.03703880310058594, -0.00019073486328125, -1.9073486328125e-05, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0009692907333374023, 0.0, -1.1444091796875e-05, 0.0, -2.264975046273321e-05, 0.0, -0.0004024505615234375, -0.05964851379394531, -5.7220458984375e-06, 0.0, -0.0005035400390625, -0.0001010894775390625, -1.1444091796875e-05, -3.814697265625e-06, -9.5367431640625e-06, -2.861022494471399e-06, -2.438364028930664, 0.0, -5.7220458984375e-06, -0.0011749267578125, -3.814697265625e-06, -0.04589188098907471, 0.0], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DREAM"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+1/+1"}}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "+1/+1", "<EOS>"], "score": -4.24986981348296, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.5570468902587891, -0.0002422332763671875, -7.62939453125e-06, -0.00010728836059570312, 0.0, -0.00011515617370605469, 0.0, -0.44107627868652344, -3.62396240234375e-05, -1.9073486328125e-06, -1.4662635294371285e-05, -1.1444091796875e-05, -0.000125885009765625, -9.5367431640625e-06, -2.7072615921497345e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0010395050048828125, -1.52587890625e-05, -0.7198162078857422, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -0.00024437904357910156, 0.0, -0.0015411376953125, 0.0, -0.005405426025390625, -0.000362396240234375, -0.0003647804260253906, -1.1920922133867862e-06, -0.0002422332763671875, 0.0, -0.0023832321166992188, 0.0, -3.4332275390625e-05, 0.0, -0.0040988922119140625, 0.0, -0.0011692047119140625, -1.9073486328125e-06, -0.009748458862304688, 0.0, -1.9073486328125e-05, 0.0, -0.000438690185546875, 0.0, -1.52587890625e-05, -2.6702880859375e-05, -8.83340835571289e-05, -1.9073486328125e-06, -0.2670869827270508, -7.05718994140625e-05, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0004962682723999023, 0.0, -9.5367431640625e-06, 0.0, -2.801417031150777e-05, 0.0, -0.0002040863037109375, -0.05346202850341797, -3.814697265625e-06, 0.0, -0.0005035400390625, -8.20159912109375e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.861022494471399e-06, -0.24600982666015625, 0.0, -1.9073486328125e-06, -0.09717273712158203, -1.0660476684570312, -1.919269561767578e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.7001878023147583, -0.07187376916408539], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.DREAM, CARD_RARITY.\n            COMMON, True, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(+1/+1()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+1/+1"}}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "+1/+1", "<EOS>"], "score": -4.387047400036394, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.5570468902587891, -0.0002422332763671875, -7.62939453125e-06, -0.00010728836059570312, 0.0, -0.00011515617370605469, 0.0, -0.44107627868652344, -3.62396240234375e-05, -1.9073486328125e-06, -1.4662635294371285e-05, -1.1444091796875e-05, -0.000125885009765625, -9.5367431640625e-06, -2.7072615921497345e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0010395050048828125, -1.52587890625e-05, -0.8696060180664062, 0.0, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.0004944801330566406, 0.0, -0.001087188720703125, 0.0, -0.0062808990478515625, -0.0004673004150390625, -0.0003666877746582031, -1.311301275563892e-06, -0.0003681182861328125, 0.0, -0.0025014877319335938, 0.0, -3.4332275390625e-05, 0.0, -0.004375457763671875, 0.0, -0.00118255615234375, -1.9073486328125e-06, -0.010653495788574219, 0.0, -1.9073486328125e-05, 0.0, -0.00043487548828125, 0.0, -1.52587890625e-05, -2.6702880859375e-05, -9.02414321899414e-05, -1.9073486328125e-06, -0.25777721405029297, -7.43865966796875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0004981756210327148, 0.0, -9.5367431640625e-06, 0.0, -2.8133377782069147e-05, 0.0, -0.000202178955078125, -0.05230903625488281, -3.814697265625e-06, 0.0, -0.0005054473876953125, -8.20159912109375e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.861022494471399e-06, -0.246337890625, 0.0, -1.9073486328125e-06, -0.09657001495361328, -1.0629472732543945, -1.919269561767578e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.6994975805282593, -0.07156799733638763], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(+1/+1()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>"], "score": -4.471020341558294, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.8599863052368164, -2.09808349609375e-05, -5.7220458984375e-06, -6.318092346191406e-05, 0.0, -4.4345855712890625e-05, 0.0, -0.016469955444335938, -0.00018310546875, -7.62939453125e-06, -8.22540732769994e-06, 0.0, -2.288818359375e-05, 0.0, -2.25233961828053e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00011444091796875, -7.43865966796875e-05, -0.000652313232421875, 0.0, -0.000545501708984375, 0.0, -1.33514404296875e-05, 0.0, -0.0007712841033935547, 0.0, -0.0001373291015625, 0.0, -7.82012939453125e-05, -4.76837158203125e-05, -8.404254913330078e-05, -3.576278118089249e-07, -2.6702880859375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0002460479736328125, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.10528290271759033, -1.9073486328125e-06, -0.0005435943603515625, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00010144710540771484, -5.7220458984375e-06, -0.17749881744384766, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0005248785018920898, 0.0, -1.1444091796875e-05, 0.0, -2.9444683605106547e-05, 0.0, -0.0001888275146484375, -0.059299468994140625, -3.814697265625e-06, 0.0, -0.000484466552734375, -8.58306884765625e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.9802317840221804e-06, -0.2545309066772461, 0.0, -1.9073486328125e-06, -0.09540653228759766, -1.0015745162963867, -1.919269561767578e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.8235983848571777, -0.07112301886081696], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "bounce"}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 136, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "score": -4.846864959663165, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.5570468902587891, -0.0002422332763671875, -7.62939453125e-06, -0.00010728836059570312, 0.0, -0.00011515617370605469, 0.0, -1.0674285888671875, -0.000110626220703125, -3.814697265625e-06, -1.8596476365928538e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -6.905035115778446e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0002346038818359375, -0.000209808349609375, -0.0018634796142578125, 0.0, -0.000579833984375, 0.0, -1.1444091796875e-05, 0.0, -0.0007445812225341797, 0.0, -0.0001468658447265625, 0.0, -0.0002269744873046875, -3.4332275390625e-05, -0.00011277198791503906, -7.152555099310121e-07, -0.0022029876708984375, 0.0, -0.006188511848449707, 0.0, -0.0001468658447265625, -1.9073486328125e-05, -0.00038635730743408203, -1.9073486328125e-06, -0.03703880310058594, -0.00019073486328125, -1.9073486328125e-05, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0009692907333374023, 0.0, -1.1444091796875e-05, 0.0, -2.264975046273321e-05, 0.0, -0.0004024505615234375, -3.137293815612793, -0.011295318603515625, 0.0, -8.0108642578125e-05, -4.00543212890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.3841855067985307e-07, -0.020538330078125, -5.7220458984375e-06], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 1}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 1}]}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -5.7577652080677595, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.8599863052368164, -2.09808349609375e-05, -5.7220458984375e-06, -6.318092346191406e-05, 0.0, -4.4345855712890625e-05, 0.0, -0.016469955444335938, -0.00018310546875, -7.62939453125e-06, -8.22540732769994e-06, 0.0, -2.288818359375e-05, 0.0, -2.25233961828053e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00011444091796875, -7.43865966796875e-05, -0.000652313232421875, 0.0, -0.000545501708984375, 0.0, -1.33514404296875e-05, 0.0, -0.0007712841033935547, 0.0, -0.0001373291015625, 0.0, -7.82012939453125e-05, -4.76837158203125e-05, -8.404254913330078e-05, -3.576278118089249e-07, -2.6702880859375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0002460479736328125, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.10528290271759033, -1.9073486328125e-06, -0.0005435943603515625, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00010144710540771484, -5.7220458984375e-06, -1.8279857635498047, -0.000362396240234375, -0.000247955322265625, -0.0004177093505859375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0005248785018920898, 0.0, -1.9073486328125e-05, 0.0, -7.66515513532795e-05, 0.0, -0.015626907348632812, -0.004001617431640625, -1.1444091796875e-05, 0.0, -0.000133514404296875, -2.47955322265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.503394853192731e-06, -0.222930908203125, 0.0, -1.9073486328125e-06, -0.6569051742553711, -0.008367538452148438, -0.000521539244800806, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.00318673113361001, -0.004653095733374357, -9.5367431640625e-06, -2.09808349609375e-05, -7.82012939453125e-05, -2.47955322265625e-05, -0.0028799772262573242, 0.0, -0.00074005126953125, -0.0005035400390625, -0.0003662109375, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0001163482666015625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.6093225479125977, 0.0, 0.0, -0.41893577575683594, -0.013150215148925781, -0.0005303476937115192, -1.1920928244535389e-07, -3.814697265625e-06, -9.5367431640625e-06, -0.0013173139886930585, -0.04556989669799805, 0.0, -7.62939453125e-06, -0.0001201629638671875, -5.7220458984375e-06, -0.000926971435546875, -1.9073486328125e-06, -0.0010623931884765625, -0.0007953643798828125, -0.00038909912109375, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -0.000606536865234375, -3.814697265625e-06, -6.67572021484375e-05, -2.0265579223632812e-06, -0.5972509384155273, 0.0, 0.0, -0.2808218002319336, -0.013835906982421875, -0.001157819526270032, -1.1920928244535389e-07, -5.7220458984375e-06, -1.33514404296875e-05, -0.0013615345815196633, -0.031790733337402344, 0.0, -7.62939453125e-06, -0.0001049041748046875, -5.7220458984375e-06, -0.0012015104293823242, -1.9073486328125e-06], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n        self.target.add_buff(Buff(ChangeHealth(1)))\n        self.target.add_buff(Buff(ChangeHealth(1)))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Bananas", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}, "args": [{"_type": "Template19", "hole0": "Did"}, {"_type": "Template19", "hole0": "TurnEnded"}]}]}]}, "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 35, 87, 21, 110, "Buff", "Until", "<EOS>", 170, 50, 146, "Did", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>"], "score": -7.260064468426542, "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.8599863052368164, -2.09808349609375e-05, -5.7220458984375e-06, -6.318092346191406e-05, 0.0, -4.4345855712890625e-05, 0.0, -0.016469955444335938, -0.00018310546875, -7.62939453125e-06, -8.22540732769994e-06, 0.0, -2.288818359375e-05, 0.0, -2.25233961828053e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00011444091796875, -7.43865966796875e-05, -0.000652313232421875, 0.0, -0.000545501708984375, 0.0, -1.33514404296875e-05, 0.0, -0.0007712841033935547, 0.0, -0.0001373291015625, 0.0, -7.82012939453125e-05, -4.76837158203125e-05, -8.404254913330078e-05, -3.576278118089249e-07, -2.6702880859375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0002460479736328125, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.10528290271759033, -1.9073486328125e-06, -0.0005435943603515625, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00010144710540771484, -5.7220458984375e-06, -0.17749881744384766, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0005248785018920898, 0.0, -1.1444091796875e-05, 0.0, -2.9444683605106547e-05, 0.0, -0.0001888275146484375, -0.059299468994140625, -3.814697265625e-06, 0.0, -0.000484466552734375, -8.58306884765625e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.9802317840221804e-06, -0.2545309066772461, 0.0, -1.9073486328125e-06, -2.4378738403320312, -0.0005588531494140625, -0.000194549560546875, 0.0, -0.25875377655029297, -0.016689300537109375, -3.814697265625e-06, -0.000640869140625, -0.06335639953613281, -0.000640869140625, -1.6718780994415283, -0.29749083518981934, -0.4098844528198242, -1.33514404296875e-05, -0.10954761505126953, -0.5132372379302979, -1.1444091796875e-05], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(Did(), TurnEnded()))\n"}], "gold_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}]}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "score": -2.7877363890830793, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.7122077941894531, -0.0053691864013671875, -1.1444091796875e-05, -9.5367431640625e-06, -0.04570293426513672, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.3841855067985307e-07, -0.2135629653930664, 0.0, -5.340576171875e-05, -0.8181228637695312, 0.0, -0.04397392272949219, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.33514404296875e-05, -2.288818359375e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.6850709915161133, 0.0], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.health)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "divine_shield"}]}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>"], "score": -3.29998299781721, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.7122077941894531, -0.0053691864013671875, -1.1444091796875e-05, -9.5367431640625e-06, -0.04570293426513672, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.3841855067985307e-07, -0.2135629653930664, 0.0, -5.340576171875e-05, -0.8181228637695312, 0.0, -0.04397392272949219, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.33514404296875e-05, -2.288818359375e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -1.1973156929016113, -1.9073486328125e-06], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.divine_shield)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>"], "score": -3.6950466365043724, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.7122077941894531, -0.0053691864013671875, -1.1444091796875e-05, -9.5367431640625e-06, -0.04570293426513672, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.3841855067985307e-07, -0.2135629653930664, 0.0, -5.340576171875e-05, -2.3488378524780273, -6.103515625e-05, -0.10559654235839844, -4.76837158203125e-05], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(<UNK>)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}]}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "score": -3.7023129195396223, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.7122077941894531, -0.0053691864013671875, -1.1444091796875e-05, -9.5367431640625e-06, -0.04570293426513672, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.3841855067985307e-07, -2.023469924926758, -1.9073486328125e-06, -6.67572021484375e-05, -0.016666412353515625, 0.0, -0.013341903686523438, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -0.6218042373657227, 0.0], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}, "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 33, 82, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 56, 16, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "score": -3.7698642939749547, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.7122077941894531, -0.0053691864013671875, -1.1444091796875e-05, -9.5367431640625e-06, -0.04570293426513672, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.3841855067985307e-07, -0.2135629653930664, 0.0, -5.340576171875e-05, -0.8826751708984375, -0.003238677978515625, -0.6379232406616211, -5.7220458984375e-06, -5.91278076171875e-05, 0.0, -0.011206626892089844, -3.814697265625e-06, -2.09808349609375e-05, -3.576278118089249e-07, -0.11890411376953125, -0.6039028167724609, -0.10663604736328125, -0.0001544952392578125, -7.62939453125e-06, -0.16054725646972656, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.001094818115234375, -1.9073486328125e-06, -1.9073486328125e-05, -3.576278118089249e-07, -0.0029240846633911133, -1.1920928244535389e-07], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target - self.target.calculate_attack())\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}, "left": {"_type": "Num", "n": 1}}]}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 33, 82, 23, 115, "1", "<EOS>", 56, 16, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "score": -3.8618002862110927, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.7122077941894531, -0.0053691864013671875, -1.1444091796875e-05, -9.5367431640625e-06, -0.04570293426513672, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.3841855067985307e-07, -0.2135629653930664, 0.0, -5.340576171875e-05, -0.8826751708984375, -0.003238677978515625, -0.7758703231811523, -2.86102294921875e-05, -0.05050075054168701, -1.9073486328125e-06, -0.022531509399414062, -0.021755218505859375, -0.0156097412109375, -4.9591064453125e-05, -3.814697265625e-06, -0.8311481475830078, 0.0, -0.0001220703125, -1.9073486328125e-06, -0.00070953369140625, 0.0, -0.0003337860107421875, -3.099436753473128e-06, -0.016712427139282227, -4.768370445162873e-07], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}]}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "score": -4.290349814342022, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -1.738449215888977, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0002897977828979492, -2.3841855067985307e-07, -0.00025725364685058594, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0001964569091796875, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.001316070556640625, 0.0, -0.00032806396484375, 0.0, -0.0011769533157348633, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.012493133544921875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.714146614074707, -0.005366325378417969, -1.1444091796875e-05, -9.5367431640625e-06, -0.045742034912109375, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.3841855067985307e-07, -0.21372127532958984, 0.0, -5.340576171875e-05, -0.818511962890625, 0.0, -0.04398155212402344, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.33514404296875e-05, -2.288818359375e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.6852297782897949, 0.0], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.health)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "temp_attack"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 181, 59, 79, 169, 40, 110, "temp_attack", "<EOS>", 16, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>"], "score": -4.7640256017576235, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.6797380447387695, -0.016425132751464844, -0.03739643096923828, -0.0003509521484375, -0.00157928466796875, -0.000274658203125, -0.05208015441894531, 0.0, -0.000301361083984375, 0.0, -0.08869743347167969, 0.0, -7.748603820800781e-06, -1.4305104514278355e-06, -0.08641469478607178, 0.0, -0.0012836456298828125, -0.1394519805908203, -1.9073486328125e-06, -0.9257421493530273, -0.0003566741943359375, -0.3952711224555969, -7.62939453125e-06, -0.021982192993164062, -0.31574535369873047, -0.009206771850585938, -0.000408172607421875, -0.0017757415771484375, -7.62939453125e-06, -0.9829378128051758, -0.00012969970703125, -0.3087034225463867, -0.012537002563476562, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -0.044991493225097656, -1.9073486328125e-06, -2.872943878173828e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.271740287251305e-06, -0.006238341331481934, -7.152555099310121e-07, -0.0004138946533203125, -0.0026836395263671875, -0.0001773834228515625, -0.046372413635253906, -1.9073486328125e-06, -0.000202178955078125, -5.7220458984375e-06, -0.00038743019104003906, 0.0, -5.7220458984375e-06, -1.7881377516459906e-06, -0.06469738483428955, 0.0, -0.00018310546875, -0.18367958068847656, -2.09808349609375e-05, -0.07150650024414062, -1.9073486328125e-05], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health < 7:\n            temp_attack = self.target.calculate_attack()\n        else:\n            self.target.change_attack(<UNK>)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 10, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>"], "score": -5.882192227285415, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.6797380447387695, -0.016425132751464844, -0.03739643096923828, -0.0003509521484375, -0.00157928466796875, -0.000274658203125, -0.05208015441894531, 0.0, -0.000301361083984375, 0.0, -0.08869743347167969, 0.0, -7.748603820800781e-06, -1.4305104514278355e-06, -0.08641469478607178, 0.0, -0.0012836456298828125, -0.1394519805908203, -1.9073486328125e-06, -0.9257421493530273, -0.0003566741943359375, -1.6089237928390503, -1.1920928244535389e-07, -0.0004863739013671875, -0.05589103698730469, -5.7220458984375e-05, -7.43865966796875e-05, -3.4332275390625e-05, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.06541061401367188, -1.9073486328125e-06, -5.14984130859375e-05, -0.8492774963378906, -9.5367431640625e-06, -0.48906755447387695, -2.09808349609375e-05, -0.00091552734375, -0.0407562255859375, -0.0007610321044921875, -3.24249267578125e-05, -7.62939453125e-06, -4.57763671875e-05, 0.0, -5.936622619628906e-05, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -0.12175965309143066, 0.0, -1.1444091796875e-05, -0.10892772674560547, -7.62939453125e-06, -0.24584197998046875, -1.71661376953125e-05], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health < 0:\n            self.target.change_attack(<UNK>)\n        else:\n            self.target.change_attack(<UNK>)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 10, 169, 35, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>"], "score": -6.015639874378053, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.6797380447387695, -0.016425132751464844, -0.03739643096923828, -0.0003509521484375, -0.00157928466796875, -0.000274658203125, -0.05208015441894531, 0.0, -0.000301361083984375, 0.0, -0.08869743347167969, 0.0, -7.748603820800781e-06, -1.4305104514278355e-06, -0.08641469478607178, 0.0, -0.0012836456298828125, -0.1394519805908203, -1.9073486328125e-06, -2.6091651916503906, -0.0016574859619140625, -1.9073486328125e-06, 0.0, -0.11727046966552734, 0.0, -6.866455078125e-05, 0.0, -0.0009434223175048828, 0.0, -2.47955322265625e-05, -1.1920922133867862e-06, -0.010894179344177246, -3.576278118089249e-07, -0.0005435943603515625, -0.000377655029296875, -0.000148773193359375, -0.0068416595458984375, -3.814697265625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0002561807632446289, 0.0, -5.7220458984375e-06, -1.6689286894688848e-06, -0.0654289722442627, 0.0, -0.000988006591796875, -0.9998903274536133, -9.5367431640625e-05, -0.09634017944335938, -2.86102294921875e-05, -0.0003490447998046875, -0.030839920043945312, -0.000728607177734375, -4.00543212890625e-05, -3.814697265625e-06, -0.0002193450927734375, 0.0, -4.6253204345703125e-05, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, -0.2506105899810791, 0.0, -1.52587890625e-05, -0.3176841735839844, -1.52587890625e-05, -0.13644933700561523, -1.9073486328125e-05], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health < self.target.calculate_attack():\n            self.target.change_attack(<UNK>)\n        else:\n            self.target.change_attack(<UNK>)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}, "left": {"_type": "Num", "n": 1}}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 10, 169, 35, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 33, 82, 23, 115, "1", "<EOS>", 56, 16, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>"], "score": -6.365775558380847, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.6797380447387695, -0.016425132751464844, -0.03739643096923828, -0.0003509521484375, -0.00157928466796875, -0.000274658203125, -0.05208015441894531, 0.0, -0.000301361083984375, 0.0, -0.08869743347167969, 0.0, -7.748603820800781e-06, -1.4305104514278355e-06, -0.08641469478607178, 0.0, -0.0012836456298828125, -0.1394519805908203, -1.9073486328125e-06, -2.6091651916503906, -0.0016574859619140625, -1.9073486328125e-06, 0.0, -0.11727046966552734, 0.0, -6.866455078125e-05, 0.0, -0.0009434223175048828, 0.0, -2.47955322265625e-05, -1.1920922133867862e-06, -0.010894179344177246, -3.576278118089249e-07, -0.0005435943603515625, -0.000377655029296875, -0.000148773193359375, -0.0068416595458984375, -3.814697265625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0002561807632446289, 0.0, -5.7220458984375e-06, -1.6689286894688848e-06, -0.0654289722442627, 0.0, -0.000988006591796875, -1.0272951126098633, -0.021849632263183594, -0.26132869720458984, -7.82012939453125e-05, -0.04447495937347412, 0.0, -0.032204627990722656, -0.0043811798095703125, -0.0035486221313476562, -4.57763671875e-05, -1.1444091796875e-05, -0.41669559478759766, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -0.000705718994140625, 0.0, -0.000408172607421875, -3.6954811548639555e-06, -0.02827441692352295, -2.384185791015625e-06, -0.0020160675048828125, -0.00025177001953125, -8.392333984375e-05, -0.0046672821044921875, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, -0.0002919435501098633, 0.0, -7.62939453125e-06, -2.7418097943154862e-06, -0.022200584411621094, 0.0, -7.82012939453125e-05, -0.2551383972167969, -4.38690185546875e-05, -0.05724906921386719, -2.09808349609375e-05], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health < self.target.calculate_attack():\n            self.target.change_attack(1 - self.target.calculate_attack())\n        else:\n            self.target.change_attack(<UNK>)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 10, 169, 33, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>"], "score": -6.717701049485669, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.6797380447387695, -0.016425132751464844, -0.03739643096923828, -0.0003509521484375, -0.00157928466796875, -0.000274658203125, -0.05208015441894531, 0.0, -0.000301361083984375, 0.0, -0.08869743347167969, 0.0, -7.748603820800781e-06, -1.4305104514278355e-06, -0.08641469478607178, 0.0, -0.0012836456298828125, -0.1394519805908203, -1.9073486328125e-06, -0.7280645370483398, -0.0010232925415039062, -0.646357536315918, -3.814697265625e-06, -1.1883659362792969, 0.0, -2.6702880859375e-05, 0.0, -0.0008536577224731445, -3.814697265625e-06, -1.71661376953125e-05, -2.0503786799963564e-05, -0.19945991039276123, 0.0, -0.015568733215332031, -0.6448945999145508, -0.005860328674316406, -7.43865966796875e-05, -1.33514404296875e-05, -0.08036613464355469, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -0.000847935676574707, -1.9073486328125e-06, -2.872943878173828e-05, -8.702239938429557e-06, -0.004558323882520199, -4.29153169534402e-06, -0.0002803802490234375, -0.0001697540283203125, -0.00011444091796875, -0.02398681640625, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -0.0007251501083374023, 0.0, -5.7220458984375e-06, -4.768360213347478e-06, -0.05940747261047363, 0.0, -0.0002765655517578125, -1.0257596969604492, -3.62396240234375e-05, -0.12033414840698242, -1.71661376953125e-05, -0.000278472900390625, -0.018091201782226562, -0.00072479248046875, -3.0517578125e-05, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -2.491474151611328e-05, 0.0, -1.1444091796875e-05, -2.3841855067985307e-07, -0.03727436065673828, 0.0, -9.5367431640625e-06, -0.4035224914550781, -7.62939453125e-06, -0.14225244522094727, -1.1444091796875e-05], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if (self.target.health < self.target.health - self.target.\n            calculate_attack()):\n            self.target.change_attack(<UNK>)\n        else:\n            self.target.change_attack(<UNK>)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 10, 169, 33, 82, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 56, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>"], "score": -7.069254848351932, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.6797380447387695, -0.016425132751464844, -0.03739643096923828, -0.0003509521484375, -0.00157928466796875, -0.000274658203125, -0.05208015441894531, 0.0, -0.000301361083984375, 0.0, -0.08869743347167969, 0.0, -7.748603820800781e-06, -1.4305104514278355e-06, -0.08641469478607178, 0.0, -0.0012836456298828125, -0.1394519805908203, -1.9073486328125e-06, -0.7280645370483398, -0.0010232925415039062, -0.646357536315918, -3.814697265625e-06, -0.3637857437133789, 0.0, -0.0027494430541992188, 0.0, -9.918212890625e-05, -8.583032467868179e-06, -0.21004676818847656, -0.8222846984863281, -0.00054931640625, -0.0055408477783203125, -1.9073486328125e-06, -0.0009317398071289062, 0.0, -4.398822784423828e-05, -4.6491513785440475e-06, -0.0054492950439453125, -0.3837709426879883, -0.00060272216796875, -0.03899955749511719, -1.9073486328125e-06, -0.0005645751953125, 0.0, -0.0002834796905517578, 0.0, -1.33514404296875e-05, -4.768370445162873e-07, -0.11530935764312744, 0.0, -0.0005340576171875, -0.9078073501586914, -1.9073486328125e-06, -0.10875701904296875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.00017750263214111328, -5.7220458984375e-06, -1.9073486328125e-05, -1.7881377516459906e-06, -0.7462707757949829, 0.0, -0.013240814208984375, -0.18955612182617188, -2.6702880859375e-05, -0.0010204315185546875, -5.7220458984375e-06, -0.0005283355712890625, -3.814697265625e-06, -0.0008203983306884766, 0.0, -7.62939453125e-06, -1.5497195136049413e-06, -0.03590118885040283, 0.0, -2.86102294921875e-05, -0.12838172912597656, -5.7220458984375e-06, -0.24205303192138672, -1.1444091796875e-05], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health < self.target - self.target:\n            self.target.change_attack(self.target.health)\n        else:\n            self.target.change_attack(<UNK>)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}, "left": {"_type": "Num", "n": 1}}]}], "test": {"_type": "Compare", "comparators": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 10, 169, 33, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 33, 82, 23, 115, "1", "<EOS>", 56, 16, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>"], "score": -7.3133636432497156, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.6797380447387695, -0.016425132751464844, -0.03739643096923828, -0.0003509521484375, -0.00157928466796875, -0.000274658203125, -0.05208015441894531, 0.0, -0.000301361083984375, 0.0, -0.08869743347167969, 0.0, -7.748603820800781e-06, -1.4305104514278355e-06, -0.08641469478607178, 0.0, -0.0012836456298828125, -0.1394519805908203, -1.9073486328125e-06, -0.7280645370483398, -0.0010232925415039062, -0.646357536315918, -3.814697265625e-06, -1.1883659362792969, 0.0, -2.6702880859375e-05, 0.0, -0.0008536577224731445, -3.814697265625e-06, -1.71661376953125e-05, -2.0503786799963564e-05, -0.19945991039276123, 0.0, -0.015568733215332031, -0.6448945999145508, -0.005860328674316406, -7.43865966796875e-05, -1.33514404296875e-05, -0.08036613464355469, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -0.000847935676574707, -1.9073486328125e-06, -2.872943878173828e-05, -8.702239938429557e-06, -0.004558323882520199, -4.29153169534402e-06, -0.0002803802490234375, -0.0001697540283203125, -0.00011444091796875, -0.02398681640625, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -0.0007251501083374023, 0.0, -5.7220458984375e-06, -4.768360213347478e-06, -0.05940747261047363, 0.0, -0.0002765655517578125, -1.0050506591796875, -0.009247779846191406, -0.32138538360595703, -1.52587890625e-05, -0.14212572574615479, 0.0, -0.02541828155517578, -0.02570819854736328, -0.0032606124877929688, -4.38690185546875e-05, -1.33514404296875e-05, -0.4223823547363281, 0.0, -0.0001392364501953125, -3.814697265625e-06, -0.0025453567504882812, 0.0, -0.00038909912109375, -7.510157047363464e-06, -0.0310136079788208, -2.503394853192731e-06, -0.00199127197265625, -0.0002384185791015625, -4.57763671875e-05, -0.02351665496826172, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -0.0005218982696533203, 0.0, -9.5367431640625e-06, -9.894321920000948e-06, -0.025092124938964844, 0.0, -6.29425048828125e-05, -0.09629249572753906, -1.1444091796875e-05, -0.20752334594726562, -1.1444091796875e-05], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if (self.target.health < self.target.health - self.target.\n            calculate_attack()):\n            self.target.change_attack(1 - self.target.calculate_attack())\n        else:\n            self.target.change_attack(<UNK>)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "BlessedChampion", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 10, 169, 33, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>"], "score": -7.926232071557479, "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.6797380447387695, -0.016425132751464844, -0.03739643096923828, -0.0003509521484375, -0.00157928466796875, -0.000274658203125, -0.05208015441894531, 0.0, -0.000301361083984375, 0.0, -0.08869743347167969, 0.0, -7.748603820800781e-06, -1.4305104514278355e-06, -0.08641469478607178, 0.0, -0.0012836456298828125, -0.1394519805908203, -1.9073486328125e-06, -0.7280645370483398, -0.0010232925415039062, -0.646357536315918, -3.814697265625e-06, -1.1883659362792969, 0.0, -2.6702880859375e-05, 0.0, -0.0008536577224731445, -3.814697265625e-06, -1.71661376953125e-05, -2.0503786799963564e-05, -0.19945991039276123, 0.0, -0.015568733215332031, -0.6448945999145508, -0.005860328674316406, -7.43865966796875e-05, -1.33514404296875e-05, -0.08036613464355469, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -0.000847935676574707, -1.9073486328125e-06, -2.872943878173828e-05, -8.702239938429557e-06, -0.004558323882520199, -4.29153169534402e-06, -0.0002803802490234375, -0.0001697540283203125, -0.00011444091796875, -0.02398681640625, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -0.0007251501083374023, 0.0, -5.7220458984375e-06, -4.768360213347478e-06, -0.05940747261047363, 0.0, -0.0002765655517578125, -1.8622150421142578, 0.0, -0.2692546844482422, 0.0, -0.18496322631835938, 0.0, -3.0517578125e-05, 0.0, -0.00014495849609375, -0.04808616638183594, -0.0001068115234375, -0.006015777587890625, -2.288818359375e-05, -0.0005626678466796875, -1.9073486328125e-06, -9.167194366455078e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -0.011961936950683594, 0.0, -1.9073486328125e-05, -0.24530982971191406, -7.62939453125e-06, -0.32817602157592773, -9.5367431640625e-06], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if (self.target.health < self.target.health - self.target.\n            calculate_attack()):\n            self.target.change_attack(self.target)\n        else:\n            self.target.change_attack(<UNK>)\n"}], "gold_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(DoubleAttack()))\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -4.077033706832239, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -0.990959644317627, -2.0265579223632812e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0003535747528076172, 0.0, -0.0007594823837280273, 0.0, -0.0016765594482421875, -1.9073486328125e-06, -7.62939453125e-06, -0.0019608736038208008, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.7569351196289062, -2.6702880859375e-05, -0.00018310546875, -3.814697265625e-06, -0.018332967534661293, -0.9155420064926147, -7.62939453125e-06, -0.0003223419189453125, -3.814697265625e-05, -0.005515098571777344, -0.001316070556640625, -0.00528717041015625, -0.00029420843929983675, -0.0017566680908203125, -4.38690185546875e-05, -1.9073486328125e-06, -0.004490375518798828, -0.00208282470703125, -1.9073486328125e-05, -0.0001049041748046875, -0.0752267837524414, -4.38690185546875e-05, -0.5971595048904419, -1.33514404296875e-05, -9.5367431640625e-06, -0.21249675750732422, -0.0006448030471801758, -0.0013484954833984375, -1.1444091796875e-05, -7.62939453125e-06, -0.0005954504013061523, -0.0006450414657592773, 0.0, -0.0009613037109375, -0.040368080139160156, -9.918212890625e-05, -0.35167184472084045, -9.5367431640625e-06, -0.006839752197265625, -9.5367431640625e-06, -0.004795074462890625, -7.748603820800781e-06, 0.0, -0.000102996826171875, 0.0, -1.3351438610698096e-05, 0.0, -7.62939453125e-06, -0.00032806396484375, -2.6702880859375e-05, -0.00023052703181747347, -1.1920928244535389e-07, -0.0007006361847743392, -1.1920928244535389e-07], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(3\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -4.236470971060655, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -1.1039643287658691, -3.576278118089249e-07, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005089044570922852, 0.0, -0.0013773441314697266, 0.0, -0.003204345703125, -1.9073486328125e-06, -5.7220458984375e-06, -0.0022393465042114258, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.7774581909179688, -3.4332275390625e-05, -0.000209808349609375, -3.814697265625e-06, -0.019698958843946457, -0.9205867052078247, -7.62939453125e-06, -0.0003070831298828125, -3.814697265625e-05, -0.005707740783691406, -0.0013580322265625, -0.0057315826416015625, -0.0002832411555573344, -0.001811981201171875, -4.38690185546875e-05, -1.9073486328125e-06, -0.004475116729736328, -0.0021266937255859375, -1.9073486328125e-05, -0.0001010894775390625, -0.07476615905761719, -4.38690185546875e-05, -0.5919955968856812, -1.33514404296875e-05, -9.5367431640625e-06, -0.2124795913696289, -0.0006314516067504883, -0.0013446807861328125, -1.1444091796875e-05, -5.7220458984375e-06, -0.0005325078964233398, -0.0006316900253295898, 0.0, -0.00092315673828125, -0.040846824645996094, -0.0001125335693359375, -0.3725774586200714, -7.62939453125e-06, -0.0071582794189453125, -9.5367431640625e-06, -0.0049991607666015625, -5.841255187988281e-06, 0.0, -0.000102996826171875, 0.0, -1.3232229321147315e-05, 0.0, -7.62939453125e-06, -0.000331878662109375, -2.6702880859375e-05, -0.00023100375256035477, -1.1920928244535389e-07, -0.000710881722625345, -1.1920928244535389e-07], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(3\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -4.28998633975219, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -1.2483649253845215, -7.986990567587782e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0003064870834350586, 0.0, -0.0008814334869384766, 0.0, -0.003757476806640625, -1.9073486328125e-06, -5.7220458984375e-06, -0.0016747713088989258, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.6876850128173828, -2.288818359375e-05, -0.0001811981201171875, -3.814697265625e-06, -0.019525909796357155, -0.9441760778427124, -7.62939453125e-06, -0.0003185272216796875, -3.62396240234375e-05, -0.006351470947265625, -0.0013866424560546875, -0.00551605224609375, -0.0002814530162140727, -0.0018634796142578125, -4.1961669921875e-05, -1.9073486328125e-06, -0.004477977752685547, -0.0021076202392578125, -1.9073486328125e-05, -0.0001010894775390625, -0.07491111755371094, -4.38690185546875e-05, -0.6015632152557373, -1.33514404296875e-05, -9.5367431640625e-06, -0.21639537811279297, -0.0006982088088989258, -0.0014057159423828125, -1.1444091796875e-05, -7.62939453125e-06, -0.0006718635559082031, -0.0006717443466186523, 0.0, -0.0010280609130859375, -0.04017925262451172, -8.20159912109375e-05, -0.3356405794620514, -9.5367431640625e-06, -0.0068187713623046875, -9.5367431640625e-06, -0.004665374755859375, -7.62939453125e-06, 0.0, -0.0001049041748046875, 0.0, -1.3351438610698096e-05, 0.0, -7.62939453125e-06, -0.000324249267578125, -2.6702880859375e-05, -0.0002294543810421601, -1.1920928244535389e-07, -0.0006942028994672, -1.1920928244535389e-07], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(3\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -4.358733477268046, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -0.990959644317627, -2.0265579223632812e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0003535747528076172, 0.0, -0.0007594823837280273, 0.0, -0.0016765594482421875, -1.9073486328125e-06, -7.62939453125e-06, -0.0019608736038208008, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.7569351196289062, -2.6702880859375e-05, -0.00018310546875, -3.814697265625e-06, -0.018332967534661293, -0.9155420064926147, -7.62939453125e-06, -0.0003223419189453125, -3.814697265625e-05, -0.005515098571777344, -0.001316070556640625, -0.00528717041015625, -0.00029420843929983675, -0.0017566680908203125, -4.38690185546875e-05, -1.9073486328125e-06, -0.004490375518798828, -0.00208282470703125, -1.9073486328125e-05, -0.0001049041748046875, -0.0752267837524414, -4.38690185546875e-05, -0.9904824495315552, -1.52587890625e-05, -1.33514404296875e-05, -0.020488739013671875, -0.0005346536636352539, -0.0009708404541015625, -1.9073486328125e-05, -7.62939453125e-06, -0.0008380413055419922, -0.0012420415878295898, 0.0, -0.001720428466796875, -0.04363536834716797, -7.2479248046875e-05, -0.42831793427467346, -1.33514404296875e-05, -0.0062847137451171875, -7.62939453125e-06, -0.0047092437744140625, -7.62939453125e-06, 0.0, -0.000102996826171875, 0.0, -1.3232229321147315e-05, 0.0, -7.62939453125e-06, -0.0003223419189453125, -2.86102294921875e-05, -0.0002414917980786413, -1.1920928244535389e-07, -0.0007065929239615798, -1.1920928244535389e-07], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -4.505745677692786, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -1.1039643287658691, -3.576278118089249e-07, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005089044570922852, 0.0, -0.0013773441314697266, 0.0, -0.003204345703125, -1.9073486328125e-06, -5.7220458984375e-06, -0.0022393465042114258, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.7774581909179688, -3.4332275390625e-05, -0.000209808349609375, -3.814697265625e-06, -0.019698958843946457, -0.9205867052078247, -7.62939453125e-06, -0.0003070831298828125, -3.814697265625e-05, -0.005707740783691406, -0.0013580322265625, -0.0057315826416015625, -0.0002832411555573344, -0.001811981201171875, -4.38690185546875e-05, -1.9073486328125e-06, -0.004475116729736328, -0.0021266937255859375, -1.9073486328125e-05, -0.0001010894775390625, -0.07476615905761719, -4.38690185546875e-05, -0.9986081123352051, -1.52587890625e-05, -1.33514404296875e-05, -0.019208908081054688, -0.0005117654800415039, -0.0009479522705078125, -1.9073486328125e-05, -7.62939453125e-06, -0.0008304119110107422, -0.0012439489364624023, 0.0, -0.0016937255859375, -0.043282508850097656, -6.866455078125e-05, -0.42593517899513245, -1.33514404296875e-05, -0.0063152313232421875, -7.62939453125e-06, -0.004833221435546875, -7.62939453125e-06, 0.0, -0.000102996826171875, 0.0, -1.3232229321147315e-05, 0.0, -7.62939453125e-06, -0.0003223419189453125, -2.86102294921875e-05, -0.00024173017300199717, -1.1920928244535389e-07, -0.0007149322773329914, -1.1920928244535389e-07], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -4.581434089913941, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -1.2483649253845215, -7.986990567587782e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0003064870834350586, 0.0, -0.0008814334869384766, 0.0, -0.003757476806640625, -1.9073486328125e-06, -5.7220458984375e-06, -0.0016747713088989258, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.6876850128173828, -2.288818359375e-05, -0.0001811981201171875, -3.814697265625e-06, -0.019525909796357155, -0.9441760778427124, -7.62939453125e-06, -0.0003185272216796875, -3.62396240234375e-05, -0.006351470947265625, -0.0013866424560546875, -0.00551605224609375, -0.0002814530162140727, -0.0018634796142578125, -4.1961669921875e-05, -1.9073486328125e-06, -0.004477977752685547, -0.0021076202392578125, -1.9073486328125e-05, -0.0001010894775390625, -0.07491111755371094, -4.38690185546875e-05, -0.9859085083007812, -1.52587890625e-05, -1.33514404296875e-05, -0.022777557373046875, -0.0005823373794555664, -0.001010894775390625, -1.9073486328125e-05, -7.62939453125e-06, -0.0008399486541748047, -0.0012496709823608398, 0.0, -0.0017490386962890625, -0.04417610168457031, -7.43865966796875e-05, -0.43168047070503235, -1.33514404296875e-05, -0.0064792633056640625, -7.62939453125e-06, -0.00470733642578125, -7.62939453125e-06, 0.0, -0.000102996826171875, 0.0, -1.3232229321147315e-05, 0.0, -7.62939453125e-06, -0.0003204345703125, -2.86102294921875e-05, -0.00024113425752148032, -1.1920928244535389e-07, -0.0007036145543679595, -1.1920928244535389e-07], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "GiveAura", "hole1": {"_type": "Name", "id": "AuraUntil"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 0}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}, {"_type": "Template19", "hole0": "TurnEnded"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "Aura", "<EOS>", 21, 110, "Aura", "Until", "<EOS>", 171, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "<UNK>", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>", 35, 86, 21, 110, "Player", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -5.529261514059037, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -0.990959644317627, -2.0265579223632812e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0003535747528076172, 0.0, -0.0007594823837280273, 0.0, -0.0016765594482421875, -1.9073486328125e-06, -7.62939453125e-06, -0.0019608736038208008, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2889480590820312, -0.010348320007324219, -0.16994968056678772, -0.1421360969543457, -5.936622619628906e-05, -8.392333984375e-05, -1.71661376953125e-05, -0.02914905548095703, -0.0020331144332885742, 0.0, -0.16924476623535156, -0.5439958572387695, -0.0002460479736328125, -1.33514404296875e-05, 0.0, -0.0310281440615654, -0.0003745555877685547, -2.861022494471399e-06, -2.86102294921875e-05, -0.25311279296875, -0.0002079010009765625, -7.43865966796875e-05, -5.53131103515625e-05, -2.86102294921875e-05, -0.31041425466537476, -1.0371208190917969e-05, -0.002101898193359375, -0.09525680541992188, -2.6702880859375e-05, -1.9073486328125e-06, -0.002106188330799341, -0.0010883808135986328, 0.0, -0.0061969757080078125, -2.6702880859375e-05, -1.9073486328125e-06, -0.002657294040545821, 0.0, -0.005862236022949219, -9.5367431640625e-06, -0.05519675835967064, -0.0037016584537923336, -0.0019741058349609375, -0.0020160675048828125, -3.814697265625e-06, -0.025961752980947495, -0.0009747743024490774, -1.9073486328125e-06, -0.0009174346923828125, -0.7888784408569336, -4.00543212890625e-05, -1.52587890625e-05, -0.1961956024169922, -2.86102294921875e-05, 0.0, -0.022863388061523438, -5.7220458984375e-06, -2.6702880859375e-05, -0.00766146183013916, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0012364387512207031, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12846970558166504, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.13361656665802002, -0.0008144378662109375, -1.537799835205078e-05, -0.018230557441711426, 0.0, -2.9683109460165724e-05, 0.0, -7.62939453125e-06, -0.0024814605712890625, -5.7220458984375e-06, -3.218629353796132e-05, -1.1920928244535389e-07, -0.0002665426000021398, 0.0], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(-0), CardSelector(condition=IsSpell()), TurnEnded())\n            ), PlayerSelector(players=EnemyPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "GiveAura", "hole1": {"_type": "Name", "id": "AuraUntil"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 0}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}, {"_type": "Template19", "hole0": "TurnEnded"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template15", "hole0": "Attack<UNK>Than<UNK>EqualTo", "hole1": 2}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template19", "hole0": "RandomPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "Aura", "<EOS>", 21, 110, "Aura", "Until", "<EOS>", 171, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "<UNK>", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 47, 134, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", "2", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -5.932855474171646, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -0.990959644317627, -2.0265579223632812e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0003535747528076172, 0.0, -0.0007594823837280273, 0.0, -0.0016765594482421875, -1.9073486328125e-06, -7.62939453125e-06, -0.0019608736038208008, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2889480590820312, -0.010348320007324219, -0.16994968056678772, -0.1421360969543457, -5.936622619628906e-05, -8.392333984375e-05, -1.71661376953125e-05, -0.02914905548095703, -0.0020331144332885742, 0.0, -0.16924476623535156, -0.5439958572387695, -0.0002460479736328125, -1.33514404296875e-05, 0.0, -0.0310281440615654, -0.0003745555877685547, -2.861022494471399e-06, -2.86102294921875e-05, -0.25311279296875, -0.0002079010009765625, -7.43865966796875e-05, -5.53131103515625e-05, -2.86102294921875e-05, -0.31041425466537476, -1.0371208190917969e-05, -0.002101898193359375, -0.09525680541992188, -2.6702880859375e-05, -1.9073486328125e-06, -0.002106188330799341, -0.0010883808135986328, 0.0, -0.0061969757080078125, -2.6702880859375e-05, -1.9073486328125e-06, -0.002657294040545821, 0.0, -0.005862236022949219, -9.5367431640625e-06, -0.05519675835967064, -0.0037016584537923336, -0.0019741058349609375, -0.0020160675048828125, -3.814697265625e-06, -0.025961752980947495, -0.0009747743024490774, -1.9073486328125e-06, -0.0009174346923828125, -0.6078672409057617, -2.47955322265625e-05, -1.9073486328125e-06, -0.0016689300537109375, -2.288818359375e-05, -1.9073486328125e-06, -0.1982431411743164, -0.02421855926513672, -6.4849853515625e-05, -0.040771760046482086, -0.08382129669189453, -0.38521742820739746, -0.007492184638977051, -0.03465676307678223, -0.19610810279846191, -0.0012531280517578125, -0.03677431493997574, -5.924701690673828e-05, -0.0014801025390625, -0.0005035400390625, -0.06976425647735596, -0.0001316070556640625, -0.000705718994140625, -0.000278472900390625, -1.33514404296875e-05, -0.00921785831451416, -0.0009428262710571289, -6.556508742505684e-05, -0.002888202667236328, 0.0, -2.121924626408145e-05, 0.0, -9.5367431640625e-06, -0.0002040863037109375, -1.1444091796875e-05, -5.7934954384109005e-05, -2.3841855067985307e-07, -0.0002888230956159532, 0.0], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(-0), CardSelector(condition=IsSpell()), TurnEnded())\n            ), MinionSelector(Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(),\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "GiveAura", "hole1": {"_type": "Name", "id": "AuraUntil"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 0}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}, {"_type": "Template19", "hole0": "TurnEnded"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template15", "hole0": "Attack<UNK>Than<UNK>EqualTo", "hole1": 2}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template19", "hole0": "RandomPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "Aura", "<EOS>", 21, 110, "Aura", "Until", "<EOS>", 171, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "<UNK>", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 47, 134, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", "2", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -6.144367028338962, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -1.1039643287658691, -3.576278118089249e-07, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005089044570922852, 0.0, -0.0013773441314697266, 0.0, -0.003204345703125, -1.9073486328125e-06, -5.7220458984375e-06, -0.0022393465042114258, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.3889846801757812, -0.01604461669921875, -0.17535844445228577, -0.10870122909545898, -6.687641143798828e-05, -0.0001087188720703125, -1.71661376953125e-05, -0.030097007751464844, -0.0020226240158081055, 0.0, -0.16745376586914062, -0.5556545257568359, -0.0002498626708984375, -1.33514404296875e-05, 0.0, -0.028099171817302704, -0.0003631114959716797, -2.741813204920618e-06, -2.6702880859375e-05, -0.2586088180541992, -0.00020599365234375, -7.43865966796875e-05, -5.340576171875e-05, -2.86102294921875e-05, -0.32074061036109924, -1.0371208190917969e-05, -0.00215911865234375, -0.09485626220703125, -2.6702880859375e-05, -1.9073486328125e-06, -0.0020627963822335005, -0.0010807514190673828, 0.0, -0.00608062744140625, -2.6702880859375e-05, -1.9073486328125e-06, -0.002632260089740157, 0.0, -0.005753517150878906, -9.5367431640625e-06, -0.054915901273489, -0.0036903314758092165, -0.0019664764404296875, -0.0019702911376953125, -3.814697265625e-06, -0.025913354009389877, -0.0009655951871536672, -1.9073486328125e-06, -0.0009613037109375, -0.6013832092285156, -2.47955322265625e-05, -1.9073486328125e-06, -0.001674652099609375, -2.288818359375e-05, -1.9073486328125e-06, -0.19846153259277344, -0.02426910400390625, -6.4849853515625e-05, -0.04125741869211197, -0.08349132537841797, -0.38529276847839355, -0.007423520088195801, -0.034636735916137695, -0.19824600219726562, -0.0012369155883789062, -0.03688527271151543, -5.924701690673828e-05, -0.001483917236328125, -0.000499725341796875, -0.0691291093826294, -0.0001316070556640625, -0.000701904296875, -0.0002803802490234375, -1.33514404296875e-05, -0.009211182594299316, -0.0009409189224243164, -6.556508742505684e-05, -0.0028786659240722656, 0.0, -2.121924626408145e-05, 0.0, -9.5367431640625e-06, -0.0002040863037109375, -1.1444091796875e-05, -5.7934954384109005e-05, -2.3841855067985307e-07, -0.00028894227580167353, 0.0], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(-0), CardSelector(condition=IsSpell()), TurnEnded())\n            ), MinionSelector(Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(),\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "GiveAura", "hole1": {"_type": "Name", "id": "AuraUntil"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 0}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}, {"_type": "Template19", "hole0": "TurnEnded"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template15", "hole0": "Attack<UNK>Than<UNK>EqualTo", "hole1": 2}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template19", "hole0": "RandomPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "Aura", "<EOS>", 21, 110, "Aura", "Until", "<EOS>", 171, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "<UNK>", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 47, 134, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", "2", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -6.145281687801997, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -1.2483649253845215, -7.986990567587782e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0003064870834350586, 0.0, -0.0008814334869384766, 0.0, -0.003757476806640625, -1.9073486328125e-06, -5.7220458984375e-06, -0.0016747713088989258, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.3405418395996094, -0.010369300842285156, -0.173069030046463, -0.1312938928604126, -5.745887756347656e-05, -7.43865966796875e-05, -1.71661376953125e-05, -0.026070475578308105, -0.0020465850830078125, 0.0, -0.15793418884277344, -0.4980583190917969, -0.000270843505859375, -1.33514404296875e-05, 0.0, -0.026408305391669273, -0.0003669261932373047, -2.861022494471399e-06, -2.6702880859375e-05, -0.2361469268798828, -0.000209808349609375, -7.43865966796875e-05, -5.53131103515625e-05, -2.86102294921875e-05, -0.3122437596321106, -8.463859558105469e-06, -0.0020389556884765625, -0.08519744873046875, -2.6702880859375e-05, -1.9073486328125e-06, -0.002047894988209009, -0.0010712146759033203, 0.0, -0.006367683410644531, -2.6702880859375e-05, -1.9073486328125e-06, -0.002656221156939864, 0.0, -0.005822181701660156, -9.5367431640625e-06, -0.05476963147521019, -0.0036810352467000484, -0.0019893646240234375, -0.002063751220703125, -3.814697265625e-06, -0.025525208562612534, -0.0009632110595703125, -1.9073486328125e-06, -0.000888824462890625, -0.6091976165771484, -2.47955322265625e-05, -1.9073486328125e-06, -0.0016651153564453125, -2.288818359375e-05, -1.9073486328125e-06, -0.19945907592773438, -0.024245262145996094, -6.4849853515625e-05, -0.03998497873544693, -0.08439445495605469, -0.38493800163269043, -0.007576107978820801, -0.03469586372375488, -0.19364047050476074, -0.0012722015380859375, -0.03663463145494461, -6.115436553955078e-05, -0.00147247314453125, -0.0005054473876953125, -0.07038223743438721, -0.0001316070556640625, -0.0007114410400390625, -0.000278472900390625, -1.33514404296875e-05, -0.009218692779541016, -0.0009466409683227539, -6.747243605786934e-05, -0.002899646759033203, 0.0, -2.1338453734642826e-05, 0.0, -9.5367431640625e-06, -0.0002040863037109375, -1.1444091796875e-05, -5.7934954384109005e-05, -2.3841855067985307e-07, -0.00028858473524451256, 0.0], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(-0), CardSelector(condition=IsSpell()), TurnEnded())\n            ), MinionSelector(Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(),\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "GiveAura"}, "args": [{"_type": "Template18", "hole0": "AuraUntil", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}, {"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template15", "hole0": "AttackGreaterThan", "hole1": 6}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}]}]}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "Aura", "<EOS>", 169, 48, 141, "Aura", "Until", "<EOS>", 172, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 47, 134, "Attack", "Greater", "Than", "<EOS>", "6", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -6.152150656298311, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -0.990959644317627, -2.0265579223632812e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0003535747528076172, 0.0, -0.0007594823837280273, 0.0, -0.0016765594482421875, -1.9073486328125e-06, -7.62939453125e-06, -0.0019608736038208008, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.7569351196289062, -2.6702880859375e-05, -0.00018310546875, -3.814697265625e-06, -0.018332967534661293, -0.5333255529403687, -0.0013735294342041016, -1.1444091796875e-05, -0.20958518981933594, -0.024232864379882812, -0.02744436264038086, -0.05446743965148926, -2.300739288330078e-05, -0.053778648376464844, -0.0005502700805664062, -0.0002803802490234375, -9.5367431640625e-06, 0.0, -0.012248585000634193, -0.00015270708536263555, -9.894368304230738e-06, -1.33514404296875e-05, -0.03680896759033203, -0.0001316070556640625, -0.00138092041015625, -2.288818359375e-05, -1.1444091796875e-05, -0.08602416515350342, -3.814697265625e-06, -0.0001659393310546875, -0.0012664794921875, -0.0001506805419921875, -7.62939453125e-06, -0.0014258213341236115, -0.012563824653625488, 0.0, -0.008625984191894531, -9.5367431640625e-06, -1.9073486328125e-06, -0.006543396972119808, -2.0265579223632812e-06, -0.060835838317871094, -9.5367431640625e-06, -0.03425776585936546, -0.006023239344358444, -0.0023822784423828125, -0.4590272903442383, -7.62939453125e-05, -0.5989232063293457, -0.0015823841094970703, -1.9073486328125e-06, -0.09061813354492188, -0.04378223419189453, -1.52587890625e-05, 0.0, -0.2631262540817261, -0.0005855560302734375, 0.0, -0.10822391510009766, -0.02776622772216797, -1.33514404296875e-05, -0.20507852733135223, -0.04826843738555908, -0.001408696174621582, -0.029349327087402344, -0.4590723514556885, -0.0007630586624145508, -0.0006256103515625, -1.52587890625e-05, -0.1039276123046875, -4.38690185546875e-05, -0.0002288818359375, -0.054645538330078125, -1.9073486328125e-06, -0.6322568655014038, -1.52587890625e-05, 0.0, -8.392333984375e-05, 0.0, -1.3947477782494389e-05, 0.0, -5.7220458984375e-06, -0.0003223419189453125, -5.7220458984375e-06, -5.173616227693856e-05, -1.1920928244535389e-07, -0.0002249357057735324, 0.0], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(GiveAura([AuraUntil(\n            ManaChange(-3), CardSelector(condition=IsSpell()), TurnEnded(),\n            MinionSelector(AttackGreaterThan(6), EnemyPlayer()))]),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "GiveAura"}, "args": [{"_type": "Template18", "hole0": "AuraUntil", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}, {"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template15", "hole0": "AttackGreaterThan", "hole1": 6}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}]}]}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "Aura", "<EOS>", 169, 48, 141, "Aura", "Until", "<EOS>", 172, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 47, 134, "Attack", "Greater", "Than", "<EOS>", "6", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -6.285054257239317, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -1.1039643287658691, -3.576278118089249e-07, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005089044570922852, 0.0, -0.0013773441314697266, 0.0, -0.003204345703125, -1.9073486328125e-06, -5.7220458984375e-06, -0.0022393465042114258, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.7774581909179688, -3.4332275390625e-05, -0.000209808349609375, -3.814697265625e-06, -0.019698958843946457, -0.5304023027420044, -0.0012665987014770508, -1.1444091796875e-05, -0.21593952178955078, -0.025148391723632812, -0.026909351348876953, -0.060279130935668945, -2.300739288330078e-05, -0.05523490905761719, -0.0005292892456054688, -0.00025653839111328125, -9.5367431640625e-06, 0.0, -0.01202604454010725, -0.000156402587890625, -9.894368304230738e-06, -1.33514404296875e-05, -0.038451194763183594, -0.000133514404296875, -0.001399993896484375, -2.288818359375e-05, -1.1444091796875e-05, -0.0861489474773407, -3.814697265625e-06, -0.0001659393310546875, -0.00127410888671875, -0.000148773193359375, -7.62939453125e-06, -0.0014307097299024463, -0.0124131441116333, 0.0, -0.008812904357910156, -9.5367431640625e-06, -1.9073486328125e-06, -0.006547330878674984, -2.0265579223632812e-06, -0.06157875061035156, -9.5367431640625e-06, -0.0345454178750515, -0.006085346452891827, -0.00238800048828125, -0.45415401458740234, -7.62939453125e-05, -0.6006509065628052, -0.0015766620635986328, -1.9073486328125e-06, -0.09077930450439453, -0.04439067840576172, -1.52587890625e-05, 0.0, -0.26406657695770264, -0.0005893707275390625, 0.0, -0.11055660247802734, -0.027814865112304688, -1.33514404296875e-05, -0.20489715039730072, -0.04835522174835205, -0.001412510871887207, -0.02936267852783203, -0.4589405059814453, -0.0007649660110473633, -0.0006275177001953125, -1.52587890625e-05, -0.10390186309814453, -4.38690185546875e-05, -0.0002288818359375, -0.053000450134277344, -1.9073486328125e-06, -0.6149429082870483, -1.52587890625e-05, 0.0, -8.392333984375e-05, 0.0, -1.3947477782494389e-05, 0.0, -5.7220458984375e-06, -0.0003223419189453125, -5.7220458984375e-06, -5.173616227693856e-05, -1.1920928244535389e-07, -0.0002249357057735324, 0.0], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(GiveAura([AuraUntil(\n            ManaChange(-3), CardSelector(condition=IsSpell()), TurnEnded(),\n            MinionSelector(AttackGreaterThan(6), EnemyPlayer()))]),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "GiveAura"}, "args": [{"_type": "Template18", "hole0": "AuraUntil", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}, {"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template15", "hole0": "AttackGreaterThan", "hole1": 6}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}]}]}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "Aura", "<EOS>", 169, 48, 141, "Aura", "Until", "<EOS>", 172, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 47, 134, "Attack", "Greater", "Than", "<EOS>", "6", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -6.328196052879086, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -1.2483649253845215, -7.986990567587782e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0003064870834350586, 0.0, -0.0008814334869384766, 0.0, -0.003757476806640625, -1.9073486328125e-06, -5.7220458984375e-06, -0.0016747713088989258, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.6876850128173828, -2.288818359375e-05, -0.0001811981201171875, -3.814697265625e-06, -0.019525909796357155, -0.5130037069320679, -0.0014805793762207031, -1.1444091796875e-05, -0.2063274383544922, -0.024435997009277344, -0.02643728256225586, -0.05705094337463379, -2.300739288330078e-05, -0.053809165954589844, -0.0005521774291992188, -0.0002651214599609375, -9.5367431640625e-06, 0.0, -0.013621550984680653, -0.00015294550394173712, -9.894368304230738e-06, -1.33514404296875e-05, -0.037749290466308594, -0.0001316070556640625, -0.001399993896484375, -2.288818359375e-05, -1.1444091796875e-05, -0.08573635667562485, -3.814697265625e-06, -0.000164031982421875, -0.001262664794921875, -0.000156402587890625, -9.5367431640625e-06, -0.001429754076525569, -0.012847065925598145, 0.0, -0.008521080017089844, -9.5367431640625e-06, -1.9073486328125e-06, -0.0065138330683112144, -2.0265579223632812e-06, -0.06064891815185547, -9.5367431640625e-06, -0.03406548127532005, -0.005959342699497938, -0.0023822784423828125, -0.4560880661010742, -7.62939453125e-05, -0.5966566801071167, -0.001585245132446289, -1.9073486328125e-06, -0.09006977081298828, -0.04420757293701172, -1.52587890625e-05, 0.0, -0.2694528102874756, -0.0005855560302734375, 0.0, -0.1071929931640625, -0.02789783477783203, -1.33514404296875e-05, -0.20479704439640045, -0.04817211627960205, -0.0014039278030395508, -0.029432296752929688, -0.4588496685028076, -0.000760197639465332, -0.0006237030029296875, -1.52587890625e-05, -0.10370063781738281, -4.38690185546875e-05, -0.0002307891845703125, -0.0570068359375, -1.9073486328125e-06, -0.6352933645248413, -1.52587890625e-05, 0.0, -8.392333984375e-05, 0.0, -1.3947477782494389e-05, 0.0, -5.7220458984375e-06, -0.0003223419189453125, -5.7220458984375e-06, -5.173616227693856e-05, -1.1920928244535389e-07, -0.00022481651103589684, 0.0], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(GiveAura([AuraUntil(\n            ManaChange(-3), CardSelector(condition=IsSpell()), TurnEnded(),\n            MinionSelector(AttackGreaterThan(6), EnemyPlayer()))]),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "GiveAura"}, "args": [{"_type": "Template18", "hole0": "AuraUntil", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}, {"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template15", "hole0": "AttackGreaterThan", "hole1": 6}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}]}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "Aura", "<EOS>", 169, 48, 141, "Aura", "Until", "<EOS>", 172, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 47, 134, "Attack", "Greater", "Than", "<EOS>", "6", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -6.397629165152232, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -0.990959644317627, -2.0265579223632812e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0003535747528076172, 0.0, -0.0007594823837280273, 0.0, -0.0016765594482421875, -1.9073486328125e-06, -7.62939453125e-06, -0.0019608736038208008, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.7569351196289062, -2.6702880859375e-05, -0.00018310546875, -3.814697265625e-06, -0.018332967534661293, -0.5333255529403687, -0.0013735294342041016, -1.1444091796875e-05, -0.20958518981933594, -0.024232864379882812, -0.02744436264038086, -0.05446743965148926, -2.300739288330078e-05, -0.053778648376464844, -0.0005502700805664062, -0.0002803802490234375, -9.5367431640625e-06, 0.0, -0.012248585000634193, -0.00015270708536263555, -9.894368304230738e-06, -1.33514404296875e-05, -0.03680896759033203, -0.0001316070556640625, -0.00138092041015625, -2.288818359375e-05, -1.1444091796875e-05, -0.08602416515350342, -3.814697265625e-06, -0.0001659393310546875, -0.0012664794921875, -0.0001506805419921875, -7.62939453125e-06, -0.0014258213341236115, -0.012563824653625488, 0.0, -0.008625984191894531, -9.5367431640625e-06, -1.9073486328125e-06, -0.006543396972119808, -2.0265579223632812e-06, -0.060835838317871094, -9.5367431640625e-06, -0.03425776585936546, -0.006023239344358444, -0.0023822784423828125, -0.4590272903442383, -7.62939453125e-05, -0.5989232063293457, -0.0015823841094970703, -1.9073486328125e-06, -0.09061813354492188, -0.04378223419189453, -1.52587890625e-05, 0.0, -0.2631262540817261, -0.0005855560302734375, 0.0, -0.10822391510009766, -0.02776622772216797, -1.33514404296875e-05, -0.20507852733135223, -0.04826843738555908, -0.001408696174621582, -0.029349327087402344, -0.4590723514556885, -0.0007630586624145508, -0.0006256103515625, -1.52587890625e-05, -0.1039276123046875, -4.38690185546875e-05, -0.0002288818359375, -0.054645538330078125, -1.9073486328125e-06, -0.8776954412460327, -5.7220458984375e-06, 0.0, -0.0001125335693359375, 0.0, -1.2159336620243266e-05, 0.0, -5.7220458984375e-06, -0.0003299713134765625, -5.7220458984375e-06, -5.5312302720267326e-05, -1.1920928244535389e-07, -0.00023637793492525816, 0.0], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(GiveAura([AuraUntil(\n            ManaChange(-3), CardSelector(condition=IsSpell()), TurnEnded(),\n            MinionSelector(AttackGreaterThan(6), EnemyPlayer()))]),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "GiveAura"}, "args": [{"_type": "Template18", "hole0": "AuraUntil", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}, {"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template15", "hole0": "AttackGreaterThan", "hole1": 2}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}]}]}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}], "hole0": "CabalShadow", "hole4": "player"}, "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "Aura", "<EOS>", 169, 48, 141, "Aura", "Until", "<EOS>", 172, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 47, 134, "Attack", "Greater", "Than", "<EOS>", "2", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -6.440272475397926, "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -0.990959644317627, -2.0265579223632812e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0003535747528076172, 0.0, -0.0007594823837280273, 0.0, -0.0016765594482421875, -1.9073486328125e-06, -7.62939453125e-06, -0.0019608736038208008, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.7569351196289062, -2.6702880859375e-05, -0.00018310546875, -3.814697265625e-06, -0.018332967534661293, -0.5333255529403687, -0.0013735294342041016, -1.1444091796875e-05, -0.20958518981933594, -0.024232864379882812, -0.02744436264038086, -0.05446743965148926, -2.300739288330078e-05, -0.053778648376464844, -0.0005502700805664062, -0.0002803802490234375, -9.5367431640625e-06, 0.0, -0.012248585000634193, -0.00015270708536263555, -9.894368304230738e-06, -1.33514404296875e-05, -0.03680896759033203, -0.0001316070556640625, -0.00138092041015625, -2.288818359375e-05, -1.1444091796875e-05, -0.08602416515350342, -3.814697265625e-06, -0.0001659393310546875, -0.0012664794921875, -0.0001506805419921875, -7.62939453125e-06, -0.0014258213341236115, -0.012563824653625488, 0.0, -0.008625984191894531, -9.5367431640625e-06, -1.9073486328125e-06, -0.006543396972119808, -2.0265579223632812e-06, -0.060835838317871094, -9.5367431640625e-06, -0.03425776585936546, -0.006023239344358444, -0.0023822784423828125, -0.4590272903442383, -7.62939453125e-05, -0.5989232063293457, -0.0015823841094970703, -1.9073486328125e-06, -0.09061813354492188, -0.04378223419189453, -1.52587890625e-05, 0.0, -0.2631262540817261, -0.0005855560302734375, 0.0, -0.10822391510009766, -0.02776622772216797, -1.33514404296875e-05, -0.20507852733135223, -0.04826843738555908, -0.001408696174621582, -0.029349327087402344, -1.034799337387085, -0.0008203983306884766, -0.004643440246582031, -3.814697265625e-05, -0.11273574829101562, -7.43865966796875e-05, -0.0002803802490234375, -0.00887298583984375, -1.9073486328125e-06, -0.37743330001831055, -1.52587890625e-05, 0.0, -8.20159912109375e-05, 0.0, -1.3828268492943607e-05, 0.0, -5.7220458984375e-06, -0.000324249267578125, -5.7220458984375e-06, -5.221298124524765e-05, -1.1920928244535389e-07, -0.00022731951321475208, 0.0], "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(GiveAura([AuraUntil(\n            ManaChange(-3), CardSelector(condition=IsSpell()), TurnEnded(),\n            MinionSelector(AttackGreaterThan(2), EnemyPlayer()))]),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}], "gold_code": "class CabalShadowPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Steal(), MinionSelector(\n            AttackLessThanOrEqualTo(2), players=EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "attr": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -3.6393499507819342, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -0.2646608352661133, 0.0, -0.0001010894775390625, 0.0, -0.02174675464630127, -1.52587890625e-05, -0.25718414783477783, -3.814697265625e-06, -0.44089314341545105, 0.0, -0.0002270928816869855, 0.0, -0.5131063461303711, -0.000125885009765625, -0.006815910339355469, 0.0, -0.26177120208740234, 0.0, -0.00040435791015625, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.479367733001709, -1.9073486328125e-06, -8.20159912109375e-05, -0.002490997314453125, -7.62939453125e-06, -0.8447768092155457, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions.minions)\n        self.target.change_attack(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "attr": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -3.7536233796988654, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -0.2646608352661133, 0.0, -0.0001010894775390625, 0.0, -0.02174675464630127, -1.52587890625e-05, -0.25718414783477783, -3.814697265625e-06, -0.44089314341545105, 0.0, -0.0002270928816869855, 0.0, -0.5131063461303711, -0.000125885009765625, -0.006815910339355469, 0.0, -0.26177120208740234, 0.0, -0.00040435791015625, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.479367733001709, -1.9073486328125e-06, -8.20159912109375e-05, -0.002490997314453125, -7.62939453125e-06, -0.9590502381324768, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions.minions)\n        self.target.change_attack(1)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "attr": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -4.01533146046404, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -0.2646608352661133, 0.0, -0.0001010894775390625, 0.0, -0.02174675464630127, -1.52587890625e-05, -0.25718414783477783, -3.814697265625e-06, -0.44089314341545105, 0.0, -0.0002270928816869855, 0.0, -0.5131063461303711, -0.000125885009765625, -0.006815910339355469, 0.0, -0.26177120208740234, 0.0, -0.00040435791015625, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -1.4296832084655762, 0.0, -0.0008869171142578125, -0.14400005340576172, -0.0016918182373046875, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00027692317962646484, -2.2649765014648438e-06, -0.004692196846008301, -1.728534698486328e-05, -1.33514404296875e-05, -0.0007038116455078125, -1.9073486328125e-06, -0.12027370929718018, -2.622600959512056e-06, -3.0517578125e-05, -5.14984130859375e-05, -0.00035953521728515625, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions.minions)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "attr": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 3}]}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "3", "<EOS>"], "score": -4.548586679926984, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -0.2646608352661133, 0.0, -0.0001010894775390625, 0.0, -0.02174675464630127, -1.52587890625e-05, -0.25718414783477783, -3.814697265625e-06, -0.44089314341545105, 0.0, -0.0002270928816869855, 0.0, -0.5131063461303711, -0.000125885009765625, -0.006815910339355469, 0.0, -0.26177120208740234, 0.0, -0.00040435791015625, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.479367733001709, -1.9073486328125e-06, -8.20159912109375e-05, -0.002490997314453125, -7.62939453125e-06, -1.7540135383605957, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions.minions)\n        self.target.change_attack(3)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -4.556854232319665, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -1.4604158401489258, 0.0, -0.0043487548828125, -1.9073486328125e-05, -0.04392814636230469, -3.814697265625e-06, -0.00010621539695421234, 0.0, -1.313593864440918, -0.0001430511474609375, -0.0038557052612304688, 0.0, -0.6403398513793945, 0.0, -0.0002002716064453125, -3.814697265625e-06, -4.57763671875e-05, 0.0, -0.31987321376800537, 0.0, -0.0003814697265625, -0.1050567626953125, -0.00249481201171875, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0003418922424316406, -2.1457672119140625e-06, -0.0029755830764770508, -2.110004425048828e-05, -1.33514404296875e-05, -0.0004787445068359375, -1.9073486328125e-06, -0.11216187477111816, -2.3841830625315197e-06, -2.86102294921875e-05, -4.76837158203125e-05, -0.00042057037353515625, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -5.357761307803855, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -2.5321950912475586, -0.0018482208251953125, -0.16768741607666016, -0.0014820098876953125, -0.028998374938964844, -1.9073486328125e-06, -0.011492729187011719, 0.0, -0.000270843505859375, -1.9073486328125e-06, -2.288818359375e-05, -7.62939453125e-06, -7.62939453125e-06, -1.311301275563892e-06, -0.9500904083251953, 0.0, -0.015132904052734375, -0.10723876953125, -0.0003814697265625, -0.00020122528076171875, 0.0, -3.0517578125e-05, 0.0, -0.22785091400146484, 0.0, -0.000179290771484375, -1.9073486328125e-06, -2.288818359375e-05, -3.576278118089249e-07, -0.021331787109375, -4.1723224057932384e-06, -0.03454780578613281, -0.0011806488037109375, -7.2479248046875e-05, 0.0, -0.030923843383789062, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.10052037239074707, -1.9073486328125e-06, -1.1444091796875e-05, -0.00293731689453125, -9.5367431640625e-06, -0.7723328471183777, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        self.target.change_attack(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.747322023197853, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -0.2646608352661133, 0.0, -0.0001010894775390625, 0.0, -0.02174675464630127, -1.52587890625e-05, -0.25718414783477783, -3.814697265625e-06, -0.44089314341545105, 0.0, -0.0002270928816869855, 0.0, -0.9272270202636719, -0.00092315673828125, -0.046817779541015625, -5.53131103515625e-05, -0.0005435943603515625, -0.0003643035888671875, -0.002529144287109375, -2.47955322265625e-05, -0.007389068603515625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.01409912109375, 0.0, -0.00556182861328125, -1.1444091796875e-05, -0.0014595985412597656, -1.1682510375976562e-05, -0.00011634825932560489, -5.125986263010418e-06, -0.001761673018336296, -7.033347174001392e-06, -0.009042378515005112, 0.0, -1.9073486328125e-06, -0.19628524780273438, -1.9073486328125e-06, -0.00035858154296875, -0.000766754150390625, -0.0028085708618164062, -1.52587890625e-05, -0.0004444122314453125, -2.0265579223632812e-06, -0.04082679748535156, -1.9073486328125e-06, -0.006445884704589844, -3.0517578125e-05, -0.01809215545654297, 0.0, -0.18863868713378906, 0.0, -0.0045282840728759766, 0.0, -0.00025653839111328125, -6.318092346191406e-06, -0.001636505126953125, -0.11541461944580078, -2.09808349609375e-05, -0.6105661392211914, -0.00083160400390625, -0.0034949779510498047, -2.0265579223632812e-06, -0.9157352447509766, -0.01613140106201172, -0.00115966796875, -0.000286102294921875, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0005168914794921875, 0.0, -2.47955322265625e-05, 0.0, -0.031758785247802734, 0.0, -1.1444091796875e-05, -8.20159912109375e-05, -9.5367431640625e-06, -0.3877321183681488, -1.9073486328125e-06, -0.003437042236328125, -0.0063800811767578125, -0.0003070831298828125, 0.0, -0.000179290771484375, -3.814697265625e-06, -2.86102294921875e-05, -7.62939453125e-06, -0.0003528594970703125, -3.576278118089249e-07, -0.05119931697845459, -3.814697265625e-06, -5.91278076171875e-05, -0.0001201629638671875, -0.001018524169921875, -0.004870273172855377, -1.9073486328125e-06, -0.0007419586181640625, -1.52587890625e-05, -1.9073486328125e-05, -0.0007619857788085938, 0.0, -0.000423431396484375, -7.62939453125e-06, -5.7220458984375e-05, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.44069981575012207, 0.0, -0.0001220703125, -0.010512351989746094, -0.000736236572265625, -3.62396240234375e-05, 0.0, -3.814697265625e-06, 0.0, -0.007193565368652344, -2.1457672119140625e-06, -0.0028438568115234375, -1.33514404296875e-05, -1.1444091796875e-05, -0.0003204345703125, -1.9073486328125e-06, -0.12017659842967987, -3.576278118089249e-07, -2.288818359375e-05, -2.47955322265625e-05, -0.0011920928955078125, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(4)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.815986478097898, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -1.4604158401489258, 0.0, -0.0043487548828125, -1.9073486328125e-05, -0.04392814636230469, -3.814697265625e-06, -0.00010621539695421234, 0.0, -0.32341861724853516, -0.000751495361328125, -0.06822681427001953, -4.38690185546875e-05, -0.0005359649658203125, -0.0001621246337890625, -0.002071380615234375, -2.09808349609375e-05, -0.0061779022216796875, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.011003494262695312, 0.0, -0.004765510559082031, -1.1444091796875e-05, -0.0012154579162597656, -1.1563301086425781e-05, -0.00013494491577148438, -4.887569048150908e-06, -0.0020064099226146936, -5.125998541188892e-06, -0.0083844643086195, 0.0, -1.9073486328125e-06, -0.13297557830810547, -1.9073486328125e-06, -0.000377655029296875, -0.000774383544921875, -0.003971099853515625, -1.52587890625e-05, -0.000553131103515625, -2.0265579223632812e-06, -0.04317188262939453, 0.0, -0.005820274353027344, -2.86102294921875e-05, -0.019411087036132812, 0.0, -0.24375343322753906, 0.0, -0.00522923469543457, 0.0, -0.000255584716796875, -6.318092346191406e-06, -0.0016117095947265625, -0.11983394622802734, -2.09808349609375e-05, -0.6321544647216797, -0.000827789306640625, -0.003508329391479492, -2.0265579223632812e-06, -1.031595230102539, -0.016860008239746094, -0.001129150390625, -0.0002803802490234375, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.0005130767822265625, 0.0, -2.47955322265625e-05, 0.0, -0.03229188919067383, 0.0, -1.1444091796875e-05, -8.20159912109375e-05, -9.5367431640625e-06, -0.38642850518226624, -1.9073486328125e-06, -0.003513336181640625, -0.006384849548339844, -0.000308990478515625, 0.0, -0.00018310546875, -3.814697265625e-06, -2.86102294921875e-05, -7.62939453125e-06, -0.0003566741943359375, -3.576278118089249e-07, -0.051246047019958496, -3.814697265625e-06, -5.91278076171875e-05, -0.0001201629638671875, -0.0010128021240234375, -0.004862336441874504, -1.9073486328125e-06, -0.0007801055908203125, -1.52587890625e-05, -1.9073486328125e-05, -0.00078582763671875, 0.0, -0.0004444122314453125, -7.62939453125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.43521809577941895, 0.0, -0.0001239776611328125, -0.009995460510253906, -0.00074005126953125, -3.62396240234375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0068607330322265625, -2.1457672119140625e-06, -0.0029163360595703125, -1.33514404296875e-05, -1.1444091796875e-05, -0.0003185272216796875, -1.9073486328125e-06, -0.1213098019361496, -3.576278118089249e-07, -2.288818359375e-05, -2.47955322265625e-05, -0.0011758804321289062, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(4)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.359561625264689, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -1.4604158401489258, 0.0, -0.0043487548828125, -1.9073486328125e-05, -0.04392814636230469, -3.814697265625e-06, -0.00010621539695421234, 0.0, -0.32341861724853516, -0.000751495361328125, -0.06822681427001953, -4.38690185546875e-05, -0.0005359649658203125, -0.0001621246337890625, -0.002071380615234375, -2.09808349609375e-05, -0.0061779022216796875, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.011003494262695312, 0.0, -0.004765510559082031, -1.1444091796875e-05, -0.0012154579162597656, -1.1563301086425781e-05, -0.00013494491577148438, -4.887569048150908e-06, -0.0020064099226146936, -5.125998541188892e-06, -0.0083844643086195, 0.0, -1.9073486328125e-06, -0.13297557830810547, -1.9073486328125e-06, -0.000377655029296875, -0.000774383544921875, -0.003971099853515625, -1.52587890625e-05, -0.000553131103515625, -2.0265579223632812e-06, -0.04317188262939453, 0.0, -0.005820274353027344, -2.86102294921875e-05, -0.019411087036132812, 0.0, -0.24375343322753906, 0.0, -0.00522923469543457, 0.0, -0.000255584716796875, -6.318092346191406e-06, -0.0016117095947265625, -0.11983394622802734, -2.09808349609375e-05, -0.6321544647216797, -0.000827789306640625, -0.003508329391479492, -2.0265579223632812e-06, -0.4693336486816406, -0.04016304016113281, -0.000453948974609375, -0.6272983551025391, -7.62939453125e-06, -4.57763671875e-05, 0.0, -0.001148223876953125, 0.0, -1.71661376953125e-05, 0.0, -0.026422977447509766, 0.0, -1.71661376953125e-05, -9.34600830078125e-05, -5.7220458984375e-06, -0.8252049684524536, 0.0, -0.0001659393310546875, -7.05718994140625e-05, -1.52587890625e-05, -0.000362396240234375, -1.9073486328125e-06, -0.00518035888671875, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.5201781988143921, 0.0, -0.0002155303955078125, -0.012760162353515625, -0.00124359130859375, -3.0517578125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0024720430374145508, -2.2649765014648438e-06, -0.0037708282470703125, -1.52587890625e-05, -1.1444091796875e-05, -0.0002613067626953125, -3.814697265625e-06, -0.12374170869588852, -5.960462772236497e-07, -2.47955322265625e-05, -2.86102294921875e-05, -0.0010356903076171875, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(4)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.485558063074734, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -0.2646608352661133, 0.0, -0.0001010894775390625, 0.0, -0.02174675464630127, -1.52587890625e-05, -0.25718414783477783, -3.814697265625e-06, -0.44089314341545105, 0.0, -0.0002270928816869855, 0.0, -0.9272270202636719, -0.00092315673828125, -0.046817779541015625, -5.53131103515625e-05, -0.0005435943603515625, -0.0003643035888671875, -0.002529144287109375, -2.47955322265625e-05, -0.007389068603515625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.01409912109375, 0.0, -0.00556182861328125, -1.1444091796875e-05, -0.0014595985412597656, -1.1682510375976562e-05, -0.00011634825932560489, -5.125986263010418e-06, -0.001761673018336296, -7.033347174001392e-06, -0.009042378515005112, 0.0, -1.9073486328125e-06, -0.19628524780273438, -1.9073486328125e-06, -0.00035858154296875, -0.000766754150390625, -0.0028085708618164062, -1.52587890625e-05, -0.0004444122314453125, -2.0265579223632812e-06, -0.04082679748535156, -1.9073486328125e-06, -0.006445884704589844, -3.0517578125e-05, -0.01809215545654297, 0.0, -0.18863868713378906, 0.0, -0.0045282840728759766, 0.0, -0.00025653839111328125, -6.318092346191406e-06, -0.001636505126953125, -0.11541461944580078, -2.09808349609375e-05, -0.6105661392211914, -0.00083160400390625, -0.0034949779510498047, -2.0265579223632812e-06, -0.5453119277954102, -0.039694786071777344, -0.0004329681396484375, -0.6200990676879883, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -0.0012044906616210938, 0.0, -1.71661376953125e-05, 0.0, -0.026212215423583984, 0.0, -1.71661376953125e-05, -9.34600830078125e-05, -5.7220458984375e-06, -0.8339518308639526, 0.0, -0.0001544952392578125, -7.2479248046875e-05, -1.52587890625e-05, -0.0003528594970703125, -1.9073486328125e-06, -0.004771232604980469, -5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.5273278951644897, 0.0, -0.000213623046875, -0.013026237487792969, -0.00125885009765625, -3.0517578125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0024567842483520508, -2.2649765014648438e-06, -0.003757476806640625, -1.52587890625e-05, -1.1444091796875e-05, -0.0002613067626953125, -3.814697265625e-06, -0.12369593232870102, -5.960462772236497e-07, -2.47955322265625e-05, -2.86102294921875e-05, -0.00104522705078125, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(4)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 4}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.763840273305391, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -0.2646608352661133, 0.0, -0.0001010894775390625, 0.0, -0.02174675464630127, -1.52587890625e-05, -0.25718414783477783, -3.814697265625e-06, -0.44089314341545105, 0.0, -0.0002270928816869855, 0.0, -0.9272270202636719, -0.00092315673828125, -0.046817779541015625, -5.53131103515625e-05, -0.0005435943603515625, -0.0003643035888671875, -0.002529144287109375, -2.47955322265625e-05, -0.007389068603515625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.01409912109375, 0.0, -0.00556182861328125, -1.1444091796875e-05, -0.0014595985412597656, -1.1682510375976562e-05, -0.00011634825932560489, -5.125986263010418e-06, -0.001761673018336296, -7.033347174001392e-06, -0.009042378515005112, 0.0, -1.9073486328125e-06, -0.19628524780273438, -1.9073486328125e-06, -0.00035858154296875, -0.000766754150390625, -0.0028085708618164062, -1.52587890625e-05, -0.0004444122314453125, -2.0265579223632812e-06, -0.04082679748535156, -1.9073486328125e-06, -0.006445884704589844, -3.0517578125e-05, -0.01809215545654297, 0.0, -0.18863868713378906, 0.0, -0.0045282840728759766, 0.0, -0.00025653839111328125, -6.318092346191406e-06, -0.001636505126953125, -0.11541461944580078, -2.09808349609375e-05, -0.6105661392211914, -0.00083160400390625, -0.0034949779510498047, -2.0265579223632812e-06, -0.9157352447509766, -0.01613140106201172, -0.00115966796875, -0.000286102294921875, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0005168914794921875, 0.0, -2.47955322265625e-05, 0.0, -0.031758785247802734, 0.0, -1.1444091796875e-05, -8.20159912109375e-05, -9.5367431640625e-06, -1.369454264640808, -1.9073486328125e-06, -0.054744720458984375, -0.007376670837402344, -0.000164031982421875, -1.9073486328125e-06, -0.000247955322265625, -5.7220458984375e-06, -5.53131103515625e-05, -1.1444091796875e-05, -0.0004101991653442383, -7.152555099310121e-07, -0.0319368839263916, -9.5367431640625e-06, -4.57763671875e-05, -9.1552734375e-05, -0.0010833740234375, -0.028505735099315643, 0.0, -0.0006160736083984375, -1.52587890625e-05, -1.71661376953125e-05, -0.0007524490356445312, 0.0, -0.0005168914794921875, -9.5367431640625e-06, -5.7220458984375e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.4145500659942627, 0.0, -0.0001316070556640625, -0.013581275939941406, -0.0011920928955078125, -3.0517578125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0033608675003051758, -4.172325134277344e-06, -0.0033740997314453125, -1.52587890625e-05, -1.1444091796875e-05, -0.0002841949462890625, -1.9073486328125e-06, -0.12424500286579132, -4.768370445162873e-07, -2.47955322265625e-05, -2.6702880859375e-05, -0.0011920928955078125, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(4)\n            self.target.increase_health(4)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Num", "n": 1}, "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 33, 82, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 56, 23, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -6.8600084887372645, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -1.4604158401489258, 0.0, -0.0043487548828125, -1.9073486328125e-05, -0.04392814636230469, -3.814697265625e-06, -0.00010621539695421234, 0.0, -0.32341861724853516, -0.000751495361328125, -0.06822681427001953, -4.38690185546875e-05, -0.0005359649658203125, -0.0001621246337890625, -0.002071380615234375, -2.09808349609375e-05, -0.0061779022216796875, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.011003494262695312, 0.0, -0.004765510559082031, -1.1444091796875e-05, -0.0012154579162597656, -1.1563301086425781e-05, -0.00013494491577148438, -4.887569048150908e-06, -0.0020064099226146936, -5.125998541188892e-06, -0.0083844643086195, 0.0, -1.9073486328125e-06, -0.13297557830810547, -1.9073486328125e-06, -0.000377655029296875, -0.000774383544921875, -0.003971099853515625, -1.52587890625e-05, -0.000553131103515625, -2.0265579223632812e-06, -0.04317188262939453, 0.0, -0.005820274353027344, -2.86102294921875e-05, -0.019411087036132812, 0.0, -0.24375343322753906, 0.0, -0.00522923469543457, 0.0, -0.000255584716796875, -6.318092346191406e-06, -0.0016117095947265625, -0.11983394622802734, -2.09808349609375e-05, -1.0107421875, -0.013834953308105469, -0.3018007278442383, -0.24310970306396484, -7.62939453125e-06, 0.0, -0.01991748809814453, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001583099365234375, 0.0, -0.0003814697265625, 0.0, -0.034114837646484375, -3.814697265625e-06, -0.00109100341796875, -5.7220458984375e-06, -0.3035449981689453, -0.0001010894775390625, -0.5351686477661133, -0.007283210754394531, -9.5367431640625e-06, -0.0022749900817871094, 0.0, -0.0002002716064453125, -0.0036258697509765625, -5.7220458984375e-06, -0.010065078735351562, -1.9073486328125e-06, -0.001224517822265625, 0.0, -8.0108642578125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.13724350929260254, 0.0, -0.0007953643798828125, -0.006862640380859375, -0.0009403228759765625, -5.7220458984375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0013791322708129883, -2.1457672119140625e-06, -0.003612518310546875, -1.33514404296875e-05, -1.33514404296875e-05, -0.0004367828369140625, -1.9073486328125e-06, -0.12738198041915894, -3.576278118089249e-07, -2.6702880859375e-05, -4.00543212890625e-05, -0.0009765625, 0.0, -0.000881195068359375, -0.12787151336669922, -0.002300262451171875, -0.001422882080078125, 0.0, -0.0020923614501953125, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.516904354095459, -1.9073486328125e-06, -3.814697265625e-05, -0.00046539306640625, -1.52587890625e-05, -0.3781580626964569, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in len(self.target.card) - 1):\n            self.target.damage(player.effective_spell_damage(1), self)\n        else:\n            self.target.change_attack(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>"], "score": -6.86737384214274, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -1.4604158401489258, 0.0, -0.0043487548828125, -1.9073486328125e-05, -0.04392814636230469, -3.814697265625e-06, -0.00010621539695421234, 0.0, -0.32341861724853516, -0.000751495361328125, -0.06822681427001953, -4.38690185546875e-05, -0.0005359649658203125, -0.0001621246337890625, -0.002071380615234375, -2.09808349609375e-05, -0.0061779022216796875, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.011003494262695312, 0.0, -0.004765510559082031, -1.1444091796875e-05, -0.0012154579162597656, -1.1563301086425781e-05, -0.00013494491577148438, -4.887569048150908e-06, -0.0020064099226146936, -5.125998541188892e-06, -0.0083844643086195, 0.0, -1.9073486328125e-06, -0.13297557830810547, -1.9073486328125e-06, -0.000377655029296875, -0.000774383544921875, -0.003971099853515625, -1.52587890625e-05, -0.000553131103515625, -2.0265579223632812e-06, -0.04317188262939453, 0.0, -0.005820274353027344, -2.86102294921875e-05, -0.019411087036132812, 0.0, -0.24375343322753906, 0.0, -0.00522923469543457, 0.0, -0.000255584716796875, -6.318092346191406e-06, -0.0016117095947265625, -0.11983394622802734, -2.09808349609375e-05, -0.6321544647216797, -0.000827789306640625, -0.003508329391479492, -2.0265579223632812e-06, -0.4693336486816406, -0.04016304016113281, -0.000453948974609375, -0.6272983551025391, -7.62939453125e-06, -4.57763671875e-05, 0.0, -0.001148223876953125, 0.0, -1.71661376953125e-05, 0.0, -0.026422977447509766, 0.0, -1.71661376953125e-05, -9.34600830078125e-05, -5.7220458984375e-06, -0.7085751295089722, 0.0, -0.000110626220703125, -8.58306884765625e-05, -1.71661376953125e-05, -0.000637054443359375, -3.814697265625e-06, -0.010532379150390625, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -1.1848119497299194, 0.0, -7.62939453125e-06, -3.814697265625e-05, -0.0001201629638671875, -0.001626133918762207, -3.576278118089249e-07, -2.09808349609375e-05, -3.814697265625e-05, -0.0964682474732399, -0.0015276670455932617], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n        else:\n            self.target.add_buff(Buff(Frozen()))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 4}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Num", "n": 1}, "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 33, 82, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 56, 23, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -6.95933894096305, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -0.2646608352661133, 0.0, -0.0001010894775390625, 0.0, -0.02174675464630127, -1.52587890625e-05, -0.25718414783477783, -3.814697265625e-06, -0.44089314341545105, 0.0, -0.0002270928816869855, 0.0, -0.9272270202636719, -0.00092315673828125, -0.046817779541015625, -5.53131103515625e-05, -0.0005435943603515625, -0.0003643035888671875, -0.002529144287109375, -2.47955322265625e-05, -0.007389068603515625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.01409912109375, 0.0, -0.00556182861328125, -1.1444091796875e-05, -0.0014595985412597656, -1.1682510375976562e-05, -0.00011634825932560489, -5.125986263010418e-06, -0.001761673018336296, -7.033347174001392e-06, -0.009042378515005112, 0.0, -1.9073486328125e-06, -0.19628524780273438, -1.9073486328125e-06, -0.00035858154296875, -0.000766754150390625, -0.0028085708618164062, -1.52587890625e-05, -0.0004444122314453125, -2.0265579223632812e-06, -0.04082679748535156, -1.9073486328125e-06, -0.006445884704589844, -3.0517578125e-05, -0.01809215545654297, 0.0, -0.18863868713378906, 0.0, -0.0045282840728759766, 0.0, -0.00025653839111328125, -6.318092346191406e-06, -0.001636505126953125, -0.11541461944580078, -2.09808349609375e-05, -1.0337295532226562, -0.013896942138671875, -0.2999143600463867, -0.2539510726928711, -7.62939453125e-06, 0.0, -0.020694732666015625, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001583099365234375, 0.0, -0.0003757476806640625, 0.0, -0.033550262451171875, -3.814697265625e-06, -0.00109100341796875, -5.7220458984375e-06, -0.3056173324584961, -0.0001010894775390625, -0.5389623641967773, -0.0072422027587890625, -9.5367431640625e-06, -0.002270221710205078, 0.0, -0.00019073486328125, -0.003498077392578125, -5.7220458984375e-06, -0.009892463684082031, -1.9073486328125e-06, -0.001110076904296875, 0.0, -7.82012939453125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.13344979286193848, 0.0, -0.00079345703125, -0.006740570068359375, -0.000942230224609375, -5.7220458984375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0013962984085083008, -2.1457672119140625e-06, -0.00360870361328125, -1.33514404296875e-05, -1.33514404296875e-05, -0.0004367828369140625, -1.9073486328125e-06, -0.12727290391921997, -3.576278118089249e-07, -2.6702880859375e-05, -4.00543212890625e-05, -0.0009851455688476562, 0.0, -0.000843048095703125, -0.12772750854492188, -0.002178192138671875, -0.001415252685546875, 0.0, -0.00183868408203125, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.5187287330627441, -1.9073486328125e-06, -3.814697265625e-05, -0.0004634857177734375, -1.52587890625e-05, -0.3788512051105499, 0.0], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in len(self.target.card) - 1):\n            self.target.damage(player.effective_spell_damage(1), self)\n        else:\n            self.target.change_attack(4)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "ConeOfCold", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 2}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>"], "score": -6.965652302190563, "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -0.2646608352661133, 0.0, -0.0001010894775390625, 0.0, -0.02174675464630127, -1.52587890625e-05, -0.25718414783477783, -3.814697265625e-06, -0.44089314341545105, 0.0, -0.0002270928816869855, 0.0, -0.9272270202636719, -0.00092315673828125, -0.046817779541015625, -5.53131103515625e-05, -0.0005435943603515625, -0.0003643035888671875, -0.002529144287109375, -2.47955322265625e-05, -0.007389068603515625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.01409912109375, 0.0, -0.00556182861328125, -1.1444091796875e-05, -0.0014595985412597656, -1.1682510375976562e-05, -0.00011634825932560489, -5.125986263010418e-06, -0.001761673018336296, -7.033347174001392e-06, -0.009042378515005112, 0.0, -1.9073486328125e-06, -0.19628524780273438, -1.9073486328125e-06, -0.00035858154296875, -0.000766754150390625, -0.0028085708618164062, -1.52587890625e-05, -0.0004444122314453125, -2.0265579223632812e-06, -0.04082679748535156, -1.9073486328125e-06, -0.006445884704589844, -3.0517578125e-05, -0.01809215545654297, 0.0, -0.18863868713378906, 0.0, -0.0045282840728759766, 0.0, -0.00025653839111328125, -6.318092346191406e-06, -0.001636505126953125, -0.11541461944580078, -2.09808349609375e-05, -0.6105661392211914, -0.00083160400390625, -0.0034949779510498047, -2.0265579223632812e-06, -0.5453119277954102, -0.039694786071777344, -0.0004329681396484375, -0.6200990676879883, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -0.0012044906616210938, 0.0, -1.71661376953125e-05, 0.0, -0.026212215423583984, 0.0, -1.71661376953125e-05, -9.34600830078125e-05, -5.7220458984375e-06, -0.7036460638046265, 0.0, -0.00011444091796875, -8.392333984375e-05, -1.71661376953125e-05, -0.000629425048828125, -5.7220458984375e-06, -0.010256767272949219, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -1.1796211004257202, 0.0, -7.62939453125e-06, -3.814697265625e-05, -0.0001220703125, -0.001652836799621582, -3.576278118089249e-07, -2.09808349609375e-05, -3.814697265625e-05, -0.09482014924287796, -0.001513361930847168], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n        else:\n            self.target.add_buff(Buff(Frozen()))\n"}], "gold_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n        index = self.target.index\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -1.1028964680385869, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.5193078517913818, 0.0, -0.08331680297851562, -5.91278076171875e-05, 0.0, -0.008715083822607994, -5.7220458984375e-06, -5.7220458984375e-06, -0.04498577117919922, -4.6491601096931845e-05, -1.52587890625e-05, -3.814697265625e-06, -6.67572021484375e-05, -0.00013136098277755082, -8.964526932686567e-05, -5.960462772236497e-07, -0.14896297454833984, -5.53131103515625e-05, 0.0, -0.007285436149686575, -3.814697265625e-06, -0.01271820068359375, -3.814697265625e-06, -0.00023317337036132812, 0.0, 0.0, -2.86102294921875e-05, 0.0, -2.3603366571478546e-05, 0.0, -7.62939453125e-06, -0.000301361083984375, -1.52587890625e-05, -2.7418097943154862e-06, -1.1920928244535389e-07, -7.6293645179248415e-06, -1.1920928244535389e-07], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -2.0179193493183263, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.9062478542327881, 0.0, -0.007580757141113281, -5.14984130859375e-05, 0.0, -0.01754709519445896, -1.9073486328125e-06, -3.814697265625e-06, -0.07926559448242188, -2.3364949811366387e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.00017629630747251213, -0.6227725744247437, -2.3841855067985307e-07, -0.08812713623046875, -4.9591064453125e-05, 0.0, -0.010229909792542458, -1.9073486328125e-06, -0.00823211669921875, -1.9073486328125e-06, -0.0006194114685058594, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.9073457224294543e-05, 0.0, -7.62939453125e-06, -0.0003337860107421875, -9.5367431640625e-06, -2.0265558760002023e-06, 0.0, -8.940655789047014e-06, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeHealth(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -2.615242575539881, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.9062478542327881, 0.0, -0.007580757141113281, -5.14984130859375e-05, 0.0, -0.01754709519445896, -1.9073486328125e-06, -3.814697265625e-06, -0.07926559448242188, -2.3364949811366387e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.00017629630747251213, -0.7705072164535522, -4.0531158447265625e-06, -0.5446062088012695, -0.0002613067626953125, -1.9073486328125e-06, -0.0034033176489174366, -1.33514404296875e-05, -0.00827789306640625, -5.7220458984375e-06, -0.00026619434356689453, -1.1920928244535389e-07, 0.0, -2.6702880859375e-05, 0.0, -2.4557026335969567e-05, 0.0, -7.62939453125e-06, -0.0003509521484375, -9.5367431640625e-06, -1.9073468138230965e-06, 0.0, -8.583030648878776e-06, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeHealth(2\n            )), Buff(ChangeAttack(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -4.1930925592264, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.9062478542327881, 0.0, -0.007580757141113281, -5.14984130859375e-05, 0.0, -0.01754709519445896, -1.9073486328125e-06, -3.814697265625e-06, -2.5805883407592773, -0.000171661376953125, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.003743812907487154, -0.006095483899116516, -0.3495206832885742, -5.7220458984375e-06, -0.04334687814116478, -1.1920928244535389e-07, 0.0, -2.09808349609375e-05, 0.0, -6.43729799776338e-06, 0.0, -1.52587890625e-05, -0.0016231536865234375, -1.1444091796875e-05, -2.145764938177308e-06, 0.0, -3.218645360902883e-06, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeHealth(2\n            )), Buff(Taunt())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -4.771680048957414, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -3.1207284927368164, -0.3617525100708008, -0.019330333918333054, -0.016355514526367188, -7.43865966796875e-05, -1.9073486328125e-06, -0.04725809395313263, -0.31418466567993164, -6.4849853515625e-05, -0.17667675018310547, -0.022586822509765625, -0.0036368200089782476, 0.0, -5.7220458984375e-06, 0.0, -0.0019644969142973423, -0.0015176341403275728, -0.563380241394043, -1.9073486328125e-05, -0.11330769211053848, -2.3841855067985307e-07, 0.0, -3.4332275390625e-05, 0.0, -6.318082796497038e-06, 0.0, -2.86102294921875e-05, -0.00102996826171875, -1.1444091796875e-05, -2.145764938177308e-06, 0.0, -3.3378541957063135e-06, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Buff(Taunt()))),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -4.8764751295006405, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.5193078517913818, 0.0, -0.08331680297851562, -5.91278076171875e-05, 0.0, -0.008715083822607994, -5.7220458984375e-06, -5.7220458984375e-06, -3.1334781646728516, -0.000423431396484375, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.004810691811144352, -0.01586124300956726, -0.8209047317504883, -1.1444091796875e-05, -0.011274098418653011, -2.3841855067985307e-07, 0.0, -1.52587890625e-05, 0.0, -7.748596544843167e-06, 0.0, -1.33514404296875e-05, -0.0017414093017578125, -1.33514404296875e-05, -2.145764938177308e-06, 0.0, -3.218645360902883e-06, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(Taunt())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Taunt", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -5.002800985763045, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -3.1207284927368164, -1.3900938034057617, -0.3022928833961487, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -0.010818399488925934, -0.010443639941513538, -0.14792346954345703, -3.0517578125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.0012824113946408033, -5.7220458984375e-06, 0.0, -0.0017261505126953125, 0.0, -3.814697265625e-06, -0.0009082555770874023, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.0059778690338134766, -2.09808349609375e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -8.702273589733522e-06, 0.0, -5.7220458984375e-06, -0.0026836395263671875, -1.33514404296875e-05, -2.7418097943154862e-06, 0.0, -7.748594725853764e-06, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Summon(Taunt()),\n            MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Template19", "hole0": "Hasminions"}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}, {"_type": "Num", "n": 4}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 170, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 170, 50, 146, "Has", "minions", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 42, 115, "4", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -5.004927711528808, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.5193078517913818, 0.0, -0.08331680297851562, -5.91278076171875e-05, 0.0, -0.008715083822607994, -5.7220458984375e-06, -5.7220458984375e-06, -0.04498577117919922, -4.6491601096931845e-05, -1.52587890625e-05, -3.814697265625e-06, -6.67572021484375e-05, -0.00013136098277755082, -8.964526932686567e-05, -5.960462772236497e-07, -2.019381523132324, -0.008307456970214844, -0.10926151275634766, -0.0009053896646946669, -2.2649765014648438e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.009804248809814453, -0.002079010009765625, -1.1920928244535389e-07, -0.0058536529541015625, -0.00177001953125, 0.0, -0.3946848511695862, -0.49270546436309814, -0.0013798135332763195, -0.0027179718017578125, 0.0, -0.38439762592315674, -4.220008850097656e-05, -1.9073486328125e-05, -0.03224372863769531, -1.9073486328125e-06, -0.603704571723938, -1.9073486328125e-06, -0.001689910888671875, -1.9073486328125e-06, -0.00026035308837890625, -1.1920928244535389e-07, 0.0, -2.47955322265625e-05, 0.0, -2.8848497095168568e-05, 0.0, -5.7220458984375e-06, -0.0003681182861328125, -1.1444091796875e-05, -2.145764938177308e-06, 0.0, -4.172316039330326e-06, -1.1920928244535389e-07], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(Count(MinionSelector(Hasminions(),\n            EnemyPlayer())), 4))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Template19", "hole0": "Hasminions"}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}, {"_type": "Num", "n": 4}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 170, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 170, 50, 146, "Has", "minions", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 42, 115, "4", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -5.197222980188293, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.9062478542327881, 0.0, -0.007580757141113281, -5.14984130859375e-05, 0.0, -0.01754709519445896, -1.9073486328125e-06, -3.814697265625e-06, -0.07926559448242188, -2.3364949811366387e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.00017629630747251213, -0.7705072164535522, -4.0531158447265625e-06, -0.9124050140380859, -0.0038290023803710938, -0.058157920837402344, -0.0007030917331576347, -2.3841855067985307e-07, -1.52587890625e-05, -1.1444091796875e-05, -0.011536836624145508, -0.0040760040283203125, -1.1920928244535389e-07, -0.02855682373046875, -0.006556510925292969, 0.0, -0.44604846835136414, -0.5498600006103516, -0.0013237434905022383, -0.001758575439453125, 0.0, -0.42689192295074463, -4.029273986816406e-05, -1.9073486328125e-05, -0.04715919494628906, -1.9073486328125e-06, -0.6378256678581238, -1.9073486328125e-06, -0.0016994476318359375, -1.9073486328125e-06, -0.00027370452880859375, -1.1920928244535389e-07, 0.0, -2.47955322265625e-05, 0.0, -2.8490874683484435e-05, 0.0, -5.7220458984375e-06, -0.0004177093505859375, -9.5367431640625e-06, -1.7881377516459906e-06, 0.0, -4.053107204526896e-06, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeHealth(2\n            )), Buff(ChangeAttack(Count(MinionSelector(Hasminions(),\n            EnemyPlayer())), 4))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Template19", "hole0": "MinionHasand"}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}, {"_type": "Num", "n": 4}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 170, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 170, 50, 146, "Minion", "Has", "and", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 42, 115, "4", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -5.2259111181714815, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.9062478542327881, 0.0, -0.007580757141113281, -5.14984130859375e-05, 0.0, -0.01754709519445896, -1.9073486328125e-06, -3.814697265625e-06, -0.07926559448242188, -2.3364949811366387e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.00017629630747251213, -0.7705072164535522, -4.0531158447265625e-06, -0.9124050140380859, -0.0038290023803710938, -0.058157920837402344, -0.0007030917331576347, -2.3841855067985307e-07, -1.52587890625e-05, -1.1444091796875e-05, -0.011536836624145508, -0.0040760040283203125, -1.1920928244535389e-07, -0.02855682373046875, -0.006556510925292969, 0.0, -1.1311901807785034, -0.02670907974243164, -0.5082630515098572, -0.0019053113646805286, -0.000492095947265625, 0.0, -0.33687978982925415, -0.00016486644744873047, -4.1961669921875e-05, -0.004395484924316406, -1.9073486328125e-06, -0.13029614090919495, -1.9073486328125e-06, -0.0010509490966796875, -3.814697265625e-06, -0.0002264975046273321, -2.1457672119140625e-06, 0.0, -3.0517578125e-05, 0.0, -2.789483914966695e-05, 0.0, -7.62939453125e-06, -0.0003795623779296875, -9.5367431640625e-06, -1.6689286894688848e-06, 0.0, -4.172316039330326e-06, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeHealth(2\n            )), Buff(ChangeAttack(Count(MinionSelector(MinionHasand(),\n            EnemyPlayer())), 4))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Template19", "hole0": "Hasminions"}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}, {"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 170, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 170, 50, 146, "Has", "minions", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -5.226063387482107, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.5193078517913818, 0.0, -0.08331680297851562, -5.91278076171875e-05, 0.0, -0.008715083822607994, -5.7220458984375e-06, -5.7220458984375e-06, -0.04498577117919922, -4.6491601096931845e-05, -1.52587890625e-05, -3.814697265625e-06, -6.67572021484375e-05, -0.00013136098277755082, -8.964526932686567e-05, -5.960462772236497e-07, -2.019381523132324, -0.008307456970214844, -0.10926151275634766, -0.0009053896646946669, -2.2649765014648438e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.009804248809814453, -0.002079010009765625, -1.1920928244535389e-07, -0.0058536529541015625, -0.00177001953125, 0.0, -0.3946848511695862, -0.49270546436309814, -0.0013798135332763195, -0.0027179718017578125, 0.0, -0.38439762592315674, -4.220008850097656e-05, -1.9073486328125e-05, -0.03224372863769531, -1.9073486328125e-06, -0.824769914150238, -3.814697265625e-06, -0.0011806488037109375, -1.9073486328125e-06, -0.0007303953170776367, 0.0, 0.0, -3.0517578125e-05, 0.0, -2.586831215012353e-05, 0.0, -5.7220458984375e-06, -0.0004711151123046875, -1.33514404296875e-05, -2.0265558760002023e-06, 0.0, -4.410733254189836e-06, -1.1920928244535389e-07], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(Count(MinionSelector(Hasminions(),\n            EnemyPlayer())), 2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Taunt"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}], "_type": "List"}, {"_type": "Template19", "hole0": "SelfSelector"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}], "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Taunt", "<EOS>", 170, 38, 106, 171, 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -5.323486888964979, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -2.1804051399230957, -0.011807799339294434, -0.002857208251953125, -0.2827787399291992, -8.7738037109375e-05, -0.08352375030517578, -0.0010662078857421875, -0.012541770935058594, -0.13668334484100342, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -0.06386108696460724, -0.00022170554439071566, -2.288818359375e-05, -0.0002536773681640625, -0.0036700956989079714, 0.0, -3.814697265625e-06, 0.0, -0.0020101272966712713, -0.004411350004374981, -7.05718994140625e-05, -0.000156402587890625, -0.005985376890748739, 0.0, -5.7220458984375e-06, 0.0, -0.0004955522599630058, -0.0034783079754561186, -0.009296417236328125, -7.62939453125e-06, -0.1383455991744995, -2.1457672119140625e-06, 0.0, -6.29425048828125e-05, -0.25501251220703125, -8.58306884765625e-05, 0.0, -0.8850647211074829, -0.0007343292236328125, 0.0, -0.07646560668945312, -0.09597301483154297, -3.814697265625e-05, -3.814697265625e-06, 0.0, -0.015459292568266392, -0.000891761330422014, 0.0, -0.013071060180664062, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.4305104514278355e-06, -0.5235157012939453, -7.62939453125e-06, -0.05209541320800781, 0.0, 0.0, -0.3732283115386963, -7.62939453125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0057146549224853516, -2.86102294921875e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -1.01327859738376e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -1.1444091796875e-05, -4.291525328881107e-06, 0.0, -3.0994362987257773e-06, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Taunt([Buff(Taunt()),\n            Buff(Taunt()), Buff(Taunt())], SelfSelector()), MinionSelector(\n            IsType(MINION_TYPE.DRAGON), players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Template19", "hole0": "MinionHasand"}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}, {"_type": "Num", "n": 4}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 170, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 170, 50, 146, "Minion", "Has", "and", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 42, 115, "4", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -5.367258504802081, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.5193078517913818, 0.0, -0.08331680297851562, -5.91278076171875e-05, 0.0, -0.008715083822607994, -5.7220458984375e-06, -5.7220458984375e-06, -0.04498577117919922, -4.6491601096931845e-05, -1.52587890625e-05, -3.814697265625e-06, -6.67572021484375e-05, -0.00013136098277755082, -8.964526932686567e-05, -5.960462772236497e-07, -2.019381523132324, -0.008307456970214844, -0.10926151275634766, -0.0009053896646946669, -2.2649765014648438e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.009804248809814453, -0.002079010009765625, -1.1920928244535389e-07, -0.0058536529541015625, -0.00177001953125, 0.0, -1.2721644639968872, -0.0286102294921875, -0.5091474652290344, -0.002614105585962534, -0.001049041748046875, 0.0, -0.34132319688796997, -0.00014209747314453125, -4.1961669921875e-05, -0.0025482177734375, -1.9073486328125e-06, -0.1172742247581482, -1.9073486328125e-06, -0.001079559326171875, -3.814697265625e-06, -0.0002087353350361809, -2.1457672119140625e-06, 0.0, -3.0517578125e-05, 0.0, -2.872928962460719e-05, 0.0, -5.7220458984375e-06, -0.0003337860107421875, -9.5367431640625e-06, -1.7881377516459906e-06, 0.0, -4.410733254189836e-06, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(Count(MinionSelector(MinionHasand(),\n            EnemyPlayer())), 4))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Taunt"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}], "_type": "List"}, {"_type": "Template19", "hole0": "SelfSelector"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Template19", "hole0": "Hasminions"}, {"_type": "Template19", "hole0": "EnemyPlayer"}]}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Taunt", "<EOS>", 170, 38, 106, 171, 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 170, 50, 146, "Has", "minions", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -6.429942688608158, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -2.1804051399230957, -0.011807799339294434, -0.002857208251953125, -0.2827787399291992, -8.7738037109375e-05, -0.08352375030517578, -0.0010662078857421875, -0.012541770935058594, -0.13668334484100342, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -0.06386108696460724, -0.00022170554439071566, -2.288818359375e-05, -0.0002536773681640625, -0.0036700956989079714, 0.0, -3.814697265625e-06, 0.0, -0.0020101272966712713, -0.004411350004374981, -7.05718994140625e-05, -0.000156402587890625, -0.005985376890748739, 0.0, -5.7220458984375e-06, 0.0, -0.0004955522599630058, -0.0034783079754561186, -0.009296417236328125, -7.62939453125e-06, -0.1383455991744995, -2.1457672119140625e-06, 0.0, -6.29425048828125e-05, -0.25501251220703125, -8.58306884765625e-05, 0.0, -0.533534049987793, -0.0030144453048706055, 0.0, -0.000152587890625, -2.86102294921875e-05, -0.35076427459716797, -0.0003542889025993645, -3.635883331298828e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00019681449339259416, -0.001346588134765625, -1.1920928244535389e-07, -0.4157705307006836, -0.010526657104492188, 0.0, -0.2739090025424957, -0.7563794255256653, -0.0010070583084598184, -0.0043201446533203125, 0.0, -0.30871033668518066, -5.7220458984375e-05, -1.71661376953125e-05, -0.006232261657714844, 0.0, -1.9073486328125e-06, -0.20962154865264893, -1.71661376953125e-05, -0.0014667510986328125, 0.0, -0.2712094783782959, 0.0, -0.00011932849884033203, 0.0, -4.649129550671205e-05, 0.0, -3.4332275390625e-05, -8.58306884765625e-05, -7.62939453125e-06, -1.1086402082582936e-05, 0.0, -1.1682440344884526e-05, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Taunt([Buff(Taunt()),\n            Buff(Taunt()), Buff(Taunt())], SelfSelector()), GreaterThan(\n            Count(MinionSelector(Hasminions(), EnemyPlayer())), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Taunt"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}], "_type": "List"}, {"_type": "Template19", "hole0": "SelfSelector"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}]}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "DefenderOfArgus", "hole4": "player"}, "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Taunt", "<EOS>", 170, 38, 106, 171, 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -6.436986563731189, "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -2.1804051399230957, -0.011807799339294434, -0.002857208251953125, -0.2827787399291992, -8.7738037109375e-05, -0.08352375030517578, -0.0010662078857421875, -0.012541770935058594, -0.13668334484100342, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -0.06386108696460724, -0.00022170554439071566, -2.288818359375e-05, -0.0002536773681640625, -0.0036700956989079714, 0.0, -3.814697265625e-06, 0.0, -0.0020101272966712713, -0.004411350004374981, -7.05718994140625e-05, -0.000156402587890625, -0.005985376890748739, 0.0, -5.7220458984375e-06, 0.0, -0.0004955522599630058, -0.0034783079754561186, -0.009296417236328125, -7.62939453125e-06, -0.1383455991744995, -2.1457672119140625e-06, 0.0, -6.29425048828125e-05, -0.25501251220703125, -8.58306884765625e-05, 0.0, -0.533534049987793, -0.0030144453048706055, 0.0, -0.000152587890625, -2.86102294921875e-05, -0.35076427459716797, -0.0003542889025993645, -3.635883331298828e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00019681449339259416, -0.001346588134765625, -1.1920928244535389e-07, -1.1018190383911133, -0.42861175537109375, -0.001499176025390625, -1.9073486328125e-06, 0.0, -0.01822185143828392, -0.0013395469868555665, -1.9073486328125e-06, -0.011632919311523438, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.3961063561728224e-05, -1.0728830375228426e-06, -0.3304920196533203, -1.71661376953125e-05, -0.02391815185546875, 0.0, 0.0, -0.3449946641921997, -1.1444091796875e-05, -0.0025043487548828125, 0.0, -0.0011478662490844727, 0.0, -0.00012719629739876837, 0.0, -0.00011133805674035102, 0.0, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -2.0742198103107512e-05, 0.0, -2.1099816876812838e-05, 0.0], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Taunt([Buff(Taunt()),\n            Buff(Taunt()), Buff(Taunt())], SelfSelector()), GreaterThan(\n            Count(MinionSelector(IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}], "gold_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Taunt()), Buff\n            (ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "windfury"}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.38296557675244003, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -0.03715229034423828, 0.0, -0.00011837482452392578, 0.0, -5.91278076171875e-05, -0.010412216186523438, -0.000240325927734375, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008196830749511719, -4.768370445162873e-07, -0.14698433876037598, 0.0, -0.000232696533203125, -0.0001678466796875, -0.00037419795989990234, 0.0], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "SHAMAN"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "windfury"}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "SHAMAN", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.3363176704490343, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -3.066793441772461, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0016984939575195312, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.006017088424414396, 0.0, -0.031097412109375, 0.0, -0.00010657310485839844, 0.0, -5.7220458984375e-05, -0.010244369506835938, -0.0002307891845703125, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008155107498168945, -4.768370445162873e-07, -0.14676785469055176, 0.0, -0.0002384185791015625, -0.00017547607421875, -0.00037229061126708984, 0.0], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.SHAMAN, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "charge"}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.723510158165709, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -0.03715229034423828, 0.0, -0.00011837482452392578, 0.0, -5.91278076171875e-05, -0.010412216186523438, -0.000240325927734375, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008196830749511719, -4.768370445162873e-07, -3.4605820178985596, 0.0, -0.027166366577148438, -0.0004634857177734375, -9.179115295410156e-05, 0.0], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "windfury"}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.9087718845451036, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -3.6300621032714844, 0.0, -0.00074005126953125, 0.0, -1.52587890625e-05, -0.0019073486328125, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0063079590909183025, 0.0, -0.03878593444824219, 0.0, -0.00012028217315673828, 0.0, -6.103515625e-05, -0.011007308959960938, -0.0002422332763671875, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008196830749511719, -4.768370445162873e-07, -0.1462538242340088, 0.0, -0.0002346038818359375, -0.000171661376953125, -0.00038182735443115234, 0.0], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.LEGENDARY, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Weapon"}}], "_type": "List"}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "buffs"}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Weapon", "<EOS>"], "score": -3.9734085024440446, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -0.03715229034423828, 0.0, -0.00011837482452392578, 0.0, -5.91278076171875e-05, -0.010412216186523438, -0.000240325927734375, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008196830749511719, -4.768370445162873e-07, -2.7863266468048096, 0.0, -0.11013507843017578, -0.000774383544921875, -4.9591064453125e-05, -0.0003261566162109375, -0.0015716552734375, -9.930133819580078e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.3991396725177765, -0.4396822452545166], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, buffs=[Buff(Weapon())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "divine_shield"}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.269854676827208, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -0.03715229034423828, 0.0, -0.00011837482452392578, 0.0, -5.91278076171875e-05, -0.010412216186523438, -0.000240325927734375, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008196830749511719, -4.768370445162873e-07, -4.03385066986084, 0.0, -0.0005626678466796875, -0.0001125335693359375, -0.00012230873107910156, 0.0], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"hole3": [{"arg": "windfury", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "_type": "Template14", "hole0": "Weapon", "hole1": 2, "hole2": 8}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 133, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 176, 53, 159, "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.287948784743541, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -3.4022178649902344, -1.9073486328125e-05, -2.6702880859375e-05, 0.0, -0.0004787445068359375, -0.008498191833496094, -0.41641807556152344, -0.00038413755828514695, -7.271766662597656e-05, -0.03464210033416748, 0.0, -0.0017020701197907329, -1.1920928244535389e-07, -0.1948719024658203, -2.288818359375e-05, 0.0, -0.0404888391494751, -5.7220458984375e-06, -0.0014066696166992188, -4.38690185546875e-05, -0.000247955322265625, -2.0265579223632812e-06], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "Card"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "windfury"}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "Card", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.534727584953714, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -4.256923675537109, 0.0, -6.103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.006693840026855469, 0.0, -5.14984130859375e-05, 0.0, -0.006111740134656429, 0.0, -0.03031158447265625, 0.0, -0.00011420249938964844, 0.0, -5.340576171875e-05, -0.008653640747070312, -0.0002384185791015625, -4.5299530029296875e-06, -4.768370445162873e-07, -0.0008139610290527344, -5.960462772236497e-07, -0.1522533893585205, 0.0, -0.000244140625, -0.0001773834228515625, -0.00037992000579833984, 0.0], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.Card, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "windfury"}], "hole0": "Doomhammer<UNK>", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<UNK>", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.586427231004109, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -4.223621368408203, -0.000806378957349807, -0.00514421658590436, -1.7404556274414062e-05, -2.2649765014648438e-06, -0.04065513610839844, -7.2479248046875e-05, -0.000797271728515625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -1.71661376953125e-05, -1.1920922133867862e-06, -3.814697265625e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0006899849977344275, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0012416839599609375, -0.00011837482452392578, -0.0024280548095703125, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0004006624221801758, 0.0, -0.10541927814483643, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -1.71661376953125e-05, -0.003063201904296875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.00640249066054821, 0.0, -0.035986900329589844, 0.0, -0.00010859966278076172, 0.0, -5.53131103515625e-05, -0.009357452392578125, -0.0002346038818359375, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008195638656616211, -4.768370445162873e-07, -0.1468508243560791, 0.0, -0.00023651123046875, -0.0001697540283203125, -0.00037801265716552734, 0.0], "inferred_code": "class Doomhammer<UNK>(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, windfury=True)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 2, "hole2": 8}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "score": -4.723332316415963, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -3.4022178649902344, -1.9073486328125e-05, -2.6702880859375e-05, 0.0, -0.0004787445068359375, -0.008498191833496094, -1.1127214431762695, -0.00024163199122995138, -1.9073486328125e-06, -0.010935783386230469, 0.0, -0.0017918585799634457, 0.0], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "DoomhammerWindfury"}}], "_type": "List"}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "buffs"}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Doomhammer", "Windfury", "<EOS>"], "score": -5.196444583042876, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -0.03715229034423828, 0.0, -0.00011837482452392578, 0.0, -5.91278076171875e-05, -0.010412216186523438, -0.000240325927734375, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008196830749511719, -4.768370445162873e-07, -2.7863266468048096, 0.0, -0.11013507843017578, -0.000774383544921875, -4.9591064453125e-05, -0.0003261566162109375, -0.0015716552734375, -9.930133819580078e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -1.8849425315856934, -0.1769077181816101, -7.748603820800781e-06], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, buffs=[Buff(DoomhammerWindfury())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"hole3": [{"arg": "windfury", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "_type": "Template14", "hole0": "Weapon", "hole1": 2, "hole2": 8}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 70, 133, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 176, 53, 159, "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.455532559424199, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -0.03715229034423828, 0.0, -0.00011837482452392578, 0.0, -5.91278076171875e-05, -4.601031303405762, -0.014000892639160156, -8.248941594501957e-05, -0.000164031982421875, -0.0555645227432251, 0.0, -0.0024323463439941406, -2.3841855067985307e-07, -0.5187158584594727, -2.47955322265625e-05, 0.0, -0.03838706016540527, -5.7220458984375e-06, -0.001079559326171875, -4.9591064453125e-05, -0.000263214111328125, -2.0265579223632812e-06], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Weapon<UNK>Health"}}], "_type": "List"}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "buffs"}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Weapon", "<UNK>", "Health", "<EOS>"], "score": -5.678690236910597, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -0.03715229034423828, 0.0, -0.00011837482452392578, 0.0, -5.91278076171875e-05, -0.010412216186523438, -0.000240325927734375, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008196830749511719, -4.768370445162873e-07, -2.7863266468048096, 0.0, -0.11013507843017578, -0.000774383544921875, -4.9591064453125e-05, -0.0003261566162109375, -0.0015716552734375, -9.930133819580078e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.3991396725177765, -1.3545949459075928, -0.7903671264648438, -1.9073486328125e-06], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, buffs=[Buff(Weapon<UNK>Health())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "overload", "_type": "keyword", "value": {"_type": "Num", "n": 2}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}, "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 8}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}]}, "_type": "Template9", "hole0": 2, "hole1": 8, "hole2": "buffs"}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "buffs", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "8", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>"], "score": -6.355022963728743, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -0.03715229034423828, 0.0, -0.00011837482452392578, 0.0, -5.91278076171875e-05, -0.010412216186523438, -0.000240325927734375, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008196830749511719, -4.768370445162873e-07, -2.7863266468048096, 0.0, -2.3297367095947266, -0.16870403289794922, -0.003353118896484375, -3.814697265625e-06, -3.814697265625e-06, -0.05811595916748047, -8.0108642578125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -0.00458979606628418, -0.02608799934387207, 0.0, -7.62939453125e-05, -0.00083160400390625, -4.00543212890625e-05, -0.00516510009765625, -9.5367431640625e-06, -1.9073486328125e-06, -0.30261072516441345, -1.8238997654407285e-05, -0.1187744140625, -0.054920196533203125, -3.4332275390625e-05, -0.0001068115234375, -0.1290062665939331, -0.00017118453979492188, 0.0, -0.0003604888916015625, -3.814697265625e-06, 0.0, -0.004465818405151367, 0.0, -0.1064291000366211, -3.4332275390625e-05, -0.0032025573309510946, -0.016378119587898254, -7.82012939453125e-05], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, buffs=[Aura(ManaChange(-8), CardSelector(\n            condition=IsSpell()))])\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 2, "hole2": 8}], "hole0": "Doomhammer", "hole4": "player"}, "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 41, 111, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "score": -6.391227390324275, "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -5.162172317504883, -3.4332275390625e-05, 0.0, -4.172325134277344e-06, 0.0, -7.069110870361328e-05, -1.9073486328125e-06, -0.7564811706542969, -1.9073486328125e-06, -5.14984130859375e-05, -7.426462980220094e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.3947466868557967e-05, -0.0014409251743927598, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00048065185546875, -0.0001163482666015625, -0.002910614013671875, 0.0, -0.0002918243408203125, 0.0, -1.52587890625e-05, 0.0, -0.000911712646484375, 0.0, -0.10402202606201172, 0.0, -0.0016031265258789062, -0.0014705657958984375, -0.00011837482452392578, -9.5367431640625e-06, -0.13046836853027344, -1.9073486328125e-06, -0.0024167299270629883, 0.0, -0.0004291534423828125, -0.0017070770263671875, -0.16085338592529297, -6.019999636919238e-05, -9.5367431640625e-06, -0.0016505718231201172, 0.0, -0.000716879905667156, 0.0], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, True)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8)\n"}], "gold_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, buffs=[Buff(Windfury())])\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.560928471100588, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.4444732666015625, -0.000644683837890625, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2397744285408407e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.2500438690185547, -0.000274658203125, -1.33514404296875e-05, -0.000213623046875, -0.007958412170410156, -1.015149712562561, -4.291534423828125e-06, -0.0037708282470703125, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.0030766725540161133, 0.0, -0.00194549560546875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.04578971862792969, 0.0, -0.0007228851318359375, 0.0, -0.22428345680236816, -1.919269561767578e-05, -0.10315322875976562, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07970333099365234, -0.011475563049316406, -0.2141132354736328, -0.00016021728515625, -0.00096893310546875, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.03610706329345703, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047229766845703125, -0.0001010894775390625, -0.0033545494079589844, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.001857251743786037, -2.0265579223632812e-06, -1.9073486328125e-06, -0.024216651916503906, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28829383850097656, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -0.2828836441040039, -4.1961669921875e-05, -0.009382247924804688, -2.47955322265625e-05, -0.12402725219726562, -1.9073486328125e-06, -0.0210418701171875, 0.0, -0.005254983901977539, 0.0, -0.003358006477355957, -9.536735888104886e-06, -0.0033512115478515625, -0.015370368957519531, -2.288818359375e-05, -0.029979705810546875, -0.00261688232421875, -0.016092300415039062, -3.933904736186378e-06, -0.06636238098144531, -0.014750480651855469, -0.0018939971923828125, -0.0006198883056640625, -2.86102294921875e-05, -0.000335693359375, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004362344741821289, 0.0, -7.62939453125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.0002484917640686035, -3.8146317820064723e-05, -0.0040378570556640625, -0.06630229949951172, -0.0008726119995117188, -9.5367431640625e-06, -8.7738037109375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008918523788452148, -2.47955322265625e-05, -0.0009555816650390625, -0.0014896392822265625, -0.0001087188720703125, -0.00016151368618011475, -4.6371587814064696e-05, -0.003971099853515625, -0.0007457733154296875, -0.0001316070556640625, -0.5572214126586914, -0.0001087188720703125, -0.0005245208740234375, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.17113268375396729, 0.0, -0.0002593994140625, -0.5130605697631836, -2.47955322265625e-05, -0.0005552768707275391, -3.1828854844206944e-05, -0.004131317138671875, -9.5367431640625e-06, -0.014186859130859375, -1.9073486328125e-06], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            self.target.damage(1, self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.733407996307243, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.9197179079055786, 0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.000301361083984375, 0.0, -2.5510787963867188e-05, 0.0, -1.33514404296875e-05, -4.76837158203125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.0008516311645507812, -2.0265579223632812e-06, -5.245207830739673e-06, 0.0, -5.161762237548828e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.29425048828125e-05, -1.728534698486328e-05, -1.4558610916137695, -0.000652313232421875, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2516951755969785e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.25369930267333984, -0.0002765655517578125, -1.33514404296875e-05, -0.000213623046875, -0.007939338684082031, -1.013961911201477, -4.291534423828125e-06, -0.0037670135498046875, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.003075718879699707, 0.0, -0.0019445419311523438, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.045821189880371094, 0.0, -0.0007228851318359375, 0.0, -0.22423863410949707, -1.919269561767578e-05, -0.10314559936523438, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07931327819824219, -0.011469841003417969, -0.2142181396484375, -0.00016021728515625, -0.000972747802734375, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.036131858825683594, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047242164611816406, -0.0001010894775390625, -0.003356456756591797, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.0018562980694696307, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0242156982421875, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28830528259277344, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -0.28289318084716797, -4.1961669921875e-05, -0.009382247924804688, -2.47955322265625e-05, -0.1240386962890625, -1.9073486328125e-06, -0.0210418701171875, 0.0, -0.005254983901977539, 0.0, -0.003358006477355957, -9.536735888104886e-06, -0.0033512115478515625, -0.015370368957519531, -2.288818359375e-05, -0.02998065948486328, -0.00261688232421875, -0.016092300415039062, -3.933904736186378e-06, -0.06632614135742188, -0.014748573303222656, -0.0018939971923828125, -0.0006198883056640625, -2.86102294921875e-05, -0.000335693359375, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004362344741821289, 0.0, -7.62939453125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.00024825334548950195, -3.8146317820064723e-05, -0.0040378570556640625, -0.06631278991699219, -0.0008726119995117188, -9.5367431640625e-06, -8.7738037109375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008918523788452148, -2.47955322265625e-05, -0.0009555816650390625, -0.0014896392822265625, -0.0001087188720703125, -0.00016069412231445312, -4.6371587814064696e-05, -0.0039730072021484375, -0.0007457733154296875, -0.0001316070556640625, -0.5572576522827148, -0.0001087188720703125, -0.0005245208740234375, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.17114412784576416, 0.0, -0.0002593994140625, -0.5127248764038086, -2.47955322265625e-05, -0.0005549192428588867, -3.1828854844206944e-05, -0.0041370391845703125, -9.5367431640625e-06, -0.014192581176757812, -1.9073486328125e-06], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            self.target.damage(1, self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -7.008395592639957, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.4444732666015625, -0.000644683837890625, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2397744285408407e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.2500438690185547, -0.000274658203125, -1.33514404296875e-05, -0.000213623046875, -0.007958412170410156, -1.015149712562561, -4.291534423828125e-06, -0.0037708282470703125, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.0030766725540161133, 0.0, -0.00194549560546875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.04578971862792969, 0.0, -0.0007228851318359375, 0.0, -0.22428345680236816, -1.919269561767578e-05, -0.10315322875976562, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07970333099365234, -0.011475563049316406, -0.2141132354736328, -0.00016021728515625, -0.00096893310546875, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.03610706329345703, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047229766845703125, -0.0001010894775390625, -0.0033545494079589844, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.001857251743786037, -2.0265579223632812e-06, -1.9073486328125e-06, -0.024216651916503906, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28829383850097656, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -0.2828836441040039, -4.1961669921875e-05, -0.009382247924804688, -2.47955322265625e-05, -0.12402725219726562, -1.9073486328125e-06, -0.0210418701171875, 0.0, -0.005254983901977539, 0.0, -0.003358006477355957, -9.536735888104886e-06, -0.0033512115478515625, -0.015370368957519531, -2.288818359375e-05, -0.029979705810546875, -0.00261688232421875, -0.016092300415039062, -3.933904736186378e-06, -0.06636238098144531, -0.014750480651855469, -0.0018939971923828125, -0.0006198883056640625, -2.86102294921875e-05, -0.000335693359375, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004362344741821289, 0.0, -7.62939453125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.0002484917640686035, -3.8146317820064723e-05, -0.0040378570556640625, -0.06630229949951172, -0.0008726119995117188, -9.5367431640625e-06, -8.7738037109375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008918523788452148, -2.47955322265625e-05, -0.0009555816650390625, -0.0014896392822265625, -0.0001087188720703125, -0.00016151368618011475, -4.6371587814064696e-05, -0.003971099853515625, -0.0007457733154296875, -0.0001316070556640625, -0.5572214126586914, -0.0001087188720703125, -0.0005245208740234375, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.17113268375396729, 0.0, -0.0002593994140625, -0.9261531829833984, -0.02932453155517578, -0.0002613067626953125, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.000152587890625, -1.1920928244535389e-07, -0.014813542366027832, -1.52587890625e-05, -4.57763671875e-05, -0.00011444091796875, -7.62939453125e-06, -6.002187728881836e-05, -0.00023338499886449426, -0.0001621246337890625, -0.0003147125244140625, -0.007732391357421875, -1.9073486328125e-06], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -7.181726585098389, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.9197179079055786, 0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.000301361083984375, 0.0, -2.5510787963867188e-05, 0.0, -1.33514404296875e-05, -4.76837158203125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.0008516311645507812, -2.0265579223632812e-06, -5.245207830739673e-06, 0.0, -5.161762237548828e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.29425048828125e-05, -1.728534698486328e-05, -1.4558610916137695, -0.000652313232421875, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2516951755969785e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.25369930267333984, -0.0002765655517578125, -1.33514404296875e-05, -0.000213623046875, -0.007939338684082031, -1.013961911201477, -4.291534423828125e-06, -0.0037670135498046875, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.003075718879699707, 0.0, -0.0019445419311523438, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.045821189880371094, 0.0, -0.0007228851318359375, 0.0, -0.22423863410949707, -1.919269561767578e-05, -0.10314559936523438, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07931327819824219, -0.011469841003417969, -0.2142181396484375, -0.00016021728515625, -0.000972747802734375, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.036131858825683594, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047242164611816406, -0.0001010894775390625, -0.003356456756591797, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.0018562980694696307, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0242156982421875, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28830528259277344, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -0.28289318084716797, -4.1961669921875e-05, -0.009382247924804688, -2.47955322265625e-05, -0.1240386962890625, -1.9073486328125e-06, -0.0210418701171875, 0.0, -0.005254983901977539, 0.0, -0.003358006477355957, -9.536735888104886e-06, -0.0033512115478515625, -0.015370368957519531, -2.288818359375e-05, -0.02998065948486328, -0.00261688232421875, -0.016092300415039062, -3.933904736186378e-06, -0.06632614135742188, -0.014748573303222656, -0.0018939971923828125, -0.0006198883056640625, -2.86102294921875e-05, -0.000335693359375, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004362344741821289, 0.0, -7.62939453125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.00024825334548950195, -3.8146317820064723e-05, -0.0040378570556640625, -0.06631278991699219, -0.0008726119995117188, -9.5367431640625e-06, -8.7738037109375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008918523788452148, -2.47955322265625e-05, -0.0009555816650390625, -0.0014896392822265625, -0.0001087188720703125, -0.00016069412231445312, -4.6371587814064696e-05, -0.0039730072021484375, -0.0007457733154296875, -0.0001316070556640625, -0.5572576522827148, -0.0001087188720703125, -0.0005245208740234375, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.17114412784576416, 0.0, -0.0002593994140625, -0.926661491394043, -0.029340744018554688, -0.0002613067626953125, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.000152587890625, -1.1920928244535389e-07, -0.014813542366027832, -1.52587890625e-05, -4.57763671875e-05, -0.00011444091796875, -7.62939453125e-06, -5.950033664703369e-05, -0.00023338499886449426, -0.0001621246337890625, -0.0003147125244140625, -0.007735252380371094, -1.9073486328125e-06], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "summon", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "summon", "<EOS>", 171, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", 40, 110, "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "score": -7.2581641399020995, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.4444732666015625, -0.000644683837890625, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2397744285408407e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.2500438690185547, -0.000274658203125, -1.33514404296875e-05, -0.000213623046875, -0.007958412170410156, -1.015149712562561, -4.291534423828125e-06, -0.0037708282470703125, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.0030766725540161133, 0.0, -0.00194549560546875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.04578971862792969, 0.0, -0.0007228851318359375, 0.0, -0.22428345680236816, -1.919269561767578e-05, -0.10315322875976562, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07970333099365234, -0.011475563049316406, -0.2141132354736328, -0.00016021728515625, -0.00096893310546875, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.03610706329345703, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047229766845703125, -0.0001010894775390625, -0.0033545494079589844, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.001857251743786037, -2.0265579223632812e-06, -1.9073486328125e-06, -0.024216651916503906, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28829383850097656, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -0.2828836441040039, -4.1961669921875e-05, -0.009382247924804688, -2.47955322265625e-05, -0.12402725219726562, -1.9073486328125e-06, -0.0210418701171875, 0.0, -0.005254983901977539, 0.0, -0.003358006477355957, -9.536735888104886e-06, -0.0033512115478515625, -0.015370368957519531, -2.288818359375e-05, -0.029979705810546875, -0.00261688232421875, -0.016092300415039062, -3.933904736186378e-06, -0.06636238098144531, -0.014750480651855469, -0.0018939971923828125, -0.0006198883056640625, -2.86102294921875e-05, -0.000335693359375, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004362344741821289, 0.0, -7.62939453125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.0002484917640686035, -3.8146317820064723e-05, -0.0040378570556640625, -0.06630229949951172, -0.0008726119995117188, -9.5367431640625e-06, -8.7738037109375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008918523788452148, -2.47955322265625e-05, -0.0009555816650390625, -0.0014896392822265625, -0.0001087188720703125, -0.00016151368618011475, -4.6371587814064696e-05, -0.003971099853515625, -0.0007457733154296875, -0.0001316070556640625, -0.8881721496582031, -5.340576171875e-05, -0.023278044536709785, -0.002878227038308978, -0.6232281923294067, -3.576278118089249e-07, -0.00818634033203125, -0.00142669677734375, -7.62939453125e-06, -0.018319129943847656, 0.0, -0.0006351470947265625, -5.7220458984375e-06, -0.0001316070556640625, -6.675719760096399e-06, -0.0016326904296875, -1.9073486328125e-06, -0.006428122520446777, 0.0, -0.07415771484375, -0.0002899169921875, -0.00011265277862548828, -1.9073486328125e-06, -0.0001983642578125, -0.0002269744873046875, -0.000682830810546875, 0.0, -0.0001239776611328125, 0.0, -4.00543212890625e-05, -3.814697265625e-06, 0.0, -0.0005464553833007812, -1.9073486328125e-06, -0.053501129150390625, -3.814697265625e-06, -0.000698089599609375, 0.0, -0.004970550537109375, -2.47955322265625e-05, -0.24835491180419922, -0.00018310546875], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            super().summon(self.target.player, game, len(self.target.card))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "summon", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "summon", "<EOS>", 171, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", 40, 110, "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "score": -7.430878324171452, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.9197179079055786, 0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.000301361083984375, 0.0, -2.5510787963867188e-05, 0.0, -1.33514404296875e-05, -4.76837158203125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.0008516311645507812, -2.0265579223632812e-06, -5.245207830739673e-06, 0.0, -5.161762237548828e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.29425048828125e-05, -1.728534698486328e-05, -1.4558610916137695, -0.000652313232421875, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2516951755969785e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.25369930267333984, -0.0002765655517578125, -1.33514404296875e-05, -0.000213623046875, -0.007939338684082031, -1.013961911201477, -4.291534423828125e-06, -0.0037670135498046875, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.003075718879699707, 0.0, -0.0019445419311523438, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.045821189880371094, 0.0, -0.0007228851318359375, 0.0, -0.22423863410949707, -1.919269561767578e-05, -0.10314559936523438, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07931327819824219, -0.011469841003417969, -0.2142181396484375, -0.00016021728515625, -0.000972747802734375, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.036131858825683594, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047242164611816406, -0.0001010894775390625, -0.003356456756591797, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.0018562980694696307, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0242156982421875, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28830528259277344, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -0.28289318084716797, -4.1961669921875e-05, -0.009382247924804688, -2.47955322265625e-05, -0.1240386962890625, -1.9073486328125e-06, -0.0210418701171875, 0.0, -0.005254983901977539, 0.0, -0.003358006477355957, -9.536735888104886e-06, -0.0033512115478515625, -0.015370368957519531, -2.288818359375e-05, -0.02998065948486328, -0.00261688232421875, -0.016092300415039062, -3.933904736186378e-06, -0.06632614135742188, -0.014748573303222656, -0.0018939971923828125, -0.0006198883056640625, -2.86102294921875e-05, -0.000335693359375, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004362344741821289, 0.0, -7.62939453125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.00024825334548950195, -3.8146317820064723e-05, -0.0040378570556640625, -0.06631278991699219, -0.0008726119995117188, -9.5367431640625e-06, -8.7738037109375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008918523788452148, -2.47955322265625e-05, -0.0009555816650390625, -0.0014896392822265625, -0.0001087188720703125, -0.00016069412231445312, -4.6371587814064696e-05, -0.0039730072021484375, -0.0007457733154296875, -0.0001316070556640625, -0.8881216049194336, -5.340576171875e-05, -0.023280365392565727, -0.0028784647583961487, -0.6232329607009888, -3.576278118089249e-07, -0.00818634033203125, -0.00142669677734375, -7.62939453125e-06, -0.01830005645751953, 0.0, -0.0006351470947265625, -5.7220458984375e-06, -0.0001316070556640625, -6.675719760096399e-06, -0.0016326904296875, -1.9073486328125e-06, -0.006430983543395996, 0.0, -0.07418251037597656, -0.0002899169921875, -0.00011265277862548828, -1.9073486328125e-06, -0.0001983642578125, -0.0002269744873046875, -0.000682830810546875, 0.0, -0.0001239776611328125, 0.0, -4.00543212890625e-05, -3.814697265625e-06, 0.0, -0.0005464553833007812, -1.9073486328125e-06, -0.05350017547607422, -3.814697265625e-06, -0.000698089599609375, 0.0, -0.004970550537109375, -2.47955322265625e-05, -0.24834823608398438, -0.00018310546875], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            super().summon(self.target.player, game, len(self.target.card))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -7.854309834272691, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.4444732666015625, -0.000644683837890625, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2397744285408407e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.2500438690185547, -0.000274658203125, -1.33514404296875e-05, -0.000213623046875, -0.007958412170410156, -1.015149712562561, -4.291534423828125e-06, -0.0037708282470703125, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.0030766725540161133, 0.0, -0.00194549560546875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.04578971862792969, 0.0, -0.0007228851318359375, 0.0, -0.22428345680236816, -1.919269561767578e-05, -0.10315322875976562, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07970333099365234, -0.011475563049316406, -0.2141132354736328, -0.00016021728515625, -0.00096893310546875, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.03610706329345703, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047229766845703125, -0.0001010894775390625, -0.0033545494079589844, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.001857251743786037, -2.0265579223632812e-06, -1.9073486328125e-06, -0.024216651916503906, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28829383850097656, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -1.4312658309936523, -3.814697265625e-06, -0.003968238830566406, -3.24249267578125e-05, -0.141876220703125, -3.814697265625e-06, -0.1656169891357422, -1.9073486328125e-06, -0.004503846168518066, 0.0, -0.0036736726760864258, -1.8000580894295126e-05, -0.0028228759765625, -0.01610279083251953, -2.6702880859375e-05, -0.02021503448486328, -0.002170562744140625, -0.01620650291442871, -3.576277322281385e-06, -0.08656501770019531, -0.014684677124023438, -0.0020542144775390625, -0.00051116943359375, -2.86102294921875e-05, -0.00041961669921875, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004267215728759766, 0.0, -7.62939453125e-06, -0.000431060791015625, -1.9073486328125e-06, -0.0002485513687133789, -3.611982901929878e-05, -0.0045318603515625, -0.06566715240478516, -0.00084686279296875, -9.5367431640625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008901238441467285, -2.47955322265625e-05, -0.0008831024169921875, -0.0015811920166015625, -0.00011444091796875, -0.0001542121171951294, -4.7206016461132094e-05, -0.0039348602294921875, -0.000743865966796875, -0.000133514404296875, -0.5650501251220703, -0.0001049041748046875, -0.000522613525390625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.1726909875869751, 0.0, -0.0002593994140625, -0.4817848205566406, -2.47955322265625e-05, -0.0005407333374023438, -3.1828854844206944e-05, -0.0043354034423828125, -9.5367431640625e-06, -0.014248847961425781, -1.9073486328125e-06], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.BEAST and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            self.target.damage(1, self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -8.026732317834295, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.9197179079055786, 0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.000301361083984375, 0.0, -2.5510787963867188e-05, 0.0, -1.33514404296875e-05, -4.76837158203125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.0008516311645507812, -2.0265579223632812e-06, -5.245207830739673e-06, 0.0, -5.161762237548828e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.29425048828125e-05, -1.728534698486328e-05, -1.4558610916137695, -0.000652313232421875, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2516951755969785e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.25369930267333984, -0.0002765655517578125, -1.33514404296875e-05, -0.000213623046875, -0.007939338684082031, -1.013961911201477, -4.291534423828125e-06, -0.0037670135498046875, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.003075718879699707, 0.0, -0.0019445419311523438, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.045821189880371094, 0.0, -0.0007228851318359375, 0.0, -0.22423863410949707, -1.919269561767578e-05, -0.10314559936523438, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07931327819824219, -0.011469841003417969, -0.2142181396484375, -0.00016021728515625, -0.000972747802734375, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.036131858825683594, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047242164611816406, -0.0001010894775390625, -0.003356456756591797, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.0018562980694696307, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0242156982421875, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28830528259277344, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -1.4312362670898438, -3.814697265625e-06, -0.003968238830566406, -3.24249267578125e-05, -0.14188385009765625, -3.814697265625e-06, -0.165618896484375, -1.9073486328125e-06, -0.004503846168518066, 0.0, -0.0036736726760864258, -1.8000580894295126e-05, -0.0028228759765625, -0.016103744506835938, -2.6702880859375e-05, -0.020216941833496094, -0.002170562744140625, -0.016205549240112305, -3.576277322281385e-06, -0.086517333984375, -0.014681816101074219, -0.0020542144775390625, -0.00051116943359375, -2.86102294921875e-05, -0.00041961669921875, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004266262054443359, 0.0, -7.62939453125e-06, -0.0004291534423828125, -1.9073486328125e-06, -0.00024950504302978516, -3.611982901929878e-05, -0.0045318603515625, -0.06567668914794922, -0.00084686279296875, -9.5367431640625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008902192115783691, -2.47955322265625e-05, -0.0008831024169921875, -0.0015811920166015625, -0.00011444091796875, -0.00015351176261901855, -4.7206016461132094e-05, -0.0039348602294921875, -0.000743865966796875, -0.000133514404296875, -0.5650863647460938, -0.0001049041748046875, -0.000522613525390625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.17270147800445557, 0.0, -0.0002593994140625, -0.4814472198486328, -2.47955322265625e-05, -0.0005421042442321777, -3.1828854844206944e-05, -0.00434112548828125, -9.5367431640625e-06, -0.014254570007324219, -1.9073486328125e-06], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.BEAST and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            self.target.damage(1, self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -8.278650095599879, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.4444732666015625, -0.000644683837890625, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2397744285408407e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.2500438690185547, -0.000274658203125, -1.33514404296875e-05, -0.000213623046875, -0.007958412170410156, -1.015149712562561, -4.291534423828125e-06, -0.0037708282470703125, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.0030766725540161133, 0.0, -0.00194549560546875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.04578971862792969, 0.0, -0.0007228851318359375, 0.0, -0.22428345680236816, -1.919269561767578e-05, -0.10315322875976562, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07970333099365234, -0.011475563049316406, -0.2141132354736328, -0.00016021728515625, -0.00096893310546875, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.03610706329345703, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047229766845703125, -0.0001010894775390625, -0.0033545494079589844, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.001857251743786037, -2.0265579223632812e-06, -1.9073486328125e-06, -0.024216651916503906, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28829383850097656, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -0.2828836441040039, -4.1961669921875e-05, -0.009382247924804688, -2.47955322265625e-05, -0.12402725219726562, -1.9073486328125e-06, -0.0210418701171875, 0.0, -0.005254983901977539, 0.0, -0.003358006477355957, -9.536735888104886e-06, -0.0033512115478515625, -0.015370368957519531, -2.288818359375e-05, -0.029979705810546875, -0.00261688232421875, -0.016092300415039062, -3.933904736186378e-06, -0.06636238098144531, -0.014750480651855469, -0.0018939971923828125, -0.0006198883056640625, -2.86102294921875e-05, -0.000335693359375, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004362344741821289, 0.0, -7.62939453125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.0002484917640686035, -3.8146317820064723e-05, -0.0040378570556640625, -0.06630229949951172, -0.0008726119995117188, -9.5367431640625e-06, -8.7738037109375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008918523788452148, -2.47955322265625e-05, -0.0009555816650390625, -0.0014896392822265625, -0.0001087188720703125, -0.00016151368618011475, -4.6371587814064696e-05, -0.003971099853515625, -0.0007457733154296875, -0.0001316070556640625, -0.8881721496582031, -5.340576171875e-05, -0.023278044536709785, -0.002878227038308978, -1.7819510698318481, -7.152555099310121e-07, -0.005043983459472656, -0.22917747497558594, -0.01881694793701172, -0.0006465911865234375, -0.0002574920654296875, -0.0003376007080078125, 0.0, -0.0018502473831176758, -2.741813204920618e-06, -0.014589428901672363, -1.537799835205078e-05, -3.0517578125e-05, -6.103515625e-05, -7.62939453125e-06, -5.3882598876953125e-05, -0.0007576527423225343, -0.00061798095703125, -5.53131103515625e-05, -0.010343551635742188, -1.9073486328125e-06], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            super().damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -8.38303325608122, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.4444732666015625, -0.000644683837890625, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2397744285408407e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.2500438690185547, -0.000274658203125, -1.33514404296875e-05, -0.000213623046875, -0.007958412170410156, -1.015149712562561, -4.291534423828125e-06, -0.0037708282470703125, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.0030766725540161133, 0.0, -0.00194549560546875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.04578971862792969, 0.0, -0.0007228851318359375, 0.0, -0.22428345680236816, -1.919269561767578e-05, -0.10315322875976562, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07970333099365234, -0.011475563049316406, -0.2141132354736328, -0.00016021728515625, -0.00096893310546875, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.03610706329345703, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047229766845703125, -0.0001010894775390625, -0.0033545494079589844, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.001857251743786037, -2.0265579223632812e-06, -1.9073486328125e-06, -0.024216651916503906, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28829383850097656, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -1.4312658309936523, -3.814697265625e-06, -0.003968238830566406, -3.24249267578125e-05, -0.141876220703125, -3.814697265625e-06, -0.1656169891357422, -1.9073486328125e-06, -0.004503846168518066, 0.0, -0.0036736726760864258, -1.8000580894295126e-05, -0.0028228759765625, -0.01610279083251953, -2.6702880859375e-05, -0.02021503448486328, -0.002170562744140625, -0.01620650291442871, -3.576277322281385e-06, -0.08656501770019531, -0.014684677124023438, -0.0020542144775390625, -0.00051116943359375, -2.86102294921875e-05, -0.00041961669921875, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004267215728759766, 0.0, -7.62939453125e-06, -0.000431060791015625, -1.9073486328125e-06, -0.0002485513687133789, -3.611982901929878e-05, -0.0045318603515625, -0.06566715240478516, -0.00084686279296875, -9.5367431640625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008901238441467285, -2.47955322265625e-05, -0.0008831024169921875, -0.0015811920166015625, -0.00011444091796875, -0.0001542121171951294, -4.7206016461132094e-05, -0.0039348602294921875, -0.000743865966796875, -0.000133514404296875, -0.5650501251220703, -0.0001049041748046875, -0.000522613525390625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.1726909875869751, 0.0, -0.0002593994140625, -0.9751911163330078, -0.030481338500976562, -0.0002536773681640625, -3.814697265625e-06, -7.62939453125e-05, 0.0, -0.000141143798828125, -1.1920928244535389e-07, -0.015050053596496582, -1.52587890625e-05, -4.57763671875e-05, -0.00011444091796875, -7.62939453125e-06, -5.85019588470459e-05, -0.00023314663849305362, -0.000171661376953125, -0.00031280517578125, -0.007542610168457031, -1.9073486328125e-06], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.BEAST and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "summon", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "summon", "<EOS>", 171, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", 40, 110, "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "score": -8.558882888629931, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.4444732666015625, -0.000644683837890625, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2397744285408407e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.2500438690185547, -0.000274658203125, -1.33514404296875e-05, -0.000213623046875, -0.007958412170410156, -1.015149712562561, -4.291534423828125e-06, -0.0037708282470703125, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.0030766725540161133, 0.0, -0.00194549560546875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.04578971862792969, 0.0, -0.0007228851318359375, 0.0, -0.22428345680236816, -1.919269561767578e-05, -0.10315322875976562, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07970333099365234, -0.011475563049316406, -0.2141132354736328, -0.00016021728515625, -0.00096893310546875, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.03610706329345703, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047229766845703125, -0.0001010894775390625, -0.0033545494079589844, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.001857251743786037, -2.0265579223632812e-06, -1.9073486328125e-06, -0.024216651916503906, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28829383850097656, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -1.4312658309936523, -3.814697265625e-06, -0.003968238830566406, -3.24249267578125e-05, -0.141876220703125, -3.814697265625e-06, -0.1656169891357422, -1.9073486328125e-06, -0.004503846168518066, 0.0, -0.0036736726760864258, -1.8000580894295126e-05, -0.0028228759765625, -0.01610279083251953, -2.6702880859375e-05, -0.02021503448486328, -0.002170562744140625, -0.01620650291442871, -3.576277322281385e-06, -0.08656501770019531, -0.014684677124023438, -0.0020542144775390625, -0.00051116943359375, -2.86102294921875e-05, -0.00041961669921875, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004267215728759766, 0.0, -7.62939453125e-06, -0.000431060791015625, -1.9073486328125e-06, -0.0002485513687133789, -3.611982901929878e-05, -0.0045318603515625, -0.06566715240478516, -0.00084686279296875, -9.5367431640625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008901238441467285, -2.47955322265625e-05, -0.0008831024169921875, -0.0015811920166015625, -0.00011444091796875, -0.0001542121171951294, -4.7206016461132094e-05, -0.0039348602294921875, -0.000743865966796875, -0.000133514404296875, -0.8770837783813477, -5.340576171875e-05, -0.02314293198287487, -0.0028841705061495304, -0.6191874742507935, -3.576278118089249e-07, -0.00807952880859375, -0.0014019012451171875, -7.62939453125e-06, -0.019179344177246094, 0.0, -0.0006389617919921875, -5.7220458984375e-06, -0.000133514404296875, -6.675719760096399e-06, -0.0016307830810546875, -1.9073486328125e-06, -0.006431937217712402, 0.0, -0.07464218139648438, -0.000293731689453125, -0.00011456012725830078, -1.9073486328125e-06, -0.0001983642578125, -0.0002288818359375, -0.0006923675537109375, 0.0, -0.0001239776611328125, 0.0, -4.00543212890625e-05, -3.814697265625e-06, 0.0, -0.0005483627319335938, -1.9073486328125e-06, -0.05364513397216797, -3.814697265625e-06, -0.0007038116455078125, 0.0, -0.00496673583984375, -2.47955322265625e-05, -0.24792194366455078, -0.00018310546875], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.BEAST and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            super().summon(self.target.player, game, len(self.target.card))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -8.699950478592818, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.4444732666015625, -0.000644683837890625, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2397744285408407e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.2500438690185547, -0.000274658203125, -1.33514404296875e-05, -0.000213623046875, -0.007958412170410156, -1.015149712562561, -4.291534423828125e-06, -0.0037708282470703125, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.0030766725540161133, 0.0, -0.00194549560546875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.04578971862792969, 0.0, -0.0007228851318359375, 0.0, -0.22428345680236816, -1.919269561767578e-05, -0.10315322875976562, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07970333099365234, -0.011475563049316406, -0.2141132354736328, -0.00016021728515625, -0.00096893310546875, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.03610706329345703, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047229766845703125, -0.0001010894775390625, -0.0033545494079589844, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.001857251743786037, -2.0265579223632812e-06, -1.9073486328125e-06, -0.024216651916503906, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -1.4117364883422852, -0.00012969970703125, -2.47955322265625e-05, 0.0, -0.3882944583892822, 0.0, -0.0016908645629882812, -2.3841855067985307e-07, -0.3988802433013916, -1.4066696166992188e-05, -0.16658306121826172, -0.0001049041748046875, -0.1239156723022461, -3.814697265625e-06, -0.3378438949584961, -3.814697265625e-06, -0.004639029502868652, 0.0, -0.003243684768676758, -1.9788720237556845e-05, -0.001995086669921875, -0.016649246215820312, -2.09808349609375e-05, -0.034361839294433594, -0.0024776458740234375, -0.022245168685913086, -4.41074053014745e-06, -0.1267099380493164, -0.027022361755371094, -0.0016078948974609375, -0.0006351470947265625, -2.6702880859375e-05, -0.000274658203125, 0.0, -4.00543212890625e-05, 0.0, -3.814697265625e-05, 0.0, -0.00465238094329834, 0.0, -5.7220458984375e-06, -0.0005016326904296875, -1.9073486328125e-06, -0.00021886825561523438, -4.148405059822835e-05, -0.003971099853515625, -0.06816291809082031, -0.0008993148803710938, -9.5367431640625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.000247955322265625, -2.3841855067985307e-07, -0.00894153118133545, -2.47955322265625e-05, -0.0010089874267578125, -0.0014286041259765625, -0.000110626220703125, -0.00015157461166381836, -4.50603365607094e-05, -0.0039310455322265625, -0.000774383544921875, -0.0001392364501953125, -0.5645818710327148, -0.0001068115234375, -0.0005283355712890625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.17695677280426025, 0.0, -0.0002574920654296875, -0.4544363021850586, -2.47955322265625e-05, -0.0005425214767456055, -3.170964555465616e-05, -0.0049686431884765625, -9.5367431640625e-06, -0.014512062072753906, -1.9073486328125e-06], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is self.target.card and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            self.target.damage(1, self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 170, 43, 119, "Earth", " ", "Shock", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.707126956987587, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.4444732666015625, -0.000644683837890625, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2397744285408407e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.2500438690185547, -0.000274658203125, -1.33514404296875e-05, -0.000213623046875, -0.007958412170410156, -1.015149712562561, -4.291534423828125e-06, -0.0037708282470703125, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.0030766725540161133, 0.0, -0.00194549560546875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.04578971862792969, 0.0, -0.0007228851318359375, 0.0, -0.22428345680236816, -1.919269561767578e-05, -0.10315322875976562, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07970333099365234, -0.011475563049316406, -0.2141132354736328, -0.00016021728515625, -0.00096893310546875, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.03610706329345703, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047229766845703125, -0.0001010894775390625, -0.0033545494079589844, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.001857251743786037, -2.0265579223632812e-06, -1.9073486328125e-06, -0.024216651916503906, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28829383850097656, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -0.2828836441040039, -4.1961669921875e-05, -0.009382247924804688, -2.47955322265625e-05, -0.12402725219726562, -1.9073486328125e-06, -0.0210418701171875, 0.0, -0.005254983901977539, 0.0, -0.003358006477355957, -9.536735888104886e-06, -0.0033512115478515625, -0.015370368957519531, -2.288818359375e-05, -0.029979705810546875, -0.00261688232421875, -0.016092300415039062, -3.933904736186378e-06, -0.06636238098144531, -0.014750480651855469, -0.0018939971923828125, -0.0006198883056640625, -2.86102294921875e-05, -0.000335693359375, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004362344741821289, 0.0, -7.62939453125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.0002484917640686035, -3.8146317820064723e-05, -0.0040378570556640625, -0.06630229949951172, -0.0008726119995117188, -9.5367431640625e-06, -8.7738037109375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008918523788452148, -2.47955322265625e-05, -0.0009555816650390625, -0.0014896392822265625, -0.0001087188720703125, -0.00016151368618011475, -4.6371587814064696e-05, -0.003971099853515625, -0.0007457733154296875, -0.0001316070556640625, -0.8881721496582031, -5.340576171875e-05, -0.023278044536709785, -0.002878227038308978, -1.3018542528152466, -1.9073486328125e-06, -0.4822120666503906, -0.0077610015869140625, -1.71661376953125e-05, -0.013966426253318787, -0.0036525726318359375, -0.0005175118567422032, 0.0, -0.5983219146728516, -7.62939453125e-06, -0.0008697509765625, 0.0, -0.004398345947265625, -3.814697265625e-06, -0.07949638366699219, -1.52587890625e-05], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            super().__init__('Earth Shock', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "player"}, "attr": "minions"}]}}, {"orelse": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "change_attack", "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "increase_health", "hole2": [{"_type": "Num", "n": 1}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Name", "id": "targets"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 66, 98, 15, 83, 2, 170, 36, 90, 13, 80, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 40, 110, "targets", "<EOS>", 182, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "1", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 170, 43, 119, "Earth", " ", "Shock", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.879838774882693, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.9197179079055786, 0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.000301361083984375, 0.0, -2.5510787963867188e-05, 0.0, -1.33514404296875e-05, -4.76837158203125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.0008516311645507812, -2.0265579223632812e-06, -5.245207830739673e-06, 0.0, -5.161762237548828e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.29425048828125e-05, -1.728534698486328e-05, -1.4558610916137695, -0.000652313232421875, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, -3.576278118089249e-07, -1.2516951755969785e-05, 0.0, -6.29425048828125e-05, 0.0, -3.325939178466797e-05, 0.0, -0.25369930267333984, -0.0002765655517578125, -1.33514404296875e-05, -0.000213623046875, -0.007939338684082031, -1.013961911201477, -4.291534423828125e-06, -0.0037670135498046875, -3.4332275390625e-05, -0.000102996826171875, -1.1444091796875e-05, -0.0050907135009765625, 0.0, -0.003075718879699707, 0.0, -0.0019445419311523438, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.045821189880371094, 0.0, -0.0007228851318359375, 0.0, -0.22423863410949707, -1.919269561767578e-05, -0.10314559936523438, -2.0265579223632812e-06, -0.0005266666412353516, 0.0, -0.0006585121154785156, 0.0, -0.07931327819824219, -0.011469841003417969, -0.2142181396484375, -0.00016021728515625, -0.000972747802734375, -4.76837158203125e-05, -0.00089263916015625, -3.24249267578125e-05, -0.036131858825683594, -0.0001087188720703125, -1.9073486328125e-05, -4.57763671875e-05, -0.00047969818115234375, 0.0, -0.047242164611816406, -0.0001010894775390625, -0.003356456756591797, -3.159046173095703e-05, -0.0006544589996337891, -4.52994936495088e-06, -0.0007187119917944074, -2.574920654296875e-05, -0.0018562980694696307, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0242156982421875, -1.9073486328125e-05, -6.4849853515625e-05, -0.0007534027099609375, -0.28830528259277344, -0.0003261566162109375, -0.003945350646972656, -1.9073486328125e-06, -0.28289318084716797, -4.1961669921875e-05, -0.009382247924804688, -2.47955322265625e-05, -0.1240386962890625, -1.9073486328125e-06, -0.0210418701171875, 0.0, -0.005254983901977539, 0.0, -0.003358006477355957, -9.536735888104886e-06, -0.0033512115478515625, -0.015370368957519531, -2.288818359375e-05, -0.02998065948486328, -0.00261688232421875, -0.016092300415039062, -3.933904736186378e-06, -0.06632614135742188, -0.014748573303222656, -0.0018939971923828125, -0.0006198883056640625, -2.86102294921875e-05, -0.000335693359375, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.004362344741821289, 0.0, -7.62939453125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.00024825334548950195, -3.8146317820064723e-05, -0.0040378570556640625, -0.06631278991699219, -0.0008726119995117188, -9.5367431640625e-06, -8.7738037109375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002498626708984375, -2.3841855067985307e-07, -0.008918523788452148, -2.47955322265625e-05, -0.0009555816650390625, -0.0014896392822265625, -0.0001087188720703125, -0.00016069412231445312, -4.6371587814064696e-05, -0.0039730072021484375, -0.0007457733154296875, -0.0001316070556640625, -0.8881216049194336, -5.340576171875e-05, -0.023280365392565727, -0.0028784647583961487, -1.301803708076477, -1.9073486328125e-06, -0.48221683502197266, -0.00775909423828125, -1.71661376953125e-05, -0.013965132646262646, -0.0036525726318359375, -0.0005173927638679743, 0.0, -0.5983715057373047, -7.62939453125e-06, -0.0008697509765625, 0.0, -0.004399299621582031, -3.814697265625e-06, -0.079498291015625, -1.52587890625e-05], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(self.target.player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(1)\n            self.target.increase_health(1)\n        else:\n            super().__init__('Earth Shock', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EarthShock", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}]}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 1}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "index"}, "ops": [{"_type": "Lt"}]}}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}, "ops": [{"_type": "NotEq"}]}}]}, "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 166, 10, 169, 42, 115, "1", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 12, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -9.080020585561812, "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.064401626586914, -0.4302682876586914, -0.0001201629638671875, -2.6702880859375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.3589859008789062e-05, -8.344646857949556e-07, -2.0861511075054295e-05, 0.0, -7.43865966796875e-05, 0.0, -3.504753112792969e-05, 0.0, -0.01568317413330078, -0.0005245208740234375, -5.53131103515625e-05, -1.1444091796875e-05, -0.017009735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.0002498626708984375, -3.24249267578125e-05, 0.0, -0.002344369888305664, -1.9073486328125e-06, -4.38690185546875e-05, -0.39794254302978516, -2.47955322265625e-05, -0.00045959651470184326, -3.099440846199286e-06, -0.006927490234375, -1.52587890625e-05, -0.04059123992919922, -1.9073486328125e-06, -0.05598163604736328, -0.0001201629638671875, -0.005565643310546875, -0.00217437744140625, -0.02049732208251953, 0.0, -0.001628875732421875, 0.0, -4.57763671875e-05, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, -7.43865966796875e-05, 0.0, -1.2142802476882935, 0.0, -3.814697265625e-06, -0.34129810333251953, -9.5367431640625e-06, -0.18349456787109375, -3.814697265625e-06, -0.6048353910446167, -1.3112994565744884e-05, -0.08290767669677734, -0.006018638610839844, -0.003082275390625, -0.04677867889404297, -0.002315521240234375, -0.01251983642578125, 0.0, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, 0.0, -0.06183826923370361, -1.1920928244535389e-07, -0.0009613037109375, -0.4248523712158203, -0.01645660400390625, -0.0001163482666015625, -1.1444091796875e-05, -0.0002288818359375, 0.0, -8.213520050048828e-05, -1.1920928244535389e-07, -0.010850071907043457, -1.9073486328125e-05, -4.9591064453125e-05, -9.5367431640625e-05, -5.7220458984375e-06, -6.233155727386475e-05, -0.0003667411219794303, -6.29425048828125e-05, -0.0003261566162109375, -0.006534576416015625, -1.9073486328125e-06, -0.006130218505859375, -0.000873565673828125, -0.0070972442626953125, -0.0021800994873046875, -0.03261566162109375, -9.5367431640625e-06, -0.0004558563232421875, 0.0, -0.0001430511474609375, 0.0, -3.445148468017578e-05, -9.5367431640625e-06, -8.392333984375e-05, 0.0, -0.812881350517273, 0.0, -1.1444091796875e-05, -0.47560787200927734, -1.33514404296875e-05, -0.6481170654296875, -1.9073486328125e-06, -0.2410018891096115, -0.00011991802603006363, -0.0076446533203125, -0.017151832580566406, -0.0002269744873046875, -0.12003040313720703, -0.000518798828125, -0.005950927734375, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -0.032659292221069336, -1.1920928244535389e-07, -0.0007305145263671875, -0.7866096496582031, -0.0001316070556640625, -0.0002882927656173706, -8.356387115782127e-05, -0.00032806396484375, -5.7220458984375e-06, -0.01177978515625, 0.0], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        if self.target.index < 1:\n            self.target.damage(player.effective_spell_damage(1), self)\n        if self.target.health != 0:\n            self.target.damage(1, self)\n"}], "gold_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.silence()\n        self.target.damage(player.effective_spell_damage(1), self)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "IsNot"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Eye"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Eye", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "score": -11.045368960022863, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1771650314331055, -0.00209808349609375, -0.0055654048919677734, -1.9073486328125e-06, -0.01663684844970703, -0.0010881423950195312, -0.053459282964468, -0.03757055103778839, -0.0020782649517059326, 0.0, -0.0019245147705078125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -0.35424721240997314, -3.814697265625e-06, -1.371023178100586, -0.0002040863037109375, -3.62396240234375e-05, 0.0, -0.024730682373046875, -0.0005331039428710938, -0.0001811981201171875, -0.0034341812133789062, -8.392333984375e-05, -0.0008927583694458008, 0.0, -0.000690460205078125, -7.62939453125e-06, -0.05869719013571739, -5.7220458984375e-06, -0.13170719146728516, -0.0031719207763671875, -0.4707155227661133, -0.45229625701904297, -1.52587890625e-05, -0.24857890605926514, 0.0, -0.7536172866821289, 0.0, -4.38690185546875e-05, -0.23189544677734375, -0.05849170684814453, -0.005209440365433693, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.07035362720489502, -0.03849685192108154, -0.00043487548828125, 0.0, -2.6702880859375e-05, -3.24249267578125e-05, -0.03182704374194145, -1.9073486328125e-06, -0.026163101196289062, -0.0010585784912109375, -0.01261138916015625, -0.011716601438820362, -0.0006428956985473633, -4.76837158203125e-05, -5.53131103515625e-05, -0.022045135498046875, -6.4849853515625e-05, -0.0037398338317871094, -3.576278118089249e-07, -7.62939453125e-06, -0.23910295963287354, -1.645074735279195e-05, -1.9073486328125e-05, -0.003244757419452071, -2.0265579223632812e-06, -8.58306884765625e-05, -0.0046024322509765625, -0.000232696533203125, -0.0001773834228515625, -7.62939453125e-05, -0.004486083984375, -0.6143569946289062, -0.01586151123046875, -0.005663871765136719, -0.000225067138671875, 0.0, -0.00014126300811767578, -4.172325134277344e-06, -0.00048065185546875, 0.0, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.004935264587402344, -0.001148223876953125, -0.014330863952636719, -1.71661376953125e-05, -8.20159912109375e-05, 0.0, -0.0015859603881835938, -9.5367431640625e-06, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.0835418701171875, 0.0, -0.00990593433380127, -5.960462772236497e-07, -0.0021201372146606445, -7.62939453125e-06, -1.9073486328125e-06, -0.1280679702758789, -1.9073486328125e-06, -0.0002765655517578125, -6.4849853515625e-05, -0.0044487714767456055, -1.9073486328125e-06, -0.0034885406494140625, -2.86102294921875e-05, -0.000804901123046875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.00069427490234375, -5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-05, 0.0, -0.03795909881591797, -1.9073486328125e-06, -0.0013523101806640625, 0.0, -0.009832501411437988, -1.9073486328125e-06, -0.0005950927734375, 0.0, -0.03451525792479515, 0.0, 0.0, -0.27081871032714844, -1.9073486328125e-06, -0.06386470794677734, 0.0, -0.04917335510253906, -5.7220458984375e-06, -0.011885643005371094, -1.9073486328125e-06, -0.5486154556274414, -1.9073486328125e-05], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Eye\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions\n            ) < 7 and len(game.other_player.minions) is not MINION_TYPE.DEMON\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "IsNot"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Eye"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Eye", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "score": -11.530334880471337, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1771650314331055, -0.00209808349609375, -0.0055654048919677734, -1.9073486328125e-06, -0.01663684844970703, -0.0010881423950195312, -0.053459282964468, -0.03757055103778839, -0.0020782649517059326, 0.0, -0.0019245147705078125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -0.35424721240997314, -3.814697265625e-06, -1.371023178100586, -0.0002040863037109375, -3.62396240234375e-05, 0.0, -0.024730682373046875, -0.0005331039428710938, -0.0001811981201171875, -0.0034341812133789062, -8.392333984375e-05, -0.0008927583694458008, 0.0, -0.000690460205078125, -7.62939453125e-06, -0.05869719013571739, -5.7220458984375e-06, -0.13170719146728516, -0.0031719207763671875, -0.4707155227661133, -0.45229625701904297, -1.52587890625e-05, -0.24857890605926514, 0.0, -0.7536172866821289, 0.0, -4.38690185546875e-05, -0.23189544677734375, -0.05849170684814453, -0.005209440365433693, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.07035362720489502, -0.03849685192108154, -0.00043487548828125, 0.0, -2.6702880859375e-05, -3.24249267578125e-05, -0.03182704374194145, -1.9073486328125e-06, -0.026163101196289062, -0.0010585784912109375, -0.01261138916015625, -0.011716601438820362, -0.0006428956985473633, -4.76837158203125e-05, -5.53131103515625e-05, -0.022045135498046875, -6.4849853515625e-05, -0.0037398338317871094, -3.576278118089249e-07, -7.62939453125e-06, -0.23910295963287354, -1.645074735279195e-05, -1.9073486328125e-05, -0.003244757419452071, -2.0265579223632812e-06, -8.58306884765625e-05, -0.0046024322509765625, -0.000232696533203125, -0.0001773834228515625, -7.62939453125e-05, -0.004486083984375, -0.6143569946289062, -0.01586151123046875, -0.005663871765136719, -0.000225067138671875, 0.0, -0.00014126300811767578, -4.172325134277344e-06, -0.00048065185546875, 0.0, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.004935264587402344, -0.001148223876953125, -0.014330863952636719, -1.71661376953125e-05, -8.20159912109375e-05, 0.0, -0.0015859603881835938, -9.5367431640625e-06, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -0.41338539123535156, -1.33514404296875e-05, -0.0018024444580078125, 0.0, -0.0006788969039916992, -1.9073486328125e-06, -0.0007305145263671875, -3.933906555175781e-06, -0.003038642928004265, 0.0, -1.9073486328125e-06, -1.2470569610595703, 0.0, -0.0004100799560546875, -1.33514404296875e-05, -0.0024667978286743164, -1.9073486328125e-06, -0.004685401916503906, -5.14984130859375e-05, -0.0010967254638671875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.0007762908935546875, -1.9073486328125e-06, -3.814697265625e-05, -1.33514404296875e-05, 0.0, -0.035744667053222656, -1.9073486328125e-06, -0.0019550323486328125, 0.0, -0.009411931037902832, -1.9073486328125e-06, -0.0005626678466796875, 0.0, -0.02208077721297741, 0.0, 0.0, -0.2798013687133789, -1.9073486328125e-06, -0.055278778076171875, 0.0, -0.0522918701171875, -5.7220458984375e-06, -0.012082099914550781, -1.9073486328125e-06, -0.6016092300415039, -1.9073486328125e-05], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Eye\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) < 7 and len(game.other_player.minions) is not MINION_TYPE.DEMON\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Eye"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Eye", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -11.899918964028295, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1771650314331055, -0.00209808349609375, -0.0055654048919677734, -1.9073486328125e-06, -0.01663684844970703, -0.0010881423950195312, -0.053459282964468, -0.03757055103778839, -0.0020782649517059326, 0.0, -0.0019245147705078125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -0.35424721240997314, -3.814697265625e-06, -1.371023178100586, -0.0002040863037109375, -3.62396240234375e-05, 0.0, -0.024730682373046875, -0.0005331039428710938, -0.0001811981201171875, -0.0034341812133789062, -8.392333984375e-05, -0.0008927583694458008, 0.0, -0.000690460205078125, -7.62939453125e-06, -0.05869719013571739, -5.7220458984375e-06, -0.13170719146728516, -0.0031719207763671875, -0.4707155227661133, -0.45229625701904297, -1.52587890625e-05, -0.24857890605926514, 0.0, -0.7536172866821289, 0.0, -4.38690185546875e-05, -0.23189544677734375, -0.05849170684814453, -0.005209440365433693, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.07035362720489502, -0.03849685192108154, -0.00043487548828125, 0.0, -2.6702880859375e-05, -3.24249267578125e-05, -0.03182704374194145, -1.9073486328125e-06, -0.026163101196289062, -0.0010585784912109375, -0.01261138916015625, -0.011716601438820362, -0.0006428956985473633, -4.76837158203125e-05, -5.53131103515625e-05, -0.022045135498046875, -6.4849853515625e-05, -0.0037398338317871094, -3.576278118089249e-07, -7.62939453125e-06, -0.23910295963287354, -1.645074735279195e-05, -1.9073486328125e-05, -0.003244757419452071, -2.0265579223632812e-06, -8.58306884765625e-05, -0.0046024322509765625, -0.000232696533203125, -0.0001773834228515625, -7.62939453125e-05, -0.004486083984375, -0.6143569946289062, -0.01586151123046875, -0.005663871765136719, -0.000225067138671875, 0.0, -0.00014126300811767578, -4.172325134277344e-06, -0.00048065185546875, 0.0, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.004935264587402344, -0.001148223876953125, -0.014330863952636719, -1.71661376953125e-05, -8.20159912109375e-05, 0.0, -0.0015859603881835938, -9.5367431640625e-06, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.0835418701171875, 0.0, -0.00990593433380127, -5.960462772236497e-07, -0.0021201372146606445, -7.62939453125e-06, -1.9073486328125e-06, -0.1280679702758789, -1.9073486328125e-06, -0.0002765655517578125, -6.4849853515625e-05, -0.0044487714767456055, -1.9073486328125e-06, -0.0034885406494140625, -2.86102294921875e-05, -0.000804901123046875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.00069427490234375, -5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-05, 0.0, -0.03795909881591797, -1.9073486328125e-06, -0.0013523101806640625, 0.0, -0.009832501411437988, -1.9073486328125e-06, -0.0005950927734375, 0.0, -0.03451525792479515, 0.0, 0.0, -1.7849340438842773, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -0.013867020606994629, -1.9073486328125e-06], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Eye\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions\n            ) < 7 and len(game.other_player.minions) < 7\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "IsNot"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Eye"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Eye", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>"], "score": -12.00163154852384, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1771650314331055, -0.00209808349609375, -0.0055654048919677734, -1.9073486328125e-06, -0.01663684844970703, -0.0010881423950195312, -0.053459282964468, -0.03757055103778839, -0.0020782649517059326, 0.0, -0.0019245147705078125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -0.35424721240997314, -3.814697265625e-06, -1.371023178100586, -0.0002040863037109375, -3.62396240234375e-05, 0.0, -0.024730682373046875, -0.0005331039428710938, -0.0001811981201171875, -0.0034341812133789062, -8.392333984375e-05, -0.0008927583694458008, 0.0, -0.000690460205078125, -7.62939453125e-06, -0.05869719013571739, -5.7220458984375e-06, -0.13170719146728516, -0.0031719207763671875, -0.4707155227661133, -0.45229625701904297, -1.52587890625e-05, -0.24857890605926514, 0.0, -0.7536172866821289, 0.0, -4.38690185546875e-05, -0.23189544677734375, -0.05849170684814453, -0.005209440365433693, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.07035362720489502, -0.03849685192108154, -0.00043487548828125, 0.0, -2.6702880859375e-05, -3.24249267578125e-05, -0.03182704374194145, -1.9073486328125e-06, -0.026163101196289062, -0.0010585784912109375, -0.01261138916015625, -0.011716601438820362, -0.0006428956985473633, -4.76837158203125e-05, -5.53131103515625e-05, -0.022045135498046875, -6.4849853515625e-05, -0.0037398338317871094, -3.576278118089249e-07, -7.62939453125e-06, -0.23910295963287354, -1.645074735279195e-05, -1.9073486328125e-05, -0.003244757419452071, -2.0265579223632812e-06, -8.58306884765625e-05, -0.0046024322509765625, -0.000232696533203125, -0.0001773834228515625, -7.62939453125e-05, -0.004486083984375, -0.6143569946289062, -0.01586151123046875, -0.005663871765136719, -0.000225067138671875, 0.0, -0.00014126300811767578, -4.172325134277344e-06, -0.00048065185546875, 0.0, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.004935264587402344, -0.001148223876953125, -0.014330863952636719, -1.71661376953125e-05, -8.20159912109375e-05, 0.0, -0.0015859603881835938, -9.5367431640625e-06, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.0835418701171875, 0.0, -0.00990593433380127, -5.960462772236497e-07, -0.0021201372146606445, -7.62939453125e-06, -1.9073486328125e-06, -0.1280679702758789, -1.9073486328125e-06, -0.0002765655517578125, -6.4849853515625e-05, -0.0044487714767456055, -1.9073486328125e-06, -0.0034885406494140625, -2.86102294921875e-05, -0.000804901123046875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.00069427490234375, -5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-05, 0.0, -0.03795909881591797, -1.9073486328125e-06, -0.0013523101806640625, 0.0, -0.009832501411437988, -1.9073486328125e-06, -0.0005950927734375, 0.0, -0.03451525792479515, 0.0, 0.0, -0.27081871032714844, -1.9073486328125e-06, -0.06386470794677734, 0.0, -0.04917335510253906, -5.7220458984375e-06, -0.011885643005371094, -1.9073486328125e-06, -1.5046958923339844, -0.00020122528076171875], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Eye\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions\n            ) < 7 and len(game.other_player.minions) is not MINION_TYPE.DRAGON\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Eye"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Eye", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -12.294489553094017, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1771650314331055, -0.00209808349609375, -0.0055654048919677734, -1.9073486328125e-06, -0.01663684844970703, -0.0010881423950195312, -0.053459282964468, -0.03757055103778839, -0.0020782649517059326, 0.0, -0.0019245147705078125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -0.35424721240997314, -3.814697265625e-06, -1.371023178100586, -0.0002040863037109375, -3.62396240234375e-05, 0.0, -0.024730682373046875, -0.0005331039428710938, -0.0001811981201171875, -0.0034341812133789062, -8.392333984375e-05, -0.0008927583694458008, 0.0, -0.000690460205078125, -7.62939453125e-06, -0.05869719013571739, -5.7220458984375e-06, -0.13170719146728516, -0.0031719207763671875, -0.4707155227661133, -0.45229625701904297, -1.52587890625e-05, -0.24857890605926514, 0.0, -0.7536172866821289, 0.0, -4.38690185546875e-05, -0.23189544677734375, -0.05849170684814453, -0.005209440365433693, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.07035362720489502, -0.03849685192108154, -0.00043487548828125, 0.0, -2.6702880859375e-05, -3.24249267578125e-05, -0.03182704374194145, -1.9073486328125e-06, -0.026163101196289062, -0.0010585784912109375, -0.01261138916015625, -0.011716601438820362, -0.0006428956985473633, -4.76837158203125e-05, -5.53131103515625e-05, -0.022045135498046875, -6.4849853515625e-05, -0.0037398338317871094, -3.576278118089249e-07, -7.62939453125e-06, -0.23910295963287354, -1.645074735279195e-05, -1.9073486328125e-05, -0.003244757419452071, -2.0265579223632812e-06, -8.58306884765625e-05, -0.0046024322509765625, -0.000232696533203125, -0.0001773834228515625, -7.62939453125e-05, -0.004486083984375, -0.6143569946289062, -0.01586151123046875, -0.005663871765136719, -0.000225067138671875, 0.0, -0.00014126300811767578, -4.172325134277344e-06, -0.00048065185546875, 0.0, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.004935264587402344, -0.001148223876953125, -0.014330863952636719, -1.71661376953125e-05, -8.20159912109375e-05, 0.0, -0.0015859603881835938, -9.5367431640625e-06, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -0.41338539123535156, -1.33514404296875e-05, -0.0018024444580078125, 0.0, -0.0006788969039916992, -1.9073486328125e-06, -0.0007305145263671875, -3.933906555175781e-06, -0.003038642928004265, 0.0, -1.9073486328125e-06, -1.2470569610595703, 0.0, -0.0004100799560546875, -1.33514404296875e-05, -0.0024667978286743164, -1.9073486328125e-06, -0.004685401916503906, -5.14984130859375e-05, -0.0010967254638671875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.0007762908935546875, -1.9073486328125e-06, -3.814697265625e-05, -1.33514404296875e-05, 0.0, -0.035744667053222656, -1.9073486328125e-06, -0.0019550323486328125, 0.0, -0.009411931037902832, -1.9073486328125e-06, -0.0005626678466796875, 0.0, -0.02208077721297741, 0.0, 0.0, -1.7511091232299805, 0.0, -0.000141143798828125, -1.9073486328125e-06, -0.013992547988891602, -1.9073486328125e-06], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Eye\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) < 7 and len(game.other_player.minions) < 7\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "IsNot"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "score": -12.360525374013505, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.6174106597900391, -0.0001964569091796875, -9.5367431640625e-06, -0.003086090087890625, -0.00029754638671875, -0.2786135673522949, -4.00543212890625e-05, -0.9372062683105469, -0.0005435943603515625, -0.3157835006713867, -9.34600830078125e-05, -0.007671356201171875, 0.0, -0.05335235595703125, 0.0, -0.05025970935821533, -1.9073486328125e-06, -0.010041236877441406, -4.768370445162873e-07, -0.21663939952850342, 0.0, -0.024064064025878906, -0.49625492095947266, -0.007929801940917969, -5.14984130859375e-05, 0.0, -0.00067901611328125, 0.0, -9.5367431640625e-05, -0.000240325927734375, 0.0, -0.06707477569580078, 0.0, -0.0007190704345703125, 0.0, -0.16409313678741455, 0.0, -0.14022541046142578, 0.0, -0.014560818672180176, 0.0, -0.3577451705932617, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.039755821228027344, 0.0, -0.011359214782714844, -7.2479248046875e-05, -7.62939453125e-05, 0.0, -0.023302078247070312, -2.288818359375e-05, -1.52587890625e-05, -0.002105712890625, -9.72747802734375e-05, -0.001530766487121582, 0.0, -0.001018524169921875, -3.814697265625e-06, -0.08100377768278122, -1.9073486328125e-06, -0.24042987823486328, -0.001720428466796875, -0.2066802978515625, -0.6044235229492188, -2.09808349609375e-05, -0.26472973823547363, -1.1920928244535389e-07, -0.9959946870803833, 0.0, -3.0517578125e-05, -0.21244049072265625, -0.05217742919921875, -0.004665654618293047, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.06691277027130127, -0.03571319580078125, -0.0004405975341796875, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.031787507236003876, -1.9073486328125e-06, -0.024570465087890625, -0.00107574462890625, -0.013691902160644531, -0.011430499143898487, -0.0011315345764160156, -4.9591064453125e-05, -6.866455078125e-05, -0.013235092163085938, -7.62939453125e-05, -0.004126191139221191, -2.3841855067985307e-07, -7.62939453125e-06, -0.22697043418884277, -1.2993727978027891e-05, -1.71661376953125e-05, -0.004301905632019043, -2.0265579223632812e-06, -8.96453857421875e-05, -0.0052356719970703125, -0.0002841949462890625, -0.000247955322265625, -0.000274658203125, -0.010044097900390625, -0.8524761199951172, -0.023702621459960938, -0.012571334838867188, -0.000331878662109375, 0.0, -0.00019657611846923828, -6.079673767089844e-06, -0.00045013427734375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.006317138671875, -0.001186370849609375, -0.013215065002441406, -1.9073486328125e-05, -8.96453857421875e-05, 0.0, -0.0015773773193359375, -9.5367431640625e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.1413335800170898, 0.0, -0.010921597480773926, -5.960462772236497e-07, -0.0021153688430786133, -7.62939453125e-06, -1.9073486328125e-06, -0.11884689331054688, -1.9073486328125e-06, -0.00026702880859375, -6.29425048828125e-05, -0.004436135292053223, -1.9073486328125e-06, -0.00374603271484375, -2.6702880859375e-05, -0.000873565673828125, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0008001327514648438, -5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-05, 0.0, -0.035773277282714844, -1.9073486328125e-06, -0.0012454986572265625, 0.0, -0.009192705154418945, -1.9073486328125e-06, -0.000591278076171875, 0.0, -0.03788888081908226, 0.0, 0.0, -0.2559995651245117, -1.9073486328125e-06, -0.06419754028320312, 0.0, -0.04870319366455078, -5.7220458984375e-06, -0.012173652648925781, -1.9073486328125e-06, -0.5536680221557617, -1.9073486328125e-05], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - len(self.player.minions)\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions\n            ) < 7 and len(game.other_player.minions) is not MINION_TYPE.DEMON\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "IsNot"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Eye"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Eye", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>"], "score": -12.392526080727684, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1771650314331055, -0.00209808349609375, -0.0055654048919677734, -1.9073486328125e-06, -0.01663684844970703, -0.0010881423950195312, -0.053459282964468, -0.03757055103778839, -0.0020782649517059326, 0.0, -0.0019245147705078125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -0.35424721240997314, -3.814697265625e-06, -1.371023178100586, -0.0002040863037109375, -3.62396240234375e-05, 0.0, -0.024730682373046875, -0.0005331039428710938, -0.0001811981201171875, -0.0034341812133789062, -8.392333984375e-05, -0.0008927583694458008, 0.0, -0.000690460205078125, -7.62939453125e-06, -0.05869719013571739, -5.7220458984375e-06, -0.13170719146728516, -0.0031719207763671875, -0.4707155227661133, -0.45229625701904297, -1.52587890625e-05, -0.24857890605926514, 0.0, -0.7536172866821289, 0.0, -4.38690185546875e-05, -0.23189544677734375, -0.05849170684814453, -0.005209440365433693, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.07035362720489502, -0.03849685192108154, -0.00043487548828125, 0.0, -2.6702880859375e-05, -3.24249267578125e-05, -0.03182704374194145, -1.9073486328125e-06, -0.026163101196289062, -0.0010585784912109375, -0.01261138916015625, -0.011716601438820362, -0.0006428956985473633, -4.76837158203125e-05, -5.53131103515625e-05, -0.022045135498046875, -6.4849853515625e-05, -0.0037398338317871094, -3.576278118089249e-07, -7.62939453125e-06, -0.23910295963287354, -1.645074735279195e-05, -1.9073486328125e-05, -0.003244757419452071, -2.0265579223632812e-06, -8.58306884765625e-05, -0.0046024322509765625, -0.000232696533203125, -0.0001773834228515625, -7.62939453125e-05, -0.004486083984375, -0.6143569946289062, -0.01586151123046875, -0.005663871765136719, -0.000225067138671875, 0.0, -0.00014126300811767578, -4.172325134277344e-06, -0.00048065185546875, 0.0, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.004935264587402344, -0.001148223876953125, -0.014330863952636719, -1.71661376953125e-05, -8.20159912109375e-05, 0.0, -0.0015859603881835938, -9.5367431640625e-06, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -0.41338539123535156, -1.33514404296875e-05, -0.0018024444580078125, 0.0, -0.0006788969039916992, -1.9073486328125e-06, -0.0007305145263671875, -3.933906555175781e-06, -0.003038642928004265, 0.0, -1.9073486328125e-06, -1.2470569610595703, 0.0, -0.0004100799560546875, -1.33514404296875e-05, -0.0024667978286743164, -1.9073486328125e-06, -0.004685401916503906, -5.14984130859375e-05, -0.0010967254638671875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.0007762908935546875, -1.9073486328125e-06, -3.814697265625e-05, -1.33514404296875e-05, 0.0, -0.035744667053222656, -1.9073486328125e-06, -0.0019550323486328125, 0.0, -0.009411931037902832, -1.9073486328125e-06, -0.0005626678466796875, 0.0, -0.02208077721297741, 0.0, 0.0, -0.2798013687133789, -1.9073486328125e-06, -0.055278778076171875, 0.0, -0.0522918701171875, -5.7220458984375e-06, -0.012082099914550781, -1.9073486328125e-06, -1.4636106491088867, -0.00020885467529296875], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Eye\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) < 7 and len(game.other_player.minions) is not MINION_TYPE.DRAGON\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "IsNot"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "score": -12.735722545945762, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.6174106597900391, -0.0001964569091796875, -9.5367431640625e-06, -0.003086090087890625, -0.00029754638671875, -0.2786135673522949, -4.00543212890625e-05, -0.9372062683105469, -0.0005435943603515625, -0.3157835006713867, -9.34600830078125e-05, -0.007671356201171875, 0.0, -0.05335235595703125, 0.0, -0.05025970935821533, -1.9073486328125e-06, -0.010041236877441406, -4.768370445162873e-07, -0.21663939952850342, 0.0, -0.024064064025878906, -0.49625492095947266, -0.007929801940917969, -5.14984130859375e-05, 0.0, -0.00067901611328125, 0.0, -9.5367431640625e-05, -0.000240325927734375, 0.0, -0.06707477569580078, 0.0, -0.0007190704345703125, 0.0, -0.16409313678741455, 0.0, -0.14022541046142578, 0.0, -0.014560818672180176, 0.0, -0.3577451705932617, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.039755821228027344, 0.0, -0.011359214782714844, -7.2479248046875e-05, -7.62939453125e-05, 0.0, -0.023302078247070312, -2.288818359375e-05, -1.52587890625e-05, -0.002105712890625, -9.72747802734375e-05, -0.001530766487121582, 0.0, -0.001018524169921875, -3.814697265625e-06, -0.08100377768278122, -1.9073486328125e-06, -0.24042987823486328, -0.001720428466796875, -0.2066802978515625, -0.6044235229492188, -2.09808349609375e-05, -0.26472973823547363, -1.1920928244535389e-07, -0.9959946870803833, 0.0, -3.0517578125e-05, -0.21244049072265625, -0.05217742919921875, -0.004665654618293047, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.06691277027130127, -0.03571319580078125, -0.0004405975341796875, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.031787507236003876, -1.9073486328125e-06, -0.024570465087890625, -0.00107574462890625, -0.013691902160644531, -0.011430499143898487, -0.0011315345764160156, -4.9591064453125e-05, -6.866455078125e-05, -0.013235092163085938, -7.62939453125e-05, -0.004126191139221191, -2.3841855067985307e-07, -7.62939453125e-06, -0.22697043418884277, -1.2993727978027891e-05, -1.71661376953125e-05, -0.004301905632019043, -2.0265579223632812e-06, -8.96453857421875e-05, -0.0052356719970703125, -0.0002841949462890625, -0.000247955322265625, -0.000274658203125, -0.010044097900390625, -0.8524761199951172, -0.023702621459960938, -0.012571334838867188, -0.000331878662109375, 0.0, -0.00019657611846923828, -6.079673767089844e-06, -0.00045013427734375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.006317138671875, -0.001186370849609375, -0.013215065002441406, -1.9073486328125e-05, -8.96453857421875e-05, 0.0, -0.0015773773193359375, -9.5367431640625e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -0.3850727081298828, -1.33514404296875e-05, -0.001819610595703125, 0.0, -0.0007092952728271484, -1.9073486328125e-06, -0.0007457733154296875, -3.933906555175781e-06, -0.0030744054820388556, 0.0, -1.9073486328125e-06, -1.2159967422485352, 0.0, -0.0004100799560546875, -1.33514404296875e-05, -0.002470731735229492, -1.9073486328125e-06, -0.005766868591308594, -4.9591064453125e-05, -0.0012416839599609375, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -0.000888824462890625, -3.814697265625e-06, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.03370857238769531, -1.9073486328125e-06, -0.0018329620361328125, 0.0, -0.008259892463684082, -1.9073486328125e-06, -0.0005512237548828125, 0.0, -0.023876545950770378, 0.0, 0.0, -0.2619361877441406, -1.9073486328125e-06, -0.05555438995361328, 0.0, -0.051827430725097656, -5.7220458984375e-06, -0.012441635131835938, -1.9073486328125e-06, -0.6097936630249023, -1.9073486328125e-05], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - len(self.player.minions)\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) < 7 and len(game.other_player.minions) is not MINION_TYPE.DEMON\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -13.28691852529677, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.6174106597900391, -0.0001964569091796875, -9.5367431640625e-06, -0.003086090087890625, -0.00029754638671875, -0.2786135673522949, -4.00543212890625e-05, -0.9372062683105469, -0.0005435943603515625, -0.3157835006713867, -9.34600830078125e-05, -0.007671356201171875, 0.0, -0.05335235595703125, 0.0, -0.05025970935821533, -1.9073486328125e-06, -0.010041236877441406, -4.768370445162873e-07, -0.21663939952850342, 0.0, -0.024064064025878906, -0.49625492095947266, -0.007929801940917969, -5.14984130859375e-05, 0.0, -0.00067901611328125, 0.0, -9.5367431640625e-05, -0.000240325927734375, 0.0, -0.06707477569580078, 0.0, -0.0007190704345703125, 0.0, -0.16409313678741455, 0.0, -0.14022541046142578, 0.0, -0.014560818672180176, 0.0, -0.3577451705932617, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.039755821228027344, 0.0, -0.011359214782714844, -7.2479248046875e-05, -7.62939453125e-05, 0.0, -0.023302078247070312, -2.288818359375e-05, -1.52587890625e-05, -0.002105712890625, -9.72747802734375e-05, -0.001530766487121582, 0.0, -0.001018524169921875, -3.814697265625e-06, -0.08100377768278122, -1.9073486328125e-06, -0.24042987823486328, -0.001720428466796875, -0.2066802978515625, -0.6044235229492188, -2.09808349609375e-05, -0.26472973823547363, -1.1920928244535389e-07, -0.9959946870803833, 0.0, -3.0517578125e-05, -0.21244049072265625, -0.05217742919921875, -0.004665654618293047, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.06691277027130127, -0.03571319580078125, -0.0004405975341796875, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.031787507236003876, -1.9073486328125e-06, -0.024570465087890625, -0.00107574462890625, -0.013691902160644531, -0.011430499143898487, -0.0011315345764160156, -4.9591064453125e-05, -6.866455078125e-05, -0.013235092163085938, -7.62939453125e-05, -0.004126191139221191, -2.3841855067985307e-07, -7.62939453125e-06, -0.22697043418884277, -1.2993727978027891e-05, -1.71661376953125e-05, -0.004301905632019043, -2.0265579223632812e-06, -8.96453857421875e-05, -0.0052356719970703125, -0.0002841949462890625, -0.000247955322265625, -0.000274658203125, -0.010044097900390625, -0.8524761199951172, -0.023702621459960938, -0.012571334838867188, -0.000331878662109375, 0.0, -0.00019657611846923828, -6.079673767089844e-06, -0.00045013427734375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.006317138671875, -0.001186370849609375, -0.013215065002441406, -1.9073486328125e-05, -8.96453857421875e-05, 0.0, -0.0015773773193359375, -9.5367431640625e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.1413335800170898, 0.0, -0.010921597480773926, -5.960462772236497e-07, -0.0021153688430786133, -7.62939453125e-06, -1.9073486328125e-06, -0.11884689331054688, -1.9073486328125e-06, -0.00026702880859375, -6.29425048828125e-05, -0.004436135292053223, -1.9073486328125e-06, -0.00374603271484375, -2.6702880859375e-05, -0.000873565673828125, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0008001327514648438, -5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-05, 0.0, -0.035773277282714844, -1.9073486328125e-06, -0.0012454986572265625, 0.0, -0.009192705154418945, -1.9073486328125e-06, -0.000591278076171875, 0.0, -0.03788888081908226, 0.0, 0.0, -1.8469457626342773, 0.0, -0.000133514404296875, -1.9073486328125e-06, -0.014080643653869629, -1.9073486328125e-06], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - len(self.player.minions)\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions\n            ) < 7 and len(game.other_player.minions) < 7\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "IsNot"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>"], "score": -13.302777533132158, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.6174106597900391, -0.0001964569091796875, -9.5367431640625e-06, -0.003086090087890625, -0.00029754638671875, -0.2786135673522949, -4.00543212890625e-05, -0.9372062683105469, -0.0005435943603515625, -0.3157835006713867, -9.34600830078125e-05, -0.007671356201171875, 0.0, -0.05335235595703125, 0.0, -0.05025970935821533, -1.9073486328125e-06, -0.010041236877441406, -4.768370445162873e-07, -0.21663939952850342, 0.0, -0.024064064025878906, -0.49625492095947266, -0.007929801940917969, -5.14984130859375e-05, 0.0, -0.00067901611328125, 0.0, -9.5367431640625e-05, -0.000240325927734375, 0.0, -0.06707477569580078, 0.0, -0.0007190704345703125, 0.0, -0.16409313678741455, 0.0, -0.14022541046142578, 0.0, -0.014560818672180176, 0.0, -0.3577451705932617, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.039755821228027344, 0.0, -0.011359214782714844, -7.2479248046875e-05, -7.62939453125e-05, 0.0, -0.023302078247070312, -2.288818359375e-05, -1.52587890625e-05, -0.002105712890625, -9.72747802734375e-05, -0.001530766487121582, 0.0, -0.001018524169921875, -3.814697265625e-06, -0.08100377768278122, -1.9073486328125e-06, -0.24042987823486328, -0.001720428466796875, -0.2066802978515625, -0.6044235229492188, -2.09808349609375e-05, -0.26472973823547363, -1.1920928244535389e-07, -0.9959946870803833, 0.0, -3.0517578125e-05, -0.21244049072265625, -0.05217742919921875, -0.004665654618293047, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.06691277027130127, -0.03571319580078125, -0.0004405975341796875, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.031787507236003876, -1.9073486328125e-06, -0.024570465087890625, -0.00107574462890625, -0.013691902160644531, -0.011430499143898487, -0.0011315345764160156, -4.9591064453125e-05, -6.866455078125e-05, -0.013235092163085938, -7.62939453125e-05, -0.004126191139221191, -2.3841855067985307e-07, -7.62939453125e-06, -0.22697043418884277, -1.2993727978027891e-05, -1.71661376953125e-05, -0.004301905632019043, -2.0265579223632812e-06, -8.96453857421875e-05, -0.0052356719970703125, -0.0002841949462890625, -0.000247955322265625, -0.000274658203125, -0.010044097900390625, -0.8524761199951172, -0.023702621459960938, -0.012571334838867188, -0.000331878662109375, 0.0, -0.00019657611846923828, -6.079673767089844e-06, -0.00045013427734375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.006317138671875, -0.001186370849609375, -0.013215065002441406, -1.9073486328125e-05, -8.96453857421875e-05, 0.0, -0.0015773773193359375, -9.5367431640625e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.1413335800170898, 0.0, -0.010921597480773926, -5.960462772236497e-07, -0.0021153688430786133, -7.62939453125e-06, -1.9073486328125e-06, -0.11884689331054688, -1.9073486328125e-06, -0.00026702880859375, -6.29425048828125e-05, -0.004436135292053223, -1.9073486328125e-06, -0.00374603271484375, -2.6702880859375e-05, -0.000873565673828125, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0008001327514648438, -5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-05, 0.0, -0.035773277282714844, -1.9073486328125e-06, -0.0012454986572265625, 0.0, -0.009192705154418945, -1.9073486328125e-06, -0.000591278076171875, 0.0, -0.03788888081908226, 0.0, 0.0, -0.2559995651245117, -1.9073486328125e-06, -0.06419754028320312, 0.0, -0.04870319366455078, -5.7220458984375e-06, -0.012173652648925781, -1.9073486328125e-06, -1.4957351684570312, -0.0002040863037109375], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - len(self.player.minions)\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions\n            ) < 7 and len(game.other_player.minions) is not MINION_TYPE.DRAGON\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "IsNot"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>"], "score": -13.577653889024376, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.6174106597900391, -0.0001964569091796875, -9.5367431640625e-06, -0.003086090087890625, -0.00029754638671875, -0.2786135673522949, -4.00543212890625e-05, -0.9372062683105469, -0.0005435943603515625, -0.3157835006713867, -9.34600830078125e-05, -0.007671356201171875, 0.0, -0.05335235595703125, 0.0, -0.05025970935821533, -1.9073486328125e-06, -0.010041236877441406, -4.768370445162873e-07, -0.21663939952850342, 0.0, -0.024064064025878906, -0.49625492095947266, -0.007929801940917969, -5.14984130859375e-05, 0.0, -0.00067901611328125, 0.0, -9.5367431640625e-05, -0.000240325927734375, 0.0, -0.06707477569580078, 0.0, -0.0007190704345703125, 0.0, -0.16409313678741455, 0.0, -0.14022541046142578, 0.0, -0.014560818672180176, 0.0, -0.3577451705932617, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.039755821228027344, 0.0, -0.011359214782714844, -7.2479248046875e-05, -7.62939453125e-05, 0.0, -0.023302078247070312, -2.288818359375e-05, -1.52587890625e-05, -0.002105712890625, -9.72747802734375e-05, -0.001530766487121582, 0.0, -0.001018524169921875, -3.814697265625e-06, -0.08100377768278122, -1.9073486328125e-06, -0.24042987823486328, -0.001720428466796875, -0.2066802978515625, -0.6044235229492188, -2.09808349609375e-05, -0.26472973823547363, -1.1920928244535389e-07, -0.9959946870803833, 0.0, -3.0517578125e-05, -0.21244049072265625, -0.05217742919921875, -0.004665654618293047, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.06691277027130127, -0.03571319580078125, -0.0004405975341796875, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.031787507236003876, -1.9073486328125e-06, -0.024570465087890625, -0.00107574462890625, -0.013691902160644531, -0.011430499143898487, -0.0011315345764160156, -4.9591064453125e-05, -6.866455078125e-05, -0.013235092163085938, -7.62939453125e-05, -0.004126191139221191, -2.3841855067985307e-07, -7.62939453125e-06, -0.22697043418884277, -1.2993727978027891e-05, -1.71661376953125e-05, -0.004301905632019043, -2.0265579223632812e-06, -8.96453857421875e-05, -0.0052356719970703125, -0.0002841949462890625, -0.000247955322265625, -0.000274658203125, -0.010044097900390625, -0.8524761199951172, -0.023702621459960938, -0.012571334838867188, -0.000331878662109375, 0.0, -0.00019657611846923828, -6.079673767089844e-06, -0.00045013427734375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.006317138671875, -0.001186370849609375, -0.013215065002441406, -1.9073486328125e-05, -8.96453857421875e-05, 0.0, -0.0015773773193359375, -9.5367431640625e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -0.3850727081298828, -1.33514404296875e-05, -0.001819610595703125, 0.0, -0.0007092952728271484, -1.9073486328125e-06, -0.0007457733154296875, -3.933906555175781e-06, -0.0030744054820388556, 0.0, -1.9073486328125e-06, -1.2159967422485352, 0.0, -0.0004100799560546875, -1.33514404296875e-05, -0.002470731735229492, -1.9073486328125e-06, -0.005766868591308594, -4.9591064453125e-05, -0.0012416839599609375, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -0.000888824462890625, -3.814697265625e-06, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.03370857238769531, -1.9073486328125e-06, -0.0018329620361328125, 0.0, -0.008259892463684082, -1.9073486328125e-06, -0.0005512237548828125, 0.0, -0.023876545950770378, 0.0, 0.0, -0.2619361877441406, -1.9073486328125e-06, -0.05555438995361328, 0.0, -0.051827430725097656, -5.7220458984375e-06, -0.012441635131835938, -1.9073486328125e-06, -1.4515323638916016, -0.0002117156982421875], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - len(self.player.minions)\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) < 7 and len(game.other_player.minions) is not MINION_TYPE.DRAGON\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -13.580962304437278, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.6174106597900391, -0.0001964569091796875, -9.5367431640625e-06, -0.003086090087890625, -0.00029754638671875, -0.2786135673522949, -4.00543212890625e-05, -0.9372062683105469, -0.0005435943603515625, -0.3157835006713867, -9.34600830078125e-05, -0.007671356201171875, 0.0, -0.05335235595703125, 0.0, -0.05025970935821533, -1.9073486328125e-06, -0.010041236877441406, -4.768370445162873e-07, -0.21663939952850342, 0.0, -0.024064064025878906, -0.49625492095947266, -0.007929801940917969, -5.14984130859375e-05, 0.0, -0.00067901611328125, 0.0, -9.5367431640625e-05, -0.000240325927734375, 0.0, -0.06707477569580078, 0.0, -0.0007190704345703125, 0.0, -0.16409313678741455, 0.0, -0.14022541046142578, 0.0, -0.014560818672180176, 0.0, -0.3577451705932617, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.039755821228027344, 0.0, -0.011359214782714844, -7.2479248046875e-05, -7.62939453125e-05, 0.0, -0.023302078247070312, -2.288818359375e-05, -1.52587890625e-05, -0.002105712890625, -9.72747802734375e-05, -0.001530766487121582, 0.0, -0.001018524169921875, -3.814697265625e-06, -0.08100377768278122, -1.9073486328125e-06, -0.24042987823486328, -0.001720428466796875, -0.2066802978515625, -0.6044235229492188, -2.09808349609375e-05, -0.26472973823547363, -1.1920928244535389e-07, -0.9959946870803833, 0.0, -3.0517578125e-05, -0.21244049072265625, -0.05217742919921875, -0.004665654618293047, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.06691277027130127, -0.03571319580078125, -0.0004405975341796875, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.031787507236003876, -1.9073486328125e-06, -0.024570465087890625, -0.00107574462890625, -0.013691902160644531, -0.011430499143898487, -0.0011315345764160156, -4.9591064453125e-05, -6.866455078125e-05, -0.013235092163085938, -7.62939453125e-05, -0.004126191139221191, -2.3841855067985307e-07, -7.62939453125e-06, -0.22697043418884277, -1.2993727978027891e-05, -1.71661376953125e-05, -0.004301905632019043, -2.0265579223632812e-06, -8.96453857421875e-05, -0.0052356719970703125, -0.0002841949462890625, -0.000247955322265625, -0.000274658203125, -0.010044097900390625, -0.8524761199951172, -0.023702621459960938, -0.012571334838867188, -0.000331878662109375, 0.0, -0.00019657611846923828, -6.079673767089844e-06, -0.00045013427734375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.006317138671875, -0.001186370849609375, -0.013215065002441406, -1.9073486328125e-05, -8.96453857421875e-05, 0.0, -0.0015773773193359375, -9.5367431640625e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -0.3850727081298828, -1.33514404296875e-05, -0.001819610595703125, 0.0, -0.0007092952728271484, -1.9073486328125e-06, -0.0007457733154296875, -3.933906555175781e-06, -0.0030744054820388556, 0.0, -1.9073486328125e-06, -1.2159967422485352, 0.0, -0.0004100799560546875, -1.33514404296875e-05, -0.002470731735229492, -1.9073486328125e-06, -0.005766868591308594, -4.9591064453125e-05, -0.0012416839599609375, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -0.000888824462890625, -3.814697265625e-06, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.03370857238769531, -1.9073486328125e-06, -0.0018329620361328125, 0.0, -0.008259892463684082, -1.9073486328125e-06, -0.0005512237548828125, 0.0, -0.023876545950770378, 0.0, 0.0, -1.822504997253418, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.014169812202453613, -1.9073486328125e-06], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - len(self.player.minions)\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) < 7 and len(game.other_player.minions) < 7\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Gt"}]}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "IsNot"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 5, 169, 42, 115, "0", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "score": -13.685139778947203, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.6174106597900391, -0.0001964569091796875, -9.5367431640625e-06, -0.003086090087890625, -0.00029754638671875, -0.2786135673522949, -4.00543212890625e-05, -0.9372062683105469, -0.0005435943603515625, -0.3157835006713867, -9.34600830078125e-05, -0.007671356201171875, 0.0, -0.05335235595703125, 0.0, -0.05025970935821533, -1.9073486328125e-06, -0.010041236877441406, -4.768370445162873e-07, -0.21663939952850342, 0.0, -0.024064064025878906, -0.49625492095947266, -0.007929801940917969, -5.14984130859375e-05, 0.0, -0.00067901611328125, 0.0, -9.5367431640625e-05, -0.000240325927734375, 0.0, -0.06707477569580078, 0.0, -0.0007190704345703125, 0.0, -0.16409313678741455, 0.0, -0.14022541046142578, 0.0, -0.014560818672180176, 0.0, -0.3577451705932617, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.039755821228027344, 0.0, -0.011359214782714844, -7.2479248046875e-05, -7.62939453125e-05, 0.0, -0.023302078247070312, -2.288818359375e-05, -1.52587890625e-05, -0.002105712890625, -9.72747802734375e-05, -0.001530766487121582, 0.0, -0.001018524169921875, -3.814697265625e-06, -0.08100377768278122, -1.9073486328125e-06, -0.24042987823486328, -0.001720428466796875, -0.2066802978515625, -0.6044235229492188, -2.09808349609375e-05, -0.26472973823547363, -1.1920928244535389e-07, -0.9959946870803833, 0.0, -3.0517578125e-05, -0.21244049072265625, -0.05217742919921875, -0.004665654618293047, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.06691277027130127, -0.03571319580078125, -0.0004405975341796875, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.031787507236003876, -1.9073486328125e-06, -0.024570465087890625, -0.00107574462890625, -0.013691902160644531, -0.011430499143898487, -0.0011315345764160156, -4.9591064453125e-05, -6.866455078125e-05, -0.013235092163085938, -7.62939453125e-05, -0.004126191139221191, -2.3841855067985307e-07, -7.62939453125e-06, -0.22697043418884277, -1.2993727978027891e-05, -1.71661376953125e-05, -0.004301905632019043, -2.0265579223632812e-06, -8.96453857421875e-05, -0.0052356719970703125, -0.0002841949462890625, -0.000247955322265625, -0.000274658203125, -0.010044097900390625, -0.8524761199951172, -0.023702621459960938, -0.012571334838867188, -0.000331878662109375, 0.0, -0.00019657611846923828, -6.079673767089844e-06, -0.00045013427734375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.006317138671875, -0.001186370849609375, -0.013215065002441406, -1.9073486328125e-05, -8.96453857421875e-05, 0.0, -0.0015773773193359375, -9.5367431640625e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -0.3850727081298828, -1.33514404296875e-05, -0.001819610595703125, 0.0, -0.0007092952728271484, -1.9073486328125e-06, -0.0007457733154296875, -3.933906555175781e-06, -0.0030744054820388556, 0.0, -1.9073486328125e-06, -2.0270395278930664, -5.7220458984375e-06, -0.0003814697265625, -5.53131103515625e-05, -0.0012453794479370117, -1.9073486328125e-06, -0.0017871856689453125, -3.4332275390625e-05, -0.00103759765625, -1.71661376953125e-05, -0.001094818115234375, 0.0, -0.0013036727905273438, -1.1444091796875e-05, -4.00543212890625e-05, -1.33514404296875e-05, 0.0, -0.031236648559570312, 0.0, -0.0033721923828125, 0.0, -0.0026640892028808594, -1.9073486328125e-06, -0.0004749298095703125, -1.9073486328125e-06, -0.0075187659822404385, 0.0, 0.0, -0.32190799713134766, -1.9073486328125e-06, -0.03239631652832031, 0.0, -0.029623031616210938, -5.7220458984375e-06, -0.019069671630859375, -1.9073486328125e-06, -0.7538061141967773, -2.288818359375e-05], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - len(self.player.minions)\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) > 0 and len(game.other_player.minions) is not MINION_TYPE.DEMON\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 2}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "IsNot"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "score": -14.141173961052417, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.6174106597900391, -0.0001964569091796875, -9.5367431640625e-06, -0.003086090087890625, -0.00029754638671875, -0.2786135673522949, -4.00543212890625e-05, -0.9372062683105469, -0.0005435943603515625, -0.3157835006713867, -9.34600830078125e-05, -0.007671356201171875, 0.0, -0.05335235595703125, 0.0, -0.05025970935821533, -1.9073486328125e-06, -0.010041236877441406, -4.768370445162873e-07, -0.21663939952850342, 0.0, -0.024064064025878906, -0.49625492095947266, -0.007929801940917969, -5.14984130859375e-05, 0.0, -0.00067901611328125, 0.0, -9.5367431640625e-05, -0.000240325927734375, 0.0, -0.06707477569580078, 0.0, -0.0007190704345703125, 0.0, -0.16409313678741455, 0.0, -0.14022541046142578, 0.0, -0.014560818672180176, 0.0, -0.3577451705932617, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.039755821228027344, 0.0, -0.011359214782714844, -7.2479248046875e-05, -7.62939453125e-05, 0.0, -0.023302078247070312, -2.288818359375e-05, -1.52587890625e-05, -0.002105712890625, -9.72747802734375e-05, -0.001530766487121582, 0.0, -0.001018524169921875, -3.814697265625e-06, -0.08100377768278122, -1.9073486328125e-06, -0.24042987823486328, -0.001720428466796875, -0.2066802978515625, -0.6044235229492188, -2.09808349609375e-05, -0.26472973823547363, -1.1920928244535389e-07, -0.9959946870803833, 0.0, -3.0517578125e-05, -0.21244049072265625, -0.05217742919921875, -0.004665654618293047, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.06691277027130127, -0.03571319580078125, -0.0004405975341796875, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.031787507236003876, -1.9073486328125e-06, -0.024570465087890625, -0.00107574462890625, -0.013691902160644531, -0.011430499143898487, -0.0011315345764160156, -4.9591064453125e-05, -6.866455078125e-05, -0.013235092163085938, -7.62939453125e-05, -0.004126191139221191, -2.3841855067985307e-07, -7.62939453125e-06, -0.22697043418884277, -1.2993727978027891e-05, -1.71661376953125e-05, -0.004301905632019043, -2.0265579223632812e-06, -8.96453857421875e-05, -0.0052356719970703125, -0.0002841949462890625, -0.000247955322265625, -0.000274658203125, -0.010044097900390625, -0.8524761199951172, -0.023702621459960938, -0.012571334838867188, -0.000331878662109375, 0.0, -0.00019657611846923828, -6.079673767089844e-06, -0.00045013427734375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.006317138671875, -0.001186370849609375, -0.013215065002441406, -1.9073486328125e-05, -8.96453857421875e-05, 0.0, -0.0015773773193359375, -9.5367431640625e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -0.3850727081298828, -1.33514404296875e-05, -0.001819610595703125, 0.0, -0.0007092952728271484, -1.9073486328125e-06, -0.0007457733154296875, -3.933906555175781e-06, -0.0030744054820388556, 0.0, -1.9073486328125e-06, -1.609105110168457, -0.0001316070556640625, -0.0003204345703125, -6.4849853515625e-05, -0.5268858671188354, 0.0, -0.026488304138183594, -0.0002536773681640625, -0.009889602661132812, -2.09808349609375e-05, -0.000225067138671875, 0.0, -0.008633732795715332, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.1601572036743164, 0.0, -0.0005207061767578125, 0.0, -0.010433197021484375, 0.0, -0.00058746337890625, 0.0, -0.047705527395009995, 0.0, 0.0, -0.3200416564941406, -1.9073486328125e-06, -0.07365036010742188, 0.0, -0.04274559020996094, -5.7220458984375e-06, -0.0254058837890625, -1.9073486328125e-06, -0.8288908004760742, -1.71661376953125e-05], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - len(self.player.minions)\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2 and len(game.other_player.minions) is not MINION_TYPE.DEMON\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Gt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Eye for Eye Eye", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "EyeanEye", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 56, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 171, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 5, 169, 42, 115, "0", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -14.147727135514586, "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.6174106597900391, -0.0001964569091796875, -9.5367431640625e-06, -0.003086090087890625, -0.00029754638671875, -0.2786135673522949, -4.00543212890625e-05, -0.9372062683105469, -0.0005435943603515625, -0.3157835006713867, -9.34600830078125e-05, -0.007671356201171875, 0.0, -0.05335235595703125, 0.0, -0.05025970935821533, -1.9073486328125e-06, -0.010041236877441406, -4.768370445162873e-07, -0.21663939952850342, 0.0, -0.024064064025878906, -0.49625492095947266, -0.007929801940917969, -5.14984130859375e-05, 0.0, -0.00067901611328125, 0.0, -9.5367431640625e-05, -0.000240325927734375, 0.0, -0.06707477569580078, 0.0, -0.0007190704345703125, 0.0, -0.16409313678741455, 0.0, -0.14022541046142578, 0.0, -0.014560818672180176, 0.0, -0.3577451705932617, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.039755821228027344, 0.0, -0.011359214782714844, -7.2479248046875e-05, -7.62939453125e-05, 0.0, -0.023302078247070312, -2.288818359375e-05, -1.52587890625e-05, -0.002105712890625, -9.72747802734375e-05, -0.001530766487121582, 0.0, -0.001018524169921875, -3.814697265625e-06, -0.08100377768278122, -1.9073486328125e-06, -0.24042987823486328, -0.001720428466796875, -0.2066802978515625, -0.6044235229492188, -2.09808349609375e-05, -0.26472973823547363, -1.1920928244535389e-07, -0.9959946870803833, 0.0, -3.0517578125e-05, -0.21244049072265625, -0.05217742919921875, -0.004665654618293047, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.06691277027130127, -0.03571319580078125, -0.0004405975341796875, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.031787507236003876, -1.9073486328125e-06, -0.024570465087890625, -0.00107574462890625, -0.013691902160644531, -0.011430499143898487, -0.0011315345764160156, -4.9591064453125e-05, -6.866455078125e-05, -0.013235092163085938, -7.62939453125e-05, -0.004126191139221191, -2.3841855067985307e-07, -7.62939453125e-06, -0.22697043418884277, -1.2993727978027891e-05, -1.71661376953125e-05, -0.004301905632019043, -2.0265579223632812e-06, -8.96453857421875e-05, -0.0052356719970703125, -0.0002841949462890625, -0.000247955322265625, -0.000274658203125, -0.010044097900390625, -0.8524761199951172, -0.023702621459960938, -0.012571334838867188, -0.000331878662109375, 0.0, -0.00019657611846923828, -6.079673767089844e-06, -0.00045013427734375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, 0.0, -0.006317138671875, -0.001186370849609375, -0.013215065002441406, -1.9073486328125e-05, -8.96453857421875e-05, 0.0, -0.0015773773193359375, -9.5367431640625e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -0.3850727081298828, -1.33514404296875e-05, -0.001819610595703125, 0.0, -0.0007092952728271484, -1.9073486328125e-06, -0.0007457733154296875, -3.933906555175781e-06, -0.0030744054820388556, 0.0, -1.9073486328125e-06, -2.0270395278930664, -5.7220458984375e-06, -0.0003814697265625, -5.53131103515625e-05, -0.0012453794479370117, -1.9073486328125e-06, -0.0017871856689453125, -3.4332275390625e-05, -0.00103759765625, -1.71661376953125e-05, -0.001094818115234375, 0.0, -0.0013036727905273438, -1.1444091796875e-05, -4.00543212890625e-05, -1.33514404296875e-05, 0.0, -0.031236648559570312, 0.0, -0.0033721923828125, 0.0, -0.0026640892028808594, -1.9073486328125e-06, -0.0004749298095703125, -1.9073486328125e-06, -0.0075187659822404385, 0.0, 0.0, -1.6074800491333008, 0.0, -0.0004138946533203125, -1.9073486328125e-06, -0.011525154113769531, -1.9073486328125e-06], "inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - len(self.player.minions)\n        for i in range(0, 2):\n            minion.add_buff(Buff(ChangeAttack(2)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) > 0 and len(game.other_player.minions) < 7\n"}], "gold_code": "class EyeForAnEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for an Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            character.player.opponent.hero.damage(amount, self)\n        super().reveal()\n\n    def activate(self, player):\n        player.bind('character_damaged', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_damaged', self._reveal)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "<UNK>"}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 136, 21, 110, "minion", "<EOS>", "<UNK>", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -1.9529363043601862, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.658604621887207, -6.866455078125e-05, -1.71661376953125e-05, 0.0, -0.0016908645629882812, 0.0, -0.020433425903320312, -0.0003204345703125, -0.017541885375976562, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.050037384033203125, -1.9073486328125e-06, -0.0011315345764160156, 0.0, -0.005789451766759157, -1.1920928244535389e-07, -7.62939453125e-05, -0.0009098052978515625, -0.36980533599853516, -6.103515625e-05, 0.0, -0.00023937225341796875, -1.1920928244535389e-07, -0.005278587341308594, 0.0, -0.0004634857177734375, -0.17162704467773438, -0.000141143798828125, 0.0, -0.000714421272277832, 0.0, -0.0022562742233276367, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>()\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -2.657662590126556, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.5206880569458008, -0.0032672882080078125, -0.0035924911499023438, -1.9073486328125e-06, -0.009281158447265625, 0.0, -0.07438945770263672, 0.0, -0.0003390312194824219, -9.536738616588991e-07, -0.3816901445388794, 0.0, -1.9073486328125e-06, -0.0052089691162109375, -1.9073486328125e-06, -0.006360054016113281, 0.0, -0.0058803558349609375, -9.34600830078125e-05, -4.9591064453125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0011490583419799805, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "<UNK>"}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 136, 21, 110, "minion", "<EOS>", "<UNK>", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -2.8982318782672465, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -1.4148820638656616, -2.3603428417118266e-05, -0.0003180503554176539, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, -8.78537175594829e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.8835065930034034e-05, -2.3841855067985307e-07, -0.19918346405029297, -7.62939453125e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.627436637878418, -6.67572021484375e-05, -1.71661376953125e-05, 0.0, -0.0016727447509765625, 0.0, -0.019968032836914062, -0.0003223419189453125, -0.017545700073242188, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.04910087585449219, -1.9073486328125e-06, -0.001125931739807129, 0.0, -0.005763162858784199, -1.1920928244535389e-07, -7.62939453125e-05, -0.000919342041015625, -0.3706817626953125, -6.103515625e-05, 0.0, -0.0002384185791015625, -1.1920928244535389e-07, -0.005208015441894531, 0.0, -0.0004730224609375, -0.176849365234375, -0.0001392364501953125, 0.0, -0.000733494758605957, 0.0, -0.002264857292175293, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>()\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -3.675994778373415, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -1.4148820638656616, -2.3603428417118266e-05, -0.0003180503554176539, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, -8.78537175594829e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.8835065930034034e-05, -2.3841855067985307e-07, -0.19918346405029297, -7.62939453125e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.5714330673217773, -0.0032091140747070312, -0.003482818603515625, -1.9073486328125e-06, -0.00937652587890625, 0.0, -0.07479000091552734, 0.0, -0.0003409385681152344, -9.536738616588991e-07, -0.3768388032913208, 0.0, -1.9073486328125e-06, -0.005196571350097656, -1.9073486328125e-06, -0.006317138671875, 0.0, -0.0062007904052734375, -9.5367431640625e-05, -4.9591064453125e-05, 0.0, -1.52587890625e-05, 0.0, -0.001150965690612793, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "<UNK>"}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 136, 21, 110, "minion", "<EOS>", "<UNK>", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -3.9221424919577785, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -2.4107649326324463, -0.0001227855682373047, -0.0003814697265625, -1.9073486328125e-06, -6.079673767089844e-06, 0.0, -6.29407586529851e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.8835065930034034e-05, -2.3841855067985307e-07, -0.22656917572021484, -8.392333984375e-05, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.6302967071533203, -6.866455078125e-05, -1.71661376953125e-05, 0.0, -0.0017232894897460938, 0.0, -0.020613670349121094, -0.0003223419189453125, -0.017930984497070312, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.049500465393066406, -1.9073486328125e-06, -0.0011258125305175781, 0.0, -0.0057906704023480415, -1.1920928244535389e-07, -7.62939453125e-05, -0.0009307861328125, -0.36425113677978516, -5.91278076171875e-05, 0.0, -0.0002346038818359375, -1.1920928244535389e-07, -0.0051174163818359375, 0.0, -0.0004673004150390625, -0.17948627471923828, -0.0001373291015625, 0.0, -0.0007306337356567383, 0.0, -0.0022743940353393555, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>()\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.087900412817746, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.658604621887207, -6.866455078125e-05, -1.71661376953125e-05, 0.0, -0.0016908645629882812, 0.0, -0.020433425903320312, -0.0003204345703125, -0.017541885375976562, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.050037384033203125, -1.9073486328125e-06, -0.0011315345764160156, 0.0, -0.005789451766759157, -1.1920928244535389e-07, -7.62939453125e-05, -0.0009098052978515625, -1.1779842376708984, -0.00072479248046875, 0.0, -0.005454421043395996, -4.410734163684538e-06, -0.791459321975708, 0.0, -7.62939453125e-06, -0.6318864822387695, -5.7220458984375e-06, -0.05510234832763672, 0.0, -0.021532058715820312, -0.0002574920654296875, -1.52587890625e-05, 0.0, -7.271766662597656e-05, 0.0, -0.0010440349578857422, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.die(self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.7053263450993015, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -2.4107649326324463, -0.0001227855682373047, -0.0003814697265625, -1.9073486328125e-06, -6.079673767089844e-06, 0.0, -6.29407586529851e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.8835065930034034e-05, -2.3841855067985307e-07, -0.22656917572021484, -8.392333984375e-05, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.5764875411987305, -0.0031881332397460938, -0.0033884048461914062, -1.9073486328125e-06, -0.00923919677734375, 0.0, -0.07350730895996094, 0.0, -0.0003466606140136719, -9.536738616588991e-07, -0.3791390657424927, 0.0, -1.9073486328125e-06, -0.005198478698730469, -1.9073486328125e-06, -0.006304740905761719, 0.0, -0.0062961578369140625, -9.5367431640625e-05, -4.9591064453125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0011528730392456055, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.849542395121887, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.658604621887207, -6.866455078125e-05, -1.71661376953125e-05, 0.0, -0.0016908645629882812, 0.0, -0.020433425903320312, -0.0003204345703125, -0.017541885375976562, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.050037384033203125, -1.9073486328125e-06, -0.0011315345764160156, 0.0, -0.005789451766759157, -1.1920928244535389e-07, -7.62939453125e-05, -0.0009098052978515625, -1.1779842376708984, -0.00072479248046875, 0.0, -0.005454421043395996, -4.410734163684538e-06, -1.7977240085601807, -2.3841855067985307e-07, -0.0186309814453125, -0.0197601318359375, -3.62396240234375e-05, -0.00025177001953125, -2.86102294921875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -6.806811143178493e-05, -5.960462772236497e-07, -0.11499146372079849, -2.300739288330078e-05, -9.5367431640625e-06, -0.19467639923095703, -8.58306884765625e-05, -0.03707632049918175, -2.2172682292875834e-05, -0.0017547607421875, 0.0, -0.0033788681030273438, -1.1920928244535389e-07, -0.0017852783203125, -0.000202178955078125, -1.1444091796875e-05, 0.0, -1.919269561767578e-05, -1.1920928244535389e-07, -0.07244765758514404, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "HUNTER"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.997263326620143, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -1.4148820638656616, -2.3603428417118266e-05, -0.0003180503554176539, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, -8.78537175594829e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.8835065930034034e-05, -2.3841855067985307e-07, -0.19918346405029297, -7.62939453125e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.627436637878418, -6.67572021484375e-05, -1.71661376953125e-05, 0.0, -0.0016727447509765625, 0.0, -0.019968032836914062, -0.0003223419189453125, -0.017545700073242188, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.04910087585449219, -1.9073486328125e-06, -0.001125931739807129, 0.0, -0.005763162858784199, -1.1920928244535389e-07, -7.62939453125e-05, -0.000919342041015625, -1.1760406494140625, -0.000713348388671875, 0.0, -0.005304098129272461, -4.768360213347478e-06, -0.7739614248275757, 0.0, -7.62939453125e-06, -0.6206083297729492, -5.7220458984375e-06, -0.054901123046875, 0.0, -0.022731781005859375, -0.0002651214599609375, -1.52587890625e-05, 0.0, -7.462501525878906e-05, 0.0, -0.001046895980834961, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.die(self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "<UNK>"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>", 71, 136, 21, 110, "minion", "<EOS>", "<UNK>", "<EOS>"], "score": -5.232708973223467, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.658604621887207, -6.866455078125e-05, -1.71661376953125e-05, 0.0, -0.0016908645629882812, 0.0, -0.020433425903320312, -0.0003204345703125, -0.017541885375976562, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.050037384033203125, -1.9073486328125e-06, -0.0011315345764160156, 0.0, -0.005789451766759157, -1.1920928244535389e-07, -7.62939453125e-05, -0.0009098052978515625, -1.1779842376708984, -0.00072479248046875, 0.0, -0.005454421043395996, -4.410734163684538e-06, -1.6386454105377197, 0.0, -3.814697265625e-06, -0.0071563720703125, -0.09535789489746094, -0.0016622543334960938, -8.344646857949556e-07, -2.47955322265625e-05, -3.0517578125e-05, -0.026609810069203377, -0.00013875754666514695, -0.0031223297119140625, -0.02764129638671875, -9.1552734375e-05, 0.0, -0.33315062522888184, -2.3841855067985307e-07, -0.5125551223754883, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n        minion.<UNK>()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Sub"}, "right": {"_type": "Num", "n": 1}, "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 56, 23, 115, "1", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -5.2481909302058085, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.7024602890014648, 0.0, -1.33514404296875e-05, -0.000797271728515625, -5.7220458984375e-06, -0.2134690284729004, -0.0001678466796875, -0.20172119140625, -0.0078029632568359375, -1.0126609802246094, -0.0017795562744140625, -0.07178020477294922, -1.33514404296875e-05, -0.12035131454467773, -4.017353057861328e-05, -0.001087188720703125, -2.86102294921875e-05, 0.0, -0.0033349990844726562, -3.814697265625e-06, -0.0001583099365234375, 0.0, -0.004866123199462891, -3.576278118089249e-07, -0.000634312629699707, 0.0, -0.04560188949108124, -1.9073486328125e-06, -0.40069580078125, -0.3895082473754883, -5.7220458984375e-06, -0.00928108487278223, -1.1920928244535389e-07, -0.37782764434814453, -0.026393890380859375, -1.33514404296875e-05, -7.62939453125e-06, -6.687641143798828e-05, -2.3841855067985307e-07, -0.009958028793334961, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = len(game.other_player.minions) - 1\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "<UNK>"}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hand"}, "hole1": "append", "hole2": [{"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 136, 21, 110, "minion", "<EOS>", "<UNK>", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 169, 40, 110, "self", "<EOS>"], "score": -5.596711052208697, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.658604621887207, -6.866455078125e-05, -1.71661376953125e-05, 0.0, -0.0016908645629882812, 0.0, -0.020433425903320312, -0.0003204345703125, -0.017541885375976562, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.050037384033203125, -1.9073486328125e-06, -0.0011315345764160156, 0.0, -0.005789451766759157, -1.1920928244535389e-07, -7.62939453125e-05, -0.0009098052978515625, -0.36980533599853516, -6.103515625e-05, 0.0, -0.00023937225341796875, -1.1920928244535389e-07, -0.005278587341308594, 0.0, -0.0004634857177734375, -1.8557634353637695, -0.00098419189453125, -1.1444091796875e-05, -0.0001697540283203125, -5.7220458984375e-06, -0.03593921661376953, 0.0, -0.3476521968841553, 0.0, -0.08638668060302734, 0.0, -1.9073486328125e-06, -0.31124305725097656, 0.0, -1.1803560256958008, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>()\n        player.hand.append(self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "bounce"}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>", 71, 136, 21, 110, "minion", "<EOS>", "bounce", "<EOS>"], "score": -6.022583050066729, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.658604621887207, -6.866455078125e-05, -1.71661376953125e-05, 0.0, -0.0016908645629882812, 0.0, -0.020433425903320312, -0.0003204345703125, -0.017541885375976562, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.050037384033203125, -1.9073486328125e-06, -0.0011315345764160156, 0.0, -0.005789451766759157, -1.1920928244535389e-07, -7.62939453125e-05, -0.0009098052978515625, -1.1779842376708984, -0.00072479248046875, 0.0, -0.005454421043395996, -4.410734163684538e-06, -1.6386454105377197, 0.0, -3.814697265625e-06, -0.0071563720703125, -0.09535789489746094, -0.0016622543334960938, -8.344646857949556e-07, -2.47955322265625e-05, -3.0517578125e-05, -0.026609810069203377, -0.00013875754666514695, -0.0031223297119140625, -0.02764129638671875, -9.1552734375e-05, 0.0, -0.33315062522888184, -2.3841855067985307e-07, -1.30242919921875, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n        minion.bounce()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "<UNK>"}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hand"}, "hole1": "append", "hole2": [{"_type": "Name", "id": "minion"}]}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 136, 21, 110, "minion", "<EOS>", "<UNK>", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 169, 40, 110, "minion", "<EOS>"], "score": -6.129568112631581, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.658604621887207, -6.866455078125e-05, -1.71661376953125e-05, 0.0, -0.0016908645629882812, 0.0, -0.020433425903320312, -0.0003204345703125, -0.017541885375976562, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.050037384033203125, -1.9073486328125e-06, -0.0011315345764160156, 0.0, -0.005789451766759157, -1.1920928244535389e-07, -7.62939453125e-05, -0.0009098052978515625, -0.36980533599853516, -6.103515625e-05, 0.0, -0.00023937225341796875, -1.1920928244535389e-07, -0.005278587341308594, 0.0, -0.0004634857177734375, -1.8557634353637695, -0.00098419189453125, -1.1444091796875e-05, -0.0001697540283203125, -5.7220458984375e-06, -0.03593921661376953, 0.0, -0.3476521968841553, 0.0, -0.08638668060302734, 0.0, -1.9073486328125e-06, -0.31124305725097656, 0.0, -1.7132086753845215, -4.410734163684538e-06], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>()\n        player.hand.append(minion)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Flare", "hole1": 2, "hole2": "WARRIOR"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Flare", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "die", "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}]}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}], "value": {"_type": "Name", "id": "frog"}}]}, "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "die", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", 59, 79, 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 21, 110, "frog", "<EOS>"], "score": -7.3399518854697945, "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.658604621887207, -6.866455078125e-05, -1.71661376953125e-05, 0.0, -0.0016908645629882812, 0.0, -0.020433425903320312, -0.0003204345703125, -0.017541885375976562, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.050037384033203125, -1.9073486328125e-06, -0.0011315345764160156, 0.0, -0.005789451766759157, -1.1920928244535389e-07, -7.62939453125e-05, -0.0009098052978515625, -1.1779842376708984, -0.00072479248046875, 0.0, -0.005454421043395996, -4.410734163684538e-06, -0.791459321975708, 0.0, -7.62939453125e-06, -0.7718191146850586, 0.0, -0.1420297622680664, -1.9073486328125e-06, -0.01623821258544922, 0.0, -0.5445444583892822, -1.1920928244535389e-07, -0.6642618179321289, -1.71661376953125e-05, 0.0, -0.1591653823852539, -3.814697265625e-06, -0.26963138580322266, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.007414102554321289, 0.0, -0.008166074752807617, -1.6689286894688848e-06, -0.05620408058166504, -4.529942543740617e-06, -0.2288990020751953, -0.000896453857421875, -1.0925712585449219, 0.0], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.die(player.hero)\n        self.target.card = frog\n"}], "gold_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_minion_spell_target(game,\n            lambda m: m.stealth):\n            minion.stealth = False\n        for secret in game.other_player.secrets:\n            secret.deactivate(game.other_player)\n        game.other_player.secrets = []\n        player.draw()\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Gorehowl", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gorehowl", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -2.083447457965164, "score_history": [-5.7220458984375e-06, -1.2905454635620117, -1.5497194908675738e-05, -0.00014829635620117188, -1.1324817933200393e-05, -0.0025043487548828125, -7.152555099310121e-07, -3.24249267578125e-05, -0.0003223419189453125, -0.2625865936279297, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.0007801055908203125, 0.0, -4.76837158203125e-05, -6.198882147145923e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.048390164971351624, -1.8358061424805783e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.300739288330078e-05, -1.96695291379001e-05, -0.030579805374145508, -3.933906555175781e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0004961490631103516, -1.1920928244535389e-07, -0.00024259090423583984, 0.0, -0.001007080078125, -1.9073486328125e-06, -3.814697265625e-06, -0.0269317626953125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000457763671875, 0.0, -2.3245811462402344e-05, -1.1920928244535389e-07, -0.12847745418548584, -7.867813110351562e-06, -0.001697540283203125, 0.0, -1.728534698486328e-05, 0.0, -0.0003223419189453125, -2.09808349609375e-05, -6.878376007080078e-05, -1.9073486328125e-06, -0.15162372589111328, -8.0108642578125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.300739288330078e-05, 0.0, -3.814697265625e-06, 0.0, -1.6450876501039602e-05, 0.0, -0.002582550048828125, -0.0012111663818359375, -5.340576171875e-05, -9.5367431640625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -8.96453857421875e-05, -3.576278118089249e-07, -0.0799567699432373, 0.0, -1.52587890625e-05, -0.0008602142333984375, -3.62396240234375e-05, -0.000148773193359375, -0.000537872314453125, -1.1444091796875e-05, 0.0, -6.73532485961914e-05, 0.0, -0.002098560333251953, -0.00020205974578857422, -0.000308990478515625, -0.01745891571044922, -3.4332275390625e-05, -0.028935419395565987, -1.0728830375228426e-06, -7.62939453125e-06, -3.0517578125e-05, -0.0009851455688476562, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 7, "hole2": 1}], "hole0": "Gorehowl", "hole4": "player"}, "choice_history": [54, 122, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Gorehowl", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 41, 111, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>"], "score": -2.8872989949726318, "score_history": [-5.7220458984375e-06, -0.32993221282958984, -0.014127237722277641, -0.00904536247253418, -0.00025567124248482287, -6.35385513305664e-05, -5.960462772236497e-07, -5.7220458984375e-05, -0.9314632415771484, -0.6700229644775391, -9.5367431640625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.328653787728399e-05, 0.0, -0.11039352416992188, -3.814697265625e-06, -4.1961669921875e-05, -8.106212590064388e-06, -3.814697265625e-06, -0.0003261566162109375, 0.0, -0.05631278455257416, -5.340433563105762e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -8.20159912109375e-05, -0.0001558065414428711, -0.010099530220031738, -3.933906555175781e-06, -0.000415802001953125, 0.0, -7.62939453125e-06, 0.0, -0.0009747743606567383, -1.1920928244535389e-07, -0.0006810426712036133, 0.0, -2.09808349609375e-05, -0.0002689361572265625, -5.1856040954589844e-05, -7.62939453125e-06, -0.6231956481933594, -3.814697265625e-06, -0.0001837015151977539, 0.0, -0.0004711151123046875, -0.0242919921875, -0.10097503662109375, -7.998938963282853e-05, -3.576278118089249e-07, -0.0030832290649414062, -8.344646857949556e-07, -3.623962766141631e-05, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, True)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Gorehowl", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Gorehowl", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 41, 111, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -3.074141893157467, "score_history": [-5.7220458984375e-06, -1.2905454635620117, -1.5497194908675738e-05, -0.00014829635620117188, -1.1324817933200393e-05, -0.0025043487548828125, -7.152555099310121e-07, -3.24249267578125e-05, -0.0003223419189453125, -1.4674921035766602, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.539156957936939e-05, -3.814697265625e-06, -0.014287948608398438, -3.814697265625e-06, -4.00543212890625e-05, -8.463837730232626e-06, -3.814697265625e-06, -0.0004024505615234375, 0.0, -0.04605121910572052, -2.253030106658116e-05, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00012791156768798828, -0.00023293495178222656, -0.010044217109680176, -3.933906555175781e-06, -0.001247406005859375, 0.0, -1.52587890625e-05, 0.0, -0.0017799139022827148, -1.1920928244535389e-07, -0.00344085693359375, 0.0, -3.62396240234375e-05, -0.000308990478515625, -7.486343383789062e-05, -7.62939453125e-06, -0.0002803802490234375, 0.0, -0.0003553628921508789, 0.0, -0.01265716552734375, -1.71661376953125e-05, -9.739398956298828e-05, -2.0265579223632812e-06, -0.06717681884765625, -9.1552734375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.780292510986328e-05, 0.0, -5.7220458984375e-06, 0.0, -2.4437889805994928e-05, 0.0, -0.017621994018554688, -0.0017881393432617188, -9.72747802734375e-05, -1.52587890625e-05, -6.103515625e-05, -3.814697265625e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.000186920166015625, -2.3841855067985307e-07, -0.07991600036621094, 0.0, -1.71661376953125e-05, -0.00112152099609375, -4.1961669921875e-05, -0.0001811981201171875, -0.000408172607421875, -1.1444091796875e-05, 0.0, -5.793571472167969e-05, 0.0, -0.0023915767669677734, -0.00024116039276123047, -0.0003509521484375, -0.01830768585205078, -3.4332275390625e-05, -0.030150968581438065, -1.1920922133867862e-06, -7.62939453125e-06, -3.24249267578125e-05, -0.0009412765502929688, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 7, "hole2": 1}], "hole0": "Gorehowl", "hole4": "player"}, "choice_history": [54, 122, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gorehowl", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>"], "score": -3.1409493032307836, "score_history": [-5.7220458984375e-06, -0.32993221282958984, -0.014127237722277641, -0.00904536247253418, -0.00025567124248482287, -6.35385513305664e-05, -5.960462772236497e-07, -5.7220458984375e-05, -0.9314632415771484, -0.7176799774169922, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.3589859008789062e-05, 0.0, -0.000614166259765625, -1.9073486328125e-06, -5.53131103515625e-05, -7.390974587906385e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.13259051740169525, -3.93382906622719e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.491474151611328e-05, -1.2516970855358522e-05, -0.046324968338012695, -3.933906555175781e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.00046944618225097656, -1.1920928244535389e-07, -0.00017213821411132812, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.4782218933105469, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000518798828125, 0.0, -2.7179718017578125e-05, -1.1920928244535389e-07, -0.11177003383636475, -7.867813110351562e-06, -0.19331932067871094, -1.9073486328125e-06, -5.161762237548828e-05, 0.0, -0.0053253173828125, -0.002094268798828125, -0.16069984436035156, -0.0001306532503804192, -3.576278118089249e-07, -0.005680680274963379, -3.576278118089249e-07, -4.0769591578282416e-05, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Gorehowl", "hole1": 7, "hole2": "PRIEST"}], "hole6": [{"hole3": [{"arg": "effects", "_type": "keyword", "value": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "MinionSummoned"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 1}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "TargetSelector"}]}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "MinionSummoned"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template19", "hole0": "<UNK>Durability"}, {"_type": "Template19", "hole0": "WeaponSelector"}]}]}]}}], "_type": "Template14", "hole0": "Weapon", "hole1": 7, "hole2": 1}], "hole0": "Gorehowl", "hole4": "player"}, "choice_history": [54, 122, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 133, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 176, 53, 159, "effects", "<EOS>", 28, 142, "Effect", "<EOS>", 170, 50, 146, "Minion", "Summoned", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Target", "Selector", "<EOS>", 169, 49, 145, "Effect", "<EOS>", 170, 50, 146, "Minion", "Summoned", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 50, 146, "<UNK>", "Durability", "<EOS>", 50, 146, "Weapon", "Selector", "<EOS>"], "score": -3.4075791279176926, "score_history": [-5.7220458984375e-06, -0.32993221282958984, -0.014127237722277641, -0.00904536247253418, -0.00025567124248482287, -6.35385513305664e-05, -5.960462772236497e-07, -5.7220458984375e-05, -0.5009326934814453, -0.0009250640869140625, -2.1934269170742482e-05, -0.00012409687042236328, -0.05059506744146347, -3.564294092939235e-05, -0.18993306159973145, -2.264974000354414e-06, -0.00040721893310546875, 0.0, -0.022064208984375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, -0.001415252685546875, -0.006648063659667969, -0.0001289761275984347, -1.1920928244535389e-07, -0.01894998550415039, -7.152555099310121e-07, -0.000789642333984375, -3.933898824470816e-06, -0.37819480895996094, -5.7220458984375e-06, -1.9073486328125e-06, -0.1104278564453125, 0.0, -0.000457763671875, -0.4396934509277344, -0.0005935430526733398, 0.0, -7.05718994140625e-05, -0.0715789794921875, -4.57763671875e-05, -0.025629162788391113, -0.044559478759765625, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -0.04897785186767578, -2.47955322265625e-05, -0.0001983642578125, -1.9073486328125e-06, -0.0011612173402681947, -0.00011098384857177734, -1.9073486328125e-05, -4.38690185546875e-05, -5.7220458984375e-05, -0.0001735687255859375, -0.00031280517578125, -0.0003528594970703125, -0.0010505893733352423, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0007399320602416992, -0.027825117111206055, -1.1444091796875e-05, -1.1444091796875e-05, -0.000331878662109375, 0.0, -0.0025243014097213745, -1.9073486328125e-06, -1.33514404296875e-05, -0.026292800903320312, -2.586841583251953e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.076957702636719e-05, -0.0053403377532958984, 0.0, -3.62396240234375e-05, -0.0003452301025390625, -5.7220458984375e-06, -0.0013683885335922241, -7.62939453125e-06, -0.009143829345703125, -8.0108642578125e-05, -0.054306983947753906, -0.00014340877532958984, 0.0, 0.0, -0.0016937255859375, -0.0001430511474609375, -0.09076344966888428, 0.0, -4.9591064453125e-05, -0.03351116180419922, -1.9073486328125e-05, -0.04419231414794922, -0.014414787292480469, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0015742778778076172, -0.0002574920654296875, -2.384185791015625e-06, -7.62939453125e-06, -0.1515188217163086, -1.1444091796875e-05, -0.04714381322264671, -0.01961846835911274, -3.6001059925183654e-05, -0.286163330078125, 0.0, -0.3174114227294922, -4.780292510986328e-05, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(MinionSummoned(), ActionTag(\n            Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]),\n            TargetSelector())), Effect(MinionSummoned(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Durability"}}], "_type": "List"}, "_type": "Template9", "hole0": 7, "hole1": 1, "hole2": "buffs"}], "hole0": "Gorehowl", "hole4": "player"}, "choice_history": [54, 122, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Gorehowl", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "1", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Durability", "<EOS>"], "score": -3.5649366408058754, "score_history": [-5.7220458984375e-06, -0.32993221282958984, -0.014127237722277641, -0.00904536247253418, -0.00025567124248482287, -6.35385513305664e-05, -5.960462772236497e-07, -5.7220458984375e-05, -0.9314632415771484, -0.6700229644775391, -9.5367431640625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.328653787728399e-05, 0.0, -0.11039352416992188, -3.814697265625e-06, -4.1961669921875e-05, -8.106212590064388e-06, -3.814697265625e-06, -0.0003261566162109375, 0.0, -0.05631278455257416, -5.340433563105762e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -8.20159912109375e-05, -0.0001558065414428711, -0.010099530220031738, -3.933906555175781e-06, -0.000415802001953125, 0.0, -7.62939453125e-06, 0.0, -0.0009747743606567383, -1.1920928244535389e-07, -0.0006810426712036133, 0.0, -2.09808349609375e-05, -0.0002689361572265625, -5.1856040954589844e-05, -7.62939453125e-06, -0.7750148773193359, 0.0, -0.00014877121429890394, 0.0, -0.0002422332763671875, -0.02123260498046875, -1.52587890625e-05, -3.254413604736328e-05, -8.583032467868179e-06, -0.0002779960341285914, -2.3841855067985307e-07, -0.41211485862731934, 0.0, -0.04832744598388672, -0.00043487548828125, -0.00011444091796875, -0.0001201629638671875, -0.0061893463134765625, -0.0002002716064453125, 0.0, -9.34600830078125e-05, 0.0, -0.035075392574071884, -0.13031624257564545], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, True)\n\n    def create_minion(self, player):\n        return Minion(7, 1, buffs=[Buff(Durability())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "buffs", "_type": "keyword", "value": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}}, {"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 1}}]}], "_type": "List"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole6": [{"_type": "Template11", "hole0": 7, "hole1": 1}], "hole0": "Gorehowl", "hole4": "player"}, "choice_history": [54, 122, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gorehowl", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "buffs", "<EOS>", 19, 106, 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 170, 46, 128, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 51, 154, 76, 23, 115, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "7", "<EOS>", "1", "<EOS>"], "score": -4.188726931837024, "score_history": [-5.7220458984375e-06, -0.32993221282958984, -0.014127237722277641, -0.00904536247253418, -0.00025567124248482287, -6.35385513305664e-05, -5.960462772236497e-07, -5.7220458984375e-05, -0.9314632415771484, -0.7176799774169922, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.3589859008789062e-05, 0.0, -0.000614166259765625, -1.9073486328125e-06, -5.53131103515625e-05, -7.390974587906385e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.13259051740169525, -3.93382906622719e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.491474151611328e-05, -1.2516970855358522e-05, -0.046324968338012695, -3.933906555175781e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.00046944618225097656, -1.1920928244535389e-07, -0.00017213821411132812, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.0098791122436523, -7.62939453125e-06, -0.0027179718017578125, -0.0003604888916015625, -1.1444091796875e-05, -9.5367431640625e-06, -0.05370140075683594, -0.00018930435180664062, -6.866455078125e-05, -0.0067081451416015625, -0.0001163482666015625, -0.004970908164978027, -0.001679539680480957, -5.53131103515625e-05, -0.000335693359375, -0.15874671936035156, -0.43707752227783203, -0.0033663511276245117, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.2912040054798126, -0.004492044448852539, -1.1920928244535389e-07, -0.017190933227539062, -6.4849853515625e-05, -0.0003032684326171875, -1.33514404296875e-05, 0.0, -0.0011341031640768051, -1.1444091796875e-05, -0.0038036108016967773, 0.0, -3.29013928421773e-05, 0.0, -0.0003032684326171875, -0.003414154052734375, -0.0004138946533203125, -0.00021600723266601562, -1.0251946150674485e-05, -0.0030667786486446857, -1.2516897186287679e-05], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, buffs=[Buff(ManaChange(Count(MinionSelector()\n            ), -1))])\n\n    def create_minion(self, player):\n        return Minion(7, 1)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Gorehowl", "hole1": 7, "hole2": "PRIEST"}], "hole6": [{"hole3": [{"arg": "effects", "_type": "keyword", "value": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CharacterAttack", "hole1": {"_type": "Name", "id": "IsHero"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "TargetSelector"}]}]}}], "_type": "Template14", "hole0": "Weapon", "hole1": 7, "hole2": 1}], "hole0": "Gorehowl", "hole4": "player"}, "choice_history": [54, 122, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 133, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 176, 53, 159, "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Character", "Attack", "<EOS>", 21, 110, "Is", "Hero", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Target", "Selector", "<EOS>"], "score": -4.40838555707915, "score_history": [-5.7220458984375e-06, -0.32993221282958984, -0.014127237722277641, -0.00904536247253418, -0.00025567124248482287, -6.35385513305664e-05, -5.960462772236497e-07, -5.7220458984375e-05, -0.5009326934814453, -0.0009250640869140625, -2.1934269170742482e-05, -0.00012409687042236328, -0.05059506744146347, -3.564294092939235e-05, -0.18993306159973145, -2.264974000354414e-06, -0.00040721893310546875, 0.0, -0.022064208984375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, -0.001415252685546875, -0.006648063659667969, -0.0001289761275984347, -1.1920928244535389e-07, -0.01894998550415039, -7.152555099310121e-07, -0.000789642333984375, -3.933898824470816e-06, -0.37819480895996094, -5.7220458984375e-06, -1.9073486328125e-06, -0.1104278564453125, 0.0, -0.000457763671875, -1.0422639846801758, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -0.07869338989257812, -0.12557315826416016, -0.3660564422607422, -0.011136054992675781, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.04593980312347412, -0.01659645512700081, 0.0, -0.0001316070556640625, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.739398956298828e-05, -7.62939453125e-06, -5.9604644775390625e-06, -3.814697265625e-06, -0.14444637298583984, -0.032021522521972656, -0.00022637838264927268, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -0.7315866947174072, -0.10058212280273438, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.002084195613861084, -1.9073486328125e-06, -0.048686981201171875, -6.103515625e-05, -0.026258468627929688, -0.0001569986343383789, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(ChangeAttack(1)), TargetSelector()))])\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Gorehowl", "hole1": 7, "hole2": "PRIEST"}], "hole6": [{"hole3": [{"arg": "stealth", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}, {"arg": "effects", "_type": "keyword", "value": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "MinionSummoned"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 1}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "TargetSelector"}]}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "MinionSummoned"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template19", "hole0": "<UNK>Durability"}, {"_type": "Template19", "hole0": "WeaponSelector"}]}]}]}}], "_type": "Template14", "hole0": "Weapon", "hole1": 7, "hole2": 1}], "hole0": "Gorehowl", "hole4": "player"}, "choice_history": [54, 122, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 133, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 177, 53, 159, "stealth", "<EOS>", 22, 111, "True", "<EOS>", 53, 159, "effects", "<EOS>", 28, 142, "Effect", "<EOS>", 170, 50, 146, "Minion", "Summoned", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Target", "Selector", "<EOS>", 169, 49, 145, "Effect", "<EOS>", 170, 50, 146, "Minion", "Summoned", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 50, 146, "<UNK>", "Durability", "<EOS>", 50, 146, "Weapon", "Selector", "<EOS>"], "score": -4.454200248867259, "score_history": [-5.7220458984375e-06, -0.32993221282958984, -0.014127237722277641, -0.00904536247253418, -0.00025567124248482287, -6.35385513305664e-05, -5.960462772236497e-07, -5.7220458984375e-05, -0.5009326934814453, -0.0009250640869140625, -2.1934269170742482e-05, -0.00012409687042236328, -0.05059506744146347, -3.564294092939235e-05, -0.18993306159973145, -2.264974000354414e-06, -0.00040721893310546875, 0.0, -0.022064208984375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, -0.001415252685546875, -0.006648063659667969, -0.0001289761275984347, -1.1920928244535389e-07, -0.01894998550415039, -7.152555099310121e-07, -0.000789642333984375, -3.933898824470816e-06, -1.2344989776611328, -1.9073486328125e-05, -1.1444091796875e-05, -0.08442974090576172, 0.0, -0.000522613525390625, -8.7738037109375e-05, -0.00019872188568115234, -2.0265579223632812e-06, -5.7220458984375e-06, -6.67572021484375e-05, -0.144317626953125, -1.9073486328125e-06, -2.47955322265625e-05, -0.3709402084350586, -0.0004793405532836914, 0.0, -0.002727508544921875, -0.20108890533447266, -7.62939453125e-06, -0.13188421726226807, -0.021982192993164062, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -0.06912803649902344, -2.288818359375e-05, -0.000213623046875, -1.9073486328125e-06, -0.0027767415158450603, -7.700920104980469e-05, -9.5367431640625e-06, -6.103515625e-05, -3.0517578125e-05, -0.0001926422119140625, -0.0011920928955078125, -0.000244140625, -0.0006449216161854565, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.0028328895568847656, -0.016288042068481445, -1.33514404296875e-05, -1.52587890625e-05, -0.0003070831298828125, 0.0, -0.002329602837562561, -1.9073486328125e-06, -1.33514404296875e-05, -0.02057361602783203, -3.147125244140625e-05, -1.33514404296875e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.00014412403106689453, -0.005570054054260254, 0.0, -4.38690185546875e-05, -0.0002899169921875, -5.7220458984375e-06, -0.001432511955499649, -7.62939453125e-06, -0.008420944213867188, -7.62939453125e-05, -0.058734893798828125, -0.00015485286712646484, 0.0, 0.0, -0.0015544891357421875, -0.0001163482666015625, -0.09088635444641113, 0.0, -4.38690185546875e-05, -0.023450851440429688, -1.9073486328125e-05, -0.04841351509094238, -0.014031410217285156, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0015780925750732422, -0.000255584716796875, -2.384185791015625e-06, -5.7220458984375e-06, -0.11309337615966797, -1.1444091796875e-05, -0.0451352559030056, -0.019864115864038467, -3.3736090699676424e-05, -0.24775981903076172, 0.0, -0.3159942626953125, -4.971027374267578e-05, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, stealth=True, effects=[Effect(MinionSummoned(),\n            ActionTag(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]),\n            TargetSelector())), Effect(MinionSummoned(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Gorehowl", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gorehowl", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>"], "score": -4.611864939075232, "score_history": [-5.7220458984375e-06, -1.2905454635620117, -1.5497194908675738e-05, -0.00014829635620117188, -1.1324817933200393e-05, -0.0025043487548828125, -7.152555099310121e-07, -3.24249267578125e-05, -0.0003223419189453125, -0.2625865936279297, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.0007801055908203125, 0.0, -4.76837158203125e-05, -6.198882147145923e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.048390164971351624, -1.8358061424805783e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.300739288330078e-05, -1.96695291379001e-05, -0.030579805374145508, -3.933906555175781e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0004961490631103516, -1.1920928244535389e-07, -0.00024259090423583984, 0.0, -0.001007080078125, -1.9073486328125e-06, -3.814697265625e-06, -0.0269317626953125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000457763671875, 0.0, -2.3245811462402344e-05, -1.1920928244535389e-07, -0.12847745418548584, -7.867813110351562e-06, -0.001697540283203125, 0.0, -1.728534698486328e-05, 0.0, -0.0003223419189453125, -2.09808349609375e-05, -6.878376007080078e-05, -1.9073486328125e-06, -0.15162372589111328, -8.0108642578125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.300739288330078e-05, 0.0, -3.814697265625e-06, 0.0, -1.6450876501039602e-05, 0.0, -0.002582550048828125, -0.0012111663818359375, -5.340576171875e-05, -9.5367431640625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -8.96453857421875e-05, -3.576278118089249e-07, -2.6471011638641357, 0.0, -3.814697265625e-06, -0.0011663436889648438, -1.52587890625e-05, -0.011827468872070312, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "<UNK>"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Gorehowl", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 1}]}, {"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gorehowl", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -4.7177424037144675, "score_history": [-5.7220458984375e-06, -1.2905454635620117, -1.5497194908675738e-05, -0.00014829635620117188, -1.1324817933200393e-05, -0.0025043487548828125, -7.152555099310121e-07, -3.24249267578125e-05, -0.0003223419189453125, -0.2625865936279297, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.0007801055908203125, 0.0, -4.76837158203125e-05, -6.198882147145923e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.048390164971351624, -1.8358061424805783e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.300739288330078e-05, -1.96695291379001e-05, -0.030579805374145508, -3.933906555175781e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0004961490631103516, -1.1920928244535389e-07, -0.00024259090423583984, 0.0, -0.001007080078125, -1.9073486328125e-06, -3.814697265625e-06, -0.0269317626953125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000457763671875, 0.0, -2.3245811462402344e-05, -1.1920928244535389e-07, -2.561380624771118, -3.814697265625e-06, -0.0002881288528442383, 0.0, -5.9604644775390625e-06, 0.0, -7.2479248046875e-05, -7.62939453125e-06, -3.1828880310058594e-05, -2.3841855067985307e-07, -0.34029674530029297, -8.20159912109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.300739288330078e-05, 0.0, -3.814697265625e-06, 0.0, -1.3709065569855738e-05, 0.0, -0.004001617431640625, -0.0009765625, -6.29425048828125e-05, -7.62939453125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.82012939453125e-05, -4.768370445162873e-07, -0.09357261657714844, 0.0, -1.33514404296875e-05, -0.0007686614990234375, -3.62396240234375e-05, -0.000141143798828125, -0.0005664825439453125, -1.1444091796875e-05, 0.0, -6.73532485961914e-05, 0.0, -0.0020281076431274414, -0.00020968914031982422, -0.0003204345703125, -0.017213821411132812, -3.4332275390625e-05, -0.02895492874085903, -1.0728830375228426e-06, -7.62939453125e-06, -3.24249267578125e-05, -0.00098419189453125, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Gorehowl", "hole1": 7, "hole2": "PRIEST"}], "hole6": [{"hole3": [{"arg": "effects", "_type": "keyword", "value": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "MinionSummoned"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 1}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "TargetSelector"}]}], "hole2": [{"_type": "Template18_expr_seq", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "MinionSummoned"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template19", "hole0": "<UNK>Durability"}, {"_type": "Template19", "hole0": "HeroSelector"}]}]}]}}], "_type": "Template14", "hole0": "Weapon", "hole1": 7, "hole2": 1}], "hole0": "Gorehowl", "hole4": "player"}, "choice_history": [54, 122, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 133, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 176, 53, 159, "effects", "<EOS>", 28, 142, "Effect", "<EOS>", 170, 50, 146, "Minion", "Summoned", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Target", "Selector", "<EOS>", 169, 49, 145, "Effect", "<EOS>", 170, 50, 146, "Minion", "Summoned", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 50, 146, "<UNK>", "Durability", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -4.871385399470732, "score_history": [-5.7220458984375e-06, -0.32993221282958984, -0.014127237722277641, -0.00904536247253418, -0.00025567124248482287, -6.35385513305664e-05, -5.960462772236497e-07, -5.7220458984375e-05, -0.5009326934814453, -0.0009250640869140625, -2.1934269170742482e-05, -0.00012409687042236328, -0.05059506744146347, -3.564294092939235e-05, -0.18993306159973145, -2.264974000354414e-06, -0.00040721893310546875, 0.0, -0.022064208984375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, -0.001415252685546875, -0.006648063659667969, -0.0001289761275984347, -1.1920928244535389e-07, -0.01894998550415039, -7.152555099310121e-07, -0.000789642333984375, -3.933898824470816e-06, -0.37819480895996094, -5.7220458984375e-06, -1.9073486328125e-06, -0.1104278564453125, 0.0, -0.000457763671875, -0.4396934509277344, -0.0005935430526733398, 0.0, -7.05718994140625e-05, -0.0715789794921875, -4.57763671875e-05, -0.025629162788391113, -0.044559478759765625, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -0.04897785186767578, -2.47955322265625e-05, -0.0001983642578125, -1.9073486328125e-06, -0.0011612173402681947, -0.00011098384857177734, -1.9073486328125e-05, -4.38690185546875e-05, -5.7220458984375e-05, -0.0001735687255859375, -0.00031280517578125, -0.0003528594970703125, -0.0010505893733352423, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0007399320602416992, -0.027825117111206055, -1.1444091796875e-05, -1.1444091796875e-05, -0.000331878662109375, 0.0, -0.0025243014097213745, -1.9073486328125e-06, -1.33514404296875e-05, -0.026292800903320312, -2.586841583251953e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.076957702636719e-05, -0.0053403377532958984, 0.0, -3.62396240234375e-05, -0.0003452301025390625, -5.7220458984375e-06, -0.0013683885335922241, -7.62939453125e-06, -0.009143829345703125, -8.0108642578125e-05, -0.054306983947753906, -0.00014340877532958984, 0.0, 0.0, -0.0016937255859375, -0.0001430511474609375, -0.09076344966888428, 0.0, -4.9591064453125e-05, -0.03351116180419922, -1.9073486328125e-05, -0.04419231414794922, -0.014414787292480469, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0015742778778076172, -0.0002574920654296875, -2.384185791015625e-06, -7.62939453125e-06, -0.1515188217163086, -1.1444091796875e-05, -0.04714381322264671, -0.01961846835911274, -3.6001059925183654e-05, -0.286163330078125, 0.0, -1.781231164932251, -3.4332275390625e-05, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(MinionSummoned(), ActionTag(\n            Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]),\n            TargetSelector())), Effect(MinionSummoned(), ActionTag(\n            <UNK>Durability(), HeroSelector()))])\n"}, {"model_output": {"hole3": "create_weapon", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Gorehowl", "hole1": 7, "hole2": "PRIEST"}], "hole6": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template14", "hole0": "Weapon", "hole1": 7, "hole2": 1}], "hole0": "Gorehowl", "hole4": "player"}, "choice_history": [54, 122, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 133, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>"], "score": -4.987567865304577, "score_history": [-5.7220458984375e-06, -0.32993221282958984, -0.014127237722277641, -0.00904536247253418, -0.00025567124248482287, -6.35385513305664e-05, -5.960462772236497e-07, -5.7220458984375e-05, -0.5009326934814453, -0.0009250640869140625, -2.1934269170742482e-05, -0.00012409687042236328, -0.05059506744146347, -3.564294092939235e-05, -0.18993306159973145, -2.264974000354414e-06, -0.00040721893310546875, 0.0, -0.022064208984375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, -0.001415252685546875, -0.006648063659667969, -0.0001289761275984347, -1.1920928244535389e-07, -0.01894998550415039, -7.152555099310121e-07, -0.000789642333984375, -3.933898824470816e-06, -0.37819480895996094, -5.7220458984375e-06, -1.9073486328125e-06, -3.043337821960449, 0.0, -0.0012178421020507812, -6.4849853515625e-05, -4.1961669921875e-05, 0.0, -1.71661376953125e-05, 0.0, -0.1492013931274414, 0.0, -0.01526498794555664, 0.0, -0.2537062168121338, -1.9073486328125e-06], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Gorehowl", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}]}, "choice_history": [54, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Gorehowl", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 41, 111, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>"], "score": -5.615996554116201, "score_history": [-5.7220458984375e-06, -1.2905454635620117, -1.5497194908675738e-05, -0.00014829635620117188, -1.1324817933200393e-05, -0.0025043487548828125, -7.152555099310121e-07, -3.24249267578125e-05, -0.0003223419189453125, -1.4674921035766602, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.539156957936939e-05, -3.814697265625e-06, -0.014287948608398438, -3.814697265625e-06, -4.00543212890625e-05, -8.463837730232626e-06, -3.814697265625e-06, -0.0004024505615234375, 0.0, -0.04605121910572052, -2.253030106658116e-05, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00012791156768798828, -0.00023293495178222656, -0.010044217109680176, -3.933906555175781e-06, -0.001247406005859375, 0.0, -1.52587890625e-05, 0.0, -0.0017799139022827148, -1.1920928244535389e-07, -0.00344085693359375, 0.0, -3.62396240234375e-05, -0.000308990478515625, -7.486343383789062e-05, -7.62939453125e-06, -0.0002803802490234375, 0.0, -0.0003553628921508789, 0.0, -0.01265716552734375, -1.71661376953125e-05, -9.739398956298828e-05, -2.0265579223632812e-06, -0.06717681884765625, -9.1552734375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.780292510986328e-05, 0.0, -5.7220458984375e-06, 0.0, -2.4437889805994928e-05, 0.0, -0.017621994018554688, -0.0017881393432617188, -9.72747802734375e-05, -1.52587890625e-05, -6.103515625e-05, -3.814697265625e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.000186920166015625, -2.3841855067985307e-07, -2.660308837890625, 0.0, -5.7220458984375e-06, -0.0010852813720703125, -7.62939453125e-06, -0.014661788940429688, 0.0], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "WeaponCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Gorehowl", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "targets"}, "hole1": "append", "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}]}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Lambda", "args": {"_type": "Template8", "hole0": "x"}, "body": {"_type": "NameConstant", "value": true}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}}]}, "choice_history": [54, 124, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gorehowl", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 185, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 71, 137, 21, 110, "targets", "<EOS>", "append", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", 170, 32, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", 37, 104, 0, 150, "x", "<EOS>", 22, 111, "True", "<EOS>", 59, 79, 169, 40, 110, "target", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "targets", "<EOS>"], "score": -7.996762988491724, "score_history": [-5.7220458984375e-06, -1.2905454635620117, -1.5497194908675738e-05, -0.00014829635620117188, -1.1324817933200393e-05, -0.0025043487548828125, -7.152555099310121e-07, -3.24249267578125e-05, -0.0003223419189453125, -0.2625865936279297, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.0007801055908203125, 0.0, -4.76837158203125e-05, -6.198882147145923e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.048390164971351624, -1.8358061424805783e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.300739288330078e-05, -1.96695291379001e-05, -0.030579805374145508, -3.933906555175781e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0004961490631103516, -1.1920928244535389e-07, -0.00024259090423583984, 0.0, -0.001007080078125, -1.9073486328125e-06, -3.814697265625e-06, -0.0269317626953125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000457763671875, 0.0, -2.3245811462402344e-05, -1.1920928244535389e-07, -0.12847745418548584, -7.867813110351562e-06, -0.001697540283203125, 0.0, -1.728534698486328e-05, 0.0, -0.0003223419189453125, -2.09808349609375e-05, -6.878376007080078e-05, -1.9073486328125e-06, -2.0651073455810547, -0.0001544952392578125, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.491474151611328e-05, 0.0, -3.814697265625e-06, 0.0, -1.7166130419354886e-05, 0.0, -0.022034645080566406, -5.53131103515625e-05, -3.62396240234375e-05, -5.53131103515625e-05, -3.4332275390625e-05, -0.2040029764175415, -1.1920928244535389e-07, -0.08693504333496094, -3.62396240234375e-05, -0.000225067138671875, -0.0002231597900390625, -0.0002574920654296875, 0.0, -0.037783145904541016, -1.1920928244535389e-07, -0.2127312421798706, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0002155303955078125, 0.0, -0.0005016326904296875, 0.0, -0.016102313995361328, 0.0, -0.0032171010971069336, -2.3841855067985307e-07, -0.0011951917549595237, 0.0, -0.11293315887451172, -0.0001811981201171875, -0.004520416259765625, 0.0, -0.0011851787567138672, -2.0265579223632812e-06, -0.041014909744262695, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.274169921875, 0.0, -0.035454750061035156, 0.0, -0.0452418327331543, -7.152555099310121e-07, -0.0233612060546875, -4.38690185546875e-05, 0.0, -0.004050254821777344, -5.7220458984375e-06, -0.5142655372619629, -2.3841855067985307e-07, -0.0006208419799804688, -1.9073486328125e-05, -0.31055164337158203, -0.0002918243408203125, -0.0003185272216796875, 0.0, -0.5021921396255493, 0.0, -0.7762128114700317, 0.0, -0.030035018920898438, -0.170684814453125, -1.71661376953125e-05, -0.04895210266113281, 0.0, -0.00014710426330566406, 0.0, -0.029945969581604004, 0.0, -0.0635213851928711, -9.5367431640625e-05, -0.0001277923583984375, -9.34600830078125e-05, -0.026115775108337402, 0.0, -0.20508193969726562, -0.0025033950805664062, -0.0003968477249145508, -9.5367431640625e-06, -0.005295753479003906, -8.20159912109375e-05, -0.00017547607421875, -0.000240325927734375, -9.5367431640625e-06, -0.059628237038850784, -2.109982233378105e-05, -0.0011234283447265625, -0.0002918243408203125, -0.0001354217529296875, -0.0003509521484375, -0.000232696533203125, 0.0, -0.007798909675329924, 0.0, -0.2367016077041626, -0.00017249584197998047, -9.5367431640625e-06, -0.00318145751953125, 0.0, -0.009952659718692303, -4.208087921142578e-05], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.append(player.hero)\n        targets = hearthbreaker.targeting(player.game, lambda x: True)\n        target = game.random_choice(targets)\n"}], "gold_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(And(IsHero(),\n            TargetIsMinion())), [ActionTag(IncreaseDurability(),\n            WeaponSelector()), ActionTag(IncreaseWeaponAttack(-1),\n            WeaponSelector()), ActionTag(Give(BuffUntil(ChangeAttack(1),\n            AttackCompleted())), HeroSelector())])])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.057997037696040366, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -0.001636505126953125, -0.00011444091796875, -2.09808349609375e-05, -1.1920928244535389e-07, -5.7220440794480965e-06, -1.9073486328125e-05, 0.0, -0.004033809062093496, -1.311301275563892e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -6.079673767089844e-06, -0.011701583862304688, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0001441240165149793, 0.0, -0.0001804828643798828, 0.0, -2.86102294921875e-05, -0.0001506805419921875, -7.092952728271484e-05, -5.7220458984375e-06, -8.0108642578125e-05, -0.00048065185546875, -3.4332275390625e-05, -0.00030553340911865234, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.0003037452697753906, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -3.24249267578125e-05, -3.3378603347955504e-06, -1.311301275563892e-06, -1.1026627362298314e-05, -1.1920922133867862e-06, -0.01378178596496582, -3.814697265625e-06, -7.2479248046875e-05, -2.47955322265625e-05, -2.47955322265625e-05, -3.814697265625e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "divine_shield"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.654233028220332, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -0.001636505126953125, -0.00011444091796875, -2.09808349609375e-05, -1.1920928244535389e-07, -5.7220440794480965e-06, -1.9073486328125e-05, 0.0, -0.004033809062093496, -1.311301275563892e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -6.079673767089844e-06, -0.011701583862304688, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0001441240165149793, 0.0, -0.0001804828643798828, 0.0, -2.86102294921875e-05, -0.0001506805419921875, -7.092952728271484e-05, -5.7220458984375e-06, -8.0108642578125e-05, -0.00048065185546875, -3.4332275390625e-05, -0.00030553340911865234, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.0003037452697753906, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -3.24249267578125e-05, -3.3378603347955504e-06, -1.311301275563892e-06, -1.1026627362298314e-05, -1.1920922133867862e-06, -4.610074996948242, 0.0, -4.00543212890625e-05, -1.52587890625e-05, -1.71661376953125e-05, 0.0], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.838523074216354, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -0.001636505126953125, -0.00011444091796875, -2.09808349609375e-05, -1.1920928244535389e-07, -5.7220440794480965e-06, -1.9073486328125e-05, 0.0, -0.004033809062093496, -1.311301275563892e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -6.079673767089844e-06, -4.792144775390625, -4.9591064453125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.763240086613223e-05, 0.0, -0.00011968612670898438, 0.0, -2.6702880859375e-05, -0.0001621246337890625, -6.711483001708984e-05, -7.62939453125e-06, -7.82012939453125e-05, -0.0005340576171875, -3.62396240234375e-05, -0.00030362606048583984, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.0003018379211425781, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -3.0517578125e-05, -3.3378603347955504e-06, -1.311301275563892e-06, -1.0663527973520104e-05, -1.1920922133867862e-06, -0.013863563537597656, -3.814697265625e-06, -7.2479248046875e-05, -2.47955322265625e-05, -2.47955322265625e-05, -3.814697265625e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.863704041623521, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -3.7489089965820312, -4.38690185546875e-05, 0.0, -3.766942609217949e-05, -4.768370445162873e-07, -0.0002946853346657008, 0.0, -0.47049427032470703, -4.38690185546875e-05, -7.62939453125e-06, -3.576278118089249e-07, -1.0728830375228426e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0037881280295550823, -2.861018856492592e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, -9.655952453613281e-06, -0.015587806701660156, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, 0.0, -0.00019526480173226446, -1.9073486328125e-06, -0.00021839141845703125, 0.0, -9.5367431640625e-06, -0.00012969970703125, -0.00010526180267333984, -5.7220458984375e-06, -0.000904083251953125, -3.814697265625e-06, -0.6106181144714355, 0.0, -9.5367431640625e-06, -7.05718994140625e-05, -2.47955322265625e-05, -1.049041748046875e-05, -5.8412379075889476e-06, -1.1878611985594034e-05, -3.933898824470816e-06, -0.011425495147705078, -1.9073486328125e-06, -6.866455078125e-05, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "p"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.4391918447874446, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -3.7489089965820312, -4.38690185546875e-05, 0.0, -3.766942609217949e-05, -4.768370445162873e-07, -0.0002946853346657008, 0.0, -0.47049427032470703, -4.38690185546875e-05, -7.62939453125e-06, -3.576278118089249e-07, -1.0728830375228426e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0037881280295550823, -2.861018856492592e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, -9.655952453613281e-06, -0.015587806701660156, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, 0.0, -0.00019526480173226446, -1.9073486328125e-06, -0.00021839141845703125, 0.0, -9.5367431640625e-06, -0.00012969970703125, -0.00010526180267333984, -5.7220458984375e-06, -0.000904083251953125, -3.814697265625e-06, -1.1881108283996582, -1.33514404296875e-05, -3.24249267578125e-05, -0.0001888275146484375, -4.9591064453125e-05, -7.510185241699219e-06, -1.4066597032069694e-05, -2.386991400271654e-05, -6.6756979322235566e-06, -0.009213685989379883, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-05, -2.09808349609375e-05, -1.9073486328125e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "_"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.4823677320908, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -3.7489089965820312, -4.38690185546875e-05, 0.0, -3.766942609217949e-05, -4.768370445162873e-07, -0.0002946853346657008, 0.0, -0.9877700805664062, -4.76837158203125e-05, -1.9073486328125e-05, -5.960462772236497e-07, -8.344646857949556e-07, -5.7220458984375e-05, -3.814697265625e-06, -0.12650667130947113, -1.1920928244535389e-07, -3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.0003147125244140625, -5.841255187988281e-06, -0.017172813415527344, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.00014829635620117188, 0.0, -0.001016855239868164, 0.0, -4.57763671875e-05, -0.00028228759765625, -0.0003190040588378906, -7.867813110351562e-06, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.0012073516845703125, -2.3841855067985307e-07, -0.00981903076171875, 0.0, -0.0006771087646484375, -1.9073486328125e-06, -0.5499858856201172, -0.0013103485107421875, -1.9073486328125e-06, -0.01765155792236328, -0.0001163482666015625, -5.245208740234375e-06, -1.7046782886609435e-05, -1.2525939382612705e-05, -3.933898824470816e-06, -0.01791524887084961, -5.7220458984375e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.1444091796875e-05, -1.9073486328125e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, _):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "p"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.82205960349372, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -3.7489089965820312, -4.38690185546875e-05, 0.0, -3.766942609217949e-05, -4.768370445162873e-07, -0.0002946853346657008, 0.0, -0.9877700805664062, -4.76837158203125e-05, -1.9073486328125e-05, -5.960462772236497e-07, -8.344646857949556e-07, -5.7220458984375e-05, -3.814697265625e-06, -0.12650667130947113, -1.1920928244535389e-07, -3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.0003147125244140625, -5.841255187988281e-06, -0.017172813415527344, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.00014829635620117188, 0.0, -0.001016855239868164, 0.0, -4.57763671875e-05, -0.00028228759765625, -0.0003190040588378906, -7.867813110351562e-06, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.0012073516845703125, -2.3841855067985307e-07, -0.00981903076171875, 0.0, -0.0006771087646484375, -1.9073486328125e-06, -0.9107170104980469, 0.0, -7.62939453125e-06, -0.003086090087890625, -0.0001888275146484375, -3.4570693969726562e-06, -9.536697689327411e-06, -7.751515113341156e-06, -5.8412379075889476e-06, -0.0126800537109375, -5.7220458984375e-06, -1.71661376953125e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "Minion", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.972601910016564, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -0.001636505126953125, -0.00011444091796875, -2.09808349609375e-05, -1.1920928244535389e-07, -5.7220440794480965e-06, -1.9073486328125e-05, 0.0, -5.9136223793029785, -0.006171920336782932, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -6.318092346191406e-06, -0.010366439819335938, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.00017976756498683244, -1.9073486328125e-06, -0.00021314620971679688, 0.0, -2.288818359375e-05, -0.0001430511474609375, -7.474422454833984e-05, -5.7220458984375e-06, -7.43865966796875e-05, -0.000453948974609375, -3.0517578125e-05, -0.0003018379211425781, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.0002999305725097656, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -3.0517578125e-05, -3.3378603347955504e-06, -1.311301275563892e-06, -1.0546414159762207e-05, -1.1920922133867862e-06, -0.013943910598754883, -3.814697265625e-06, -7.2479248046875e-05, -2.47955322265625e-05, -2.47955322265625e-05, -3.814697265625e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 0, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "_"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.260892898804457, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -3.7489089965820312, -4.38690185546875e-05, 0.0, -3.766942609217949e-05, -4.768370445162873e-07, -0.0002946853346657008, 0.0, -0.47049427032470703, -4.38690185546875e-05, -7.62939453125e-06, -3.576278118089249e-07, -1.0728830375228426e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0037881280295550823, -2.861018856492592e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, -9.655952453613281e-06, -0.015587806701660156, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, 0.0, -0.00019526480173226446, -1.9073486328125e-06, -0.00021839141845703125, 0.0, -9.5367431640625e-06, -0.00012969970703125, -0.00010526180267333984, -5.7220458984375e-06, -0.000904083251953125, -3.814697265625e-06, -2.0013985633850098, -0.0042667388916015625, -1.9073486328125e-05, -0.00042724609375, -4.00543212890625e-05, -9.298324584960938e-06, -2.825220326485578e-05, -1.874851295724511e-05, -1.4781842764932662e-05, -0.013177156448364258, -3.933906555175781e-06, -3.62396240234375e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.9073486328125e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True)\n\n    def create_minion(self, _):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "windfury"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.480366756247676, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -0.001636505126953125, -0.00011444091796875, -2.09808349609375e-05, -1.1920928244535389e-07, -5.7220440794480965e-06, -1.9073486328125e-05, 0.0, -0.004033809062093496, -1.311301275563892e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -6.079673767089844e-06, -0.011701583862304688, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0001441240165149793, 0.0, -0.0001804828643798828, 0.0, -2.86102294921875e-05, -0.0001506805419921875, -7.092952728271484e-05, -5.7220458984375e-06, -8.0108642578125e-05, -0.00048065185546875, -3.4332275390625e-05, -0.00030553340911865234, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.0003037452697753906, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -3.24249267578125e-05, -3.3378603347955504e-06, -1.311301275563892e-06, -1.1026627362298314e-05, -1.1920922133867862e-06, -6.436195373535156, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, -2.09808349609375e-05, 0.0], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "taunt"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.700721790122188, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -0.001636505126953125, -0.00011444091796875, -2.09808349609375e-05, -1.1920928244535389e-07, -5.7220440794480965e-06, -1.9073486328125e-05, 0.0, -0.004033809062093496, -1.311301275563892e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -6.079673767089844e-06, -0.011701583862304688, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0001441240165149793, 0.0, -0.0001804828643798828, 0.0, -2.86102294921875e-05, -0.0001506805419921875, -7.092952728271484e-05, -5.7220458984375e-06, -8.0108642578125e-05, -0.00048065185546875, -3.4332275390625e-05, -0.00030553340911865234, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.0003037452697753906, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -3.24249267578125e-05, -3.3378603347955504e-06, -1.311301275563892e-06, -1.1026627362298314e-05, -1.1920922133867862e-06, -6.656603813171387, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.717458196981553, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -6.658481597900391, -7.62939453125e-06, -8.58306884765625e-05, -1.1920928244535389e-07, -1.0848039892152883e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.0023113733623176813, -5.960462772236497e-07, -1.9073486328125e-06, -0.0001983642578125, -7.62939453125e-06, -3.814697265625e-06, -2.872943878173828e-05, -4.649161837733118e-06, -0.006252288818359375, 0.0, 0.0, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00015735610213596374, 0.0, -0.0006185770034790039, 0.0, -3.814697265625e-06, -0.0057220458984375, -1.9073486328125e-06, -0.00044667720794677734, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.00010132789611816406, 0.0, -7.62939453125e-06, -0.000225067138671875, -2.288818359375e-05, -6.914139248692663e-06, -1.311301275563892e-06, -1.2218196388857905e-05, -7.152555099310121e-07, -0.017885327339172363, -3.814697265625e-06, -0.0001125335693359375, -2.6702880859375e-05, -2.47955322265625e-05, -3.814697265625e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DREAM"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.333374072385922, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -0.001636505126953125, -0.00011444091796875, -2.09808349609375e-05, -1.1920928244535389e-07, -5.7220440794480965e-06, -1.9073486328125e-05, 0.0, -0.004033809062093496, -1.311301275563892e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -6.079673767089844e-06, -7.286870002746582, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00021147727966308594, 0.0, -0.00013840198516845703, 0.0, -3.62396240234375e-05, -0.0001659393310546875, -6.699562072753906e-05, -5.7220458984375e-06, -8.392333984375e-05, -0.0005550384521484375, -4.57763671875e-05, -0.00032460689544677734, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -0.0003113746643066406, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -3.24249267578125e-05, -3.3378603347955504e-06, -1.311301275563892e-06, -1.150299885921413e-05, -1.1920922133867862e-06, -0.013821721076965332, -3.814697265625e-06, -7.2479248046875e-05, -2.47955322265625e-05, -2.47955322265625e-05, -3.814697265625e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.DREAM, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.435420676654061, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -0.001636505126953125, -0.00011444091796875, -2.09808349609375e-05, -1.1920928244535389e-07, -5.7220440794480965e-06, -1.9073486328125e-05, 0.0, -0.004033809062093496, -1.311301275563892e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -6.079673767089844e-06, -7.389002799987793, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.40561294555664e-05, 0.0, -0.00018012523651123047, 0.0, -2.47955322265625e-05, -0.000148773193359375, -6.330013275146484e-05, -7.62939453125e-06, -7.82012939453125e-05, -0.000530242919921875, -3.62396240234375e-05, -0.0003056526184082031, -1.71661376953125e-05, -2.288818359375e-05, 0.0, -0.0003170967102050781, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -2.86102294921875e-05, -3.3378603347955504e-06, -1.4305104514278355e-06, -1.0306249350833241e-05, -1.1920922133867862e-06, -0.013909339904785156, -3.814697265625e-06, -7.2479248046875e-05, -2.47955322265625e-05, -2.47955322265625e-05, -3.814697265625e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "BEAST"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "charge"}], "hole0": "Hound", "hole4": "player"}, "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.47800688448784, "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -0.001636505126953125, -0.00011444091796875, -2.09808349609375e-05, -1.1920928244535389e-07, -5.7220440794480965e-06, -1.9073486328125e-05, 0.0, -0.004033809062093496, -1.311301275563892e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -6.079673767089844e-06, -7.431648254394531, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.642671309644356e-05, 0.0, -0.0001367330551147461, 0.0, -3.62396240234375e-05, -0.000156402587890625, -6.330013275146484e-05, -7.62939453125e-06, -8.7738037109375e-05, -0.0005321502685546875, -3.814697265625e-05, -0.00031113624572753906, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.0003056526184082031, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -3.0517578125e-05, -3.3378603347955504e-06, -1.311301275563892e-06, -9.949087143468205e-06, -1.1920922133867862e-06, -0.01386559009552002, -3.814697265625e-06, -7.2479248046875e-05, -2.47955322265625e-05, -2.47955322265625e-05, -3.814697265625e-06], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}], "gold_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template19", "hole0": "RandomPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -0.8935952007275532, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -0.2756776809692383, -1.1444091796875e-05, -3.814697265625e-06, -0.0007551908493041992, -0.0006465911865234375, -4.38690185546875e-05, -0.00428009033203125, -0.005680084228515625, -0.00018310546875, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.06747817993164062, -0.0001888275146484375, -2.09808349609375e-05, -0.057415008544921875, 0.0, -0.3077378273010254, -6.711483001708984e-05, -4.589557647705078e-05, -2.3365020751953125e-05, 0.0, -4.4465043174568564e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -2.6702880859375e-05, -1.0609612218104303e-05, 0.0, -0.14779222011566162, -1.7881377516459906e-06], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -1.9226292191504157, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -0.2756776809692383, -1.1444091796875e-05, -3.814697265625e-06, -0.0007551908493041992, -0.0006465911865234375, -4.38690185546875e-05, -0.00428009033203125, -0.005680084228515625, -0.00018310546875, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.06747817993164062, -0.0001888275146484375, -2.09808349609375e-05, -0.057415008544921875, 0.0, -1.3775849342346191, -8.463858830509707e-05, -8.225440979003906e-06, -1.8715856640483253e-05, 0.0, -3.743161141755991e-05, 0.0, -7.62939453125e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1086448466812726e-05, 0.0, -0.10701620578765869, -3.6954863844584906e-06], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template19", "hole0": "RandomPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 4}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "4", "<EOS>"], "score": -2.73073349590279, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -0.2756776809692383, -1.1444091796875e-05, -3.814697265625e-06, -0.0007551908493041992, -0.0006465911865234375, -4.38690185546875e-05, -0.00428009033203125, -0.005680084228515625, -0.00018310546875, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.06747817993164062, -0.0001888275146484375, -2.09808349609375e-05, -0.057415008544921875, 0.0, -0.3077378273010254, -6.711483001708984e-05, -4.589557647705078e-05, -2.3365020751953125e-05, 0.0, -4.4465043174568564e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -2.6702880859375e-05, -1.0609612218104303e-05, 0.0, -1.98493230342865, 0.0], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -2.8338399947681623, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -2.03945255279541, -3.62396240234375e-05, -7.62939453125e-06, -0.12392270565032959, -0.0006103515625, -5.340576171875e-05, -0.08333492279052734, -0.09502315521240234, -0.000133514404296875, -0.0001239776611328125, -5.7220458984375e-06, -0.01716327667236328, -2.6702880859375e-05, -5.7220458984375e-06, -0.40377235412597656, 0.0, -1.52587890625e-05, 0.0, -0.0029488801956176758, -0.0006715059280395508, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -3.838532211375423e-05, 0.0, -3.814697265625e-06, -0.0005435943603515625, -3.24249267578125e-05, -2.70606906269677e-05, 0.0, -0.04100239276885986, -2.0265558760002023e-06], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -3.4788738309415734, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -3.296635627746582, -7.82012939453125e-05, -2.09808349609375e-05, -0.015142440795898438, -0.00030517578125, -1.1444091796875e-05, -0.0016193389892578125, -1.52587890625e-05, -0.00048828125, -0.04708671569824219, -9.5367431640625e-06, -8.0108642578125e-05, -7.62939453125e-06, -0.001155853271484375, -0.0001220703125, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.03396797180175781, 0.0, -0.01638507843017578, -2.86102294921875e-05, -0.004016876220703125, -8.416175842285156e-05, -3.933906555175781e-06, -1.6927717297221534e-05, 0.0, -5.0783077313099056e-05, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -1.9073486328125e-05, -1.2516977221821435e-05, 0.0, -0.03659331798553467, -1.0728830375228426e-06], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -3.555523854424358, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -0.2756776809692383, -1.1444091796875e-05, -3.814697265625e-06, -0.0007551908493041992, -0.0006465911865234375, -4.38690185546875e-05, -0.00428009033203125, -0.005680084228515625, -0.00018310546875, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, 0.0, -2.7553701400756836, -0.00019073486328125, -3.814697265625e-06, -0.0073947906494140625, 0.0, -0.34946930408477783, -9.644030797062442e-05, -8.106231689453125e-06, -1.668929871811997e-05, 0.0, -3.719326196005568e-05, 0.0, -7.62939453125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -1.0371197276981547e-05, 0.0, -0.13016295433044434, -3.933904736186378e-06], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template15", "hole0": "RandomPicker", "hole1": 4}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 47, 134, "Random", "Picker", "<EOS>", "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -3.7577321902558865, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -0.2756776809692383, -1.1444091796875e-05, -3.814697265625e-06, -0.0007551908493041992, -0.0006465911865234375, -4.38690185546875e-05, -0.00428009033203125, -0.005680084228515625, -0.00018310546875, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.06747817993164062, -0.0001888275146484375, -2.09808349609375e-05, -2.9816675186157227, -0.0001239776611328125, -0.012328743934631348, -0.0004457235336303711, -2.3484230041503906e-05, -0.15664052963256836, -9.27448199945502e-05, -0.0036773537285625935, 0.0, -0.0027619104366749525, 0.0, -9.5367431640625e-06, -0.0002994537353515625, -1.1444091796875e-05, -2.4199531253543682e-05, 0.0, -0.21922731399536133, -6.198873961693607e-06], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker(4))))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 4, "hole1": 7, "hole2": "taunt"}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.815173363620737, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -2.03945255279541, -3.62396240234375e-05, -7.62939453125e-06, -0.12392270565032959, -0.0006103515625, -5.340576171875e-05, -0.08333492279052734, -0.09502315521240234, -0.000133514404296875, -0.0001239776611328125, -5.7220458984375e-06, -0.01716327667236328, -2.6702880859375e-05, -5.7220458984375e-06, -1.2678422927856445, 0.0, -0.06624317169189453, -0.0012054443359375, -3.4332275390625e-05, 0.0, -0.003915309906005859, 0.0, -0.00421857088804245, 0.0, -5.7220458984375e-06, -0.02358722686767578, -0.0001068115234375, -2.443957419018261e-05, -5.960462772236497e-07, -0.002537488704547286, -3.576278118089249e-07, -0.052686095237731934, 0.0, -0.006075859069824219, -0.0019092559814453125, -5.340576171875e-05, 0.0], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(4, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 4}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "4", "<EOS>"], "score": -4.103409868337188, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -0.2756776809692383, -1.1444091796875e-05, -3.814697265625e-06, -0.0007551908493041992, -0.0006465911865234375, -4.38690185546875e-05, -0.00428009033203125, -0.005680084228515625, -0.00018310546875, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.06747817993164062, -0.0001888275146484375, -2.09808349609375e-05, -0.057415008544921875, 0.0, -1.3775849342346191, -8.463858830509707e-05, -8.225440979003906e-06, -1.8715856640483253e-05, 0.0, -3.743161141755991e-05, 0.0, -7.62939453125e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1086448466812726e-05, 0.0, -2.2878005504608154, 0.0], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "RandomPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -4.526157242023849, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -0.2756776809692383, -1.1444091796875e-05, -3.814697265625e-06, -0.0007551908493041992, -0.0006465911865234375, -4.38690185546875e-05, -0.00428009033203125, -0.005680084228515625, -0.00018310546875, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, 0.0, -2.7553701400756836, -0.00019073486328125, -3.814697265625e-06, -0.0073947906494140625, 0.0, -1.269436001777649, -8.797645568847656e-05, -5.161762237548828e-05, -1.7523765563964844e-05, 0.0, -6.151198613224551e-05, 0.0, -9.5367431640625e-06, -2.47955322265625e-05, -2.86102294921875e-05, -1.0609611308609601e-05, 0.0, -0.18076372146606445, -1.7881377516459906e-06], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, BothPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template15", "hole0": "RandomPicker", "hole1": 4}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 4}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 47, 134, "Random", "Picker", "<EOS>", "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "4", "<EOS>"], "score": -5.163762010707174, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -0.2756776809692383, -1.1444091796875e-05, -3.814697265625e-06, -0.0007551908493041992, -0.0006465911865234375, -4.38690185546875e-05, -0.00428009033203125, -0.005680084228515625, -0.00018310546875, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.06747817993164062, -0.0001888275146484375, -2.09808349609375e-05, -2.9816675186157227, -0.0001239776611328125, -0.012328743934631348, -0.0004457235336303711, -2.3484230041503906e-05, -0.15664052963256836, -9.27448199945502e-05, -0.0036773537285625935, 0.0, -0.0027619104366749525, 0.0, -9.5367431640625e-06, -0.0002994537353515625, -1.1444091796875e-05, -2.4199531253543682e-05, 0.0, -1.6252632141113281, -1.1920928244535389e-07], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker(4))))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template19", "hole0": "RandomPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "<UNK>Blademaster", "hole4": "player"}, "choice_history": [54, 122, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -5.257496711562247, "score_history": [0.0, -8.0108642578125e-05, -4.3767476081848145, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -0.2756776809692383, -1.1444091796875e-05, -3.814697265625e-06, -0.0007551908493041992, -0.0006465911865234375, -4.38690185546875e-05, -0.00428009033203125, -0.005680084228515625, -0.00018310546875, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.06747817993164062, -0.0001888275146484375, -2.09808349609375e-05, -0.057415008544921875, 0.0, -0.3077378273010254, -6.711483001708984e-05, -4.589557647705078e-05, -2.3365020751953125e-05, 0.0, -4.4465043174568564e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -2.6702880859375e-05, -1.0609612218104303e-05, 0.0, -0.14779222011566162, -1.7881377516459906e-06], "inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}], "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -5.534598998918476, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -2.03945255279541, -3.62396240234375e-05, -7.62939453125e-06, -0.12392270565032959, -0.0006103515625, -5.340576171875e-05, -0.08333492279052734, -2.4834108352661133, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0005739864427596331, -0.00045044923899695277, -5.7220458984375e-06, -7.2479248046875e-05, -0.0001697540283203125, -1.52587890625e-05, -9.34600830078125e-05, 0.0, -0.0002595186233520508, -2.2649765014648438e-06, -0.36617279052734375, -3.814697265625e-06, -0.05984306335449219, 0.0, -7.62939453125e-06, -0.020422935485839844, 0.0, -0.0001087188720703125, -1.9073486328125e-06, -0.00131988525390625, -0.000316619873046875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.6624397984705865e-05, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -3.24249267578125e-05, -1.1682508556987159e-05, 0.0, -0.32882606983184814, -7.152555099310121e-07], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (IsType(MINION_TYPE.MECH), players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "IsType"}, "attr": "minion_type"}}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 85, 13, 80, 21, 110, "Is", "Type", "<EOS>", "minion_type", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -5.659301978356119, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -2.6468944549560547, -0.1448383331298828, -5.7220458984375e-06, -0.0016527175903320312, -1.9073486328125e-06, -0.2461261749267578, -0.07136726379394531, -1.9073486328125e-06, -2.2823238372802734, 0.0, -0.0001354217529296875, 0.0, -0.027156949043273926, 0.0, 0.0, -0.010988235473632812, -0.000904083251953125, -1.1086482118116692e-05, 0.0, -0.2020660638809204, -7.152555099310121e-07], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), IsType.\n            minion_type()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 7}], "hole0": "InjuredBlademaster", "hole4": "player"}, "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 85, 21, 110, "Minion", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -5.742014867106626, "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -2.6468944549560547, -2.5581932067871094, -1.52587890625e-05, -0.12608742713928223, -0.00048065185546875, -5.7220458984375e-06, -0.0020905733108520508, 0.0, -0.0014461278915405273, 0.0, -1.9073486328125e-06, -0.0005512237548828125, -0.000217437744140625, -3.62396749551408e-05, 0.0, -0.38116705417633057, -4.768370445162873e-07], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}], "gold_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>"], "score": -1.64323801900197, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -0.46842479705810547, -0.07554206997156143, -0.009427189826965332, -9.72747802734375e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.030718984082341194, -0.04634910821914673, -9.72747802734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0023103952407836914, -0.000202178955078125, -0.00017201900482177734, -2.288818359375e-05, -0.0003032684326171875, -2.09808349609375e-05, -0.00027430057525634766, -1.597404116182588e-05, -2.1815067157149315e-05, -0.0007612705230712891, -0.00046539306640625, -0.0002346038818359375, -1.52587890625e-05, -3.814697265625e-06, -0.028621912002563477, -0.0001049041748046875, -2.09808349609375e-05, -0.6094789505004883, -0.000293731689453125, -9.34600830078125e-05, -4.398822784423828e-05, -9.5367431640625e-06, -0.000247955322265625, -3.814697265625e-06, -0.000186920166015625, -0.0002040863037109375, -2.288818359375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.01493072509765625, 0.0, -0.000457763671875, -1.9073486328125e-06, -0.0010739564895629883, -4.589557647705078e-05, -1.71661376953125e-05, -0.0003509521484375, -1.9073486328125e-06, -0.1287679672241211, 0.0, -0.0006542205810546875, -0.00225830078125, -0.0001163482666015625, -0.0001373291015625], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=Null)))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -1.7289179077272507, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -0.46842479705810547, -0.07554206997156143, -0.009427189826965332, -9.72747802734375e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.030718984082341194, -0.04634910821914673, -9.72747802734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0023103952407836914, -0.000202178955078125, -0.00017201900482177734, -2.288818359375e-05, -0.0003032684326171875, -2.09808349609375e-05, -0.00027430057525634766, -1.597404116182588e-05, -2.1815067157149315e-05, -0.0007612705230712891, -0.00046539306640625, -0.0002346038818359375, -1.52587890625e-05, -3.814697265625e-06, -0.028621912002563477, -0.0001049041748046875, -2.09808349609375e-05, -0.8264656066894531, -4.38690185546875e-05, -1.33514404296875e-05, -0.000213623046875, -9.5367431640625e-06, -0.000213623046875, -5.7220458984375e-06, -0.00101470947265625, -0.0003108978271484375, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.014923095703125, 0.0, -0.0002593994140625, -1.9073486328125e-06, -0.0015507936477661133, -4.208087921142578e-05, -1.1444091796875e-05], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "<UNK>AttackEqualTo"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "<UNK>", "Attack", "Equal", "To", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>"], "score": -2.76582145970157, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -1.0008611679077148, -0.0061926692724227905, -0.1447155475616455, -2.920626684499439e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0602947473526001, -0.010684728622436523, -0.38634204864501953, -0.10866451263427734, -0.0003643035888671875, -0.001964569091796875, -0.26832103729248047, -2.6702880859375e-05, -0.003990039229393005, -3.814697265625e-06, -3.0517578125e-05, -0.000514984130859375, -5.7220458984375e-06, 0.0, -0.0007022619247436523, -0.0013619661331176758, -0.00032639503479003906, -5.7220458984375e-06, -0.02193450927734375, -7.62939453125e-06, -0.00018000599811784923, -4.9710270104696974e-05, -0.00013381423195824027, -0.000589250645134598, -0.0003204345703125, -6.4849853515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.044055819511413574, -0.0003147125244140625, -6.29425048828125e-05, -0.3247060775756836, -0.000362396240234375, -0.0001010894775390625, -5.924701690673828e-05, -9.5367431640625e-06, -0.000194549560546875, -3.814697265625e-06, -0.000171661376953125, -0.000171661376953125, -2.288818359375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.015316009521484375, 0.0, -0.0004787445068359375, -1.9073486328125e-06, -0.0010682344436645508, -4.589557647705078e-05, -1.9073486328125e-05, -0.0003509521484375, -1.9073486328125e-06, -0.1367321014404297, 0.0, -0.0006284713745117188, -0.00243377685546875, -0.0001201629638671875, -0.00014495849609375], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(\n            <UNK>AttackEqualTo(1)), ActionTag(Damage(1), CharacterSelector(\n            players=EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>"], "score": -3.2593646532134386, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -1.8170138597488403, -5.7220458984375e-06, -0.0007801055908203125, 0.0, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -1.9073486328125e-06, -0.0001049041748046875, -3.62396240234375e-05, -0.0021936893463134766, -1.621236151549965e-05, -0.00019121170043945312, -1.1920928244535389e-07, -0.0007991789025254548, -3.576278118089249e-07, -3.4332275390625e-05, -0.0003871917724609375, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.002288818359375, -0.48076534271240234, -0.07283411175012589, -0.009467244148254395, -9.72747802734375e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.030642012134194374, -0.04650115966796875, -9.918212890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0022989511489868164, -0.000202178955078125, -0.00017201900482177734, -2.288818359375e-05, -0.0003032684326171875, -2.09808349609375e-05, -0.00027430057525634766, -1.597404116182588e-05, -2.1695865143556148e-05, -0.0007631778717041016, -0.0004673004150390625, -0.0002346038818359375, -1.52587890625e-05, -3.814697265625e-06, -0.02866196632385254, -0.0001049041748046875, -2.09808349609375e-05, -0.6094474792480469, -0.000293731689453125, -9.34600830078125e-05, -4.398822784423828e-05, -9.5367431640625e-06, -0.000247955322265625, -3.814697265625e-06, -0.000186920166015625, -0.0002040863037109375, -2.288818359375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.01493072509765625, 0.0, -0.000457763671875, -1.9073486328125e-06, -0.0010739564895629883, -4.589557647705078e-05, -1.71661376953125e-05, -0.0003509521484375, -1.9073486328125e-06, -0.12878894805908203, 0.0, -0.0006542205810546875, -0.00225830078125, -0.0001163482666015625, -0.0001373291015625], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=Null)))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -3.3450874572829576, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -1.8170138597488403, -5.7220458984375e-06, -0.0007801055908203125, 0.0, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -1.9073486328125e-06, -0.0001049041748046875, -3.62396240234375e-05, -0.0021936893463134766, -1.621236151549965e-05, -0.00019121170043945312, -1.1920928244535389e-07, -0.0007991789025254548, -3.576278118089249e-07, -3.4332275390625e-05, -0.0003871917724609375, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.002288818359375, -0.48076534271240234, -0.07283411175012589, -0.009467244148254395, -9.72747802734375e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.030642012134194374, -0.04650115966796875, -9.918212890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0022989511489868164, -0.000202178955078125, -0.00017201900482177734, -2.288818359375e-05, -0.0003032684326171875, -2.09808349609375e-05, -0.00027430057525634766, -1.597404116182588e-05, -2.1695865143556148e-05, -0.0007631778717041016, -0.0004673004150390625, -0.0002346038818359375, -1.52587890625e-05, -3.814697265625e-06, -0.02866196632385254, -0.0001049041748046875, -2.09808349609375e-05, -0.8264999389648438, -4.38690185546875e-05, -1.33514404296875e-05, -0.000213623046875, -9.5367431640625e-06, -0.000213623046875, -5.7220458984375e-06, -0.0010128021240234375, -0.0003108978271484375, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.014923095703125, 0.0, -0.0002593994140625, -1.9073486328125e-06, -0.0015507936477661133, -4.208087921142578e-05, -1.1444091796875e-05], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "<UNK>AttackEqualTo"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "<UNK>", "Attack", "Equal", "To", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -3.6321256188659987, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -1.0008611679077148, -0.0061926692724227905, -0.1447155475616455, -2.920626684499439e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0602947473526001, -0.010684728622436523, -0.38634204864501953, -0.10866451263427734, -0.0003643035888671875, -0.001964569091796875, -0.26832103729248047, -2.6702880859375e-05, -0.003990039229393005, -3.814697265625e-06, -3.0517578125e-05, -0.000514984130859375, -5.7220458984375e-06, 0.0, -0.0007022619247436523, -0.0013619661331176758, -0.00032639503479003906, -5.7220458984375e-06, -0.02193450927734375, -7.62939453125e-06, -0.00018000599811784923, -4.9710270104696974e-05, -0.00013381423195824027, -0.000589250645134598, -0.0003204345703125, -6.4849853515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.044055819511413574, -0.0003147125244140625, -6.29425048828125e-05, -1.330362319946289, -6.67572021484375e-05, -1.9073486328125e-05, -0.0003185272216796875, -1.1444091796875e-05, -0.0002079010009765625, -3.814697265625e-06, -0.000843048095703125, -0.0002593994140625, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.015634536743164062, 0.0, -0.0002593994140625, -1.9073486328125e-06, -0.0014096498489379883, -4.00543212890625e-05, -1.1444091796875e-05], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(\n            <UNK>AttackEqualTo(1)), ActionTag(Damage(1), CharacterSelector(\n            players=EnemyPlayer(), picker=RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "<UNK>Attack<UNK>EqualTo"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "<UNK>", "Attack", "<UNK>", "Equal", "To", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>"], "score": -3.6635332416210673, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -1.0008611679077148, -0.0061926692724227905, -0.1447155475616455, -2.920626684499439e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0602947473526001, -0.010684728622436523, -1.2059707641601562, -0.1491185426712036, -0.05877113342285156, -0.0002002716064453125, -0.000881195068359375, -0.28101158142089844, -2.86102294921875e-05, -0.00648634135723114, -3.814697265625e-06, -6.866455078125e-05, -0.0005550384521484375, -5.7220458984375e-06, 0.0, -0.0007346868515014648, -0.0015001296997070312, -0.00029015541076660156, -3.814697265625e-06, -0.021318435668945312, -7.62939453125e-06, -0.00016272066568490118, -4.3272972106933594e-05, -0.00016465730732306838, -0.0005481240223161876, -0.00031280517578125, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0454254150390625, -0.00031280517578125, -6.103515625e-05, -0.28952503204345703, -0.0003910064697265625, -0.0001087188720703125, -6.115436553955078e-05, -9.5367431640625e-06, -0.000202178955078125, -3.814697265625e-06, -0.0001678466796875, -0.0001678466796875, -2.288818359375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.015499114990234375, 0.0, -0.0004787445068359375, -1.9073486328125e-06, -0.0010606050491333008, -4.589557647705078e-05, -1.71661376953125e-05, -0.000354766845703125, -1.9073486328125e-06, -0.1357440948486328, 0.0, -0.0006275177001953125, -0.0023784637451171875, -0.0001201629638671875, -0.00014495849609375], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(\n            <UNK>Attack<UNK>EqualTo(1)), ActionTag(Damage(1),\n            CharacterSelector(players=EnemyPlayer(), picker=RandomPicker(),\n            condition=Null)))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "<UNK>AttackEqualTo"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "<UNK>", "Attack", "Equal", "To", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>"], "score": -4.347442579943404, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -1.8170138597488403, -5.7220458984375e-06, -0.0007801055908203125, 0.0, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -1.9073486328125e-06, -0.0001049041748046875, -3.62396240234375e-05, -0.0021936893463134766, -1.621236151549965e-05, -0.00019121170043945312, -1.1920928244535389e-07, -0.0007991789025254548, -3.576278118089249e-07, -3.4332275390625e-05, -0.0003871917724609375, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.002288818359375, -0.980473518371582, -0.0060228388756513596, -0.14255928993225098, -2.9087057555443607e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.059651970863342285, -0.010661840438842773, -0.38432979583740234, -0.10864830017089844, -0.0003662109375, -0.001964569091796875, -0.26862525939941406, -2.47955322265625e-05, -0.003991257399320602, -3.814697265625e-06, -3.0517578125e-05, -0.0005130767822265625, -5.7220458984375e-06, 0.0, -0.0006965398788452148, -0.0013571977615356445, -0.00032258033752441406, -5.7220458984375e-06, -0.02189350128173828, -7.62939453125e-06, -0.00018000599811784923, -4.9710270104696974e-05, -0.00013321865117177367, -0.0005873432965017855, -0.0003223419189453125, -6.4849853515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.04421126842498779, -0.000316619873046875, -6.29425048828125e-05, -0.32497692108154297, -0.000362396240234375, -0.0001010894775390625, -5.924701690673828e-05, -9.5367431640625e-06, -0.000194549560546875, -3.814697265625e-06, -0.000171661376953125, -0.000171661376953125, -2.288818359375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.01531219482421875, 0.0, -0.0004787445068359375, -1.9073486328125e-06, -0.0010682344436645508, -4.589557647705078e-05, -1.9073486328125e-05, -0.0003509521484375, -1.9073486328125e-06, -0.1367340087890625, 0.0, -0.0006284713745117188, -0.00243377685546875, -0.0001201629638671875, -0.00014495849609375], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(\n            <UNK>AttackEqualTo(1)), ActionTag(Damage(1), CharacterSelector(\n            players=EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -4.358881901753435, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -0.46842479705810547, -0.07554206997156143, -0.009427189826965332, -9.72747802734375e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.030718984082341194, -0.04634910821914673, -9.72747802734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0023103952407836914, -0.000202178955078125, -0.00017201900482177734, -2.288818359375e-05, -0.0003032684326171875, -2.09808349609375e-05, -0.00027430057525634766, -1.597404116182588e-05, -2.1815067157149315e-05, -0.0007612705230712891, -0.00046539306640625, -0.0002346038818359375, -1.52587890625e-05, -3.814697265625e-06, -0.028621912002563477, -0.0001049041748046875, -2.09808349609375e-05, -0.6094789505004883, -0.000293731689453125, -9.34600830078125e-05, -4.398822784423828e-05, -9.5367431640625e-06, -0.000247955322265625, -3.814697265625e-06, -0.000186920166015625, -0.0002040863037109375, -2.288818359375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.01493072509765625, 0.0, -0.000457763671875, -1.9073486328125e-06, -0.0010739564895629883, -4.589557647705078e-05, -1.71661376953125e-05, -0.0003509521484375, -1.9073486328125e-06, -2.8422889709472656, 0.0, -0.003627777099609375, -3.814697265625e-06, -0.0015850067138671875, -5.53131103515625e-05, -1.71661376953125e-05], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), picker=RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionPlaced", "hole1": {"_type": "Name", "id": "<UNK>AttackEqualTo"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "<UNK>", "Attack", "Equal", "To", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>"], "score": -4.413324608173085, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -1.0008611679077148, -0.0061926692724227905, -2.074183702468872, -9.65589570114389e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.011079788208007812, -0.037645578384399414, -0.25039589405059814, -0.11624765396118164, -0.000720977783203125, -0.00176239013671875, -0.1355142593383789, -1.9073486328125e-05, -0.004311040043830872, -3.814697265625e-06, -4.00543212890625e-05, -0.0005054473876953125, -5.7220458984375e-06, 0.0, -0.0011848211288452148, -0.0016232728958129883, -0.00031697750091552734, -3.814697265625e-06, -0.02675151824951172, -9.5367431640625e-06, -0.0002861022367142141, -5.900859832763672e-05, -0.00024471955839544535, -0.0007286068866960704, -0.0005130767822265625, -8.392333984375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0680922269821167, -0.000316619873046875, -7.2479248046875e-05, -0.2952585220336914, -0.0003719329833984375, -0.0001125335693359375, -6.306171417236328e-05, -9.5367431640625e-06, -0.0001850128173828125, -3.814697265625e-06, -0.00017547607421875, -0.0001697540283203125, -2.09808349609375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.015535354614257812, 0.0, -0.0004825592041015625, -1.9073486328125e-06, -0.0010567903518676758, -4.589557647705078e-05, -1.9073486328125e-05, -0.0003509521484375, -1.9073486328125e-06, -0.13671016693115234, 0.0, -0.0006237030029296875, -0.0024280548095703125, -0.0001220703125, -0.0001468658447265625], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(<UNK>AttackEqualTo\n            (1)), ActionTag(Damage(1), CharacterSelector(players=\n            EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "<UNK>Attack<UNK>EqualTo"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "<UNK>", "Attack", "<UNK>", "Equal", "To", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -4.669494421354344, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -1.0008611679077148, -0.0061926692724227905, -0.1447155475616455, -2.920626684499439e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0602947473526001, -0.010684728622436523, -1.2059707641601562, -0.1491185426712036, -0.05877113342285156, -0.0002002716064453125, -0.000881195068359375, -0.28101158142089844, -2.86102294921875e-05, -0.00648634135723114, -3.814697265625e-06, -6.866455078125e-05, -0.0005550384521484375, -5.7220458984375e-06, 0.0, -0.0007346868515014648, -0.0015001296997070312, -0.00029015541076660156, -3.814697265625e-06, -0.021318435668945312, -7.62939453125e-06, -0.00016272066568490118, -4.3272972106933594e-05, -0.00016465730732306838, -0.0005481240223161876, -0.00031280517578125, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0454254150390625, -0.00031280517578125, -6.103515625e-05, -1.4339447021484375, -7.05718994140625e-05, -1.9073486328125e-05, -0.0003261566162109375, -1.1444091796875e-05, -0.0002155303955078125, -5.7220458984375e-06, -0.0008296966552734375, -0.0002536773681640625, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.015726089477539062, 0.0, -0.0002613067626953125, -1.9073486328125e-06, -0.0013791322708129883, -4.00543212890625e-05, -1.1444091796875e-05], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(\n            <UNK>Attack<UNK>EqualTo(1)), ActionTag(Damage(1),\n            CharacterSelector(players=EnemyPlayer(), picker=RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -4.797095726979265, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -0.46842479705810547, -0.07554206997156143, -0.009427189826965332, -9.72747802734375e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.030718984082341194, -0.04634910821914673, -9.72747802734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0023103952407836914, -0.000202178955078125, -0.00017201900482177734, -2.288818359375e-05, -0.0003032684326171875, -2.09808349609375e-05, -0.00027430057525634766, -1.597404116182588e-05, -2.1815067157149315e-05, -0.0007612705230712891, -0.00046539306640625, -0.0002346038818359375, -1.52587890625e-05, -3.814697265625e-06, -3.6195027828216553, -0.0001125335693359375, -5.340576171875e-05, -0.29238319396972656, -5.340576171875e-05, -3.814697265625e-06, -0.01155853271484375, -2.288818359375e-05, -0.00020599365234375, -3.814697265625e-06, -0.0017108917236328125, -0.000415802001953125, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.014230728149414062, 0.0, -0.000270843505859375, -1.9073486328125e-06, -0.001421213150024414, -4.398822784423828e-05, -1.1444091796875e-05], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), MinionSelector(players=EnemyPlayer(), picker=\n            RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>"], "score": -5.109148740534025, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -3.680612564086914, 0.0, -0.000905156135559082, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, 0.0, 0.0, -6.67572021484375e-05, -3.62396240234375e-05, -0.0022165775299072266, -1.9788581994362175e-05, -0.00018310546875, -1.1920928244535389e-07, -0.000655174080748111, -3.576278118089249e-07, -3.62396240234375e-05, -0.0004024505615234375, -1.919269561767578e-05, 0.0, -2.86102294921875e-05, -0.002166748046875, -0.46338748931884766, -0.07649991661310196, -0.00939476490020752, -9.72747802734375e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.030807288363575935, -0.046374935656785965, -9.918212890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.002289414405822754, -0.0002002716064453125, -0.00017011165618896484, -2.288818359375e-05, -0.0003070831298828125, -2.09808349609375e-05, -0.00027239322662353516, -1.609325045137666e-05, -2.1815063519170508e-05, -0.0007803440093994141, -0.000476837158203125, -0.0002384185791015625, -1.52587890625e-05, -3.814697265625e-06, -0.02894139289855957, -0.0001049041748046875, -2.09808349609375e-05, -0.609278678894043, -0.000293731689453125, -9.34600830078125e-05, -4.398822784423828e-05, -9.5367431640625e-06, -0.000247955322265625, -3.814697265625e-06, -0.000186920166015625, -0.0002040863037109375, -2.288818359375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.014923095703125, 0.0, -0.000457763671875, -1.9073486328125e-06, -0.0010739564895629883, -4.589557647705078e-05, -1.71661376953125e-05, -0.0003509521484375, -1.9073486328125e-06, -0.1287546157836914, 0.0, -0.0006542205810546875, -0.002262115478515625, -0.0001163482666015625, -0.0001373291015625], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=Null)))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "<UNK>AttackEqualTo"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "<UNK>", "Attack", "Equal", "To", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>"], "score": -5.232305363626679, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -1.0008611679077148, -0.0061926692724227905, -0.1447155475616455, -2.920626684499439e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0602947473526001, -0.010684728622436523, -0.38634204864501953, -0.10866451263427734, -0.0003643035888671875, -0.001964569091796875, -2.104471206665039, -0.00046539306640625, -0.000347137451171875, 0.0, -0.0031137466430664062, -0.00018715858459472656, -0.3611183166503906, -3.814697265625e-06, -2.86102294921875e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0015794038772583008, -0.000213623046875, -1.33514404296875e-05, -7.62939453125e-05, -0.010103225708007812, -1.1444091796875e-05, -0.0001157522201538086, -1.2397755199344829e-05, -2.0622712327167392e-05, -0.0010129207512363791, -0.0003833770751953125, -0.00048828125, -1.52587890625e-05, -3.814697265625e-06, -0.0054787397384643555, -4.1961669921875e-05, -2.86102294921875e-05, -0.6451539993286133, -0.0010662078857421875, -8.96453857421875e-05, -3.635883331298828e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.0002269744873046875, -0.0001621246337890625, -2.47955322265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.015392303466796875, 0.0, -0.0005054473876953125, -1.9073486328125e-06, -0.0010777711868286133, -4.398822784423828e-05, -1.71661376953125e-05, -0.0003528594970703125, 0.0, -0.13477230072021484, 0.0, -0.00064849853515625, -0.003192901611328125, -0.0001163482666015625, -0.0001373291015625], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(\n            <UNK>AttackEqualTo(MINION_TYPE.PIRATE)), ActionTag(Damage(1),\n            CharacterSelector(players=EnemyPlayer(), picker=RandomPicker(),\n            condition=Null)))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Knife Juggler", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "CardUsed", "hole1": {"_type": "Name", "id": "IsSpell"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 3, "hole1": 2, "hole2": "effects"}], "hole0": "KnifeJuggler", "hole4": "player"}, "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -5.6247338762407395, "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -0.46842479705810547, -0.07554206997156143, -0.009427189826965332, -9.72747802734375e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.030718984082341194, -0.04634910821914673, -9.72747802734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0023103952407836914, -0.000202178955078125, -0.00017201900482177734, -2.288818359375e-05, -0.0003032684326171875, -2.09808349609375e-05, -0.00027430057525634766, -1.597404116182588e-05, -2.1815067157149315e-05, -0.0007612705230712891, -0.00046539306640625, -0.0002346038818359375, -1.52587890625e-05, -3.814697265625e-06, -0.028621912002563477, -0.0001049041748046875, -2.09808349609375e-05, -0.6094789505004883, -0.000293731689453125, -9.34600830078125e-05, -4.398822784423828e-05, -9.5367431640625e-06, -0.000247955322265625, -3.814697265625e-06, -0.000186920166015625, -0.0002040863037109375, -2.288818359375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.01493072509765625, 0.0, -0.000457763671875, -1.9073486328125e-06, -0.0010739564895629883, -4.589557647705078e-05, -1.71661376953125e-05, -0.0003509521484375, -1.9073486328125e-06, -3.351792335510254, 0.0, -0.0014743804931640625, -1.9073486328125e-06, -0.7598104476928711, -0.0003223419189453125, -2.86102294921875e-05], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), players=RandomPicker())))])\n"}], "gold_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(AfterAdded(), ActionTag(Damage(\n            1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=None)))])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -2.301282226604478, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -0.6417579650878906, 0.0, -9.918212890625e-05, 0.0, -6.29425048828125e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.0006313323974609375, -3.814697265625e-05, -8.475780487060547e-05, -4.327203714638017e-05, -1.4781842764932662e-05, -1.9431114196777344e-05, -0.004604935646057129, 0.0, -1.1444091796875e-05, -0.000774383544921875, -2.8848648071289062e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.00012874603271484375, -0.3449563980102539, -4.57763671875e-05, -0.0023555755615234375, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.768370445162873e-07, -5.91278076171875e-05, -0.0024852752685546875, -7.62939453125e-06, -0.06904982775449753, -1.7881233361549675e-05, -0.0020285197533667088, -2.0861511075054295e-05, -0.0003795623779296875, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.7517387866973877, -3.6835670471191406e-05, 0.0, -0.0995187759399414, -1.9073486328125e-06, -9.5367431640625e-06, -0.025711894035339355, -5.7220458984375e-06, -8.0108642578125e-05, -5.7220458984375e-06, -0.27062809467315674, -4.38690185546875e-05, -0.00011444091796875, -2.09808349609375e-05, -1.33514404296875e-05, -0.028354763984680176, 0.0, -0.000240325927734375, 0.0, -0.006279468536376953, -0.00031697750091552734, 0.0], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            CharacterSelector(players=EnemyPlayer(), picker=RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -2.362175404590623, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -0.6417579650878906, 0.0, -9.918212890625e-05, 0.0, -6.29425048828125e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.0006313323974609375, -3.814697265625e-05, -8.475780487060547e-05, -4.327203714638017e-05, -1.4781842764932662e-05, -1.9431114196777344e-05, -0.004604935646057129, 0.0, -1.1444091796875e-05, -0.000774383544921875, -2.8848648071289062e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.00012874603271484375, -0.3449563980102539, -4.57763671875e-05, -0.0023555755615234375, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.768370445162873e-07, -5.91278076171875e-05, -0.0024852752685546875, -7.62939453125e-06, -0.06904982775449753, -1.7881233361549675e-05, -0.0020285197533667088, -2.0861511075054295e-05, -0.0003795623779296875, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.6467229127883911, -0.0001392364501953125, 0.0, -0.10811042785644531, -1.9073486328125e-06, -1.1444091796875e-05, -0.25891757011413574, -5.7220458984375e-06, -0.002323150634765625, -0.0001239776611328125, -1.1444091796875e-05, -5.7220458984375e-06, -0.001190185546875, -9.5367431640625e-06, -0.0008802413940429688, 0.0, -1.9073486328125e-05, 0.0, -0.22544491291046143, -7.82012939453125e-05, -1.9073486328125e-05], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -3.0490045985451317, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -1.393692970275879, -2.2649765014648438e-06, -0.00011909008026123047, 0.0, -6.67572021484375e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.000492095947265625, -3.4332275390625e-05, -8.463859558105469e-05, -4.362964682513848e-05, -1.4066597032069694e-05, -1.7523765563964844e-05, -0.004883408546447754, 0.0, -1.33514404296875e-05, -0.0007495880126953125, -2.6941299438476562e-05, -3.814697265625e-06, -3.24249267578125e-05, -0.0001125335693359375, -7.62939453125e-06, -0.00012683868408203125, -0.34601688385009766, -4.57763671875e-05, -0.0024204254150390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.768370445162873e-07, -5.91278076171875e-05, -0.0023174285888671875, -7.62939453125e-06, -0.06825410574674606, -1.7762025890988298e-05, -0.002003232017159462, -2.0861511075054295e-05, -0.0003910064697265625, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.7468550205230713, -3.6835670471191406e-05, 0.0, -0.09940242767333984, -1.9073486328125e-06, -9.5367431640625e-06, -0.02575385570526123, -5.7220458984375e-06, -8.0108642578125e-05, -5.7220458984375e-06, -0.27107250690460205, -4.38690185546875e-05, -0.00011444091796875, -2.09808349609375e-05, -1.33514404296875e-05, -0.028370022773742676, 0.0, -0.000240325927734375, 0.0, -0.006290912628173828, -0.00031697750091552734, 0.0], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            CharacterSelector(players=EnemyPlayer(), picker=RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnStarted"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Started", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -3.06919744964204, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -0.6417579650878906, 0.0, -9.918212890625e-05, 0.0, -6.29425048828125e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.0006313323974609375, -3.814697265625e-05, -8.475780487060547e-05, -4.327203714638017e-05, -1.4781842764932662e-05, -1.9431114196777344e-05, -0.004604935646057129, 0.0, -1.1444091796875e-05, -0.000774383544921875, -2.8848648071289062e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.00012874603271484375, -1.2410554885864258, -0.00010573863983154297, -0.00112152099609375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -7.62939453125e-06, -4.768370445162873e-07, -6.67572021484375e-05, -0.0008754730224609375, -5.7220458984375e-06, -0.04086076095700264, -1.8715683836489916e-05, -0.001801642356440425, -1.9073397197644226e-05, -0.0005550384521484375, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.6231911182403564, -4.0531158447265625e-05, 0.0, -0.10304927825927734, -1.9073486328125e-06, -9.5367431640625e-06, -0.027237772941589355, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -0.2967301607131958, -4.38690185546875e-05, -0.000118255615234375, -2.09808349609375e-05, -1.33514404296875e-05, -0.02844822406768799, 0.0, -0.000232696533203125, 0.0, -0.006382465362548828, -0.00033032894134521484, 0.0], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(players=EnemyPlayer(), picker=RandomPicker\n            ())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -3.1183931073418236, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -1.393692970275879, -2.2649765014648438e-06, -0.00011909008026123047, 0.0, -6.67572021484375e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.000492095947265625, -3.4332275390625e-05, -8.463859558105469e-05, -4.362964682513848e-05, -1.4066597032069694e-05, -1.7523765563964844e-05, -0.004883408546447754, 0.0, -1.33514404296875e-05, -0.0007495880126953125, -2.6941299438476562e-05, -3.814697265625e-06, -3.24249267578125e-05, -0.0001125335693359375, -7.62939453125e-06, -0.00012683868408203125, -0.34601688385009766, -4.57763671875e-05, -0.0024204254150390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.768370445162873e-07, -5.91278076171875e-05, -0.0023174285888671875, -7.62939453125e-06, -0.06825410574674606, -1.7762025890988298e-05, -0.002003232017159462, -2.0861511075054295e-05, -0.0003910064697265625, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.6511803865432739, -0.0001392364501953125, 0.0, -0.10810565948486328, -1.9073486328125e-06, -1.1444091796875e-05, -0.25868678092956543, -5.7220458984375e-06, -0.0023250579833984375, -0.0001239776611328125, -1.1444091796875e-05, -5.7220458984375e-06, -0.0011882781982421875, -9.5367431640625e-06, -0.0008783340454101562, 0.0, -1.9073486328125e-05, 0.0, -0.22523319721221924, -7.82012939453125e-05, -1.9073486328125e-05], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnStarted"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Started", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -3.3345269298132436, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -0.6417579650878906, 0.0, -9.918212890625e-05, 0.0, -6.29425048828125e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.0006313323974609375, -3.814697265625e-05, -8.475780487060547e-05, -4.327203714638017e-05, -1.4781842764932662e-05, -1.9431114196777344e-05, -0.004604935646057129, 0.0, -1.1444091796875e-05, -0.000774383544921875, -2.8848648071289062e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.00012874603271484375, -1.2410554885864258, -0.00010573863983154297, -0.00112152099609375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -7.62939453125e-06, -4.768370445162873e-07, -6.67572021484375e-05, -0.0008754730224609375, -5.7220458984375e-06, -0.04086076095700264, -1.8715683836489916e-05, -0.001801642356440425, -1.9073397197644226e-05, -0.0005550384521484375, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.7802685499191284, -0.0001506805419921875, 0.0, -0.0883646011352539, -1.9073486328125e-06, -1.1444091796875e-05, -0.25906825065612793, -7.62939453125e-06, -0.0025644302368164062, -0.0001220703125, -1.1444091796875e-05, -5.7220458984375e-06, -0.001163482666015625, -9.5367431640625e-06, -0.0008879899978637695, 0.0, -1.9073486328125e-05, 0.0, -0.2185136079788208, -7.82012939453125e-05, -1.9073486328125e-05], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), MinionSelector(condition=Null, players=BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -3.36024863975387, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -1.6938371658325195, -7.82012939453125e-05, -9.512898395769298e-05, 0.0, -6.103515625e-05, 0.0, -1.3709068298339844e-05, 0.0, -1.9073486328125e-06, -0.000537872314453125, -3.4332275390625e-05, -8.463859558105469e-05, -3.611976353568025e-05, -1.5735502529423684e-05, -1.7523765563964844e-05, -0.005037903785705566, 0.0, -1.33514404296875e-05, -0.0007476806640625, -2.6941299438476562e-05, -3.814697265625e-06, -3.24249267578125e-05, -0.0001125335693359375, -7.62939453125e-06, -0.00012683868408203125, -0.3504018783569336, -4.57763671875e-05, -0.00241851806640625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.768370445162873e-07, -5.91278076171875e-05, -0.0023250579833984375, -7.62939453125e-06, -0.06759034842252731, -1.7881233361549675e-05, -0.002048680791631341, -2.0742303604492918e-05, -0.00037384033203125, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.7526743412017822, -3.6835670471191406e-05, 0.0, -0.09958648681640625, -1.9073486328125e-06, -9.5367431640625e-06, -0.025877833366394043, -5.7220458984375e-06, -8.0108642578125e-05, -5.7220458984375e-06, -0.2720433473587036, -4.38690185546875e-05, -0.00011444091796875, -2.09808349609375e-05, -1.33514404296875e-05, -0.02838146686553955, 0.0, -0.000240325927734375, 0.0, -0.006289005279541016, -0.00031697750091552734, 0.0], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            CharacterSelector(players=EnemyPlayer(), picker=RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -3.415407374075464, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -1.6938371658325195, -7.82012939453125e-05, -9.512898395769298e-05, 0.0, -6.103515625e-05, 0.0, -1.3709068298339844e-05, 0.0, -1.9073486328125e-06, -0.000537872314453125, -3.4332275390625e-05, -8.463859558105469e-05, -3.611976353568025e-05, -1.5735502529423684e-05, -1.7523765563964844e-05, -0.005037903785705566, 0.0, -1.33514404296875e-05, -0.0007476806640625, -2.6941299438476562e-05, -3.814697265625e-06, -3.24249267578125e-05, -0.0001125335693359375, -7.62939453125e-06, -0.00012683868408203125, -0.3504018783569336, -4.57763671875e-05, -0.00241851806640625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.768370445162873e-07, -5.91278076171875e-05, -0.0023250579833984375, -7.62939453125e-06, -0.06759034842252731, -1.7881233361549675e-05, -0.002048680791631341, -2.0742303604492918e-05, -0.00037384033203125, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.645879864692688, -0.0001392364501953125, 0.0, -0.1075286865234375, -1.9073486328125e-06, -1.1444091796875e-05, -0.257826566696167, -5.7220458984375e-06, -0.0023183822631835938, -0.0001239776611328125, -1.1444091796875e-05, -5.7220458984375e-06, -0.0011920928955078125, -9.5367431640625e-06, -0.0008802413940429688, 0.0, -1.9073486328125e-05, 0.0, -0.22484982013702393, -7.82012939453125e-05, -1.9073486328125e-05], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -3.462787806552903, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -0.6417579650878906, 0.0, -9.918212890625e-05, 0.0, -6.29425048828125e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.0006313323974609375, -3.814697265625e-05, -8.475780487060547e-05, -4.327203714638017e-05, -1.4781842764932662e-05, -1.9431114196777344e-05, -0.004604935646057129, 0.0, -1.1444091796875e-05, -0.000774383544921875, -2.8848648071289062e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.00012874603271484375, -0.3449563980102539, -4.57763671875e-05, -0.0023555755615234375, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.768370445162873e-07, -5.91278076171875e-05, -0.0024852752685546875, -7.62939453125e-06, -0.06904982775449753, -1.7881233361549675e-05, -0.0020285197533667088, -2.0861511075054295e-05, -0.0003795623779296875, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.7517387866973877, -3.6835670471191406e-05, 0.0, -0.0995187759399414, -1.9073486328125e-06, -9.5367431640625e-06, -0.025711894035339355, -5.7220458984375e-06, -8.0108642578125e-05, -5.7220458984375e-06, -1.4455300569534302, -7.62939453125e-05, -7.62939453125e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.014414310455322266, 0.0, -0.000370025634765625, 0.0, -0.006840825080871582, -0.00016617774963378906, 0.0], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            CharacterSelector(players=BothPlayer(), picker=RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>"], "score": -3.742508470577256, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -0.6417579650878906, 0.0, -9.918212890625e-05, 0.0, -6.29425048828125e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.0006313323974609375, -3.814697265625e-05, -8.475780487060547e-05, -4.327203714638017e-05, -1.4781842764932662e-05, -1.9431114196777344e-05, -0.004604935646057129, 0.0, -1.1444091796875e-05, -0.000774383544921875, -2.8848648071289062e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.00012874603271484375, -0.3449563980102539, -4.57763671875e-05, -0.0023555755615234375, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.768370445162873e-07, -5.91278076171875e-05, -0.0024852752685546875, -7.62939453125e-06, -0.06904982775449753, -1.7881233361549675e-05, -0.0020285197533667088, -2.0861511075054295e-05, -0.0003795623779296875, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.6467229127883911, -0.0001392364501953125, 0.0, -0.10811042785644531, -1.9073486328125e-06, -1.1444091796875e-05, -0.25891757011413574, -5.7220458984375e-06, -0.002323150634765625, -0.0001239776611328125, -1.1444091796875e-05, -5.7220458984375e-06, -0.001190185546875, -9.5367431640625e-06, -0.0008802413940429688, 0.0, -1.9073486328125e-05, 0.0, -1.6058217287063599, -2.300739288330078e-05, -3.0517578125e-05], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            MinionSelector(condition=Null, players=EnemyPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnStarted"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Started", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -3.81499376186445, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -1.393692970275879, -2.2649765014648438e-06, -0.00011909008026123047, 0.0, -6.67572021484375e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.000492095947265625, -3.4332275390625e-05, -8.463859558105469e-05, -4.362964682513848e-05, -1.4066597032069694e-05, -1.7523765563964844e-05, -0.004883408546447754, 0.0, -1.33514404296875e-05, -0.0007495880126953125, -2.6941299438476562e-05, -3.814697265625e-06, -3.24249267578125e-05, -0.0001125335693359375, -7.62939453125e-06, -0.00012683868408203125, -1.2386360168457031, -0.00010383129119873047, -0.00115203857421875, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -7.62939453125e-06, -4.768370445162873e-07, -6.67572021484375e-05, -0.0008525848388671875, -5.7220458984375e-06, -0.040208566933870316, -1.847726889536716e-05, -0.0017848232528194785, -1.9192604668205604e-05, -0.0005645751953125, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.6191599369049072, -4.0531158447265625e-05, 0.0, -0.10286808013916016, -1.9073486328125e-06, -9.5367431640625e-06, -0.027277827262878418, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -0.2976762056350708, -4.38690185546875e-05, -0.000118255615234375, -2.09808349609375e-05, -1.33514404296875e-05, -0.028467297554016113, 0.0, -0.000232696533203125, 0.0, -0.006397724151611328, -0.00033032894134521484, 0.0], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(players=EnemyPlayer(), picker=RandomPicker\n            ())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -4.013879119915025, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -0.6417579650878906, 0.0, -9.918212890625e-05, 0.0, -6.29425048828125e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.0006313323974609375, -3.814697265625e-05, -8.475780487060547e-05, -4.327203714638017e-05, -1.4781842764932662e-05, -1.9431114196777344e-05, -0.004604935646057129, 0.0, -1.1444091796875e-05, -0.000774383544921875, -2.8848648071289062e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.00012874603271484375, -0.3449563980102539, -4.57763671875e-05, -0.0023555755615234375, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.768370445162873e-07, -5.91278076171875e-05, -0.0024852752685546875, -7.62939453125e-06, -0.06904982775449753, -1.7881233361549675e-05, -0.0020285197533667088, -2.0861511075054295e-05, -0.0003795623779296875, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.6467229127883911, -0.0001392364501953125, 0.0, -0.10811042785644531, -1.9073486328125e-06, -1.1444091796875e-05, -1.47959303855896, -9.5367431640625e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.6260892152786255, -5.340576171875e-05, -0.0001201629638671875, -1.33514404296875e-05, -7.62939453125e-06, -0.026377201080322266, 0.0, -0.0002288818359375, 0.0, -0.0077838897705078125, -0.00037419795989990234, 0.0], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            MinionSelector(players=EnemyPlayer(), picker=RandomPicker())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnStarted"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Started", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -4.087785743561533, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -1.393692970275879, -2.2649765014648438e-06, -0.00011909008026123047, 0.0, -6.67572021484375e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.000492095947265625, -3.4332275390625e-05, -8.463859558105469e-05, -4.362964682513848e-05, -1.4066597032069694e-05, -1.7523765563964844e-05, -0.004883408546447754, 0.0, -1.33514404296875e-05, -0.0007495880126953125, -2.6941299438476562e-05, -3.814697265625e-06, -3.24249267578125e-05, -0.0001125335693359375, -7.62939453125e-06, -0.00012683868408203125, -1.2386360168457031, -0.00010383129119873047, -0.00115203857421875, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -7.62939453125e-06, -4.768370445162873e-07, -6.67572021484375e-05, -0.0008525848388671875, -5.7220458984375e-06, -0.040208566933870316, -1.847726889536716e-05, -0.0017848232528194785, -1.9192604668205604e-05, -0.0005645751953125, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.7850607633590698, -0.0001506805419921875, 0.0, -0.088348388671875, -1.9073486328125e-06, -1.1444091796875e-05, -0.2587897777557373, -7.62939453125e-06, -0.0025682449340820312, -0.0001220703125, -1.1444091796875e-05, -5.7220458984375e-06, -0.001163482666015625, -9.5367431640625e-06, -0.0008879899978637695, 0.0, -1.9073486328125e-05, 0.0, -0.2182828187942505, -7.82012939453125e-05, -1.9073486328125e-05], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), MinionSelector(condition=Null, players=BothPlayer())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnStarted"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Started", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -4.111406615287585, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -1.6938371658325195, -7.82012939453125e-05, -9.512898395769298e-05, 0.0, -6.103515625e-05, 0.0, -1.3709068298339844e-05, 0.0, -1.9073486328125e-06, -0.000537872314453125, -3.4332275390625e-05, -8.463859558105469e-05, -3.611976353568025e-05, -1.5735502529423684e-05, -1.7523765563964844e-05, -0.005037903785705566, 0.0, -1.33514404296875e-05, -0.0007476806640625, -2.6941299438476562e-05, -3.814697265625e-06, -3.24249267578125e-05, -0.0001125335693359375, -7.62939453125e-06, -0.00012683868408203125, -1.2281122207641602, -0.00010573863983154297, -0.0011501312255859375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -7.62939453125e-06, -4.768370445162873e-07, -6.67572021484375e-05, -0.0008487701416015625, -5.7220458984375e-06, -0.03943251445889473, -1.8715683836489916e-05, -0.0018141763284802437, -1.895418972708285e-05, -0.0005435943603515625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.6252434253692627, -4.0531158447265625e-05, 0.0, -0.10323047637939453, -1.9073486328125e-06, -9.5367431640625e-06, -0.02736365795135498, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -0.298467755317688, -4.38690185546875e-05, -0.000118255615234375, -2.09808349609375e-05, -1.33514404296875e-05, -0.02847111225128174, 0.0, -0.000232696533203125, 0.0, -0.006397724151611328, -0.00033032894134521484, 0.0], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(players=EnemyPlayer(), picker=RandomPicker\n            ())))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Lightwell", "hole1": 2, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnStarted"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template15", "hole0": "Heal", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}]}, "_type": "Template9", "hole0": 0, "hole1": 5, "hole2": "effects"}], "hole0": "Lightwell", "hole4": "player"}, "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Started", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>"], "score": -4.124512467342235, "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -0.6417579650878906, 0.0, -9.918212890625e-05, 0.0, -6.29425048828125e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.0006313323974609375, -3.814697265625e-05, -8.475780487060547e-05, -4.327203714638017e-05, -1.4781842764932662e-05, -1.9431114196777344e-05, -0.004604935646057129, 0.0, -1.1444091796875e-05, -0.000774383544921875, -2.8848648071289062e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.00012874603271484375, -1.2410554885864258, -0.00010573863983154297, -0.00112152099609375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -7.62939453125e-06, -4.768370445162873e-07, -6.67572021484375e-05, -0.0008754730224609375, -5.7220458984375e-06, -0.04086076095700264, -1.8715683836489916e-05, -0.001801642356440425, -1.9073397197644226e-05, -0.0005550384521484375, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.6231911182403564, -4.0531158447265625e-05, 0.0, -0.10304927825927734, -1.9073486328125e-06, -9.5367431640625e-06, -0.027237772941589355, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.3654299974441528, -7.62939453125e-05, -7.62939453125e-05, -1.52587890625e-05, -2.6702880859375e-05, -0.014473557472229004, 0.0, -0.00035858154296875, 0.0, -0.007008671760559082, -0.00016999244689941406, 0.0], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(players=BothPlayer(), picker=RandomPicker(\n            ))))])\n"}], "gold_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(condition=IsDamaged(), picker=RandomPicker\n            ())))])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}, "keywords": [{"arg": "player", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Spell", "Cast", "<EOS>", 176, 53, 159, "player", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -2.0495033033939123, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.6880693435668945, 0.0, -5.1975250244140625e-05, 0.0, -4.76837158203125e-05, 0.0, -7.998934597708285e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.288818359375e-05, -3.576278118089249e-07, -1.7881377516459906e-06, -4.935242759529501e-05, -1.0013580322265625e-05, -0.00015687942504882812, -9.536738616588991e-07, -0.00023651123046875, -0.00237274169921875, -9.405612217960879e-05, 0.0, -6.103515625e-05, -0.20324039459228516, -0.0021295547485351562, -0.0001049041748046875, -1.1444091796875e-05, -0.03611181303858757, -0.0019840002059936523, 0.0, -0.9100122451782227, -3.24249267578125e-05, -7.62939453125e-06, -0.0008031129837036133, -1.1920928244535389e-07, -5.53131103515625e-05, -1.9073486328125e-06, -0.03517316281795502, -0.0009062290191650391, -0.0001678466796875, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.924701690673828e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.022205352783203125, -0.001473903190344572, -2.0265579223632812e-06, -1.33514404296875e-05, -2.6702880859375e-05, -0.0001422135392203927, -0.0003274325281381607, -9.5367431640625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -9.5367431640625e-06, -0.0009613037109375, -7.641315460205078e-05, -0.000186920166015625, 0.0, -5.650520324707031e-05, -1.1563301086425781e-05, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}, "keywords": [{"arg": "player", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Spell", "Cast", "<EOS>", 176, 53, 159, "player", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -2.063563089216352, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.7210798263549805, -1.9073486328125e-06, -7.891654968261719e-05, 0.0, -7.2479248046875e-05, 0.0, -5.4955420637270436e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.09808349609375e-05, -4.768370445162873e-07, -1.9073468138230965e-06, -4.863718640990555e-05, -1.0013580322265625e-05, -0.00016641616821289062, -8.344646857949556e-07, -0.000213623046875, -0.002368927001953125, -9.572505223331973e-05, 0.0, -6.103515625e-05, -0.20901870727539062, -0.0022230148315429688, -0.0001010894775390625, -1.1444091796875e-05, -0.03788457810878754, -0.0019916296005249023, 0.0, -0.8839855194091797, -3.24249267578125e-05, -7.62939453125e-06, -0.0008069276809692383, -1.1920928244535389e-07, -5.53131103515625e-05, -1.9073486328125e-06, -0.03475354611873627, -0.0009119510650634766, -0.0001659393310546875, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.924701690673828e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.022032737731933594, -0.0014758105389773846, -2.0265579223632812e-06, -1.33514404296875e-05, -2.6702880859375e-05, -0.00014209432993084192, -0.0003273133479524404, -9.5367431640625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -9.5367431640625e-06, -0.0009613037109375, -7.641315460205078e-05, -0.000186920166015625, 0.0, -5.650520324707031e-05, -1.1563301086425781e-05, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.1051444540343596, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.6880693435668945, 0.0, -5.1975250244140625e-05, 0.0, -4.76837158203125e-05, 0.0, -7.998934597708285e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.288818359375e-05, -3.576278118089249e-07, -1.7881377516459906e-06, -4.935242759529501e-05, -1.0013580322265625e-05, -0.00015687942504882812, -9.536738616588991e-07, -0.00023651123046875, -0.00237274169921875, -9.405612217960879e-05, 0.0, -6.103515625e-05, -1.7295160293579102, -0.2940340042114258, -0.0010218173265457153, -0.029967663809657097, -2.7060319553129375e-05, -0.0005130767822265625, -9.5367431640625e-06, -0.007092831190675497, -0.001092179911211133, -8.594989776611328e-05, -0.0146331787109375, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0003714548365678638, -0.004031285643577576, -0.17674732208251953, 0.0, -0.0059375762939453125, -0.00017547607421875, -1.1444091796875e-05, 0.0, -8.20159912109375e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0013828277587890625, -0.0028141592629253864, -1.1682510375976562e-05, -1.1444091796875e-05, -5.340576171875e-05, -0.0006168576655909419, -0.000662376347463578, -2.110004425048828e-05, -1.71661376953125e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.0007649660110473633, -8.594989776611328e-05, -9.72747802734375e-05, 0.0, -5.412101745605469e-05, -9.655952453613281e-06, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.1215094003644026, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.7210798263549805, -1.9073486328125e-06, -7.891654968261719e-05, 0.0, -7.2479248046875e-05, 0.0, -5.4955420637270436e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.09808349609375e-05, -4.768370445162873e-07, -1.9073468138230965e-06, -4.863718640990555e-05, -1.0013580322265625e-05, -0.00016641616821289062, -8.344646857949556e-07, -0.000213623046875, -0.002368927001953125, -9.572505223331973e-05, 0.0, -6.103515625e-05, -1.7043170928955078, -0.30052852630615234, -0.001381121575832367, -0.030782220885157585, -2.7179527023690753e-05, -0.00049591064453125, -9.5367431640625e-06, -0.007134912069886923, -0.001086219446733594, -8.594989776611328e-05, -0.014923095703125, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00037348130717873573, -0.0040583559311926365, -0.1772003173828125, 0.0, -0.0060024261474609375, -0.0001773834228515625, -1.1444091796875e-05, 0.0, -8.20159912109375e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.001377105712890625, -0.0028294180519878864, -1.1682510375976562e-05, -1.1444091796875e-05, -5.340576171875e-05, -0.000618287711404264, -0.0006661886000074446, -2.110004425048828e-05, -1.71661376953125e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.0007648468017578125, -8.594989776611328e-05, -9.918212890625e-05, 0.0, -5.412101745605469e-05, -9.655952453613281e-06, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 3, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}, "keywords": [{"arg": "player", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Spell", "Cast", "<EOS>", 176, 53, 159, "player", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.680234210810106, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -2.055250883102417, -1.9073486328125e-06, -0.43303966522216797, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.0007076263427734375, 0.0, -1.0967253729177173e-05, 0.0, -1.9073486328125e-06, -0.0001163482666015625, -1.71661376953125e-05, -8.344645721081179e-07, -2.264974000354414e-06, -9.179016342386603e-05, -7.987022399902344e-06, -0.00019502639770507812, -7.152555099310121e-07, -0.0002079010009765625, -0.0024261474609375, -9.751319157658145e-05, 0.0, -6.103515625e-05, -0.2487468719482422, -0.0025997161865234375, -9.1552734375e-05, -1.33514404296875e-05, -0.03762497752904892, -0.0019515752792358398, 0.0, -0.8283052444458008, -3.4332275390625e-05, -5.7220458984375e-06, -0.0008106231689453125, -1.1920928244535389e-07, -5.7220458984375e-05, -1.9073486328125e-06, -0.035410985350608826, -0.0008966922760009766, -0.000164031982421875, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.924701690673828e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.02321910858154297, -0.0014475579373538494, -2.0265579223632812e-06, -1.33514404296875e-05, -2.6702880859375e-05, -0.0001425711379852146, -0.00032898184144869447, -9.5367431640625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -9.5367431640625e-06, -0.0009613037109375, -7.641315460205078e-05, -0.000186920166015625, 0.0, -5.650520324707031e-05, -1.1563301086425781e-05, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}, "keywords": [{"arg": "player", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Spell", "Cast", "<EOS>", 176, 53, 159, "player", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -4.32511449833526, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -2.055250883102417, -1.9073486328125e-06, -1.0612211227416992, -1.9073486328125e-06, -7.092952728271484e-05, 0.0, -0.000232696533203125, 0.0, -1.2874602361989673e-05, 0.0, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-05, -5.960462772236497e-07, -1.6689286894688848e-06, -8.737953612580895e-05, -9.894371032714844e-06, -0.00017213821411132812, -8.344646857949556e-07, -0.000225067138671875, -0.0023479461669921875, -9.405612217960879e-05, 0.0, -6.103515625e-05, -0.22342967987060547, -0.0023927688598632812, -0.0001010894775390625, -1.1444091796875e-05, -0.034822240471839905, -0.00196683406829834, 0.0, -0.8733434677124023, -3.24249267578125e-05, -5.7220458984375e-06, -0.0008068084716796875, -1.1920928244535389e-07, -5.53131103515625e-05, -1.9073486328125e-06, -0.03592704236507416, -0.0008985996246337891, -0.0001659393310546875, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.924701690673828e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.02323150634765625, -0.0014531607739627361, -2.0265579223632812e-06, -1.33514404296875e-05, -2.6702880859375e-05, -0.0001425711379852146, -0.0003287434810772538, -9.5367431640625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -9.5367431640625e-06, -0.0009613037109375, -7.641315460205078e-05, -0.000186920166015625, 0.0, -5.650520324707031e-05, -1.1563301086425781e-05, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 3, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -4.588653122610367, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -2.055250883102417, -1.9073486328125e-06, -0.43303966522216797, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.0007076263427734375, 0.0, -1.0967253729177173e-05, 0.0, -1.9073486328125e-06, -0.0001163482666015625, -1.71661376953125e-05, -8.344645721081179e-07, -2.264974000354414e-06, -9.179016342386603e-05, -7.987022399902344e-06, -0.00019502639770507812, -7.152555099310121e-07, -0.0002079010009765625, -0.0024261474609375, -9.751319157658145e-05, 0.0, -6.103515625e-05, -1.5480756759643555, -0.2847785949707031, -0.0043337345123291016, -0.034667372703552246, -3.1709467293694615e-05, -0.0004520416259765625, -9.5367431640625e-06, -0.00770056014880538, -0.0010815694695338607, -8.976459503173828e-05, -0.01567840576171875, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00037455366691574454, -0.004137187264859676, -0.1773691177368164, 0.0, -0.0060024261474609375, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -8.20159912109375e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.001377105712890625, -0.0028440807946026325, -1.1682510375976562e-05, -1.1444091796875e-05, -5.340576171875e-05, -0.0006206711987033486, -0.0006710730958729982, -2.110004425048828e-05, -1.71661376953125e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.0007668733596801758, -8.594989776611328e-05, -9.918212890625e-05, 0.0, -5.412101745605469e-05, -9.655952453613281e-06, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "MinionHasMana"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Minion", "Summoned", "<EOS>", 21, 110, "Minion", "Has", "Mana", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.279986767324708, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.6880693435668945, 0.0, -5.1975250244140625e-05, 0.0, -4.76837158203125e-05, 0.0, -7.998934597708285e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.288818359375e-05, -3.576278118089249e-07, -1.7881377516459906e-06, -4.935242759529501e-05, -1.0013580322265625e-05, -0.00015687942504882812, -9.536738616588991e-07, -0.00023651123046875, -0.00237274169921875, -9.405612217960879e-05, 0.0, -6.103515625e-05, -1.7295160293579102, -1.3919658660888672, -0.3489971160888672, -0.00791478157043457, -2.8490840122685768e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.6175721883773804, -0.04006151109933853, -0.18860255181789398, -0.09864766150712967, -1.52587890625e-05, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0016582009848207235, -2.86102294921875e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, -0.0012264251708984375, -0.01829420030117035, -7.748603820800781e-06, -1.33514404296875e-05, -2.288818359375e-05, -0.00023625939502380788, -0.00044933700701221824, -1.1563301086425781e-05, -1.71661376953125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -0.0012798309326171875, -9.930133819580078e-05, -6.4849853515625e-05, 0.0, -5.424022674560547e-05, -9.655952453613281e-06, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(MinionHasMana()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.313098316148341, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -2.055250883102417, -1.9073486328125e-06, -1.0612211227416992, -1.9073486328125e-06, -7.092952728271484e-05, 0.0, -0.000232696533203125, 0.0, -1.2874602361989673e-05, 0.0, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-05, -5.960462772236497e-07, -1.6689286894688848e-06, -8.737953612580895e-05, -9.894371032714844e-06, -0.00017213821411132812, -8.344646857949556e-07, -0.000225067138671875, -0.0023479461669921875, -9.405612217960879e-05, 0.0, -6.103515625e-05, -1.6445894241333008, -0.28891849517822266, -0.0026615187525749207, -0.03357219696044922, -2.992132431245409e-05, -0.00046539306640625, -9.5367431640625e-06, -0.007533070631325245, -0.001083596027456224, -8.976459503173828e-05, -0.015218734741210938, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00036990479566156864, -0.0040709408931434155, -0.17709732055664062, 0.0, -0.0059223175048828125, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -8.20159912109375e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00138092041015625, -0.0028250073082745075, -1.1682510375976562e-05, -1.1444091796875e-05, -5.340576171875e-05, -0.000618883641436696, -0.0006673799362033606, -2.110004425048828e-05, -1.71661376953125e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.0007668733014725149, -8.594989776611328e-05, -9.918212890625e-05, 0.0, -5.412101745605469e-05, -9.655952453613281e-06, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "MinionHasMana"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Minion", "Summoned", "<EOS>", 21, 110, "Minion", "Has", "Mana", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.382286688097103, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.7210798263549805, -1.9073486328125e-06, -7.891654968261719e-05, 0.0, -7.2479248046875e-05, 0.0, -5.4955420637270436e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.09808349609375e-05, -4.768370445162873e-07, -1.9073468138230965e-06, -4.863718640990555e-05, -1.0013580322265625e-05, -0.00016641616821289062, -8.344646857949556e-07, -0.000213623046875, -0.002368927001953125, -9.572505223331973e-05, 0.0, -6.103515625e-05, -1.7043170928955078, -1.3730335235595703, -0.46255552768707275, -0.007827401161193848, -3.1351846700999886e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.617595911026001, -0.039598509669303894, -0.18851348757743835, -0.09888608008623123, -1.52587890625e-05, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0016854999121278524, -2.86102294921875e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, -0.0012264251708984375, -0.01848982274532318, -7.748603820800781e-06, -1.33514404296875e-05, -2.288818359375e-05, -0.000236497784499079, -0.0004504094540607184, -1.1563301086425781e-05, -1.71661376953125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -0.00128173828125, -9.930133819580078e-05, -6.4849853515625e-05, 0.0, -5.424022674560547e-05, -9.655952453613281e-06, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(MinionHasMana()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}, "keywords": [{"arg": "player", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Spell", "Cast", "<EOS>", 176, 53, 159, "player", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.406749600281664, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.6880693435668945, 0.0, -5.1975250244140625e-05, 0.0, -4.76837158203125e-05, 0.0, -7.998934597708285e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.288818359375e-05, -3.576278118089249e-07, -1.7881377516459906e-06, -4.935242759529501e-05, -1.0013580322265625e-05, -0.00015687942504882812, -9.536738616588991e-07, -0.00023651123046875, -0.00237274169921875, -9.405612217960879e-05, 0.0, -6.103515625e-05, -0.20324039459228516, -0.0021295547485351562, -0.0001049041748046875, -1.1444091796875e-05, -0.03611181303858757, -0.0019840002059936523, 0.0, -0.9100122451782227, -3.24249267578125e-05, -7.62939453125e-06, -0.0008031129837036133, -1.1920928244535389e-07, -5.53131103515625e-05, -1.9073486328125e-06, -3.398914098739624, -0.002566099166870117, -0.00035858154296875, -4.57763671875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.548664093017578e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.014079093933105469, -0.0011820789659395814, -2.0265579223632812e-06, -1.33514404296875e-05, -3.4332275390625e-05, -0.00013851834228262305, -0.0003238581120967865, -9.5367431640625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.0009593963623046875, -7.259845733642578e-05, -0.0002002716064453125, 0.0, -5.459785461425781e-05, -1.1563301086425781e-05, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}, "keywords": [{"arg": "player", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Spell", "Cast", "<EOS>", 176, 53, 159, "player", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.433115957081775, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.7210798263549805, -1.9073486328125e-06, -7.891654968261719e-05, 0.0, -7.2479248046875e-05, 0.0, -5.4955420637270436e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.09808349609375e-05, -4.768370445162873e-07, -1.9073468138230965e-06, -4.863718640990555e-05, -1.0013580322265625e-05, -0.00016641616821289062, -8.344646857949556e-07, -0.000213623046875, -0.002368927001953125, -9.572505223331973e-05, 0.0, -6.103515625e-05, -0.20901870727539062, -0.0022230148315429688, -0.0001010894775390625, -1.1444091796875e-05, -0.03788457810878754, -0.0019916296005249023, 0.0, -0.8839855194091797, -3.24249267578125e-05, -7.62939453125e-06, -0.0008069276809692383, -1.1920928244535389e-07, -5.53131103515625e-05, -1.9073486328125e-06, -3.4107301235198975, -0.0025833845138549805, -0.00035858154296875, -4.38690185546875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.548664093017578e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.013967514038085938, -0.0011820789659395814, -2.0265579223632812e-06, -1.33514404296875e-05, -3.4332275390625e-05, -0.00013851834228262305, -0.0003238581120967865, -9.5367431640625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.0009593963623046875, -7.259845733642578e-05, -0.0002002716064453125, 0.0, -5.459785461425781e-05, -1.1563301086425781e-05, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.586512588007224, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.6880693435668945, 0.0, -5.1975250244140625e-05, 0.0, -4.76837158203125e-05, 0.0, -7.998934597708285e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.288818359375e-05, -3.576278118089249e-07, -1.7881377516459906e-06, -4.935242759529501e-05, -1.0013580322265625e-05, -0.00015687942504882812, -9.536738616588991e-07, -0.00023651123046875, -0.00237274169921875, -9.405612217960879e-05, 0.0, -6.103515625e-05, -1.7295160293579102, -0.2940340042114258, -0.0010218173265457153, -0.029967663809657097, -2.7060319553129375e-05, -0.0005130767822265625, -9.5367431640625e-06, -0.007092831190675497, -0.001092179911211133, -8.594989776611328e-05, -0.0146331787109375, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0003714548365678638, -0.004031285643577576, -2.660088539123535, 0.0, -0.0043468475341796875, -5.91278076171875e-05, -3.24249267578125e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0019893646240234375, -0.002054204000160098, -1.1682510375976562e-05, -1.1444091796875e-05, -4.76837158203125e-05, -0.0005608387291431427, -0.0005638459697365761, -1.919269561767578e-05, -1.71661376953125e-05, -2.6702880859375e-05, -9.5367431640625e-06, -0.0008029937744140625, -8.213520050048828e-05, -0.0001010894775390625, 0.0, -5.614757537841797e-05, -9.655952453613281e-06, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.MECH)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template13", "hole0": "MinionSummoned", "hole1": {"_type": "Name", "id": "IsType"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Summoned", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -5.605518854856882, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.7210798263549805, -1.9073486328125e-06, -7.891654968261719e-05, 0.0, -7.2479248046875e-05, 0.0, -5.4955420637270436e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.09808349609375e-05, -4.768370445162873e-07, -1.9073468138230965e-06, -4.863718640990555e-05, -1.0013580322265625e-05, -0.00016641616821289062, -8.344646857949556e-07, -0.000213623046875, -0.002368927001953125, -9.572505223331973e-05, 0.0, -6.103515625e-05, -1.7043170928955078, -0.30052852630615234, -0.001381121575832367, -0.030782220885157585, -2.7179527023690753e-05, -0.00049591064453125, -9.5367431640625e-06, -0.007134912069886923, -0.001086219446733594, -8.594989776611328e-05, -0.014923095703125, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00037348130717873573, -0.0040583559311926365, -2.6631956100463867, 0.0, -0.004421234130859375, -6.103515625e-05, -3.24249267578125e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0019588470458984375, -0.002069462789222598, -1.1682510375976562e-05, -1.1444091796875e-05, -4.9591064453125e-05, -0.000564295391086489, -0.0005680160829797387, -1.919269561767578e-05, -1.71661376953125e-05, -2.6702880859375e-05, -9.5367431640625e-06, -0.0008029937744140625, -8.213520050048828e-05, -0.0001010894775390625, 0.0, -5.614757537841797e-05, -9.655952453613281e-06, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.MECH)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mana Wyrm", "hole1": 1, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}, "keywords": [{"arg": "player", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}, "_type": "Template9", "hole0": 1, "hole1": 3, "hole2": "effects"}], "hole0": "ManaWyrm", "hole4": "player"}, "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Spell", "Cast", "<EOS>", 176, 53, 159, "player", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -6.617425721602487, "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.6880693435668945, 0.0, -5.1975250244140625e-05, 0.0, -4.76837158203125e-05, 0.0, -7.998934597708285e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.288818359375e-05, -3.576278118089249e-07, -1.7881377516459906e-06, -4.935242759529501e-05, -1.0013580322265625e-05, -0.00015687942504882812, -9.536738616588991e-07, -0.00023651123046875, -0.00237274169921875, -9.405612217960879e-05, 0.0, -6.103515625e-05, -0.20324039459228516, -0.0021295547485351562, -0.0001049041748046875, -1.1444091796875e-05, -0.03611181303858757, -0.0019840002059936523, 0.0, -0.9100122451782227, -3.24249267578125e-05, -7.62939453125e-06, -0.0008031129837036133, -1.1920928244535389e-07, -5.53131103515625e-05, -1.9073486328125e-06, -0.03517316281795502, -0.0009062290191650391, -0.0001678466796875, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.924701690673828e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.8724231719970703, -0.01742398366332054, -1.1920928244535389e-07, -5.7220458984375e-06, -5.7220458984375e-06, -0.45135393738746643, -0.20991282165050507, -0.00013076452887617052, -4.00543212890625e-05, 0.0, -0.04215630143880844, -5.006789251638111e-06, 0.0], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ManaChange()), SelfSelector()))])\n"}], "gold_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "player"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.03077433819458264, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -0.010952591896057129, 0.0, 0.0, -4.00543212890625e-05, -0.0003414154052734375, -2.264975591970142e-06, -2.3841855067985307e-07, -0.0006326432339847088, 0.0, -0.0008126497268676758, 0.0, -2.288818359375e-05, -4.9591064453125e-05, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mogu'shan Warden"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "p"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Mogu'shan", " ", "Warden", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.620841723659673, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -4.0920867919921875, -0.4984149932861328, -1.71661376953125e-05, -1.9073486328125e-06, -4.5299530029296875e-06, 0.0, -2.5510787963867188e-05, 0.0, -0.00041961669921875, -2.47955322265625e-05, -7.62939453125e-06, -1.4305104514278355e-06, -0.00017189979553222656, -8.821474693831988e-06, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -1.2636161045520566e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.537799835205078e-05, -0.000507354736328125, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.72989236691501e-05, 0.0, -8.976459503173828e-05, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -2.5033950805664062e-05, -3.814697265625e-06, -0.0001544952392578125, 0.0, -0.006783127784729004, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005016326904296875, -0.0006427764892578125, -2.145737198588904e-05, -9.536738616588991e-07, -0.019383547827601433, -2.3841855067985307e-07, -0.0010228157043457031, 0.0, -3.24249267578125e-05, -6.29425048828125e-05, -3.0517578125e-05, 0.0], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, p):\n        return Minion(1, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "p"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.767272098188151, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -4.747313976287842, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -0.0003070831298828125, -2.1457663024193607e-06, -4.768370445162873e-07, -0.0006295439670793712, 0.0, -0.0009672641754150391, 0.0, -2.47955322265625e-05, -3.814697265625e-05, -2.288818359375e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MURLOC"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Mogu'shan Warden"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "player"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mogu'shan", " ", "Warden", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.394106610634971, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -4.0920867919921875, -0.9380741119384766, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.629387255292386e-06, 0.0, -0.004528045654296875, -5.7220458984375e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -0.00010120868682861328, -8.10622896096902e-06, -2.5153160095214844e-05, -1.9073486328125e-06, 0.0, -2.264974000354414e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -1.239776611328125e-05, -0.0008258819580078125, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.932545066869352e-05, 0.0, -0.0005724430084228516, 0.0, -5.7220458984375e-06, -0.00244140625, -3.814697265625e-06, -0.9919720888137817, -4.291534423828125e-06, -3.814697265625e-06, 0.0, -0.3609907627105713, 0.0, -3.814697265625e-06, -0.0001087188720703125, -0.0003871917724609375, -2.5033809833985288e-06, -4.768370445162873e-07, -0.0008121727732941508, -1.1920928244535389e-07, -0.0007116794586181641, 0.0, -1.9073486328125e-05, -6.29425048828125e-05, -9.5367431640625e-06, 0.0], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "_"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.955787522858557, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -6.935352325439453, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001354217529296875, -0.0002117156982421875, -2.1457667571667116e-06, -8.344646857949556e-07, -0.0007150169694796205, -1.1920928244535389e-07, -0.0013889074325561523, 0.0, -2.288818359375e-05, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(1, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 1, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "player"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.571872575697903, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -0.010952591896057129, 0.0, 0.0, -4.00543212890625e-05, -0.0003414154052734375, -2.264975591970142e-06, -2.3841855067985307e-07, -7.541078567504883, 0.0, -0.0014554262161254883, 0.0, -2.288818359375e-05, -6.103515625e-05, -1.71661376953125e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "divine_shield"}], "hole0": "Mogu'shanWarden", "hole4": "player"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.994650943228457, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -0.010952591896057129, 0.0, 0.0, -4.00543212890625e-05, -0.0003414154052734375, -2.264975591970142e-06, -2.3841855067985307e-07, -0.0006326432339847088, 0.0, -7.964693069458008, 0.0, -3.62396240234375e-05, -3.24249267578125e-05, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "player"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.147441370202891, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -8.116227149963379, -1.9073486328125e-06, -7.486343383789062e-05, 0.0, -1.52587890625e-05, 0.0, -0.01192784309387207, 0.0, 0.0, -4.1961669921875e-05, -0.0002994537353515625, -2.384184199399897e-06, -2.3841855067985307e-07, -0.0006749622989445925, 0.0, -0.0008012056350708008, 0.0, -2.288818359375e-05, -5.340576171875e-05, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ROGUE"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "player"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.579913122486282, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -8.551324844360352, 0.0, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00935673713684082, 0.0, 0.0, -4.57763671875e-05, -0.000263214111328125, -2.3841844267735723e-06, -2.3841855067985307e-07, -0.0006659025093540549, 0.0, -0.0007706880569458008, 0.0, -2.288818359375e-05, -5.340576171875e-05, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "MinionCard"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "Minion", "Card", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.595517738106558, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -7.980569362640381, -0.5952539443969727, 0.0, -1.9073486328125e-06, -9.918212890625e-05, -0.000179290771484375, -3.933906555175781e-06, -3.576278118089249e-07, -0.0005836485070176423, 0.0, -0.0008450746536254883, 0.0, -2.288818359375e-05, -3.0517578125e-05, -2.6702880859375e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, MinionCard):\n        return Minion(1, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "create_minion"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "create_minion", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.62532387489997, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -8.60564136505127, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -0.000141143798828125, -2.1457667571667116e-06, -4.768370445162873e-07, -0.0005484814755618572, 0.0, -0.0009748935699462891, 0.0, -2.288818359375e-05, -3.814697265625e-05, -2.09808349609375e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, create_minion):\n        return Minion(1, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shan<UNK>", "hole4": "player"}, "choice_history": [54, 122, "Mogu'shan", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.713590977227845, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -8.682988166809082, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -0.010952591896057129, 0.0, 0.0, -4.00543212890625e-05, -0.0003414154052734375, -2.264975591970142e-06, -2.3841855067985307e-07, -0.0006326432339847088, 0.0, -0.0008126497268676758, 0.0, -2.288818359375e-05, -4.9591064453125e-05, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shan<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "charge"}], "hole0": "Mogu'shanWarden", "hole4": "player"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.73657236809418, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -0.010952591896057129, 0.0, 0.0, -4.00543212890625e-05, -0.0003414154052734375, -2.264975591970142e-06, -2.3841855067985307e-07, -0.0006326432339847088, 0.0, -8.706603050231934, -3.814697265625e-06, -1.33514404296875e-05, -6.4849853515625e-05, -1.71661376953125e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "spell_targetable"}], "hole0": "Mogu'shanWarden", "hole4": "player"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.954753024527285, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -0.010952591896057129, 0.0, 0.0, -4.00543212890625e-05, -0.0003414154052734375, -2.264975591970142e-06, -2.3841855067985307e-07, -0.0006326432339847088, 0.0, -8.924768447875977, 0.0, -1.9073486328125e-05, -4.1961669921875e-05, -5.53131103515625e-05, 0.0], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, spell_targetable=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Mogu'shan Warden", "hole1": 4, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 1, "hole1": 7, "hole2": "taunt"}], "hole0": "Mogu'shanWarden", "hole4": "Minion"}, "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "Minion", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.998200042313691, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -7.980569362640381, -0.997462272644043, 0.0, -9.918212890625e-05, -0.0002155303955078125, -2.1457667571667116e-06, -5.960462772236497e-07, -0.0007596012437716126, 0.0, -0.001112222671508789, 0.0, -2.288818359375e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, Minion):\n        return Minion(1, 7, taunt=True)\n"}], "gold_code": "class MogushanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n"}
{"beams": [{"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -2.265086135252467, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -0.30121898651123047, -9.72747802734375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003532170958351344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00115966796875, 0.0, -0.00011169910430908203, -1.1920928244535389e-07, -0.0019850730895996094, 0.0, -0.000156402587890625, -0.0009593963623046875, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.26348674297332764, -7.62939453125e-06, -0.0003490447998046875, -0.0022869110107421875, -8.96453857421875e-05, -0.0068305726163089275, -2.264974000354414e-06, -2.288818359375e-05, -1.52587890625e-05, -0.0011081695556640625, -4.00543212890625e-05, -9.179115295410156e-05, 0.0, -2.86102294921875e-05, -0.0002371072769165039, -5.960462772236497e-07, -5.7220458984375e-05, -0.0003024339384865016, 0.0, -0.01824474334716797, -0.04000091552734375, -0.0001125335693359375, -0.4402751922607422, -0.0001678466796875, -0.0001373291015625, -0.001544952392578125, -0.00020599365234375, -6.29425048828125e-05, -0.000240325927734375, -3.814697265625e-06, -0.00034999847412109375, -2.264975046273321e-05, -0.0035216808319091797, 0.0, -2.288818359375e-05, 0.0, -0.0004559755325317383, 0.0, -0.02741527557373047, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003638267226051539, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.001728057861328125, 0.0, -8.404254913330078e-05, -1.1920928244535389e-07, -0.0024720430374145508, 0.0, -0.000293731689453125, -0.0009555816650390625, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.22792863845825195, -7.62939453125e-06], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -3.6356325958604785, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -0.30121898651123047, -9.72747802734375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003532170958351344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00115966796875, 0.0, -0.00011169910430908203, -1.1920928244535389e-07, -0.0019850730895996094, 0.0, -0.000156402587890625, -0.0009593963623046875, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -1.7009657621383667, -5.7220458984375e-06, -0.0016536712646484375, -0.0017910003662109375, -5.14984130859375e-05, -0.010501265525817871, -5.245195097813848e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.00115966796875, -4.1961669921875e-05, -7.271766662597656e-05, 0.0, -3.24249267578125e-05, -0.0002682209014892578, -5.960462772236497e-07, -6.29425048828125e-05, -0.0003004073805641383, 0.0, -0.010934829711914062, -0.025848388671875, -0.0001239776611328125, -0.3903236389160156, -0.0001659393310546875, -0.0001392364501953125, -0.0014705657958984375, -0.0002079010009765625, -6.103515625e-05, -0.0002269744873046875, -5.7220458984375e-06, -0.00035178661346435547, -2.229212441307027e-05, -0.003274679183959961, 0.0, -2.288818359375e-05, 0.0, -0.00045311450958251953, 0.0, -0.027784347534179688, -3.24249267578125e-05, -3.24249267578125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003619193739723414, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.001750946044921875, 0.0, -8.213520050048828e-05, -1.1920928244535389e-07, -0.0024777650833129883, 0.0, -0.000293731689453125, -0.0009593963623046875, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.22781610488891602, -7.62939453125e-06], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 10\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>"], "score": -3.6486291311960386, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -0.30121898651123047, -9.72747802734375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003532170958351344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00115966796875, 0.0, -0.00011169910430908203, -1.1920928244535389e-07, -0.0019850730895996094, 0.0, -0.000156402587890625, -0.0009593963623046875, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.26348674297332764, -7.62939453125e-06, -0.0003490447998046875, -0.0022869110107421875, -8.96453857421875e-05, -0.0068305726163089275, -2.264974000354414e-06, -2.288818359375e-05, -1.52587890625e-05, -0.0011081695556640625, -4.00543212890625e-05, -9.179115295410156e-05, 0.0, -2.86102294921875e-05, -0.0002371072769165039, -5.960462772236497e-07, -5.7220458984375e-05, -0.0003024339384865016, 0.0, -0.01824474334716797, -0.04000091552734375, -0.0001125335693359375, -1.158477783203125, -7.05718994140625e-05, -0.0004291534423828125, -4.1961669921875e-05, -0.08663463592529297, -3.814697265625e-06, -0.031263213604688644, -2.0265579223632812e-06, -2.09808349609375e-05, -0.001667022705078125, 0.0, -0.006243705749511719, 0.0, -0.00020933151245117188, -1.1920928244535389e-07, -0.06303524971008301, 0.0, -5.7220458984375e-06, -0.00266265869140625, 0.0, -7.62939453125e-05, 0.0, -0.7411195039749146, -2.288818359375e-05], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n    def use(self, player, game):\n        return len(player.minions) < 10\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -3.6980171822290586, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -0.30121898651123047, -9.72747802734375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003532170958351344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00115966796875, 0.0, -0.00011169910430908203, -1.1920928244535389e-07, -0.0019850730895996094, 0.0, -0.000156402587890625, -0.0009593963623046875, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.26348674297332764, -7.62939453125e-06, -0.0003490447998046875, -0.0022869110107421875, -8.96453857421875e-05, -0.0068305726163089275, -2.264974000354414e-06, -2.288818359375e-05, -1.52587890625e-05, -0.0011081695556640625, -4.00543212890625e-05, -9.179115295410156e-05, 0.0, -2.86102294921875e-05, -0.0002371072769165039, -5.960462772236497e-07, -5.7220458984375e-05, -0.0003024339384865016, 0.0, -0.01824474334716797, -0.04000091552734375, -0.0001125335693359375, -1.158477783203125, -7.05718994140625e-05, -0.0004291534423828125, -4.1961669921875e-05, -0.08663463592529297, -3.814697265625e-06, -0.031263213604688644, -2.0265579223632812e-06, -2.09808349609375e-05, -0.001667022705078125, 0.0, -0.006243705749511719, 0.0, -0.00020933151245117188, -1.1920928244535389e-07, -0.06303524971008301, 0.0, -5.7220458984375e-06, -0.00266265869140625, 0.0, -7.62939453125e-05, 0.0, -0.7905112504959106, -1.919269561767578e-05], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n    def use(self, player, game):\n        return len(player.minions) < 7\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>"], "score": -3.8599757760605726, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -0.30121898651123047, -9.72747802734375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003532170958351344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00115966796875, 0.0, -0.00011169910430908203, -1.1920928244535389e-07, -0.0019850730895996094, 0.0, -0.000156402587890625, -0.0009593963623046875, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.26348674297332764, -7.62939453125e-06, -0.0003490447998046875, -0.0022869110107421875, -8.96453857421875e-05, -0.0068305726163089275, -2.264974000354414e-06, -2.288818359375e-05, -1.52587890625e-05, -0.0011081695556640625, -4.00543212890625e-05, -9.179115295410156e-05, 0.0, -2.86102294921875e-05, -0.0002371072769165039, -5.960462772236497e-07, -5.7220458984375e-05, -0.0003024339384865016, 0.0, -0.01824474334716797, -0.04000091552734375, -0.0001125335693359375, -0.4402751922607422, -0.0001678466796875, -0.0001373291015625, -0.001544952392578125, -0.00020599365234375, -6.29425048828125e-05, -0.000240325927734375, -3.814697265625e-06, -0.00034999847412109375, -2.264975046273321e-05, -0.0035216808319091797, 0.0, -2.288818359375e-05, 0.0, -0.0004559755325317383, 0.0, -0.02741527557373047, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003638267226051539, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.001728057861328125, 0.0, -8.404254913330078e-05, -1.1920928244535389e-07, -0.0024720430374145508, 0.0, -0.000293731689453125, -0.0009555816650390625, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -1.8228201866149902, -5.7220458984375e-06], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 10\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "BoolOp", "op": {"_type": "Or"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hand"}]}, "ops": [{"_type": "Lt"}]}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 34, 83, 3, 170, 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "hand", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -4.612352654933595, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -1.3700637817382812, -0.0025033950805664062, -0.005950927734375, -0.00052642822265625, -0.006876945495605469, -0.013249397277832031, -0.0002841949462890625, -0.008203506469726562, -1.1444091796875e-05, -3.814697265625e-06, -0.0018310529412701726, -1.1920928244535389e-07, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.0002918243408203125, 0.0, -0.0005494356155395508, -2.3841855067985307e-07, -0.03533613681793213, -1.9073486328125e-06, -1.1444091796875e-05, -0.001399993896484375, 0.0, -8.0108642578125e-05, 0.0, -0.7163159847259521, -5.841255187988281e-06, -0.015443801879882812, -8.7738037109375e-05, -3.0517578125e-05, -9.72747802734375e-05, -0.0003414154052734375, -9.5367431640625e-06, -0.05940556526184082, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.031411170959472656, 0.0, -0.005349278450012207, -1.1920928244535389e-07, -0.5206900835037231, -4.0531158447265625e-06, -0.0001049041748046875, -0.019346237182617188, 0.0, -7.2479248046875e-05, 0.0, -0.16991207003593445, -1.71661376953125e-05, -0.00148773193359375, -0.001934051513671875, -6.4849853515625e-05, -0.03146493062376976, -2.7417760065873154e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0007839202880859375, -5.91278076171875e-05, -7.474422454833984e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0002617835998535156, -5.960462772236497e-07, -6.67572021484375e-05, -0.0002957582182716578, 0.0, -0.010417938232421875, -0.022924423217773438, -0.000125885009765625, -0.3751087188720703, -0.00016021728515625, -0.0001354217529296875, -0.0014362335205078125, -0.00020599365234375, -6.103515625e-05, -0.0002269744873046875, -5.7220458984375e-06, -0.00034427642822265625, -2.0265566490706988e-05, -0.0034940242767333984, 0.0, -2.6702880859375e-05, 0.0, -0.0005606412887573242, 0.0, -0.025760650634765625, -3.4332275390625e-05, -3.4332275390625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00035989281604997814, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.001781463623046875, 0.0, -8.213520050048828e-05, -1.1920928244535389e-07, -0.0024720430374145508, 0.0, -0.0003032684326171875, -0.0009517669677734375, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.225533127784729, -7.62939453125e-06], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 7 or\n            len(player.hand) < 10)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "BoolOp", "op": {"_type": "Or"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hand"}]}, "ops": [{"_type": "Lt"}]}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 34, 83, 3, 170, 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "hand", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -4.784959216308373, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -1.3700637817382812, -0.0025033950805664062, -0.005950927734375, -0.00052642822265625, -0.006876945495605469, -0.013249397277832031, -0.0002841949462890625, -0.008203506469726562, -1.1444091796875e-05, -3.814697265625e-06, -0.0018310529412701726, -1.1920928244535389e-07, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.0002918243408203125, 0.0, -0.0005494356155395508, -2.3841855067985307e-07, -0.03533613681793213, -1.9073486328125e-06, -1.1444091796875e-05, -0.001399993896484375, 0.0, -8.0108642578125e-05, 0.0, -0.758249044418335, -7.62939453125e-06, -0.021631240844726562, -4.76837158203125e-05, -4.57763671875e-05, -0.000125885009765625, -0.0008754730224609375, -9.5367431640625e-06, -0.014396071434020996, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.013220787048339844, 0.0, -0.0020657777786254883, -1.1920928244535389e-07, -0.7009871006011963, -4.0531158447265625e-06, -9.1552734375e-05, -0.020046234130859375, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.18598896265029907, -1.71661376953125e-05, -0.0014019012451171875, -0.0018405914306640625, -6.4849853515625e-05, -0.03178143501281738, -2.586808113846928e-05, -5.340576171875e-05, -1.33514404296875e-05, -0.000774383544921875, -5.7220458984375e-05, -7.092952728271484e-05, -1.1920928244535389e-07, -3.4332275390625e-05, -0.0002503395080566406, -5.960462772236497e-07, -6.4849853515625e-05, -0.00028991696308366954, 0.0, -0.009796142578125, -0.022058486938476562, -0.000125885009765625, -0.36989402770996094, -0.0001583099365234375, -0.0001354217529296875, -0.001434326171875, -0.00020599365234375, -6.103515625e-05, -0.000225067138671875, -5.7220458984375e-06, -0.00034427642822265625, -2.0265566490706988e-05, -0.0034596920013427734, 0.0, -2.6702880859375e-05, 0.0, -0.0005606412887573242, 0.0, -0.02580738067626953, -3.4332275390625e-05, -3.4332275390625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00035989281604997814, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.0017852783203125, 0.0, -8.213520050048828e-05, -1.1920928244535389e-07, -0.002469182014465332, 0.0, -0.00030517578125, -0.0009517669677734375, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.2255035638809204, -7.62939453125e-06], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 10 or\n            len(player.hand) < 10)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "BoolOp", "op": {"_type": "Or"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 34, 83, 3, 170, 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -5.126171069193333, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -1.3700637817382812, -0.0025033950805664062, -0.005950927734375, -0.00052642822265625, -0.006876945495605469, -0.013249397277832031, -0.0002841949462890625, -0.008203506469726562, -1.1444091796875e-05, -3.814697265625e-06, -0.0018310529412701726, -1.1920928244535389e-07, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.0002918243408203125, 0.0, -0.0005494356155395508, -2.3841855067985307e-07, -0.03533613681793213, -1.9073486328125e-06, -1.1444091796875e-05, -0.001399993896484375, 0.0, -8.0108642578125e-05, 0.0, -0.758249044418335, -7.62939453125e-06, -0.021631240844726562, -4.76837158203125e-05, -4.57763671875e-05, -0.000125885009765625, -0.0008754730224609375, -9.5367431640625e-06, -0.014396071434020996, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.013220787048339844, 0.0, -0.0020657777786254883, -1.1920928244535389e-07, -0.7292778491973877, -1.9073486328125e-06, -2.288818359375e-05, -0.0042209625244140625, 0.0, -4.1961669921875e-05, 0.0, -0.5001440048217773, -1.33514404296875e-05, -0.002513885498046875, -0.0016803741455078125, -5.53131103515625e-05, -0.011259553022682667, -1.156323378381785e-05, -3.814697265625e-05, -1.33514404296875e-05, -0.00150299072265625, -5.53131103515625e-05, -7.843971252441406e-05, 0.0, -3.0517578125e-05, -0.0003399848937988281, -5.960462772236497e-07, -6.866455078125e-05, -0.00035285946796648204, 0.0, -0.011335372924804688, -0.030729293823242188, -0.000125885009765625, -0.3921689987182617, -0.0001621246337890625, -0.0001392364501953125, -0.0014743804931640625, -0.00020599365234375, -6.29425048828125e-05, -0.0002346038818359375, -5.7220458984375e-06, -0.00035190582275390625, -2.0265566490706988e-05, -0.0035016536712646484, 0.0, -2.6702880859375e-05, 0.0, -0.0005395412445068359, 0.0, -0.02596569061279297, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003619193739723414, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.001750946044921875, 0.0, -8.404254913330078e-05, -1.1920928244535389e-07, -0.0024892091751098633, 0.0, -0.0002994537353515625, -0.00095367431640625, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.2262096405029297, -7.62939453125e-06], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 10 or\n            len(player.minions) < 10)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>"], "score": -5.171797341590754, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -0.30121898651123047, -9.72747802734375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003532170958351344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00115966796875, 0.0, -0.00011169910430908203, -1.1920928244535389e-07, -0.0019850730895996094, 0.0, -0.000156402587890625, -0.0009593963623046875, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -1.7009657621383667, -5.7220458984375e-06, -0.0016536712646484375, -0.0017910003662109375, -5.14984130859375e-05, -0.010501265525817871, -5.245195097813848e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.00115966796875, -4.1961669921875e-05, -7.271766662597656e-05, 0.0, -3.24249267578125e-05, -0.0002682209014892578, -5.960462772236497e-07, -6.29425048828125e-05, -0.0003004073805641383, 0.0, -0.010934829711914062, -0.025848388671875, -0.0001239776611328125, -1.2445878982543945, -9.72747802734375e-05, -0.000469207763671875, -3.4332275390625e-05, -0.09506988525390625, -3.814697265625e-06, -0.033804163336753845, -2.0265579223632812e-06, -2.09808349609375e-05, -0.0015802383422851562, 0.0, -0.007050514221191406, 0.0, -0.00020825862884521484, -1.1920928244535389e-07, -0.06417417526245117, 0.0, -5.7220458984375e-06, -0.00262451171875, 0.0, -7.62939453125e-05, 0.0, -0.7447754144668579, -2.288818359375e-05], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 10\n\n    def use(self, player, game):\n        return len(player.minions) < 10\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -5.2121893827971135, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -0.30121898651123047, -9.72747802734375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003532170958351344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00115966796875, 0.0, -0.00011169910430908203, -1.1920928244535389e-07, -0.0019850730895996094, 0.0, -0.000156402587890625, -0.0009593963623046875, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -1.7009657621383667, -5.7220458984375e-06, -0.0016536712646484375, -0.0017910003662109375, -5.14984130859375e-05, -0.010501265525817871, -5.245195097813848e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.00115966796875, -4.1961669921875e-05, -7.271766662597656e-05, 0.0, -3.24249267578125e-05, -0.0002682209014892578, -5.960462772236497e-07, -6.29425048828125e-05, -0.0003004073805641383, 0.0, -0.010934829711914062, -0.025848388671875, -0.0001239776611328125, -1.2445878982543945, -9.72747802734375e-05, -0.000469207763671875, -3.4332275390625e-05, -0.09506988525390625, -3.814697265625e-06, -0.033804163336753845, -2.0265579223632812e-06, -2.09808349609375e-05, -0.0015802383422851562, 0.0, -0.007050514221191406, 0.0, -0.00020825862884521484, -1.1920928244535389e-07, -0.06417417526245117, 0.0, -5.7220458984375e-06, -0.00262451171875, 0.0, -7.62939453125e-05, 0.0, -0.7851711511611938, -1.919269561767578e-05], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 10\n\n    def use(self, player, game):\n        return len(player.minions) < 7\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>"], "score": -5.231381497227666, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -0.30121898651123047, -9.72747802734375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003532170958351344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00115966796875, 0.0, -0.00011169910430908203, -1.1920928244535389e-07, -0.0019850730895996094, 0.0, -0.000156402587890625, -0.0009593963623046875, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -1.7009657621383667, -5.7220458984375e-06, -0.0016536712646484375, -0.0017910003662109375, -5.14984130859375e-05, -0.010501265525817871, -5.245195097813848e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.00115966796875, -4.1961669921875e-05, -7.271766662597656e-05, 0.0, -3.24249267578125e-05, -0.0002682209014892578, -5.960462772236497e-07, -6.29425048828125e-05, -0.0003004073805641383, 0.0, -0.010934829711914062, -0.025848388671875, -0.0001239776611328125, -0.3903236389160156, -0.0001659393310546875, -0.0001392364501953125, -0.0014705657958984375, -0.0002079010009765625, -6.103515625e-05, -0.0002269744873046875, -5.7220458984375e-06, -0.00035178661346435547, -2.229212441307027e-05, -0.003274679183959961, 0.0, -2.288818359375e-05, 0.0, -0.00045311450958251953, 0.0, -0.027784347534179688, -3.24249267578125e-05, -3.24249267578125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003619193739723414, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.001750946044921875, 0.0, -8.213520050048828e-05, -1.1920928244535389e-07, -0.0024777650833129883, 0.0, -0.000293731689453125, -0.0009593963623046875, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -1.8235669136047363, -5.7220458984375e-06], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 10\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 10\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "BoolOp", "op": {"_type": "Or"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 34, 83, 3, 170, 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -5.361285761894578, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -1.3700637817382812, -0.0025033950805664062, -0.005950927734375, -0.00052642822265625, -0.006876945495605469, -0.013249397277832031, -0.0002841949462890625, -0.008203506469726562, -1.1444091796875e-05, -3.814697265625e-06, -0.0018310529412701726, -1.1920928244535389e-07, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.0002918243408203125, 0.0, -0.0005494356155395508, -2.3841855067985307e-07, -0.03533613681793213, -1.9073486328125e-06, -1.1444091796875e-05, -0.001399993896484375, 0.0, -8.0108642578125e-05, 0.0, -0.7163159847259521, -5.841255187988281e-06, -0.015443801879882812, -8.7738037109375e-05, -3.0517578125e-05, -9.72747802734375e-05, -0.0003414154052734375, -9.5367431640625e-06, -0.05940556526184082, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.031411170959472656, 0.0, -0.005349278450012207, -1.1920928244535389e-07, -0.9699784517288208, -1.9073486328125e-06, -2.288818359375e-05, -0.0035276412963867188, 0.0, -4.1961669921875e-05, 0.0, -0.4718766212463379, -1.33514404296875e-05, -0.002758026123046875, -0.0017185211181640625, -6.103515625e-05, -0.01145612820982933, -1.2397689715726301e-05, -4.00543212890625e-05, -1.52587890625e-05, -0.0015239715576171875, -5.7220458984375e-05, -8.034706115722656e-05, 0.0, -3.0517578125e-05, -0.0003629922866821289, -5.960462772236497e-07, -6.866455078125e-05, -0.0003644227690529078, 0.0, -0.012434005737304688, -0.03140830993652344, -0.0001277923583984375, -0.39559459686279297, -0.000164031982421875, -0.0001392364501953125, -0.00147247314453125, -0.00020599365234375, -6.29425048828125e-05, -0.000232696533203125, -5.7220458984375e-06, -0.00034999847412109375, -2.229212441307027e-05, -0.0035598278045654297, 0.0, -2.6702880859375e-05, 0.0, -0.0005452632904052734, 0.0, -0.025785446166992188, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00036180016468279064, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.0017452239990234375, 0.0, -8.404254913330078e-05, -1.1920928244535389e-07, -0.002492070198059082, 0.0, -0.00029754638671875, -0.00095367431640625, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.22612285614013672, -7.62939453125e-06], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 7 or\n            len(player.minions) < 10)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "BoolOp", "op": {"_type": "Or"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hand"}]}, "ops": [{"_type": "Lt"}]}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 34, 83, 3, 170, 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "hand", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -6.204425007742422, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -1.3700637817382812, -0.0025033950805664062, -0.005950927734375, -0.00052642822265625, -0.006876945495605469, -0.013249397277832031, -0.0002841949462890625, -0.008203506469726562, -1.1444091796875e-05, -3.814697265625e-06, -0.0018310529412701726, -1.1920928244535389e-07, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.0002918243408203125, 0.0, -0.0005494356155395508, -2.3841855067985307e-07, -0.03533613681793213, -1.9073486328125e-06, -1.1444091796875e-05, -0.001399993896484375, 0.0, -8.0108642578125e-05, 0.0, -0.7163159847259521, -5.841255187988281e-06, -0.015443801879882812, -8.7738037109375e-05, -3.0517578125e-05, -9.72747802734375e-05, -0.0003414154052734375, -9.5367431640625e-06, -0.05940556526184082, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.031411170959472656, 0.0, -0.005349278450012207, -1.1920928244535389e-07, -0.5206900835037231, -4.0531158447265625e-06, -0.0001049041748046875, -0.019346237182617188, 0.0, -7.2479248046875e-05, 0.0, -0.16991207003593445, -1.71661376953125e-05, -0.00148773193359375, -0.001934051513671875, -6.4849853515625e-05, -0.03146493062376976, -2.7417760065873154e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0007839202880859375, -5.91278076171875e-05, -7.474422454833984e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0002617835998535156, -5.960462772236497e-07, -6.67572021484375e-05, -0.0002957582182716578, 0.0, -0.010417938232421875, -0.022924423217773438, -0.000125885009765625, -1.2680740356445312, -0.0001201629638671875, -0.0004825592041015625, -3.4332275390625e-05, -0.09503746032714844, -3.814697265625e-06, -0.02965925633907318, -2.0265579223632812e-06, -2.09808349609375e-05, -0.0016489028930664062, 0.0, -0.0072460174560546875, 0.0, -0.00021505355834960938, -1.1920928244535389e-07, -0.06450855731964111, 0.0, -5.7220458984375e-06, -0.002574920654296875, 0.0, -7.82012939453125e-05, 0.0, -0.7615662813186646, -1.919269561767578e-05], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 7 or\n            len(player.hand) < 10)\n\n    def use(self, player, game):\n        return len(player.minions) < 7\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "BoolOp", "op": {"_type": "Or"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hand"}]}, "ops": [{"_type": "Lt"}]}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 34, 83, 3, 170, 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "hand", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "10", "<EOS>"], "score": -6.206899673384207, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -1.3700637817382812, -0.0025033950805664062, -0.005950927734375, -0.00052642822265625, -0.006876945495605469, -0.013249397277832031, -0.0002841949462890625, -0.008203506469726562, -1.1444091796875e-05, -3.814697265625e-06, -0.0018310529412701726, -1.1920928244535389e-07, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.0002918243408203125, 0.0, -0.0005494356155395508, -2.3841855067985307e-07, -0.03533613681793213, -1.9073486328125e-06, -1.1444091796875e-05, -0.001399993896484375, 0.0, -8.0108642578125e-05, 0.0, -0.7163159847259521, -5.841255187988281e-06, -0.015443801879882812, -8.7738037109375e-05, -3.0517578125e-05, -9.72747802734375e-05, -0.0003414154052734375, -9.5367431640625e-06, -0.05940556526184082, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.031411170959472656, 0.0, -0.005349278450012207, -1.1920928244535389e-07, -0.5206900835037231, -4.0531158447265625e-06, -0.0001049041748046875, -0.019346237182617188, 0.0, -7.2479248046875e-05, 0.0, -0.16991207003593445, -1.71661376953125e-05, -0.00148773193359375, -0.001934051513671875, -6.4849853515625e-05, -0.03146493062376976, -2.7417760065873154e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0007839202880859375, -5.91278076171875e-05, -7.474422454833984e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0002617835998535156, -5.960462772236497e-07, -6.67572021484375e-05, -0.0002957582182716578, 0.0, -0.010417938232421875, -0.022924423217773438, -0.000125885009765625, -1.2680740356445312, -0.0001201629638671875, -0.0004825592041015625, -3.4332275390625e-05, -0.09503746032714844, -3.814697265625e-06, -0.02965925633907318, -2.0265579223632812e-06, -2.09808349609375e-05, -0.0016489028930664062, 0.0, -0.0072460174560546875, 0.0, -0.00021505355834960938, -1.1920928244535389e-07, -0.06450855731964111, 0.0, -5.7220458984375e-06, -0.002574920654296875, 0.0, -7.82012939453125e-05, 0.0, -0.7640372514724731, -2.288818359375e-05], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 7 or\n            len(player.hand) < 10)\n\n    def use(self, player, game):\n        return len(player.minions) < 10\n"}, {"model_output": {"hole3": "can_use", "_type": "Template0", "hole1": "SpellCard", "hole7": [{"_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "Name", "id": "option"}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Nourish", "hole1": 5, "hole2": "DRUID"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Nourish", "hole4": "player", "hole6": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}, "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 21, 110, "option", "<EOS>"], "score": -6.725503286747241, "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -0.30121898651123047, -9.72747802734375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003532170958351344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00115966796875, 0.0, -0.00011169910430908203, -1.1920928244535389e-07, -0.0019850730895996094, 0.0, -0.000156402587890625, -0.0009593963623046875, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.26348674297332764, -7.62939453125e-06, -0.0003490447998046875, -0.0022869110107421875, -8.96453857421875e-05, -0.0068305726163089275, -2.264974000354414e-06, -2.288818359375e-05, -1.52587890625e-05, -0.0011081695556640625, -4.00543212890625e-05, -9.179115295410156e-05, 0.0, -2.86102294921875e-05, -0.0002371072769165039, -5.960462772236497e-07, -5.7220458984375e-05, -0.0003024339384865016, 0.0, -0.01824474334716797, -0.04000091552734375, -0.0001125335693359375, -4.006148338317871, -0.000213623046875, -1.162487268447876, -1.1563301086425781e-05], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n    def use(self, player, game):\n        return option\n"}], "gold_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n\n        class Gain2(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Gain 2 mana crystals', 0, CHARACTER_CLASS\n                    .DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                if player.max_mana < 8:\n                    player.max_mana += 2\n                    player.mana += 2\n                else:\n                    player.max_mana = 10\n                    player.mana += 2\n\n\n        class Draw3(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Draw three cards', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                player.draw()\n                player.draw()\n                player.draw()\n        option = player.agent.choose_option([Gain2(), Draw3()], player)\n        option.use(player, game)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "IsNot"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -2.960826898847266, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -0.3110300600528717, 0.0, -0.02303314208984375, -0.0021486282348632812, -0.000118255615234375, -0.001316070556640625, -0.0001430511474609375, -0.000438690185546875, -0.0001544952392578125, -0.0224456787109375, -0.014363288879394531, -0.0008802413940429688, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.006348472088575363, -0.0009108781814575195, -0.10028254985809326, -2.741813204920618e-06, -0.003391265869140625, -9.34600830078125e-05, -0.004237174987792969, -1.9073486328125e-06, -0.000858306884765625, -1.52587890625e-05, -0.08925807476043701, -4.2319297790527344e-05, -0.2168828248977661, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8282499313354492, -1.1444091796875e-05, -0.003635406494140625, -1.9073486328125e-05, -0.00118255615234375, -1.9073486328125e-06, -0.001639654627069831, -2.8729025871143676e-05, -0.28042125701904297, -7.867813110351562e-06, -0.0001239776611328125, -0.0007648468017578125, -0.000133514404296875, -0.00017547607421875, -6.29425048828125e-05, -0.03164724260568619, -9.5367431640625e-06, -0.004825592041015625, -2.0265579223632812e-06, -0.00092315673828125, -0.000102996826171875, -0.0012378692626953125, -0.0029858327470719814, -2.0265579223632812e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0031186281703412533, -0.0009345903526991606, -2.3841855067985307e-07, -0.001041412353515625, -0.04979133605957031, -0.00023651123046875, -4.76837158203125e-05, -0.0001239776611328125, -0.00026702880859375, -0.00010631047189235687, -7.152551916078664e-06, -0.11912822723388672, -0.00022125244140625, -0.00020599365234375, -6.103515625e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003161430358886719, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.410743713378906e-05, 0.0, -0.000396728515625, -0.0002460479736328125, -0.019598007202148438, -1.9073486328125e-06, -0.005984306335449219, -5.960462772236497e-07, -0.010707736015319824, 0.0, -0.0003948211669921875, -0.0006809234619140625, -5.7220458984375e-06, -0.09427356719970703, -1.71661376953125e-05, -0.00586700439453125, -3.814697265625e-06, -0.00950157642364502, -0.00018143653869628906, -0.0004558563232421875, -0.0056552886962890625, -0.00029754638671875, -9.5367431640625e-06, -0.0006885528564453125, -1.1920928244535389e-07, -0.0056078433990478516, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type is not MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Eq"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 4, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -3.087140565258345, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -0.3110300600528717, 0.0, -0.02303314208984375, -0.0021486282348632812, -0.000118255615234375, -0.001316070556640625, -0.0001430511474609375, -0.000438690185546875, -0.0001544952392578125, -0.0224456787109375, -0.014363288879394531, -0.0008802413940429688, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.006348472088575363, -0.0009108781814575195, -0.10028254985809326, -2.741813204920618e-06, -0.003391265869140625, -9.34600830078125e-05, -0.004237174987792969, -1.9073486328125e-06, -0.000858306884765625, -1.52587890625e-05, -0.08925807476043701, -4.2319297790527344e-05, -0.2168828248977661, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8180046081542969, -4.38690185546875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0017805099487304688, -1.33514404296875e-05, -0.0013272716896608472, -7.998623186722398e-05, -0.4239072799682617, -6.079673767089844e-06, -0.000125885009765625, -0.000240325927734375, -8.0108642578125e-05, -0.000156402587890625, -7.2479248046875e-05, -0.029770825058221817, -7.62939453125e-06, -0.0068874359130859375, -2.0265579223632812e-06, -0.0011463165283203125, -9.918212890625e-05, -0.0011491775512695312, -0.0028746093157678843, -2.0265579223632812e-06, -9.5367431640625e-06, -3.62396240234375e-05, -0.0029195465613156557, -0.0008193156099878252, -2.3841855067985307e-07, -0.001178741455078125, -0.04754829406738281, -0.0002269744873046875, -4.76837158203125e-05, -0.0001277923583984375, -0.000274658203125, -0.00010844040662050247, -7.152551916078664e-06, -0.11905384063720703, -0.000217437744140625, -0.00020599365234375, -6.103515625e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003180503845214844, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.410743713378906e-05, 0.0, -0.000396728515625, -0.000247955322265625, -0.019201278686523438, -1.9073486328125e-06, -0.005984306335449219, -5.960462772236497e-07, -0.01067054271697998, 0.0, -0.000396728515625, -0.000675201416015625, -5.7220458984375e-06, -0.09381842613220215, -1.52587890625e-05, -0.0058917999267578125, -3.814697265625e-06, -0.009500622749328613, -0.00018143653869628906, -0.0004558563232421875, -0.005684852600097656, -0.00029754638671875, -9.5367431640625e-06, -0.0006885528564453125, -1.1920928244535389e-07, -0.005602121353149414, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type == MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Eq"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 4, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.18764343448904, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -0.3110300600528717, 0.0, -0.02303314208984375, -0.0021486282348632812, -0.000118255615234375, -0.001316070556640625, -0.0001430511474609375, -0.000438690185546875, -0.0001544952392578125, -0.0224456787109375, -0.014363288879394531, -0.0008802413940429688, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.006348472088575363, -0.0009108781814575195, -0.10028254985809326, -2.741813204920618e-06, -0.003391265869140625, -9.34600830078125e-05, -0.004237174987792969, -1.9073486328125e-06, -0.000858306884765625, -1.52587890625e-05, -0.08925807476043701, -4.2319297790527344e-05, -0.2168828248977661, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8180046081542969, -4.38690185546875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0017805099487304688, -1.33514404296875e-05, -0.0013272716896608472, -7.998623186722398e-05, -1.518958568572998, -3.814697265625e-06, -0.000762939453125, -0.0005893707275390625, -0.0003261566162109375, -0.0001068115234375, -3.62396240234375e-05, -0.033696822822093964, -5.7220458984375e-06, -0.007483482360839844, -2.0265579223632812e-06, -0.00287628173828125, -9.918212890625e-05, -0.0013360977172851562, -0.002752418164163828, -2.0265579223632812e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0034335325472056866, -0.0008724788785912097, -2.3841855067985307e-07, -0.0012111663818359375, -0.048187255859375, -0.0002307891845703125, -5.14984130859375e-05, -0.0001277923583984375, -0.000278472900390625, -0.00011010188609361649, -7.152551916078664e-06, -0.11696434020996094, -0.0002193450927734375, -0.000213623046875, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -6.914137884450611e-06, -0.0003542900085449219, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.589557647705078e-05, 0.0, -0.000396728515625, -0.0002536773681640625, -0.018415451049804688, -1.9073486328125e-06, -0.005965232849121094, -5.960462772236497e-07, -0.010568499565124512, 0.0, -0.0003986358642578125, -0.0006771087646484375, -5.7220458984375e-06, -0.09347701072692871, -1.52587890625e-05, -0.0058917999267578125, -3.814697265625e-06, -0.00949394702911377, -0.00018143653869628906, -0.0004558563232421875, -0.005709648132324219, -0.00029754638671875, -9.5367431640625e-06, -0.0006866455078125, -1.1920928244535389e-07, -0.005609750747680664, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type == MINION_TYPE.DEMON:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "IsNot"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.561432348952188, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -1.8465757369995117, -1.9073486328125e-06, -0.000606536865234375, 0.0, -3.814697265625e-06, 0.0, -1.6689286894688848e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.6491612010868266e-05, -2.0265579223632812e-06, -0.39464569091796875, -0.00263214111328125, -0.005528450012207031, -0.012762648053467274, -9.894371032714844e-06, -0.0003566741943359375, -0.0012378692626953125, -0.2942594289779663, 0.0, -0.02279186248779297, -0.002407073974609375, -0.000118255615234375, -0.00131988525390625, -0.0001468658447265625, -0.0004367828369140625, -0.000152587890625, -0.022294998168945312, -0.014967918395996094, -0.000904083251953125, -9.5367431640625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -0.006344538647681475, -0.0009194612503051758, -0.09988105297088623, -2.741813204920618e-06, -0.003398895263671875, -9.5367431640625e-05, -0.004241943359375, -1.9073486328125e-06, -0.0008544921875, -1.52587890625e-05, -0.0893329381942749, -4.2319297790527344e-05, -0.21658432483673096, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8288364410400391, -1.1444091796875e-05, -0.003620147705078125, -1.9073486328125e-05, -0.0011768341064453125, -1.9073486328125e-06, -0.0016460898332297802, -2.8729025871143676e-05, -0.28205013275146484, -7.867813110351562e-06, -0.000125885009765625, -0.000759124755859375, -0.000133514404296875, -0.00017547607421875, -6.29425048828125e-05, -0.03166082501411438, -9.5367431640625e-06, -0.004813194274902344, -2.0265579223632812e-06, -0.00091552734375, -0.000102996826171875, -0.001239776611328125, -0.0029803491197526455, -2.0265579223632812e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0031168449204415083, -0.0009342327248305082, -2.3841855067985307e-07, -0.0010433197021484375, -0.04973602294921875, -0.00023651123046875, -4.76837158203125e-05, -0.0001239776611328125, -0.00026702880859375, -0.00010631047189235687, -7.152551916078664e-06, -0.12590312957763672, -0.00022125244140625, -0.00020599365234375, -6.103515625e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003180503845214844, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.410743713378906e-05, 0.0, -0.00038909912109375, -0.0002460479736328125, -0.019827842712402344, -1.9073486328125e-06, -0.005919456481933594, -5.960462772236497e-07, -0.01081836223602295, 0.0, -0.0003948211669921875, -0.0006771087646484375, -5.7220458984375e-06, -0.0943443775177002, -1.71661376953125e-05, -0.0058803558349609375, -3.814697265625e-06, -0.009496808052062988, -0.00018143653869628906, -0.0004558563232421875, -0.005616188049316406, -0.0002956390380859375, -9.5367431640625e-06, -0.0006847381591796875, -1.1920928244535389e-07, -0.005606889724731445, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type is not MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Eq"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 4, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.687065813458069, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -1.8465757369995117, -1.9073486328125e-06, -0.000606536865234375, 0.0, -3.814697265625e-06, 0.0, -1.6689286894688848e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.6491612010868266e-05, -2.0265579223632812e-06, -0.39464569091796875, -0.00263214111328125, -0.005528450012207031, -0.012762648053467274, -9.894371032714844e-06, -0.0003566741943359375, -0.0012378692626953125, -0.2942594289779663, 0.0, -0.02279186248779297, -0.002407073974609375, -0.000118255615234375, -0.00131988525390625, -0.0001468658447265625, -0.0004367828369140625, -0.000152587890625, -0.022294998168945312, -0.014967918395996094, -0.000904083251953125, -9.5367431640625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -0.006344538647681475, -0.0009194612503051758, -0.09988105297088623, -2.741813204920618e-06, -0.003398895263671875, -9.5367431640625e-05, -0.004241943359375, -1.9073486328125e-06, -0.0008544921875, -1.52587890625e-05, -0.0893329381942749, -4.2319297790527344e-05, -0.21658432483673096, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8175535202026367, -4.38690185546875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.001773834228515625, -1.33514404296875e-05, -0.0013303690357133746, -7.986703712958843e-05, -0.4258232116699219, -6.079673767089844e-06, -0.000125885009765625, -0.0002384185791015625, -8.0108642578125e-05, -0.000156402587890625, -7.2479248046875e-05, -0.029812902212142944, -7.62939453125e-06, -0.0068759918212890625, -2.0265579223632812e-06, -0.001140594482421875, -9.918212890625e-05, -0.0011510848999023438, -0.0028673375491052866, -2.0265579223632812e-06, -9.5367431640625e-06, -3.62396240234375e-05, -0.0029170496854931116, -0.0008191964006982744, -2.3841855067985307e-07, -0.0011806488037109375, -0.0475311279296875, -0.0002269744873046875, -4.76837158203125e-05, -0.0001277923583984375, -0.000274658203125, -0.0001083221286535263, -7.152551916078664e-06, -0.12581920623779297, -0.0002155303955078125, -0.0002079010009765625, -6.103515625e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003199577331542969, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.601478576660156e-05, 0.0, -0.00038909912109375, -0.000247955322265625, -0.01942729949951172, -1.9073486328125e-06, -0.005919456481933594, -5.960462772236497e-07, -0.0107802152633667, 0.0, -0.000396728515625, -0.0006732940673828125, -5.7220458984375e-06, -0.09389019012451172, -1.52587890625e-05, -0.0059070587158203125, -3.814697265625e-06, -0.009494900703430176, -0.00018143653869628906, -0.0004558563232421875, -0.005645751953125, -0.0002956390380859375, -9.5367431640625e-06, -0.0006847381591796875, -1.1920928244535389e-07, -0.0056002140045166016, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type == MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "card"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "IsNot"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "card", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.718772091608365, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -2.0282249450683594, -6.079655122448457e-06, -0.0001544952392578125, -0.0008907318115234375, -0.0004024505615234375, -0.0008373260498046875, -0.0001659393310546875, -0.000675201416015625, -0.00011444091796875, -0.015244483947753906, -0.01694488525390625, -0.00078582763671875, -1.33514404296875e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.006506067235022783, -0.0009042024612426758, -0.11654746532440186, -2.622604142743512e-06, -0.0032291412353515625, -0.000110626220703125, -0.0041370391845703125, -1.9073486328125e-06, -0.00090789794921875, -1.52587890625e-05, -0.0830889642238617, -3.838539123535156e-05, -0.2225552797317505, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8763294219970703, -9.5367431640625e-06, -0.00420379638671875, -1.9073486328125e-05, -0.001209259033203125, -1.9073486328125e-06, -0.0015978246228769422, -2.753696753643453e-05, -0.28522300720214844, -7.867813110351562e-06, -0.000164031982421875, -0.00060272216796875, -0.00011444091796875, -0.000225067138671875, -7.2479248046875e-05, -0.032536718994379044, -9.5367431640625e-06, -0.0054454803466796875, -2.0265579223632812e-06, -0.0008449554443359375, -9.918212890625e-05, -0.0012722015380859375, -0.0030361388344317675, -2.1457672119140625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0030800087843090296, -0.0009188550757244229, -2.3841855067985307e-07, -0.001087188720703125, -0.048397064208984375, -0.0002384185791015625, -4.76837158203125e-05, -0.0001239776611328125, -0.0002651214599609375, -0.0001060711219906807, -7.152551916078664e-06, -0.11980438232421875, -0.00022125244140625, -0.0002079010009765625, -6.103515625e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003237724304199219, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.410743713378906e-05, 0.0, -0.000396728515625, -0.000247955322265625, -0.019385337829589844, -1.9073486328125e-06, -0.00597381591796875, -5.960462772236497e-07, -0.010699152946472168, 0.0, -0.0003948211669921875, -0.0006809234619140625, -5.7220458984375e-06, -0.0942392349243164, -1.71661376953125e-05, -0.0058536529541015625, -3.814697265625e-06, -0.009497761726379395, -0.00018143653869628906, -0.0004558563232421875, -0.005635261535644531, -0.00029754638671875, -9.5367431640625e-06, -0.0006875991821289062, -1.1920928244535389e-07, -0.005612611770629883, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(card):\n            if card.is_minion() and card.minion_type is not MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "IsNot"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.745829946982205, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -0.3110300600528717, 0.0, -0.02303314208984375, -0.0021486282348632812, -0.000118255615234375, -0.001316070556640625, -0.0001430511474609375, -0.000438690185546875, -0.0001544952392578125, -0.0224456787109375, -0.014363288879394531, -0.0008802413940429688, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.006348472088575363, -0.0009108781814575195, -0.10028254985809326, -2.741813204920618e-06, -0.003391265869140625, -9.34600830078125e-05, -0.004237174987792969, -1.9073486328125e-06, -0.000858306884765625, -1.52587890625e-05, -0.08925807476043701, -4.2319297790527344e-05, -0.2168828248977661, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8282499313354492, -1.1444091796875e-05, -0.003635406494140625, -1.9073486328125e-05, -0.00118255615234375, -1.9073486328125e-06, -0.001639654627069831, -2.8729025871143676e-05, -2.047546863555908, -3.814697265625e-06, -0.0004119873046875, -0.0008392333984375, -0.00060272216796875, -0.0001392364501953125, -2.86102294921875e-05, -0.04842391237616539, -7.62939453125e-06, -0.0048465728759765625, -2.0265579223632812e-06, -0.0026950836181640625, -9.918212890625e-05, -0.0014219284057617188, -0.002697703195735812, -2.1457672119140625e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.003584141843020916, -0.0010052782017737627, -3.576278118089249e-07, -0.0010623931884765625, -0.05113410949707031, -0.00023651123046875, -5.14984130859375e-05, -0.000125885009765625, -0.0002765655517578125, -0.00010749837383627892, -7.152551916078664e-06, -0.11730575561523438, -0.00022125244140625, -0.000213623046875, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003561973571777344, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.589557647705078e-05, 0.0, -0.0003948211669921875, -0.00025177001953125, -0.018621444702148438, -1.9073486328125e-06, -0.005967140197753906, -5.960462772236497e-07, -0.010570406913757324, 0.0, -0.000396728515625, -0.00067901611328125, -5.7220458984375e-06, -0.09389400482177734, -1.71661376953125e-05, -0.00586700439453125, -3.814697265625e-06, -0.009494900703430176, -0.00018143653869628906, -0.0004558563232421875, -0.00568389892578125, -0.00029754638671875, -9.5367431640625e-06, -0.0006866455078125, -1.1920928244535389e-07, -0.005613565444946289, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type is not MINION_TYPE.DEMON:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "card"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Eq"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "card", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 4, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.752307166487547, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -2.0282249450683594, -6.079655122448457e-06, -0.0001544952392578125, -0.0008907318115234375, -0.0004024505615234375, -0.0008373260498046875, -0.0001659393310546875, -0.000675201416015625, -0.00011444091796875, -0.015244483947753906, -0.01694488525390625, -0.00078582763671875, -1.33514404296875e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.006506067235022783, -0.0009042024612426758, -0.11654746532440186, -2.622604142743512e-06, -0.0032291412353515625, -0.000110626220703125, -0.0041370391845703125, -1.9073486328125e-06, -0.00090789794921875, -1.52587890625e-05, -0.0830889642238617, -3.838539123535156e-05, -0.2225552797317505, -5.9604644775390625e-06, -1.9073486328125e-06, -0.7718505859375, -4.1961669921875e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.00176239013671875, -1.33514404296875e-05, -0.0013234466314315796, -7.784063927829266e-05, -0.42925167083740234, -6.079673767089844e-06, -0.0001697540283203125, -0.000202178955078125, -7.05718994140625e-05, -0.0001926422119140625, -8.392333984375e-05, -0.03103567846119404, -7.62939453125e-06, -0.0077304840087890625, -2.0265579223632812e-06, -0.0010280609130859375, -9.72747802734375e-05, -0.00118255615234375, -0.0029000004287809134, -2.0265579223632812e-06, -9.5367431640625e-06, -3.62396240234375e-05, -0.0028758093249052763, -0.0008052490302361548, -2.3841855067985307e-07, -0.0012264251708984375, -0.04697608947753906, -0.0002288818359375, -4.76837158203125e-05, -0.0001277923583984375, -0.000274658203125, -0.00010832026600837708, -7.152551916078664e-06, -0.11968040466308594, -0.000217437744140625, -0.0002079010009765625, -6.103515625e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003256797790527344, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.398822784423828e-05, 0.0, -0.000396728515625, -0.000247955322265625, -0.01897430419921875, -1.9073486328125e-06, -0.0059757232666015625, -5.960462772236497e-07, -0.010657191276550293, 0.0, -0.000396728515625, -0.0006771087646484375, -5.7220458984375e-06, -0.09385466575622559, -1.52587890625e-05, -0.005878448486328125, -3.814697265625e-06, -0.009496808052062988, -0.00018143653869628906, -0.0004558563232421875, -0.005664825439453125, -0.00029754638671875, -9.5367431640625e-06, -0.0006875991821289062, -1.1920928244535389e-07, -0.005606889724731445, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(card):\n            if card.is_minion() and card.minion_type == MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}, "ops": [{"_type": "IsNot"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.90183194352587, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -0.3110300600528717, 0.0, -0.02303314208984375, -0.0021486282348632812, -0.000118255615234375, -0.001316070556640625, -0.0001430511474609375, -0.000438690185546875, -0.0001544952392578125, -0.0224456787109375, -0.014363288879394531, -0.0008802413940429688, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.006348472088575363, -0.0009108781814575195, -0.10028254985809326, -2.741813204920618e-06, -0.003391265869140625, -9.34600830078125e-05, -0.004237174987792969, -1.9073486328125e-06, -0.000858306884765625, -1.52587890625e-05, -0.08925807476043701, -4.2319297790527344e-05, -2.25606632232666, -1.752373282215558e-05, -1.9073486328125e-06, -0.5885629653930664, -3.0517578125e-05, -0.00177764892578125, -3.24249267578125e-05, -0.001789093017578125, -3.814697265625e-06, -0.002396363765001297, -2.276871418871451e-05, -0.42493152618408203, -7.867813110351562e-06, -0.00012969970703125, -0.0010204315185546875, -0.0001430511474609375, -0.0001430511474609375, -6.29425048828125e-05, -0.02953428030014038, -9.5367431640625e-06, -0.0050640106201171875, -2.0265579223632812e-06, -0.00077056884765625, -0.0001010894775390625, -0.0012083053588867188, -0.003092524828389287, -2.0265579223632812e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0030098564457148314, -0.0008830935112200677, -2.3841855067985307e-07, -0.001110076904296875, -0.04820823669433594, -0.0002346038818359375, -4.76837158203125e-05, -0.0001239776611328125, -0.0002613067626953125, -0.00010690093040466309, -7.033342626527883e-06, -0.12004947662353516, -0.0002193450927734375, -0.00020599365234375, -6.103515625e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003237724304199219, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.410743713378906e-05, 0.0, -0.0003948211669921875, -0.0002460479736328125, -0.019598007202148438, -1.9073486328125e-06, -0.005978584289550781, -5.960462772236497e-07, -0.010698318481445312, 0.0, -0.0003948211669921875, -0.0006866455078125, -5.7220458984375e-06, -0.0943291187286377, -1.71661376953125e-05, -0.0058078765869140625, -3.814697265625e-06, -0.00949394702911377, -0.00018334388732910156, -0.0004558563232421875, -0.0055999755859375, -0.00029754638671875, -9.5367431640625e-06, -0.0006875991821289062, -1.1920928244535389e-07, -0.005609750747680664, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.is_minion is not MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "query"}], "value": {"_type": "Call", "func": {"_type": "Name", "id": "CardQuery"}, "keywords": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "Template18", "hole0": "IsMinion"}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "new_minon"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "query"}, "attr": "<UNK>"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "player"}, {"_type": "Name", "id": "self"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "new_minon"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hand"}, "hole1": "append", "hole2": [{"_type": "Name", "id": "new_minon"}]}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 185, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "query", "<EOS>", 16, 86, 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 28, 139, "Is", "Minion", "<EOS>", 59, 79, 169, 40, 110, "new_minon", "<EOS>", 16, 87, 13, 80, 21, 110, "query", "<EOS>", "<UNK>", "<EOS>", 171, 40, 110, "player", "<EOS>", 40, 110, "player", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 21, 110, "new_minon", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 169, 40, 110, "new_minon", "<EOS>"], "score": -4.904137175847374, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -1.4198875427246094, -0.002391815185546875, -3.814697265625e-06, -9.918212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.03243732452392578, -4.76837158203125e-05, -3.814697265625e-06, -0.0003719329833984375, -2.09808349609375e-05, -0.23308420181274414, -0.0006669759750366211, -0.0002918243408203125, -0.0019969940185546875, -9.918212890625e-05, -0.00012969970703125, -0.010761380195617676, -0.0025299787521362305, -0.00011444091796875, -0.1270456314086914, -3.814697265625e-06, -4.9591064453125e-05, -0.054818153381347656, -0.006999969482421875, -0.011893272399902344, -0.0025167465209960938, -0.0009828805923461914, -0.0022842884063720703, -0.0050525665283203125, -0.01913166046142578, -9.5367431640625e-06, -1.1444091796875e-05, -0.0041370391845703125, -1.9073486328125e-06, -0.9874470233917236, -0.001048445701599121, -0.00040721893310546875, -0.1877593994140625, -0.017377853393554688, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.05251801013946533, -3.838491829810664e-05, -0.0018311738967895508, -3.814697265625e-06, -0.003692626953125, -0.03391742706298828, -7.62939453125e-06, -0.013080000877380371, -1.4305104514278355e-06, -0.0065708160400390625, 0.0, -0.3311063051223755, -7.033323527139146e-06, -0.0076580047607421875, 0.0, -0.1314946413040161, -9.739398956298828e-05, -0.0014820098876953125, -0.00901031494140625, -0.0002307891845703125, -5.7220458984375e-06, -0.2942582368850708, -0.0002090731868520379, -0.022147297859191895, -6.198873961693607e-06, -0.0002593994140625, -0.0001506805419921875, -0.003692626953125, -0.0015291986055672169, -1.1920928244535389e-07, -5.7220458984375e-06, -4.57763671875e-05, -0.0011863093823194504, -0.0013247706228867173, -2.0265579223632812e-06, -0.000812530517578125, -0.015928268432617188, -0.0001544952392578125, -4.57763671875e-05, -0.0001354217529296875, -0.000225067138671875, -8.88812355697155e-05, -7.271760750882095e-06, -0.0015125274658203125, -0.0009517669677734375, -0.0124664306640625, -0.0001811981201171875, -1.71661376953125e-05, -1.9073486328125e-06, -0.005735516548156738, -3.4570634852570947e-06, -0.18722593784332275, -8.344646857949556e-07, -0.08194279670715332, 0.0, -2.6702880859375e-05, -0.0025568008422851562, 0.0, -0.2683011293411255, -0.0002697406162042171], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        query = CardQuery(conditions=[IsMinion()])\n        new_minon = query.<UNK>(player, player, self)\n        new_minon.add_buff(Buff(ManaChange(-3)))\n        player.hand.append(new_minon)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -5.544915874096198, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -0.3110300600528717, 0.0, -0.02303314208984375, -0.0021486282348632812, -0.000118255615234375, -0.001316070556640625, -0.0001430511474609375, -0.000438690185546875, -0.0001544952392578125, -0.0224456787109375, -0.014363288879394531, -0.0008802413940429688, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.006348472088575363, -0.0009108781814575195, -0.10028254985809326, -2.741813204920618e-06, -0.003391265869140625, -9.34600830078125e-05, -0.004237174987792969, -1.9073486328125e-06, -0.000858306884765625, -1.52587890625e-05, -0.08925807476043701, -4.2319297790527344e-05, -0.2168828248977661, -5.9604644775390625e-06, -1.9073486328125e-06, -3.289548397064209, -5.7220458984375e-06, -9.34600830078125e-05, -9.5367431640625e-06, -0.0012722015380859375, -5.7220458984375e-06, -0.000665242550894618, -2.753696753643453e-05, -0.4054994583129883, -7.867813110351562e-06, -0.0001010894775390625, -0.0002899169921875, -8.96453857421875e-05, -0.000125885009765625, -7.05718994140625e-05, -0.029876625165343285, -7.62939453125e-06, -0.0056171417236328125, -2.0265579223632812e-06, -0.00104522705078125, -0.000125885009765625, -0.001041412353515625, -0.003070708829909563, -2.0265579223632812e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.002866447204723954, -0.0008690255926921964, -3.576278118089249e-07, -0.0009860992431640625, -0.052616119384765625, -0.0002269744873046875, -4.9591064453125e-05, -0.000133514404296875, -0.000278472900390625, -0.00010677287355065346, -7.152551916078664e-06, -0.12010765075683594, -0.00022125244140625, -0.0001983642578125, -5.91278076171875e-05, -9.5367431640625e-06, 0.0, -7.152556463552173e-06, -0.00029909610748291016, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.410743713378906e-05, 0.0, -0.000396728515625, -0.000244140625, -0.019517898559570312, -1.9073486328125e-06, -0.006049156188964844, -5.960462772236497e-07, -0.010686755180358887, 0.0, -0.000396728515625, -0.0006809234619140625, -5.7220458984375e-06, -0.09459221363067627, -1.71661376953125e-05, -0.0058727264404296875, -3.814697265625e-06, -0.009504437446594238, -0.00018143653869628906, -0.0004558563232421875, -0.00563812255859375, -0.00029754638671875, -9.5367431640625e-06, -0.0006895065307617188, -1.1920928244535389e-07, -0.005601167678833008, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type is MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "query"}], "value": {"_type": "Call", "func": {"_type": "Name", "id": "CardQuery"}, "keywords": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "Template18", "hole0": "IsMinion"}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "query"}], "value": {"_type": "Call", "func": {"_type": "Name", "id": "CardQuery"}, "keywords": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "Template18", "hole0": "IsMinion"}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "new_minon"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "query"}, "attr": "<UNK>"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "player"}, {"_type": "Name", "id": "self"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "new_minon"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 185, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "query", "<EOS>", 16, 86, 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 28, 139, "Is", "Minion", "<EOS>", 59, 79, 169, 40, 110, "query", "<EOS>", 16, 86, 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 28, 139, "Is", "Minion", "<EOS>", 59, 79, 169, 40, 110, "new_minon", "<EOS>", 16, 87, 13, 80, 21, 110, "query", "<EOS>", "<UNK>", "<EOS>", 171, 40, 110, "player", "<EOS>", 40, 110, "player", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 21, 110, "new_minon", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>"], "score": -5.871671940363505, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -1.4198875427246094, -0.002391815185546875, -3.814697265625e-06, -9.918212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.03243732452392578, -4.76837158203125e-05, -3.814697265625e-06, -0.0003719329833984375, -2.09808349609375e-05, -0.23308420181274414, -0.0006669759750366211, -0.0002918243408203125, -0.0019969940185546875, -9.918212890625e-05, -0.00012969970703125, -0.010761380195617676, -0.0025299787521362305, -0.00011444091796875, -0.1270456314086914, -3.814697265625e-06, -4.9591064453125e-05, -0.054818153381347656, -0.006999969482421875, -0.011893272399902344, -0.0025167465209960938, -0.0009828805923461914, -0.0022842884063720703, -0.0050525665283203125, -0.01913166046142578, -9.5367431640625e-06, -1.1444091796875e-05, -0.0041370391845703125, -1.9073486328125e-06, -1.3972346782684326, -1.5974044799804688e-05, -0.00147247314453125, -0.00348663330078125, -2.86102294921875e-05, -0.0001068115234375, -0.020297646522521973, -0.0011364221572875977, -8.7738037109375e-05, -0.09678173065185547, -5.7220458984375e-06, -5.340576171875e-05, -0.05861067771911621, -0.0023860931396484375, -0.011859893798828125, -0.0023870468139648438, -0.0007982254028320312, -0.001985788345336914, -0.007052421569824219, -0.019440650939941406, -1.1444091796875e-05, -7.62939453125e-06, -0.0023832321166992188, -1.9073486328125e-06, -0.8135285377502441, -0.0007600783719681203, -0.00042438507080078125, -0.1672801971435547, -0.027027130126953125, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.05063807964324951, -4.374915806693025e-05, -0.002086043357849121, -3.933906555175781e-06, -0.002841949462890625, -0.03254222869873047, -7.62939453125e-06, -0.02741062641143799, -2.3841830625315197e-06, -0.008917808532714844, 0.0, -0.4556814432144165, -7.986990567587782e-06, -0.007178306579589844, 0.0, -0.08096611499786377, -9.548664093017578e-05, -0.0015926361083984375, -0.015777587890625, -0.000362396240234375, -5.7220458984375e-06, -0.288688987493515, -0.00024828442838042974, -0.02014446258544922, -6.5565000113565475e-06, -0.000308990478515625, -0.0001373291015625, -0.0037517547607421875, -0.0015222836518660188, -1.1920928244535389e-07, -5.7220458984375e-06, -4.57763671875e-05, -0.0011973873479291797, -0.0013637521769851446, -2.0265579223632812e-06, -0.000797271728515625, -0.016040802001953125, -0.000156402587890625, -4.38690185546875e-05, -0.0001354217529296875, -0.000225067138671875, -8.864467963576317e-05, -7.271760750882095e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        query = CardQuery(conditions=[IsMinion()])\n        query = CardQuery(conditions=[IsMinion()])\n        new_minon = query.<UNK>(player, player, self)\n        new_minon.add_buff(Buff(ManaChange(-3)))\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "IsNot"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 9, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -5.942069674764319, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -0.3110300600528717, 0.0, -0.02303314208984375, -0.0021486282348632812, -0.000118255615234375, -0.001316070556640625, -0.0001430511474609375, -0.000438690185546875, -0.0001544952392578125, -0.0224456787109375, -0.014363288879394531, -0.0008802413940429688, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.006348472088575363, -0.0009108781814575195, -0.10028254985809326, -2.741813204920618e-06, -0.003391265869140625, -9.34600830078125e-05, -0.004237174987792969, -1.9073486328125e-06, -0.000858306884765625, -1.52587890625e-05, -0.08925807476043701, -4.2319297790527344e-05, -0.2168828248977661, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8282499313354492, -1.1444091796875e-05, -0.003635406494140625, -1.9073486328125e-05, -0.00118255615234375, -1.9073486328125e-06, -0.001639654627069831, -2.8729025871143676e-05, -0.28042125701904297, -7.867813110351562e-06, -0.0001239776611328125, -0.0007648468017578125, -0.000133514404296875, -0.00017547607421875, -6.29425048828125e-05, -0.03164724260568619, -9.5367431640625e-06, -0.004825592041015625, -2.0265579223632812e-06, -0.00092315673828125, -0.000102996826171875, -0.0012378692626953125, -0.0029858327470719814, -2.0265579223632812e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0031186281703412533, -0.0009345903526991606, -2.3841855067985307e-07, -0.001041412353515625, -0.04979133605957031, -0.00023651123046875, -4.76837158203125e-05, -0.0001239776611328125, -0.00026702880859375, -0.00010631047189235687, -7.152551916078664e-06, -0.11912822723388672, -0.00022125244140625, -0.00020599365234375, -6.103515625e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003161430358886719, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.410743713378906e-05, 0.0, -0.000396728515625, -0.0002460479736328125, -0.019598007202148438, -1.9073486328125e-06, -0.005984306335449219, -5.960462772236497e-07, -0.010707736015319824, 0.0, -0.0003948211669921875, -0.0006809234619140625, -5.7220458984375e-06, -2.6937150955200195, -0.00030231475830078125, -0.10235881805419922, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.000576019287109375, -7.62939453125e-05, -0.015027999877929688, 0.0, -0.15943431854248047, -0.10975265502929688, -0.000133514404296875, -1.9073486328125e-06, -0.019916534423828125, -1.1920928244535389e-07, -0.0024797916412353516, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type is not MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('<UNK>', self._reveal)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Eq"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 4, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -6.075742845875105, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -0.3110300600528717, 0.0, -0.02303314208984375, -0.0021486282348632812, -0.000118255615234375, -0.001316070556640625, -0.0001430511474609375, -0.000438690185546875, -0.0001544952392578125, -0.0224456787109375, -0.014363288879394531, -0.0008802413940429688, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.006348472088575363, -0.0009108781814575195, -0.10028254985809326, -2.741813204920618e-06, -0.003391265869140625, -9.34600830078125e-05, -0.004237174987792969, -1.9073486328125e-06, -0.000858306884765625, -1.52587890625e-05, -0.08925807476043701, -4.2319297790527344e-05, -0.2168828248977661, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8180046081542969, -4.38690185546875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0017805099487304688, -1.33514404296875e-05, -0.0013272716896608472, -7.998623186722398e-05, -0.4239072799682617, -6.079673767089844e-06, -0.000125885009765625, -0.000240325927734375, -8.0108642578125e-05, -0.000156402587890625, -7.2479248046875e-05, -0.029770825058221817, -7.62939453125e-06, -0.0068874359130859375, -2.0265579223632812e-06, -0.0011463165283203125, -9.918212890625e-05, -0.0011491775512695312, -0.0028746093157678843, -2.0265579223632812e-06, -9.5367431640625e-06, -3.62396240234375e-05, -0.0029195465613156557, -0.0008193156099878252, -2.3841855067985307e-07, -0.001178741455078125, -0.04754829406738281, -0.0002269744873046875, -4.76837158203125e-05, -0.0001277923583984375, -0.000274658203125, -0.00010844040662050247, -7.152551916078664e-06, -0.11905384063720703, -0.000217437744140625, -0.00020599365234375, -6.103515625e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003180503845214844, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.410743713378906e-05, 0.0, -0.000396728515625, -0.000247955322265625, -0.019201278686523438, -1.9073486328125e-06, -0.005984306335449219, -5.960462772236497e-07, -0.01067054271697998, 0.0, -0.000396728515625, -0.000675201416015625, -5.7220458984375e-06, -2.7018887996673584, -0.000301361083984375, -0.10036659240722656, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005788803100585938, -7.62939453125e-05, -0.015048027038574219, 0.0, -0.15973281860351562, -0.11015129089355469, -0.000133514404296875, -1.9073486328125e-06, -0.019962310791015625, -1.1920928244535389e-07, -0.002481698989868164, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type == MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('<UNK>', self._reveal)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Preparation", "hole1": 0, "hole2": "PRIEST"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Preparation", "hole4": "player", "hole6": [{"_type": "FunctionDef", "name": "reduce_cost", "args": {"_type": "Template8", "hole0": "3"}, "body": [{"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ManaChange"}, "hole2": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 3}}]}]}], "test": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "is_minion"}}, {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Eq"}]}]}}]}, {"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 4, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -7.183372523272304, "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -0.3110300600528717, 0.0, -0.02303314208984375, -0.0021486282348632812, -0.000118255615234375, -0.001316070556640625, -0.0001430511474609375, -0.000438690185546875, -0.0001544952392578125, -0.0224456787109375, -0.014363288879394531, -0.0008802413940429688, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.006348472088575363, -0.0009108781814575195, -0.10028254985809326, -2.741813204920618e-06, -0.003391265869140625, -9.34600830078125e-05, -0.004237174987792969, -1.9073486328125e-06, -0.000858306884765625, -1.52587890625e-05, -0.08925807476043701, -4.2319297790527344e-05, -0.2168828248977661, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8180046081542969, -4.38690185546875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0017805099487304688, -1.33514404296875e-05, -0.0013272716896608472, -7.998623186722398e-05, -1.518958568572998, -3.814697265625e-06, -0.000762939453125, -0.0005893707275390625, -0.0003261566162109375, -0.0001068115234375, -3.62396240234375e-05, -0.033696822822093964, -5.7220458984375e-06, -0.007483482360839844, -2.0265579223632812e-06, -0.00287628173828125, -9.918212890625e-05, -0.0013360977172851562, -0.002752418164163828, -2.0265579223632812e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0034335325472056866, -0.0008724788785912097, -2.3841855067985307e-07, -0.0012111663818359375, -0.048187255859375, -0.0002307891845703125, -5.14984130859375e-05, -0.0001277923583984375, -0.000278472900390625, -0.00011010188609361649, -7.152551916078664e-06, -0.11696434020996094, -0.0002193450927734375, -0.000213623046875, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -6.914137884450611e-06, -0.0003542900085449219, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.589557647705078e-05, 0.0, -0.000396728515625, -0.0002536773681640625, -0.018415451049804688, -1.9073486328125e-06, -0.005965232849121094, -5.960462772236497e-07, -0.010568499565124512, 0.0, -0.0003986358642578125, -0.0006771087646484375, -5.7220458984375e-06, -2.7074286937713623, -0.0003032684326171875, -0.10071659088134766, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005817413330078125, -7.62939453125e-05, -0.015049934387207031, 0.0, -0.16044998168945312, -0.1104574203491211, -0.000133514404296875, -1.9073486328125e-06, -0.019853591918945312, -1.1920928244535389e-07, -0.0024797916412353516, -1.9073486328125e-06], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type == MINION_TYPE.DEMON:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('<UNK>', self._reveal)\n        player.draw()\n"}], "gold_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(ManaChange(-3), CardSelector(condition=\n            IsSpell()), SpellCast()))\n"}
{"beams": [{"model_output": {"hole3": "activate", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Repentance", "hole4": "player"}, "choice_history": [54, 123, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.087656868083144, "score_history": [-0.0001010894775390625, -1.6230382919311523, -0.00034850722295232117, -0.0007987632416188717, -1.4781946447328664e-05, -0.00013851991388946772, -1.33514404296875e-05, -0.44469738006591797, -0.0012054443359375, -1.1444091796875e-05, -7.510157047363464e-06, -0.0019834041595458984, -1.6689300537109375e-06, -3.814689989667386e-06, -0.1756826639175415, -5.7220458984375e-06, -0.0003304481506347656, 0.0, -0.013446807861328125, 0.0, -0.0003310358733870089, 0.0, -0.011343002319335938, -0.00018310546875, -0.0002803802490234375, -0.01079559326171875, -1.9073486328125e-06, -0.001697540283203125, 0.0, -0.0003299713134765625, 0.0, -0.0003826618194580078, -1.9073468138230965e-06, -0.00029170478228479624, 0.0, -0.0010316370753571391, -3.814697265625e-06, -0.0019021034240722656, 0.0, -0.000270843505859375, -1.71661376953125e-05, -7.62939453125e-06, -0.38928237557411194, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.00023365020751953125, -3.814697265625e-06, -0.014494895935058594, -0.0004444122314453125, -0.0001277923583984375, -0.000949859619140625, 0.0, -1.9073486328125e-05, -2.09808349609375e-05, -0.0002498626708984375, -1.33514404296875e-05, -4.863739013671875e-05, -5.841255187988281e-06, -1.9073486328125e-06, -7.748603820800781e-06, -3.576278118089249e-07, -0.022695541381835938, -2.47955322265625e-05, -6.67572021484375e-05, -0.5124616622924805, -0.006000518798828125, -0.00024199485778808594, -3.576278118089249e-07, -0.012632250785827637, -1.1563301086425781e-05, -4.57763671875e-05, -4.57763671875e-05, -2.288818359375e-05, -0.17869484424591064, -0.0004101991653442383, -0.0001201629638671875, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -0.00014400482177734375, -9.5367431640625e-06, -0.001232147216796875, -5.14984130859375e-05, -0.05406475067138672, -6.914137884450611e-06, -0.000518798828125, -0.000225067138671875, -1.0431365966796875, -9.5367431640625e-05, -0.0002543926239013672, -3.933906555175781e-06, -5.7220458984375e-06, -0.178131103515625, 0.0, -0.02408599853515625, -3.62396240234375e-05, -7.43865966796875e-05, -0.22851276397705078, -0.00415802001953125, -0.0011947154998779297, -2.3841855067985307e-07, -0.0030025243759155273, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-05, -2.6702880859375e-05, -0.11663853377103806, -0.0008498430252075195, -0.0004634857177734375, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.000232696533203125, -9.5367431640625e-06], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('minion_died', self._reveal)\n\n    def _reveal(self, player):\n        player.unbind('minion_died', self._reveal)\n"}, {"model_output": {"hole3": "activate", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Repentance", "hole4": "player"}, "choice_history": [54, 123, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.770083379754311, "score_history": [-0.0001010894775390625, -1.6230382919311523, -0.00034850722295232117, -0.0007987632416188717, -1.4781946447328664e-05, -0.00013851991388946772, -1.33514404296875e-05, -0.44469738006591797, -0.0012054443359375, -1.1444091796875e-05, -7.510157047363464e-06, -0.0019834041595458984, -1.6689300537109375e-06, -3.814689989667386e-06, -0.1756826639175415, -5.7220458984375e-06, -0.0003304481506347656, 0.0, -0.013446807861328125, 0.0, -0.0003310358733870089, 0.0, -0.011343002319335938, -0.00018310546875, -0.0002803802490234375, -0.01079559326171875, -1.9073486328125e-06, -0.001697540283203125, 0.0, -0.0003299713134765625, 0.0, -0.0003826618194580078, -1.9073468138230965e-06, -0.00029170478228479624, 0.0, -0.0010316370753571391, -3.814697265625e-06, -0.0019021034240722656, 0.0, -0.000270843505859375, -1.71661376953125e-05, -7.62939453125e-06, -0.38928237557411194, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.00023365020751953125, -3.814697265625e-06, -0.014494895935058594, -0.0004444122314453125, -0.0001277923583984375, -0.000949859619140625, 0.0, -1.9073486328125e-05, -2.09808349609375e-05, -0.0002498626708984375, -1.33514404296875e-05, -4.863739013671875e-05, -5.841255187988281e-06, -1.9073486328125e-06, -7.748603820800781e-06, -3.576278118089249e-07, -0.022695541381835938, -2.47955322265625e-05, -6.67572021484375e-05, -0.9172821044921875, -3.814697265625e-06, -0.0038976669311523438, 0.0, -0.0011720657348632812, -1.9073486328125e-06, -0.002407670021057129, -1.1563283806026448e-05, -0.0004624122811947018, 0.0, -0.0011321306228637695, -1.9073486328125e-06, -0.011093497276306152, -3.24249267578125e-05, -1.71661376953125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.48144882917404175, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -0.000209808349609375, -1.1444091796875e-05, -0.000888824462890625, -3.4332275390625e-05, -0.014586448669433594, -9.179114385915454e-06, -0.00077056884765625, -0.0002956390380859375, -0.993438720703125, -0.000102996826171875, -0.0004475116729736328, -3.933906555175781e-06, -7.62939453125e-06, -0.26406002044677734, 0.0, -0.03166770935058594, -4.00543212890625e-05, -7.2479248046875e-05, -0.20196056365966797, -0.004154205322265625, -0.0014677047729492188, -2.3841855067985307e-07, -0.002878546714782715, -1.52587890625e-05, -5.7220458984375e-06, -0.00011444091796875, -2.47955322265625e-05, -0.11208807677030563, -0.0009614229202270508, -0.000820159912109375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -0.00024700164794921875, -9.5367431640625e-06], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.unbind('minion_died', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.888122743721198, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -0.7631381750106812, -1.1444091796875e-05, -0.0003299713134765625, -6.29425048828125e-05, -0.08769917488098145, -1.2278556823730469e-05, -0.0001010894775390625, -0.06571388244628906, -0.09153175354003906, -1.9073486328125e-06, -0.5011676549911499, -3.933904736186378e-06, -1.2714377641677856, 0.0, -1.52587890625e-05, -0.005333900451660156, -0.0064334869384765625, -0.017708024010062218, -7.62939453125e-06, -7.62939453125e-06, -4.38690185546875e-05, -0.0005687320372089744, -0.004600167274475098, 0.0, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.12361796945333481, -1.9073486328125e-06, -0.0007495880126953125, -0.09448051452636719, -0.0001621246337890625, -0.000308990478515625, -0.0014020163798704743, -2.1338340957299806e-05, -0.0004425048828125, 0.0, -0.0025434494018554688, -4.38690185546875e-05, -0.00030517578125, -0.005315899848937988, -9.655952453613281e-06, -0.0001373291015625, -5.7220458984375e-06, -0.0006694793701171875, -3.24249267578125e-05, -0.00022506702225655317, -4.0531158447265625e-06, -5.7220458984375e-06, -1.2278556823730469e-05, -1.0728830375228426e-06, -0.09206390380859375, -1.71661376953125e-05, -0.0001239776611328125, -0.3299427032470703, -0.0067005157470703125, -0.00048232078552246094, -7.152555099310121e-07, -0.5455421209335327, -1.537799835205078e-05, -0.0003376007080078125, -3.62396240234375e-05, -7.62939453125e-06, -0.1356799602508545, -0.001473546028137207, -0.000148773193359375, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -4.57763671875e-05, -3.814697265625e-06, -0.0001392364501953125, -7.62939453125e-06, -0.0004901885986328125, -1.9073486328125e-05, -0.1262531280517578, 0.0, -3.24249267578125e-05, -3.24249267578125e-05, -0.0002899169921875, -2.288818359375e-05, -2.8967857360839844e-05, -5.841255187988281e-06, -3.814697265625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.0355224609375, -2.09808349609375e-05, -6.866455078125e-05, -0.4370689392089844, -0.0051021575927734375, -0.0003908872604370117, -2.3841855067985307e-07, -0.003948569297790527, -7.62939453125e-06, -3.4332275390625e-05, -9.5367431640625e-05, -2.288818359375e-05, -0.16840732097625732, -0.00040912628173828125, -0.0002593994140625, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -6.103515625e-05, -3.814697265625e-06, -0.0001621246337890625, -7.62939453125e-06], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.add_buff(Buff(ChangeAttack(2)))\n            super().reveal()\n\n    def activate(self, player):\n        player.unbind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('minion_died', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.303302950020026, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -0.7631381750106812, -1.1444091796875e-05, -0.0003299713134765625, -6.29425048828125e-05, -0.08769917488098145, -1.2278556823730469e-05, -0.0001010894775390625, -0.06571388244628906, -0.09153175354003906, -1.9073486328125e-06, -0.5011676549911499, -3.933904736186378e-06, -1.2714377641677856, 0.0, -1.52587890625e-05, -0.005333900451660156, -0.0064334869384765625, -0.017708024010062218, -7.62939453125e-06, -7.62939453125e-06, -4.38690185546875e-05, -0.0005687320372089744, -0.004600167274475098, 0.0, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.12361796945333481, -1.9073486328125e-06, -0.0007495880126953125, -0.09448051452636719, -0.0001621246337890625, -0.000308990478515625, -0.0014020163798704743, -2.1338340957299806e-05, -0.0004425048828125, 0.0, -0.0025434494018554688, -4.38690185546875e-05, -0.00030517578125, -0.005315899848937988, -9.655952453613281e-06, -0.0001373291015625, -5.7220458984375e-06, -0.0006694793701171875, -3.24249267578125e-05, -0.00022506702225655317, -4.0531158447265625e-06, -5.7220458984375e-06, -1.2278556823730469e-05, -1.0728830375228426e-06, -0.09206390380859375, -1.71661376953125e-05, -0.0001239776611328125, -0.3299427032470703, -0.0067005157470703125, -0.00048232078552246094, -7.152555099310121e-07, -0.8868526220321655, -3.814697265625e-06, -0.006903648376464844, -2.288818359375e-05, -1.9073486328125e-05, -0.1784590482711792, -0.0018091201782226562, -0.0001583099365234375, -9.5367431640625e-06, -3.62396240234375e-05, 0.0, -0.0001163482666015625, -3.814697265625e-06, -0.0001697540283203125, -7.62939453125e-06, -0.0005168914794921875, -1.9073486328125e-05, -0.17446517944335938, 0.0, -3.4332275390625e-05, -3.4332275390625e-05, -0.000274658203125, -2.47955322265625e-05, -2.8967857360839844e-05, -5.841255187988281e-06, -3.814697265625e-06, -6.103515625e-05, -2.3841855067985307e-07, -0.034423828125, -2.09808349609375e-05, -7.05718994140625e-05, -0.41419410705566406, -0.0050945281982421875, -0.00040709972381591797, -2.3841855067985307e-07, -0.0038427114486694336, -7.62939453125e-06, -3.24249267578125e-05, -0.0001010894775390625, -2.47955322265625e-05, -0.16832542419433594, -0.0003986358642578125, -0.0002593994140625, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.00016307830810546875, -7.62939453125e-06], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.add_buff(Buff(ChangeAttack(2)))\n            super().reveal()\n\n    def activate(self, player):\n        player.bind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('minion_died', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.495805098609623, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -1.056287169456482, -3.814697265625e-06, -0.0008716583251953125, -1.9073486328125e-06, -0.22610676288604736, -7.152555099310121e-07, -0.000202178955078125, -0.03242683410644531, -0.1270761489868164, -3.814697265625e-06, -0.530850887298584, -3.4570680327306036e-06, -1.418270230293274, 0.0, -2.86102294921875e-05, -0.0028591156005859375, -0.0076465606689453125, -0.021715443581342697, -7.62939453125e-06, -5.7220458984375e-06, -2.86102294921875e-05, -0.001110957469791174, -0.00453495979309082, 0.0, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -0.11699981242418289, -1.9073486328125e-06, -0.0009059906005859375, -0.10352230072021484, -0.000156402587890625, -0.0002994537353515625, -0.001429434516467154, -2.2649652237305418e-05, -0.0004425048828125, 0.0, -0.0025186538696289062, -4.38690185546875e-05, -0.000308990478515625, -0.004950404167175293, -7.748603820800781e-06, -0.0001277923583984375, -5.7220458984375e-06, -0.00067138671875, -3.24249267578125e-05, -0.00022172917670104653, -4.0531158447265625e-06, -5.7220458984375e-06, -1.049041748046875e-05, -1.1920922133867862e-06, -0.0931243896484375, -1.71661376953125e-05, -0.000125885009765625, -0.3210487365722656, -0.0067157745361328125, -0.0004843473434448242, -7.152555099310121e-07, -0.5440973043441772, -1.537799835205078e-05, -0.0003376007080078125, -3.62396240234375e-05, -7.62939453125e-06, -0.13698124885559082, -0.0014611482620239258, -0.0001506805419921875, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, -0.0001392364501953125, -7.62939453125e-06, -0.0004978179931640625, -1.9073486328125e-05, -0.12639427185058594, 0.0, -3.24249267578125e-05, -3.24249267578125e-05, -0.0002899169921875, -2.288818359375e-05, -2.8967857360839844e-05, -5.841255187988281e-06, -3.814697265625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.03547096252441406, -2.09808349609375e-05, -6.866455078125e-05, -0.4362831115722656, -0.00510406494140625, -0.0003908872604370117, -2.3841855067985307e-07, -0.003949522972106934, -7.62939453125e-06, -3.4332275390625e-05, -9.5367431640625e-05, -2.288818359375e-05, -0.16843676567077637, -0.00040912628173828125, -0.0002593994140625, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -6.103515625e-05, -3.814697265625e-06, -0.0001621246337890625, -7.62939453125e-06], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('card_drawn', mirror)\n            mirror.add_buff(Buff(ChangeAttack(2)))\n            super().reveal()\n\n    def activate(self, player):\n        player.unbind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('minion_died', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.91486497123688, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -1.056287169456482, -3.814697265625e-06, -0.0008716583251953125, -1.9073486328125e-06, -0.22610676288604736, -7.152555099310121e-07, -0.000202178955078125, -0.03242683410644531, -0.1270761489868164, -3.814697265625e-06, -0.530850887298584, -3.4570680327306036e-06, -1.418270230293274, 0.0, -2.86102294921875e-05, -0.0028591156005859375, -0.0076465606689453125, -0.021715443581342697, -7.62939453125e-06, -5.7220458984375e-06, -2.86102294921875e-05, -0.001110957469791174, -0.00453495979309082, 0.0, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -0.11699981242418289, -1.9073486328125e-06, -0.0009059906005859375, -0.10352230072021484, -0.000156402587890625, -0.0002994537353515625, -0.001429434516467154, -2.2649652237305418e-05, -0.0004425048828125, 0.0, -0.0025186538696289062, -4.38690185546875e-05, -0.000308990478515625, -0.004950404167175293, -7.748603820800781e-06, -0.0001277923583984375, -5.7220458984375e-06, -0.00067138671875, -3.24249267578125e-05, -0.00022172917670104653, -4.0531158447265625e-06, -5.7220458984375e-06, -1.049041748046875e-05, -1.1920922133867862e-06, -0.0931243896484375, -1.71661376953125e-05, -0.000125885009765625, -0.3210487365722656, -0.0067157745361328125, -0.0004843473434448242, -7.152555099310121e-07, -0.8888334035873413, -3.814697265625e-06, -0.006943702697753906, -2.288818359375e-05, -1.9073486328125e-05, -0.17999494075775146, -0.0017976760864257812, -0.0001621246337890625, -9.5367431640625e-06, -3.62396240234375e-05, 0.0, -0.0001163482666015625, -3.814697265625e-06, -0.0001697540283203125, -7.62939453125e-06, -0.000522613525390625, -1.9073486328125e-05, -0.17501354217529297, 0.0, -3.4332275390625e-05, -3.4332275390625e-05, -0.0002727508544921875, -2.47955322265625e-05, -2.8967857360839844e-05, -5.841255187988281e-06, -3.814697265625e-06, -6.103515625e-05, -2.3841855067985307e-07, -0.034393310546875, -1.9073486328125e-05, -7.05718994140625e-05, -0.41318607330322266, -0.0050983428955078125, -0.00040709972381591797, -2.3841855067985307e-07, -0.0038427114486694336, -7.62939453125e-06, -3.24249267578125e-05, -0.0001010894775390625, -2.47955322265625e-05, -0.16833209991455078, -0.0003986358642578125, -0.0002593994140625, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.00016307830810546875, -7.62939453125e-06], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('card_drawn', mirror)\n            mirror.add_buff(Buff(ChangeAttack(2)))\n            super().reveal()\n\n    def activate(self, player):\n        player.bind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('minion_died', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -9.042015914016531, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -0.7631381750106812, -1.1444091796875e-05, -0.0003299713134765625, -6.29425048828125e-05, -0.08769917488098145, -1.2278556823730469e-05, -0.0001010894775390625, -0.06571388244628906, -0.09153175354003906, -1.9073486328125e-06, -0.5011676549911499, -3.933904736186378e-06, -1.2714377641677856, 0.0, -1.52587890625e-05, -0.005333900451660156, -0.0064334869384765625, -0.017708024010062218, -7.62939453125e-06, -7.62939453125e-06, -4.38690185546875e-05, -0.0005687320372089744, -0.004600167274475098, 0.0, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.12361796945333481, -1.9073486328125e-06, -0.0007495880126953125, -0.09448051452636719, -0.0001621246337890625, -0.000308990478515625, -0.0014020163798704743, -2.1338340957299806e-05, -0.0004425048828125, 0.0, -0.0025434494018554688, -4.38690185546875e-05, -0.00030517578125, -0.005315899848937988, -9.655952453613281e-06, -0.0001373291015625, -5.7220458984375e-06, -0.0006694793701171875, -3.24249267578125e-05, -0.00022506702225655317, -4.0531158447265625e-06, -5.7220458984375e-06, -1.2278556823730469e-05, -1.0728830375228426e-06, -0.09206390380859375, -1.71661376953125e-05, -0.0001239776611328125, -0.3299427032470703, -0.0067005157470703125, -0.00048232078552246094, -7.152555099310121e-07, -0.5455421209335327, -1.537799835205078e-05, -0.0003376007080078125, -3.62396240234375e-05, -7.62939453125e-06, -0.1356799602508545, -0.001473546028137207, -0.000148773193359375, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -4.57763671875e-05, -3.814697265625e-06, -0.0001392364501953125, -7.62939453125e-06, -0.0004901885986328125, -1.9073486328125e-05, -0.1262531280517578, 0.0, -3.24249267578125e-05, -3.24249267578125e-05, -0.0002899169921875, -2.288818359375e-05, -2.8967857360839844e-05, -5.841255187988281e-06, -3.814697265625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.0355224609375, -2.09808349609375e-05, -6.866455078125e-05, -1.0422086715698242, -1.9073486328125e-06, -0.005484580993652344, 0.0, -0.0019893646240234375, 0.0, -0.05689644813537598, -5.006789251638111e-06, -0.0018324829870834947, 0.0, -0.003450751071795821, -1.9073486328125e-06, -0.004825949668884277, -1.9073486328125e-05, -2.288818359375e-05, -7.43865966796875e-05, -1.33514404296875e-05, -0.6527379155158997, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.00025653839111328125, -1.33514404296875e-05], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.add_buff(Buff(ChangeAttack(2)))\n            super().reveal()\n\n    def activate(self, player):\n        player.unbind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "card_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "card_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -9.489371124797628, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -0.7631381750106812, -1.1444091796875e-05, -0.0003299713134765625, -6.29425048828125e-05, -0.08769917488098145, -1.2278556823730469e-05, -0.0001010894775390625, -0.06571388244628906, -0.09153175354003906, -1.9073486328125e-06, -0.5011676549911499, -3.933904736186378e-06, -1.2714377641677856, 0.0, -1.52587890625e-05, -0.005333900451660156, -0.0064334869384765625, -0.017708024010062218, -7.62939453125e-06, -7.62939453125e-06, -4.38690185546875e-05, -0.0005687320372089744, -0.004600167274475098, 0.0, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.12361796945333481, -1.9073486328125e-06, -0.0007495880126953125, -0.09448051452636719, -0.0001621246337890625, -0.000308990478515625, -0.0014020163798704743, -2.1338340957299806e-05, -0.0004425048828125, 0.0, -0.0025434494018554688, -4.38690185546875e-05, -0.00030517578125, -0.005315899848937988, -9.655952453613281e-06, -0.0001373291015625, -5.7220458984375e-06, -0.0006694793701171875, -3.24249267578125e-05, -0.00022506702225655317, -4.0531158447265625e-06, -5.7220458984375e-06, -1.2278556823730469e-05, -1.0728830375228426e-06, -0.09206390380859375, -1.71661376953125e-05, -0.0001239776611328125, -0.3299427032470703, -0.0067005157470703125, -0.00048232078552246094, -7.152555099310121e-07, -0.5455421209335327, -1.537799835205078e-05, -0.0003376007080078125, -3.62396240234375e-05, -7.62939453125e-06, -0.1356799602508545, -0.001473546028137207, -0.000148773193359375, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -4.57763671875e-05, -3.814697265625e-06, -0.0001392364501953125, -7.62939453125e-06, -0.0004901885986328125, -1.9073486328125e-05, -0.1262531280517578, 0.0, -3.24249267578125e-05, -3.24249267578125e-05, -0.0002899169921875, -2.288818359375e-05, -2.8967857360839844e-05, -5.841255187988281e-06, -3.814697265625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.0355224609375, -2.09808349609375e-05, -6.866455078125e-05, -1.0422086715698242, -1.9073486328125e-06, -0.005484580993652344, 0.0, -0.0019893646240234375, 0.0, -0.05689644813537598, -5.006789251638111e-06, -0.0018324829870834947, 0.0, -0.003450751071795821, -1.9073486328125e-06, -0.004825949668884277, -1.9073486328125e-05, -2.288818359375e-05, -7.43865966796875e-05, -1.33514404296875e-05, -1.0999529361724854, 0.0, -0.0002193450927734375, 0.0, -2.86102294921875e-05, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.0001773834228515625, -7.62939453125e-06], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.add_buff(Buff(ChangeAttack(2)))\n            super().reveal()\n\n    def activate(self, player):\n        player.unbind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -9.501987997465271, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -0.7631381750106812, -1.1444091796875e-05, -0.0003299713134765625, -6.29425048828125e-05, -0.08769917488098145, -1.2278556823730469e-05, -0.0001010894775390625, -0.06571388244628906, -0.09153175354003906, -1.9073486328125e-06, -0.5011676549911499, -3.933904736186378e-06, -1.2714377641677856, 0.0, -1.52587890625e-05, -0.005333900451660156, -0.0064334869384765625, -0.017708024010062218, -7.62939453125e-06, -7.62939453125e-06, -4.38690185546875e-05, -0.0005687320372089744, -0.004600167274475098, 0.0, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.12361796945333481, -1.9073486328125e-06, -0.0007495880126953125, -0.09448051452636719, -0.0001621246337890625, -0.000308990478515625, -0.0014020163798704743, -2.1338340957299806e-05, -0.0004425048828125, 0.0, -0.0025434494018554688, -4.38690185546875e-05, -0.00030517578125, -0.005315899848937988, -9.655952453613281e-06, -0.0001373291015625, -5.7220458984375e-06, -0.0006694793701171875, -3.24249267578125e-05, -0.00022506702225655317, -4.0531158447265625e-06, -5.7220458984375e-06, -1.2278556823730469e-05, -1.0728830375228426e-06, -0.09206390380859375, -1.71661376953125e-05, -0.0001239776611328125, -1.274139404296875, -1.71661376953125e-05, -0.0021762847900390625, 0.0, -0.000835418701171875, 0.0, -0.002177715301513672, -1.5020307728264015e-05, -0.0004422639904078096, 0.0, -0.0002509355254005641, -5.841255187988281e-06, -0.1749861240386963, 0.0, -0.0001201629638671875, -1.9073486328125e-05, -9.5367431640625e-06, -0.6181384325027466, 0.0, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -0.00023746490478515625, -1.1444091796875e-05, -0.0005168914794921875, -1.52587890625e-05, -0.7457065582275391, 0.0, -2.288818359375e-05, -3.24249267578125e-05, -0.0003452301025390625, -2.47955322265625e-05, -2.6941299438476562e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0001430511474609375, -1.1920928244535389e-07, -0.06328964233398438, -3.24249267578125e-05, -7.43865966796875e-05, -0.3520698547363281, -0.0052318572998046875, -0.000489354133605957, -2.3841855067985307e-07, -0.003272414207458496, -9.5367431640625e-06, -2.09808349609375e-05, -9.1552734375e-05, -2.47955322265625e-05, -0.16718542575836182, -0.000431060791015625, -0.0003204345703125, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -6.103515625e-05, -3.814697265625e-06, -0.00017261505126953125, -9.5367431640625e-06], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.add_buff(Buff(ChangeAttack(2)))\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('minion_died', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -9.52644163745282, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -0.7631381750106812, -1.1444091796875e-05, -0.0003299713134765625, -6.29425048828125e-05, -0.08769917488098145, -1.2278556823730469e-05, -0.0001010894775390625, -0.06571388244628906, -0.09153175354003906, -1.9073486328125e-06, -0.5011676549911499, -3.933904736186378e-06, -1.2714377641677856, 0.0, -1.52587890625e-05, -0.005333900451660156, -0.0064334869384765625, -0.017708024010062218, -7.62939453125e-06, -7.62939453125e-06, -4.38690185546875e-05, -0.0005687320372089744, -0.004600167274475098, 0.0, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.12361796945333481, -1.9073486328125e-06, -0.0007495880126953125, -0.09448051452636719, -0.0001621246337890625, -0.000308990478515625, -0.0014020163798704743, -2.1338340957299806e-05, -0.0004425048828125, 0.0, -0.0025434494018554688, -4.38690185546875e-05, -0.00030517578125, -0.005315899848937988, -9.655952453613281e-06, -0.0001373291015625, -5.7220458984375e-06, -0.0006694793701171875, -3.24249267578125e-05, -0.00022506702225655317, -4.0531158447265625e-06, -5.7220458984375e-06, -1.2278556823730469e-05, -1.0728830375228426e-06, -0.09206390380859375, -1.71661376953125e-05, -0.0001239776611328125, -0.3299427032470703, -0.0067005157470703125, -0.00048232078552246094, -7.152555099310121e-07, -0.8868526220321655, -3.814697265625e-06, -0.006903648376464844, -2.288818359375e-05, -1.9073486328125e-05, -0.1784590482711792, -0.0018091201782226562, -0.0001583099365234375, -9.5367431640625e-06, -3.62396240234375e-05, 0.0, -0.0001163482666015625, -3.814697265625e-06, -0.0001697540283203125, -7.62939453125e-06, -0.0005168914794921875, -1.9073486328125e-05, -0.17446517944335938, 0.0, -3.4332275390625e-05, -3.4332275390625e-05, -0.000274658203125, -2.47955322265625e-05, -2.8967857360839844e-05, -5.841255187988281e-06, -3.814697265625e-06, -6.103515625e-05, -2.3841855067985307e-07, -0.034423828125, -2.09808349609375e-05, -7.05718994140625e-05, -1.08526611328125, -1.9073486328125e-06, -0.0053844451904296875, 0.0, -0.001995086669921875, 0.0, -0.06126713752746582, -5.125998541188892e-06, -0.0018864846788346767, 0.0, -0.0034511086996644735, -1.9073486328125e-06, -0.004780173301696777, -2.09808349609375e-05, -2.288818359375e-05, -7.43865966796875e-05, -1.33514404296875e-05, -0.651578426361084, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.add_buff(Buff(ChangeAttack(2)))\n            super().reveal()\n\n    def activate(self, player):\n        player.bind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -9.651331555381091, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -1.056287169456482, -3.814697265625e-06, -0.0008716583251953125, -1.9073486328125e-06, -0.22610676288604736, -7.152555099310121e-07, -0.000202178955078125, -0.03242683410644531, -0.1270761489868164, -3.814697265625e-06, -0.530850887298584, -3.4570680327306036e-06, -1.418270230293274, 0.0, -2.86102294921875e-05, -0.0028591156005859375, -0.0076465606689453125, -0.021715443581342697, -7.62939453125e-06, -5.7220458984375e-06, -2.86102294921875e-05, -0.001110957469791174, -0.00453495979309082, 0.0, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -0.11699981242418289, -1.9073486328125e-06, -0.0009059906005859375, -0.10352230072021484, -0.000156402587890625, -0.0002994537353515625, -0.001429434516467154, -2.2649652237305418e-05, -0.0004425048828125, 0.0, -0.0025186538696289062, -4.38690185546875e-05, -0.000308990478515625, -0.004950404167175293, -7.748603820800781e-06, -0.0001277923583984375, -5.7220458984375e-06, -0.00067138671875, -3.24249267578125e-05, -0.00022172917670104653, -4.0531158447265625e-06, -5.7220458984375e-06, -1.049041748046875e-05, -1.1920922133867862e-06, -0.0931243896484375, -1.71661376953125e-05, -0.000125885009765625, -0.3210487365722656, -0.0067157745361328125, -0.0004843473434448242, -7.152555099310121e-07, -0.5440973043441772, -1.537799835205078e-05, -0.0003376007080078125, -3.62396240234375e-05, -7.62939453125e-06, -0.13698124885559082, -0.0014611482620239258, -0.0001506805419921875, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, -0.0001392364501953125, -7.62939453125e-06, -0.0004978179931640625, -1.9073486328125e-05, -0.12639427185058594, 0.0, -3.24249267578125e-05, -3.24249267578125e-05, -0.0002899169921875, -2.288818359375e-05, -2.8967857360839844e-05, -5.841255187988281e-06, -3.814697265625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.03547096252441406, -2.09808349609375e-05, -6.866455078125e-05, -1.0436468124389648, -1.9073486328125e-06, -0.0054874420166015625, 0.0, -0.0019903182983398438, 0.0, -0.056749582290649414, -5.006789251638111e-06, -0.0018285490805283189, 0.0, -0.0034468171652406454, -1.9073486328125e-06, -0.00482785701751709, -1.9073486328125e-05, -2.288818359375e-05, -7.43865966796875e-05, -1.33514404296875e-05, -0.6523285508155823, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.00025653839111328125, -1.33514404296875e-05], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('card_drawn', mirror)\n            mirror.add_buff(Buff(ChangeAttack(2)))\n            super().reveal()\n\n    def activate(self, player):\n        player.unbind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "card_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}]}, {"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "card_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 21, 110, "player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_died", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -9.694777909689087, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -0.7631381750106812, -1.1444091796875e-05, -0.0003299713134765625, -6.29425048828125e-05, -0.08769917488098145, -1.2278556823730469e-05, -0.0001010894775390625, -0.06571388244628906, -0.09153175354003906, -1.9073486328125e-06, -0.5011676549911499, -3.933904736186378e-06, -1.2714377641677856, 0.0, -1.52587890625e-05, -0.005333900451660156, -0.0064334869384765625, -0.017708024010062218, -7.62939453125e-06, -7.62939453125e-06, -4.38690185546875e-05, -0.0005687320372089744, -0.004600167274475098, 0.0, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.12361796945333481, -1.9073486328125e-06, -0.0007495880126953125, -0.09448051452636719, -0.0001621246337890625, -0.000308990478515625, -0.0014020163798704743, -2.1338340957299806e-05, -0.0004425048828125, 0.0, -0.0025434494018554688, -4.38690185546875e-05, -0.00030517578125, -0.005315899848937988, -9.655952453613281e-06, -0.0001373291015625, -5.7220458984375e-06, -0.0006694793701171875, -3.24249267578125e-05, -0.00022506702225655317, -4.0531158447265625e-06, -5.7220458984375e-06, -1.2278556823730469e-05, -1.0728830375228426e-06, -0.09206390380859375, -1.71661376953125e-05, -0.0001239776611328125, -1.274139404296875, -1.71661376953125e-05, -0.0021762847900390625, 0.0, -0.000835418701171875, 0.0, -0.002177715301513672, -1.5020307728264015e-05, -0.0004422639904078096, 0.0, -0.0002509355254005641, -5.841255187988281e-06, -0.1749861240386963, 0.0, -0.0001201629638671875, -1.9073486328125e-05, -9.5367431640625e-06, -1.2210832834243774, -1.9073486328125e-06, -6.103515625e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.000186920166015625, -7.62939453125e-06, -0.00032806396484375, -2.288818359375e-05, -0.3018627166748047, 0.0, -3.0517578125e-05, -3.0517578125e-05, -0.0003108978271484375, -2.6702880859375e-05, -2.5153160095214844e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0001220703125, -1.1920928244535389e-07, -0.043684959411621094, -2.86102294921875e-05, -7.43865966796875e-05, -0.4056816101074219, -0.0048370361328125, -0.000538945198059082, -2.3841855067985307e-07, -0.003272414207458496, -9.5367431640625e-06, -2.47955322265625e-05, -8.96453857421875e-05, -2.47955322265625e-05, -0.1674889326095581, -0.00039386749267578125, -0.000301361083984375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -0.00016880035400390625, -9.5367431640625e-06], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.add_buff(Buff(ChangeAttack(2)))\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('minion_died', self._reveal)\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 1}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}, "hole1": "summon", "hole2": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "summon", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "card", "<EOS>", "summon", "<EOS>", 171, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 40, 110, "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "summon", "<EOS>", 171, 40, 110, "player", "<EOS>", 40, 110, "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "1", "<EOS>"], "score": -9.858630444616317, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -1.8343764543533325, 0.0, -0.4279986619949341, -1.1920928244535389e-07, -0.0002079010009765625, -0.015987396240234375, -1.9073486328125e-06, -0.017496109008789062, 0.0, -0.000827789306640625, 0.0, -0.001148223876953125, 0.0, -0.06549644470214844, -7.62939453125e-06, -0.001651763916015625, -1.71661376953125e-05, -0.0012607574462890625, -0.000202178955078125, -1.9073486328125e-06, 0.0, -2.682209014892578e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -0.18709754943847656, 0.0, -0.3010997772216797, -2.3841855067985307e-07, -0.00089263916015625, -7.62939453125e-06, -0.01165008544921875, -0.00055694580078125, -0.12637615203857422, -2.09808349609375e-05, -0.00162506103515625, 0.0, -0.009207963943481445, -3.933906555175781e-06, -0.06766700744628906, 0.0, -0.13807225227355957, 0.0, -0.0029659271240234375, -2.09808349609375e-05, -2.09808349609375e-05, -0.7172014713287354, -9.5367431640625e-06, -0.0003986358642578125, -8.392333984375e-05, -0.07790207862854004, -1.4662741705251392e-05, -0.000102996826171875, -0.05867767333984375, -0.08042335510253906, -1.9073486328125e-06, -0.4790076017379761, -4.649158654501662e-06, -1.0950833559036255, -1.4305104514278355e-06, -0.0003986358642578125, -0.0005054473876953125, -5.14984130859375e-05, -0.003926277160644531, -5.960462772236497e-07, -0.0009555816650390625, -1.52587890625e-05, -4.57763671875e-05, -5.7220458984375e-05, -5.53131103515625e-05, -7.43865966796875e-05, 0.0, 0.0, -0.00010418891906738281, 0.0, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.015759825706481934, -4.768360213347478e-06, -0.00034439563751220703, -3.814697265625e-06, -0.025002479553222656, -9.72747802734375e-05, -7.62939453125e-06, -0.0029327869415283203, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -0.038535118103027344, -1.33514404296875e-05, -5.745887756347656e-05, 0.0, -3.814697265625e-06, -0.013059496879577637, -3.2186455882765586e-06, -2.86102294921875e-05, -0.000978946452960372, -1.9073486328125e-06, -8.0108642578125e-05, -0.011699676513671875, -0.000164031982421875, -0.00313568115234375, -1.33514404296875e-05, -7.2479248046875e-05, -9.5367431640625e-05, -0.0060405731201171875, -0.000614166259765625, -2.86102294921875e-05, 0.0, -0.00040280818939208984, -4.52994936495088e-06, -0.00042724609375, 0.0, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, 0.0, -0.07595062255859375, -2.6702880859375e-05, -0.0042400360107421875, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -0.0002217292640125379, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.17044734954833984, -3.814697265625e-06, -0.000118255615234375, 0.0, -0.5408099889755249, -1.9073486328125e-06, -0.0064487457275390625, -3.814697265625e-06, -0.004188450053334236, 0.0, -1.9073486328125e-06, -0.6313400268554688, -3.4332275390625e-05, -8.58306884765625e-05, 0.0, -0.01215345785021782, 0.0], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.card.summon(self.player, game, len(player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 1}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "summon", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Name", "id": "new_card"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "summon", "<EOS>", 171, 40, 110, "player", "<EOS>", 40, 110, "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 40, 110, "new_card", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "1", "<EOS>"], "score": -10.057574354452498, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -0.7631381750106812, -1.1444091796875e-05, -0.0003299713134765625, -6.29425048828125e-05, -0.08769917488098145, -1.2278556823730469e-05, -0.0001010894775390625, -0.06571388244628906, -0.09153175354003906, -1.9073486328125e-06, -0.5011676549911499, -3.933904736186378e-06, -1.262330174446106, -1.5497195136049413e-06, -0.0003986358642578125, -0.0004825592041015625, -5.14984130859375e-05, -0.0040264129638671875, -5.960462772236497e-07, -0.0009479522705078125, -1.71661376953125e-05, -4.38690185546875e-05, -5.7220458984375e-05, -6.103515625e-05, -8.20159912109375e-05, 0.0, 0.0, -0.00012922286987304688, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.01913011074066162, -5.8412379075889476e-06, -0.0003567934036254883, -3.814697265625e-06, -0.0015125274658203125, -0.0049381256103515625, -0.3291893005371094, 0.0, -0.6639255285263062, -1.5497195136049413e-06, -0.09679698944091797, 0.0, -0.002941131591796875, -0.29734039306640625, -1.1444091796875e-05, -1.1683639287948608, -3.576278118089249e-07, -0.02908802032470703, -0.0057163238525390625, -0.000186920166015625, -0.02888929843902588, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -0.18570518493652344, -5.7220458984375e-06, -6.127357482910156e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00764775276184082, -2.9802276912960224e-06, -2.288818359375e-05, -0.0002725118538364768, -1.9073486328125e-06, -1.71661376953125e-05, -0.00518798828125, -0.000213623046875, -0.000904083251953125, -1.52587890625e-05, -9.918212890625e-05, -0.0001583099365234375, -0.018575668334960938, -0.00067901611328125, -9.34600830078125e-05, 0.0, -0.00039899349212646484, -2.50339189733495e-06, -0.0005016326904296875, 0.0, -1.9073486328125e-05, 0.0, -6.079673767089844e-06, 0.0, -0.07430076599121094, -2.86102294921875e-05, -0.0037364959716796875, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.00021624563669320196, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.16054153442382812, -3.814697265625e-06, -0.0001163482666015625, 0.0, -0.5572322607040405, -1.9073486328125e-06, -0.0065898895263671875, -3.814697265625e-06, -0.0041159046813845634, 0.0, -1.9073486328125e-06, -0.6408176422119141, -3.4332275390625e-05, -8.392333984375e-05, 0.0, -0.012262776494026184, 0.0], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.summon(player, game, len(player.minions))\n            mirror.<UNK>(new_card)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"model_output": {"hole3": "_reveal", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 1}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}]}], "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Repentance", "hole1": 1, "hole2": "PALADIN"}], "hole5": [{"arg": "attacker", "_type": "arg"}], "hole0": "Repentance", "hole4": "<UNK>", "hole6": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "mirror"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}]}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "<UNK>", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "mirror"}, "hole1": "summon", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "player"}, "hole1": "trigger", "hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "mirror"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}}]}, "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "summon", "<EOS>", 171, 40, 110, "player", "<EOS>", 40, 110, "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "1", "<EOS>"], "score": -10.510001111189837, "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -0.7631381750106812, -1.1444091796875e-05, -0.0003299713134765625, -6.29425048828125e-05, -0.08769917488098145, -1.2278556823730469e-05, -0.0001010894775390625, -0.06571388244628906, -0.09153175354003906, -1.9073486328125e-06, -0.5011676549911499, -3.933904736186378e-06, -1.262330174446106, -1.5497195136049413e-06, -0.0003986358642578125, -0.0004825592041015625, -5.14984130859375e-05, -0.0040264129638671875, -5.960462772236497e-07, -0.0009479522705078125, -1.71661376953125e-05, -4.38690185546875e-05, -5.7220458984375e-05, -6.103515625e-05, -8.20159912109375e-05, 0.0, 0.0, -0.00012922286987304688, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.01913011074066162, -5.8412379075889476e-06, -0.0003567934036254883, -3.814697265625e-06, -0.0015125274658203125, -0.0049381256103515625, -1.3222532272338867, -1.71661376953125e-05, -0.000347137451171875, 0.0, -0.33351004123687744, -2.503394853192731e-06, -0.013021469116210938, 0.0, -0.06312668323516846, 0.0, -0.0033435821533203125, -1.71661376953125e-05, -2.47955322265625e-05, -0.7353997230529785, -9.5367431640625e-06, -0.00043487548828125, -9.1552734375e-05, -0.07501757144927979, -1.263618378288811e-05, -0.000885009765625, -0.09154605865478516, -0.0003681182861328125, -0.07745087146759033, -1.9073486328125e-06, -5.91278076171875e-05, -7.62939453125e-06, -0.5002269744873047, -9.5367431640625e-06, -6.318092346191406e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.04654192924499512, -9.536738616588991e-07, -2.47955322265625e-05, -0.0011273621348664165, -1.9073486328125e-06, -1.9073486328125e-05, -0.007213592529296875, -0.0002536773681640625, -0.0025043487548828125, -1.33514404296875e-05, -0.0001888275146484375, -0.000194549560546875, -0.020294189453125, -0.0017833709716796875, -3.24249267578125e-05, -1.9073486328125e-06, -0.00025784969329833984, -2.145764938177308e-06, -0.0003643035888671875, 0.0, -3.24249267578125e-05, 0.0, -6.079673767089844e-06, 0.0, -0.0818033218383789, -3.24249267578125e-05, -0.004283905029296875, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.00021374224161263555, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.1479330062866211, -3.814697265625e-06, -0.0001277923583984375, 0.0, -0.567277193069458, -1.9073486328125e-06, -0.0064544677734375, -3.814697265625e-06, -0.004156400915235281, 0.0, -1.9073486328125e-06, -0.6331682205200195, -3.24249267578125e-05, -8.392333984375e-05, 0.0, -0.01189585030078888, 0.0], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.summon(player, game, len(player.minions))\n            minion.player.trigger('<UNK>', mirror)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}], "gold_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n        minion.set_health_to(1)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK>SpellDamage"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "Spell", "Damage", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -1.5669387541251183, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -0.6726865172386169, -0.27566540241241455, -8.869171142578125e-05, -0.0856180191040039, -0.000164031982421875, -0.0013070106506347656, -6.29425048828125e-05, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK>Deathrattle"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "Deathrattle", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -2.0837400517897606, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -1.510289192199707, -0.00013685226440429688, -0.03787040710449219, -0.00057220458984375, -0.0035119056701660156, -1.33514404296875e-05, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>Deathrattle(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK>Spell"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "Spell", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.259502049489498, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -0.6726865172386169, -1.7198373079299927, -0.19353389739990234, -8.392333984375e-05, -0.14169764518737793, -0.000316619873046875, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>Spell(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK><UNK><UNK>"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "<UNK>", "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.6766281686263085, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -1.4884529113769531, -1.1910755634307861, -0.14824724197387695, -0.18778419494628906, -0.0001735687255859375, -0.12929105758666992, -0.0002574920654296875, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK><UNK><UNK>(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK><UNK>SpellDamage"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "<UNK>", "Spell", "Damage", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.67906385283041, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -1.4884529113769531, -0.9130814075469971, -0.6878490447998047, -2.1457672119140625e-05, -0.05505657196044922, -0.00023651123046875, -0.002949237823486328, -7.05718994140625e-05, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK><UNK>SpellDamage(),\n            PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK><UNK>Spell"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "<UNK>", "Spell", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.25592046598959, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -1.4884529113769531, -0.9130814075469971, -0.9087619781494141, -0.2508726119995117, -0.0001392364501953125, -0.16295909881591797, -0.0003070831298828125, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK><UNK>Spell(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK><UNK>"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.454208310647488, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -1.4884529113769531, -2.153113603591919, -0.09853363037109375, -8.7738037109375e-05, -0.18244731426239014, -0.0002269744873046875, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK><UNK>(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 1, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK>SpellDamage"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "Spell", "Damage", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.467512705071783, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -3.099329710006714, -4.625213477993384e-05, -0.07023680210113525, 0.0, -0.008396506309509277, 0.0, -0.016613006591796875, 0.0, -1.3470647900248878e-05, 0.0, -1.9073486328125e-06, -0.00522613525390625, -0.0001201629638671875, -8.83340835571289e-05, -3.671578815556131e-05, -6.270408630371094e-05, -3.576278118089249e-07, -0.0687161311507225, -5.841255187988281e-06, -0.0001583099365234375, -0.011008262634277344, -0.005346775054931641, -0.00033080577850341797, -0.000274658203125, -0.013806343078613281, -1.9073486328125e-06, -0.06211639940738678, -0.680435061454773, -0.2712146043777466, -7.915496826171875e-05, -0.0827484130859375, -0.0001354217529296875, -0.001353621482849121, -5.53131103515625e-05, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK><UNK>Deathrattle"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "<UNK>", "Deathrattle", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.550266202493191, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -1.4884529113769531, -2.4648964405059814, -2.3365020751953125e-05, -0.062469482421875, -0.0007953643798828125, -0.0022634267807006836, -1.9073486328125e-05, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK><UNK>Deathrattle(),\n            PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "MAGE"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK>SpellDamage"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "Spell", "Damage", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.598224941826118, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -3.1585614681243896, 0.0, -0.008692383766174316, 0.0, -0.07418632507324219, 0.0, -1.9311873984406702e-05, 0.0, -1.9073486328125e-06, -0.0058135986328125, -0.000102996826171875, -8.64267349243164e-05, -3.2782016205601394e-05, -6.639957427978516e-05, -3.576278118089249e-07, -0.06196914613246918, -5.841255187988281e-06, -0.0001239776611328125, -0.011705398559570312, -0.005355358123779297, -0.00030601024627685547, -0.0002689361572265625, -0.013850212097167969, -1.9073486328125e-06, -0.06046349182724953, -0.6777472496032715, -0.3182889223098755, -8.106231689453125e-05, -0.08275604248046875, -0.000152587890625, -0.0013278722763061523, -5.91278076171875e-05, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK>Damage"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "Damage", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.748188538547225, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -4.203392028808594, -0.000688897562213242, -0.008319854736328125, -7.2479248046875e-05, -0.004298567771911621, -7.05718994140625e-05, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>Damage(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "WARRIOR"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK>SpellDamage"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "Spell", "Damage", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -4.845100799714999, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -3.4892709255218506, -8.106231689453125e-06, -0.005835650488734245, 0.0, -0.042217254638671875, 0.0, -1.5616398741258308e-05, 0.0, -1.9073486328125e-06, -0.00428009033203125, -0.0001926422119140625, -8.082389831542969e-05, -3.45700973412022e-05, -5.4955482482910156e-05, -3.576278118089249e-07, -0.054858263581991196, -5.841255187988281e-06, -0.00014495849609375, -0.010556221008300781, -0.005432605743408203, -0.00033843517303466797, -0.00023651123046875, -0.013761520385742188, -1.9073486328125e-06, -0.06345728039741516, -0.6750206351280212, -0.2786933183670044, -8.487701416015625e-05, -0.08277225494384766, -0.000156402587890625, -0.0013279914855957031, -6.103515625e-05, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK>SpellDamage"}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "IsMinion"}}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "Spell", "Damage", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "Is", "Minion", "<EOS>"], "score": -5.121819954319477, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -0.6726865172386169, -0.27566540241241455, -8.869171142578125e-05, -2.512209892272949, -1.52587890625e-05, -0.044573426246643066, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -0.8485117554664612, -0.23664848506450653, -2.288818359375e-05], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(), PlayerSelector(\n            IsMinion()))])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "Shadow<UNK><UNK>"}, {"_type": "Template19", "hole0": "PlayerSelector"}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Shadow", "<UNK>", "<UNK>", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -5.256873398973227, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -3.823533773422241, -0.052921172231435776, -0.12459957599639893, -0.24275588989257812, -0.32318973541259766, -0.0002498626708984375, -0.223028302192688, -0.0003376007080078125, 0.0], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(Shadow<UNK><UNK>(), PlayerSelector())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "EPIC", "_type": "Template6", "hole0": "Shadow of Nothing", "hole1": 0, "hole2": "PRIEST"}], "hole6": [{"hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template19", "hole0": "<UNK>SpellDamage"}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "<UNK>Player"}}]}, "_type": "Template9", "hole0": 0, "hole1": 1, "hole2": "auras"}], "hole0": "ShadowOfNothing", "hole4": "player"}, "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "Spell", "Damage", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "<UNK>", "Player", "<EOS>"], "score": -5.50639845612514, "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -0.6726865172386169, -0.27566540241241455, -8.869171142578125e-05, -2.512209892272949, -1.52587890625e-05, -0.044573426246643066, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -1.4511224031448364, -0.018189093098044395, -0.00045013427734375], "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(), PlayerSelector(\n            <UNK>Player()))])\n"}], "gold_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, False)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -1.137461075705673, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -0.6358261108398438, -2.47955322265625e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, -2.5033950805664062e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002422332763671875, -3.814697265625e-06, -2.288818359375e-05, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0014820098876953125, -1.9073486328125e-06, -0.0002384185791015625, -1.1682510375976562e-05, -0.19067811965942383, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.000202178955078125, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00023317337036132812, -7.62939453125e-06, -0.000606536865234375, -0.0008335113525390625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03940868377685547, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.000240325927734375, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.02096080780029297, -7.2479248046875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000244140625, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008612632751464844, -0.000194549560546875, -0.0012574295978993177, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.18160724639892578, -0.0003204345703125, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.050603270530700684, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -1.8963326294042275, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -1.4050331115722656, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -2.5033950805664062e-05, 0.0, -0.000110626220703125, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002765655517578125, -3.814697265625e-06, -2.288818359375e-05, -6.67572021484375e-05, -1.52587890625e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0015430450439453125, -1.9073486328125e-06, -0.000232696533203125, -9.775161743164062e-06, -0.17957746982574463, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.00020599365234375, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00023686885833740234, -7.62939453125e-06, -0.0006084442138671875, -0.0008392333984375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.62939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03956413269042969, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.000240325927734375, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.020816802978515625, -7.2479248046875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000244140625, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008609771728515625, -0.000194549560546875, -0.0012579048052430153, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.18231868743896484, -0.0003185272216796875, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.050577521324157715, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -2.526763806731637, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -2.025240898132324, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.8848648071289062e-05, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002880096435546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0015850067138671875, -1.9073486328125e-06, -0.000225067138671875, -9.775161743164062e-06, -0.18856263160705566, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00023651123046875, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00022923946380615234, -7.62939453125e-06, -0.0005855560302734375, -0.00081634521484375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.039315223693847656, -0.0002689361572265625, -2.288818359375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.0002384185791015625, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.021465301513671875, -7.43865966796875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002460479736328125, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008615493774414062, -0.000194549560546875, -0.0012573108542710543, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.18311405181884766, -0.0003185272216796875, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.05065000057220459, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -2.7980152452664555, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -0.6358261108398438, -2.47955322265625e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, -2.5033950805664062e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002422332763671875, -3.814697265625e-06, -2.288818359375e-05, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0014820098876953125, -1.9073486328125e-06, -0.0002384185791015625, -1.1682510375976562e-05, -1.7598919868469238, -2.47955322265625e-05, -3.4332275390625e-05, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -0.00024819374084472656, -7.62939453125e-06, -0.0007171630859375, -0.0008296966552734375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -8.392333984375e-05, 0.0, -3.7550926208496094e-05, 0.0, -0.04982948303222656, -0.000270843505859375, -2.288818359375e-05, -4.00543212890625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.0002384185791015625, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.02203655242919922, -7.82012939453125e-05, -0.000347137451171875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.00025177001953125, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008565902709960938, -0.000194549560546875, -0.001255998038686812, -2.9802276912960224e-06, -8.7738037109375e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.26149749755859375, -0.00029754638671875, -4.1961669921875e-05, 0.0, -3.62396240234375e-05, 0.0, -0.05055367946624756, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -3.6232873272683577, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -1.4050331115722656, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -2.5033950805664062e-05, 0.0, -0.000110626220703125, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002765655517578125, -3.814697265625e-06, -2.288818359375e-05, -6.67572021484375e-05, -1.52587890625e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0015430450439453125, -1.9073486328125e-06, -0.000232696533203125, -9.775161743164062e-06, -1.8148046731948853, -2.47955322265625e-05, -3.62396240234375e-05, 0.0, -8.7738037109375e-05, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -0.00025200843811035156, -7.62939453125e-06, -0.0007190704345703125, -0.0008335113525390625, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -8.392333984375e-05, 0.0, -3.7550926208496094e-05, 0.0, -0.04992198944091797, -0.000270843505859375, -2.288818359375e-05, -4.00543212890625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.0002384185791015625, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.02204418182373047, -7.82012939453125e-05, -0.000347137451171875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.00025177001953125, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008563995361328125, -0.000194549560546875, -0.0012563543859869242, -2.9802276912960224e-06, -8.7738037109375e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.2624979019165039, -0.00029754638671875, -4.1961669921875e-05, 0.0, -3.62396240234375e-05, 0.0, -0.05053842067718506, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.196272262518491, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -2.025240898132324, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.8848648071289062e-05, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002880096435546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0015850067138671875, -1.9073486328125e-06, -0.000225067138671875, -9.775161743164062e-06, -1.7682087421417236, -3.24249267578125e-05, -4.1961669921875e-05, 0.0, -9.918212890625e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -0.00024819374084472656, -7.62939453125e-06, -0.0007038116455078125, -0.00080108642578125, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -8.392333984375e-05, 0.0, -3.7550926208496094e-05, 0.0, -0.049645423889160156, -0.000270843505859375, -2.288818359375e-05, -4.00543212890625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.00023651123046875, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.022207260131835938, -7.82012939453125e-05, -0.000347137451171875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.00025177001953125, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008566856384277344, -0.000194549560546875, -0.0012559981551021338, -2.9802276912960224e-06, -8.7738037109375e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.2619647979736328, -0.00029754638671875, -4.1961669921875e-05, 0.0, -3.62396240234375e-05, 0.0, -0.05060708522796631, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DREAM"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.241437086981918, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -3.7371740341186523, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -3.0875205993652344e-05, 0.0, -9.72747802734375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002651214599609375, -3.814697265625e-06, -2.09808349609375e-05, -6.29425048828125e-05, -1.52587890625e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0014934539794921875, -1.9073486328125e-06, -0.0002288818359375, -9.775161743164062e-06, -0.18980622291564941, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002384185791015625, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -0.00023496150970458984, -7.62939453125e-06, -0.000583648681640625, -0.0008296966552734375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.7550926208496094e-05, 0.0, -0.03947734832763672, -0.0002689361572265625, -2.288818359375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.0002384185791015625, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.021356582641601562, -7.43865966796875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002460479736328125, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.00861358642578125, -0.000194549560546875, -0.0012574295978993177, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.1846323013305664, -0.0003185272216796875, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.05062425136566162, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.DREAM, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "<UNK>"}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>"], "score": -4.459009418410446, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -0.6358261108398438, -2.47955322265625e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, -2.5033950805664062e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002422332763671875, -3.814697265625e-06, -2.288818359375e-05, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0014820098876953125, -1.9073486328125e-06, -0.0002384185791015625, -1.1682510375976562e-05, -0.19067811965942383, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.000202178955078125, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00023317337036132812, -7.62939453125e-06, -0.000606536865234375, -0.0008335113525390625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03940868377685547, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.000240325927734375, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.02096080780029297, -7.2479248046875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000244140625, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008612632751464844, -0.000194549560546875, -0.0012574295978993177, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.18160724639892578, -0.0003204345703125, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -3.3721516132354736, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.<UNK>()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -4.871814498591434, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -4.3719377517700195, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0002765655517578125, 0.0, -2.491474151611328e-05, 0.0, -8.0108642578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002231597900390625, -3.814697265625e-06, -2.288818359375e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0013446807861328125, -1.9073486328125e-06, -0.000240325927734375, -9.775161743164062e-06, -0.18237805366516113, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.000225067138671875, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -0.00025773048400878906, -7.62939453125e-06, -0.0005893707275390625, -0.000858306884765625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03982353210449219, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.000324249267578125, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.0002384185791015625, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.02095317840576172, -7.43865966796875e-05, -0.000347137451171875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000244140625, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008612632751464844, -0.000194549560546875, -0.001257429365068674, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.18779945373535156, -0.0003147125244140625, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.050528883934020996, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "Is"}]}}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 181, 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -5.39131546966469, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -0.6358261108398438, -2.47955322265625e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, -2.5033950805664062e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002422332763671875, -3.814697265625e-06, -2.288818359375e-05, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0014820098876953125, -1.9073486328125e-06, -0.0002384185791015625, -1.1682510375976562e-05, -0.19067811965942383, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.000202178955078125, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00023317337036132812, -7.62939453125e-06, -0.000606536865234375, -0.0008335113525390625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03940868377685547, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.000240325927734375, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.02096080780029297, -7.2479248046875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000244140625, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008612632751464844, -0.000194549560546875, -0.0012574295978993177, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.8343477249145508, -0.10011577606201172, -0.0026569366455078125, -0.000507354736328125, -0.6300535202026367, -1.9073486328125e-06, -0.24762821197509766, -6.29425048828125e-05, -0.09705257415771484, -1.9073486328125e-06, -0.0046539306640625, 0.0, -0.0009098052978515625, -0.6775083541870117, 0.0, -0.37515735626220703, -3.4332275390625e-05, -0.10748481750488281, -5.53131103515625e-05, -0.0013723373413085938, 0.0, -0.08677291870117188, -1.9073486328125e-06, -0.0001621246337890625, -0.03833293914794922, -0.21829509735107422, -0.0016546249389648438, -0.000553131103515625, -0.024703025817871094, -2.3841855067985307e-07, -0.03638625144958496, -1.9073486328125e-06], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        if self.target is self.target:\n            player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_max_health"}}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "In"}]}}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 7, 169, 35, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>"], "score": -5.836573975414439, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -0.6358261108398438, -2.47955322265625e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, -2.5033950805664062e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002422332763671875, -3.814697265625e-06, -2.288818359375e-05, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0014820098876953125, -1.9073486328125e-06, -0.0002384185791015625, -1.1682510375976562e-05, -0.19067811965942383, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.000202178955078125, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00023317337036132812, -7.62939453125e-06, -0.000606536865234375, -0.0008335113525390625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03940868377685547, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.000240325927734375, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.02096080780029297, -7.2479248046875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000244140625, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008612632751464844, -0.000194549560546875, -0.0012574295978993177, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.8343477249145508, -0.10011577606201172, -0.0026569366455078125, -0.000507354736328125, -0.6300535202026367, -1.9073486328125e-06, -0.24762821197509766, -6.29425048828125e-05, -0.09705257415771484, -1.9073486328125e-06, -0.0046539306640625, 0.0, -0.0009098052978515625, -0.8249883651733398, -6.29425048828125e-05, -0.4085693359375, -0.15515422821044922, -2.6702880859375e-05, -1.9073486328125e-06, -0.09524917602539062, 0.0, -0.000896453857421875, -3.814697265625e-06, -0.0013933181762695312, -1.9073486328125e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -0.2734718322753906, -3.814697265625e-06, -0.00218963623046875, -0.01765918731689453, -0.0051631927490234375, -0.06892681121826172, -0.0001678466796875, -0.15181350708007812, 0.0, -7.450580596923828e-05, -1.1920928244535389e-07, -0.0001087188720703125, -4.00543212890625e-05, -0.0012922286987304688, -5.7220458984375e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.0001533031463623047, -2.0265579223632812e-06, -0.0036488771438598633, -9.655952453613281e-06, -1.52587890625e-05, -0.0015468597412109375, -0.0001430511474609375, -0.0005763844819739461, -4.291525328881107e-06, -0.0001220703125, 0.0, -0.000133514404296875, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        if self.target in self.target.calculate_max_health():\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Num", "n": 2}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -5.854649909223532, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -0.6358261108398438, -2.47955322265625e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, -2.5033950805664062e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002422332763671875, -3.814697265625e-06, -2.288818359375e-05, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0014820098876953125, -1.9073486328125e-06, -0.0002384185791015625, -1.1682510375976562e-05, -0.19067811965942383, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.000202178955078125, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00023317337036132812, -7.62939453125e-06, -0.000606536865234375, -0.0008335113525390625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03940868377685547, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.000240325927734375, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -3.9476890563964844, -0.00026702880859375, -0.008731850422918797, -3.218649908376392e-06, -5.53131103515625e-05, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.9877843856811523, -0.00028228759765625, -2.86102294921875e-05, 0.0, -6.4849853515625e-05, -1.1920928244535389e-07, -0.037320733070373535, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2, self)\n        player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "ops": [{"_type": "Is"}]}}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 181, 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -6.143949993333948, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -1.4050331115722656, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -2.5033950805664062e-05, 0.0, -0.000110626220703125, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002765655517578125, -3.814697265625e-06, -2.288818359375e-05, -6.67572021484375e-05, -1.52587890625e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0015430450439453125, -1.9073486328125e-06, -0.000232696533203125, -9.775161743164062e-06, -0.17957746982574463, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.00020599365234375, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00023686885833740234, -7.62939453125e-06, -0.0006084442138671875, -0.0008392333984375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.62939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03956413269042969, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.000240325927734375, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.020816802978515625, -7.2479248046875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000244140625, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008609771728515625, -0.000194549560546875, -0.0012579048052430153, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.830714225769043, -0.1000204086303711, -0.002655029296875, -0.000507354736328125, -0.6301136016845703, -1.9073486328125e-06, -0.24677181243896484, -6.29425048828125e-05, -0.09697246551513672, -1.9073486328125e-06, -0.004658699035644531, 0.0, -0.0009098052978515625, -0.6769647598266602, 0.0, -0.3749551773071289, -3.4332275390625e-05, -0.10741806030273438, -5.53131103515625e-05, -0.0013723373413085938, 0.0, -0.0867624282836914, -1.9073486328125e-06, -0.0001621246337890625, -0.03835010528564453, -0.21814632415771484, -0.0016536712646484375, -0.000553131103515625, -0.0247039794921875, -2.3841855067985307e-07, -0.036390066146850586, -1.9073486328125e-06], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        if self.target is self.target:\n            player.draw()\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}, "ops": [{"_type": "Is"}]}}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>"], "score": -6.494595046152639, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -0.6358261108398438, -2.47955322265625e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, -2.5033950805664062e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002422332763671875, -3.814697265625e-06, -2.288818359375e-05, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0014820098876953125, -1.9073486328125e-06, -0.0002384185791015625, -1.1682510375976562e-05, -0.19067811965942383, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.000202178955078125, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00023317337036132812, -7.62939453125e-06, -0.000606536865234375, -0.0008335113525390625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03940868377685547, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.000240325927734375, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.02096080780029297, -7.2479248046875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000244140625, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008612632751464844, -0.000194549560546875, -0.0012574295978993177, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.8343477249145508, -0.10011577606201172, -0.0026569366455078125, -0.000507354736328125, -1.0361213684082031, -7.82012939453125e-05, -0.000736236572265625, -7.82012939453125e-05, -0.010061860084533691, 0.0, -1.9073486328125e-06, -0.0062541961669921875, -2.09808349609375e-05, -0.08154678344726562, 0.0, -0.0018558502197265625, -2.09808349609375e-05, -0.3344898223876953, -5.53131103515625e-05, -0.03292560577392578, -5.7220458984375e-06, -0.3694276809692383, -3.814697265625e-06, -0.0002613067626953125, -0.05978965759277344, 0.0, -0.0018978118896484375, -0.0006561279296875, -0.08714580535888672, -5.91278076171875e-05, -0.13130855560302734, 0.0, -0.04153251647949219, -1.9073486328125e-06, -0.0001277923583984375, -0.03626060485839844, -0.055988311767578125, -0.20387840270996094, -0.0018177032470703125, -1.1467939615249634, -1.1920922133867862e-06, -0.0002690553665161133, 0.0, -4.1961669921875e-05, -3.814697265625e-05, -0.0016078948974609375, -5.340576171875e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0004144906997680664, -2.1457672119140625e-06, -0.005945324897766113, -9.655952453613281e-06, -1.71661376953125e-05, -0.0014820098876953125, -0.0001220703125, -0.0006126024527475238, -7.986990567587782e-06, -0.0001316070556640625, 0.0, -0.0001392364501953125, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        if len(self.target.card) is self.target:\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SpellCard", "hole2": [{"hole3": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Slam", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}, {"_type": "If", "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "Both"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_spell_damage"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}], "test": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "card"}]}, "ops": [{"_type": "Is"}]}}]}, "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 181, 71, 137, 21, 110, "Both", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>"], "score": -7.056893722842645, "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -0.6358261108398438, -2.47955322265625e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, -2.5033950805664062e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002422332763671875, -3.814697265625e-06, -2.288818359375e-05, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0014820098876953125, -1.9073486328125e-06, -0.0002384185791015625, -1.1682510375976562e-05, -0.19067811965942383, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.000202178955078125, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00023317337036132812, -7.62939453125e-06, -0.000606536865234375, -0.0008335113525390625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03940868377685547, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.000240325927734375, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.02096080780029297, -7.2479248046875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000244140625, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008612632751464844, -0.000194549560546875, -0.0012574295978993177, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.8343477249145508, -0.10011577606201172, -0.0026569366455078125, -0.000507354736328125, -1.0361213684082031, -7.82012939453125e-05, -0.000736236572265625, -7.82012939453125e-05, -0.010061860084533691, 0.0, -1.9073486328125e-06, -0.0062541961669921875, -2.09808349609375e-05, -0.08154678344726562, 0.0, -0.0018558502197265625, -2.09808349609375e-05, -0.3344898223876953, -5.53131103515625e-05, -0.03292560577392578, -5.7220458984375e-06, -0.3694276809692383, -3.814697265625e-06, -0.0002613067626953125, -0.05978965759277344, 0.0, -0.0018978118896484375, -0.0006561279296875, -0.08714580535888672, -5.91278076171875e-05, -0.13130855560302734, 0.0, -0.04153251647949219, -1.9073486328125e-06, -0.0001277923583984375, -0.03626060485839844, -0.055988311767578125, -0.20387840270996094, -0.0018177032470703125, -1.6591211557388306, -0.04195237159729004, -0.007588982582092285, -2.3841855067985307e-07, -9.5367431640625e-06, -5.53131103515625e-05, -0.0038690567016601562, -0.00026702880859375, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.0006154775619506836, -2.1457672119140625e-06, -0.004343152046203613, -1.3470649719238281e-05, -1.71661376953125e-05, -0.0010242462158203125, -0.0001316070556640625, -0.0006654333556070924, -8.940656698541716e-06, -0.0001735687255859375, 0.0, -0.0001316070556640625, 0.0], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        if len(self.target.card) is self.target:\n            Both.damage(player.effective_spell_damage(2), self)\n"}], "gold_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health > player.effective_spell_damage(2\n            ) or self.target.divine_shield:\n            self.target.damage(player.effective_spell_damage(2), self)\n            player.draw()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Silence"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Silence", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -0.30274088311963965, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -0.2781470715999603, -0.00019047902605962008, -2.6702880859375e-05, -6.866455078125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.9948215746553615e-05, -0.0016269683837890625, 0.0, -0.000492095947265625, -2.09808349609375e-05, -1.9073486328125e-06, -0.006716728210449219, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0010696649551391602, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.002506732940673828, 0.0, -8.0108642578125e-05, 0.0, -0.0003395079984329641, -2.47955322265625e-05, -2.0265579223632812e-06, -9.655952453613281e-06, 0.0, -2.133843008778058e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0004174709029030055, -3.6954811548639555e-06, -0.0007199046085588634, -1.1801719665527344e-05], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -3.255924021096888, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -0.4774465560913086, -0.00708770751953125, -0.0001430511474609375, -3.814697265625e-05, -1.9073486328125e-06, -0.06850957870483398, -0.4928706884384155, 0.0, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -0.005844353698194027, -1.0609570381348021e-05, -0.5376653671264648, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.001257777214050293, -3.0517578125e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018312849570065737, -0.0002484321594238281, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -3.1709467293694615e-05, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0004527568817138672, -9.536697689327411e-06, -0.0005772106815129519, -6.079673767089844e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.BEAST), BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -3.8609543524068783, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -1.9602317810058594, -6.866455078125e-05, -1.1444091796875e-05, -0.0008572336519137025, -0.0004119873046875, 0.0, -0.0014810562133789062, -0.26852989196777344, -0.0001430511474609375, -1.7523765563964844e-05, -3.814697265625e-06, -0.0001125335693359375, -0.00019073486328125, -5.7220458984375e-06, -0.04989171028137207, 0.0, -9.5367431640625e-06, 0.0, -0.114837646484375, -6.330013275146484e-05, -3.933906555175781e-06, -7.271766662597656e-05, 0.0, -9.417517503607087e-06, 0.0, -1.9073486328125e-05, -0.0001678466796875, -3.814697265625e-06, -0.00018453598022460938, -5.245195097813848e-06, -0.0006140462355688214, -7.987022399902344e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Null, picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Is<UNK>"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "<UNK>", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.207944916500054, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -0.4774465560913086, -0.00708770751953125, -0.0001430511474609375, -3.814697265625e-05, -1.9073486328125e-06, -0.06850957870483398, -1.0284398794174194, -5.245207830739673e-06, -0.000209808349609375, -0.011190414428710938, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.19521667063236237, -1.645074735279195e-05, -0.7530717849731445, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.001544356346130371, -3.0517578125e-05, -3.814697265625e-06, -0.0001220703125, -1.9073486328125e-06, -0.0018360493704676628, -0.00025594234466552734, -9.894371032714844e-06, -7.152556463552173e-06, 0.0, -2.777559893729631e-05, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00043201446533203125, -8.583032467868179e-06, -0.0005772106815129519, -7.987022399902344e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Is<UNK>(MINION_TYPE.DRAGON), BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.250567824407625, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -0.4774465560913086, -0.00708770751953125, -0.0001430511474609375, -3.814697265625e-05, -1.9073486328125e-06, -0.06850957870483398, -0.4928706884384155, 0.0, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -0.005844353698194027, -1.0609570381348021e-05, -1.5322790145874023, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -0.0011843442916870117, -2.6702880859375e-05, -3.814697265625e-06, -0.0001068115234375, -1.9073486328125e-06, -0.0018925543408840895, -0.00026547908782958984, -1.1801719665527344e-05, -7.152556463552173e-06, 0.0, -2.7894804588868283e-05, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0004526376724243164, -9.775113539944869e-06, -0.0005795949255116284, -6.079673767089844e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.DRAGON), BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template19", "hole0": "Silence"}, {"_type": "Template19", "hole0": "SelfSelector"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 50, 146, "Silence", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.424061400146542, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -1.2088050842285156, -0.04994964599609375, -3.814697265625e-05, -0.5147433876991272, -0.021616695448756218, -0.31703662872314453, 0.0, -0.649215817451477, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -1.3113007298670709e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, 0.0, -0.0002713203430175781, -1.0728830375228426e-06, -0.0006945126224309206, -7.867813110351562e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Silence(), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.550297651228192, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -0.4774465560913086, -0.00708770751953125, -0.0001430511474609375, -3.814697265625e-05, -1.9073486328125e-06, -0.06850957870483398, -0.4928706884384155, 0.0, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -0.005844353698194027, -1.0609570381348021e-05, -1.8319625854492188, 0.0, -1.71661376953125e-05, 0.0, -0.0012347698211669922, -2.47955322265625e-05, -5.7220458984375e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.0019073389703407884, -0.0002982616424560547, -1.3828277587890625e-05, -7.271765298355604e-06, 0.0, -2.837163265212439e-05, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0004903078079223633, -1.2516897186287679e-05, -0.0005609983927570283, -6.198883056640625e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Is<UNK>"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "<UNK>", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.726167369481772, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -0.4774465560913086, -0.00708770751953125, -0.0001430511474609375, -3.814697265625e-05, -1.9073486328125e-06, -0.06850957870483398, -1.0284398794174194, -5.245207830739673e-06, -0.000209808349609375, -0.011190414428710938, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.19521667063236237, -1.645074735279195e-05, -1.271468162536621, 0.0, -4.38690185546875e-05, 0.0, -0.0014334917068481445, -3.0517578125e-05, -5.7220458984375e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0018192427232861519, -0.0002447366714477539, -1.1801719665527344e-05, -7.152556463552173e-06, 0.0, -2.9444496249197982e-05, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00043392181396484375, -8.583032467868179e-06, -0.0005748264375142753, -7.987022399902344e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Is<UNK>(MINION_TYPE.BEAST), BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.885410615429663, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -3.4094247817993164, -1.1444091796875e-05, -9.5367431640625e-06, -3.48087414749898e-05, -0.0008258819580078125, 0.0, -0.0007314682006835938, -1.9073486328125e-05, -1.9073486328125e-06, -0.006474614143371582, 0.0, -5.7220458984375e-06, 0.0, -0.0009484291076660156, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.00225067138671875, 0.0, -8.20159912109375e-05, 0.0, -0.0003447532362770289, -2.6702880859375e-05, -2.0265579223632812e-06, -7.748603820800781e-06, 0.0, -2.1576848666882142e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00041759011219255626, -3.6954811548639555e-06, -0.0006895062397234142, -1.1801719665527344e-05], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template19", "hole0": "Silence"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 50, 146, "Silence", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.9233308859454326, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -1.2088050842285156, -0.04994964599609375, -3.814697265625e-05, -0.5147433876991272, -0.021616695448756218, -1.3089466094970703, -0.14499473571777344, -1.71661376953125e-05, 0.0, -6.0439084336394444e-05, -0.0004062652587890625, 0.0, -0.00200653076171875, -1.33514404296875e-05, 0.0, -0.004279136657714844, 0.0, -7.62939453125e-06, 0.0, -0.0009610652923583984, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0032007694244384766, 0.0, -7.82012939453125e-05, 0.0, -0.0003329514875076711, -2.86102294921875e-05, -2.0265579223632812e-06, -7.748603820800781e-06, 0.0, -2.1815263608004898e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0004154443449806422, -3.576272320060525e-06, -0.0006948707159608603, -1.1801719665527344e-05], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Silence(), MinionSelector(players=BothPlayer(), picker=\n            UserPicker()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template19", "hole0": "Silence"}, {"_type": "Template19", "hole0": "BothPlayer"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 50, 146, "Silence", "<EOS>", 50, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -4.94703386494777, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -1.2088050842285156, -0.04994964599609375, -3.814697265625e-05, -0.5147433876991272, -0.021616695448756218, -0.31703662872314453, 0.0, -1.171866536140442, -0.0002442598342895508, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.218644633307122e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003358125686645508, -2.9802276912960224e-06, -0.0007017846801318228, -9.775161743164062e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Silence(), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Is<UNK>"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "<UNK>", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -5.133147761593335, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -0.4774465560913086, -0.00708770751953125, -0.0001430511474609375, -3.814697265625e-05, -1.9073486328125e-06, -0.06850957870483398, -1.0284398794174194, -5.245207830739673e-06, -0.000209808349609375, -0.011190414428710938, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.19521667063236237, -1.645074735279195e-05, -1.6783151626586914, 0.0, -1.1444091796875e-05, 0.0, -0.0014046430587768555, -2.288818359375e-05, -5.7220458984375e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0019520384958013892, -0.00028145313262939453, -1.1801719665527344e-05, -7.271765298355604e-06, 0.0, -3.027898128493689e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00047528743743896484, -1.0967194612021558e-05, -0.0005666011711582541, -6.198883056640625e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Is<UNK>(MINION_TYPE.MURLOC), BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Template13", "hole0": "TargetSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 46, 128, "Target", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -5.2160084472986625, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -1.2088050842285156, -0.04994964599609375, -3.814697265625e-05, -1.314700722694397, -0.003145093098282814, -0.5055475234985352, -5.7220458984375e-05, -0.3411825895309448, -0.00010132789611816406, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.12968753278255463, -0.00022554397583007812, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -7.200177060440183e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, -1.9073486328125e-06, -0.0003010034270118922, -1.9073468138230965e-06, -0.0004333247197791934, -2.0265579223632812e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Kill(), TargetSelector(EnemyPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Is<UNK>"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}, {"_type": "Template19", "hole0": "BothPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 35, 87, 21, 110, "Is", "<UNK>", "<EOS>", 169, 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 50, 146, "Both", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -5.385678441516603, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -0.19663619995117188, -5.340576171875e-05, -0.000156402587890625, -0.00033817256917245686, -0.0014190673828125, 0.0, -0.4774465560913086, -0.00708770751953125, -0.0001430511474609375, -3.814697265625e-05, -1.9073486328125e-06, -0.06850957870483398, -1.0284398794174194, -5.245207830739673e-06, -0.000209808349609375, -0.011190414428710938, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.7749581336975098, -5.960462772236497e-07, -0.3518342971801758, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0003038644790649414, -2.86102294921875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.9073486328125e-06, -0.0023420921061187983, -0.00027763843536376953, -1.7642974853515625e-05, -7.271765298355604e-06, 0.0, -2.9444532628986053e-05, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00043392181396484375, -8.34461570775602e-06, -0.0005699388566426933, -7.987022399902344e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Is<UNK>(CARD_RARITY.LEGENDARY), BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}], "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}], "hole0": "Spellbreaker", "hole4": "player"}, "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -5.438431005469482, "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -1.4523671865463257, -0.000316212244797498, -0.000225067138671875, -1.9602317810058594, -6.866455078125e-05, -1.1444091796875e-05, -0.0008572336519137025, -0.0004119873046875, 0.0, -0.0014810562133789062, -1.4745101928710938, -0.0006885528564453125, -5.7220458984375e-06, 0.0, -0.000616310047917068, -0.003129039891064167, 0.0, -1.33514404296875e-05, -4.76837158203125e-05, 0.0, -3.814697265625e-06, 0.0, -7.712840306339785e-05, -8.34461570775602e-06, -0.009981155395507812, -1.9073486328125e-06, -0.5039968490600586, -1.9073486328125e-06, -1.9073486328125e-06, -0.017391562461853027, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007333754911087453, -8.392333984375e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -1.8000591808231547e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0004169940948486328, -4.529942543740617e-06, -0.0005713693099096417, -7.867813110351562e-06], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}], "gold_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -1.633027438334345, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -0.35268497467041016, -0.4248192608356476, -3.576278118089249e-07, -1.52587890625e-05, -1.9073486328125e-06, -0.21363089978694916, -0.022087886929512024, -0.4206218719482422, -1.9073486328125e-06, -0.1576671451330185, 0.0, 0.0, -6.079673767089844e-06, 0.0, -9.071482054423541e-05, 0.0, -3.4332275390625e-05, -0.00131988525390625, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -0.0001866816310212016, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Summon(Taunt()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Taunt", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -2.1414502343794624, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -0.35268497467041016, -0.4248192608356476, -3.576278118089249e-07, -1.52587890625e-05, -1.9073486328125e-06, -0.21363089978694916, -0.022087886929512024, -1.0697145462036133, -0.0006465911865234375, -3.4332275390625e-05, -1.9073486328125e-06, -0.0005475739017128944, -0.000347137451171875, -1.1920928244535389e-07, -0.0036830902099609375, -1.9073486328125e-06, -1.1444091796875e-05, -0.003407597541809082, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.009554624557495117, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.9127451095264405e-05, 0.0, -1.52587890625e-05, -7.82012939453125e-05, -2.09808349609375e-05, -8.225431884056889e-06, 0.0, -0.00017833703896030784, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Summon(Taunt()),\n            MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Taunt", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -2.2875160963280194, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -0.35268497467041016, -1.6027883291244507, -7.5101784204889555e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.026975587010383606, -0.0136477742344141, -0.2211780548095703, -0.0008220672607421875, -2.86102294921875e-05, 0.0, -0.0007797405123710632, -0.0002765655517578125, -1.1920928244535389e-07, -0.018337249755859375, -1.9073486328125e-06, -1.33514404296875e-05, -0.002849578857421875, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.006850600242614746, -3.814697265625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.96043246332556e-05, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -2.6702880859375e-05, -9.775153557711747e-06, 0.0, -0.00017058843513950706, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Taunt()),\n            MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -3.004447411766634, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -1.217360496520996, -0.0046655843034386635, -0.012488842010498047, -2.47955322265625e-05, -1.71661376953125e-05, -0.37675875425338745, -1.1548316478729248, -0.0014696121215820312, -0.03908348083496094, -0.025099754333496094, -0.006189460400491953, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0023781699128448963, -0.008098931051790714, -0.10148429870605469, -5.7220458984375e-06, -0.013448676094412804, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, 0.0, -8.260922913905233e-05, 0.0, -4.76837158203125e-05, -0.0009174346923828125, -1.33514404296875e-05, -7.390969585685525e-06, 0.0, -0.0001109837758122012, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Buff(Taunt()))),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "adjacentminions"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "adjacent", "minions", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -3.0206415673545663, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -0.35268497467041016, -0.4248192608356476, -3.576278118089249e-07, -1.52587890625e-05, -1.9073486328125e-06, -1.869213342666626, -0.3273417055606842, -0.0006295844214037061, -0.00197601318359375, 0.0, -0.003216240555047989, 0.0, 0.0, -8.225440979003906e-06, 0.0, -0.00010501882206881419, 0.0, -2.09808349609375e-05, -0.0005626678466796875, -1.33514404296875e-05, -8.344639354618266e-06, 0.0, -0.00018858895055018365, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Summon(adjacentminions()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -3.511497994442685, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -0.35268497467041016, -0.4248192608356476, -3.576278118089249e-07, -1.52587890625e-05, -1.9073486328125e-06, -0.21363089978694916, -0.022087886929512024, -0.4206218719482422, -1.9073486328125e-06, -2.0362815856933594, -2.3841855067985307e-07, 0.0, -1.537799835205078e-05, 0.0, -7.533797906944528e-05, 0.0, -4.38690185546875e-05, -0.0011997222900390625, -1.1444091796875e-05, -1.0490406566532329e-05, 0.0, -0.00015985954087227583, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Summon(Taunt()),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -3.7505691794907463, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -0.35268497467041016, -1.6027883291244507, -7.5101784204889555e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.026975587010383606, -0.0136477742344141, -1.6203498840332031, -3.814697265625e-06, -0.09254893660545349, -3.576278118089249e-07, 0.0, -1.537799835205078e-05, 0.0, -7.104672840796411e-05, 0.0, -4.38690185546875e-05, -0.00140380859375, -1.1444091796875e-05, -1.0132780516869389e-05, 0.0, -0.00015532958786934614, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Taunt()),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "adjacentProtector"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "adjacent", "Protector", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -4.303842502027571, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -0.35268497467041016, -0.4248192608356476, -3.576278118089249e-07, -1.52587890625e-05, -1.9073486328125e-06, -1.869213342666626, -1.4109503030776978, -0.15227492153644562, -0.0008087158203125, -1.9073486328125e-06, -0.05180971324443817, 0.0, 0.0, -6.914137884450611e-06, 0.0, -0.00011372043081792071, 0.0, -9.5367431640625e-06, -0.0011196136474609375, -1.71661376953125e-05, -8.702266313775908e-06, 0.0, -0.00015044197789393365, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Summon(adjacentProtector(\n            )), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "<UNK>"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "Adjacent"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "<UNK>", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -4.568211797745704, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -1.217360496520996, -0.0046655843034386635, -0.012488842010498047, -2.47955322265625e-05, -1.71661376953125e-05, -1.6266165971755981, -1.013081669807434, -0.06647872924804688, -0.002899169921875, -1.33514404296875e-05, -0.1229543685913086, -0.00016437610611319542, -0.016294479370117188, -0.000286102294921875, -1.9073486328125e-05, 0.0, -8.392333984375e-05, -0.00063323974609375, -1.9073486328125e-06, -0.016752243041992188, -1.52587890625e-05, -1.71661376953125e-05, -0.08912801742553711, -1.9073486328125e-06, -0.14850997924804688, -0.00018310546875, -0.18866443634033203, -1.537799835205078e-05, -2.0384788513183594e-05, 0.0, -0.0005586088518612087, 0.0, -1.9073486328125e-06, -0.00028228759765625, -1.33514404296875e-05, -7.867804924899247e-06, 0.0, -0.00012016280379611999, -2.3841855067985307e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(<UNK>(1)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "minions"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "Adjacent"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "minions", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -4.719049503019875, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -1.217360496520996, -0.0046655843034386635, -0.012488842010498047, -2.47955322265625e-05, -1.71661376953125e-05, -2.90785551071167, -0.004782078322023153, -0.0005645751953125, -0.004418373107910156, -1.52587890625e-05, -0.025535739958286285, -9.548207890475169e-05, -0.0172882080078125, -0.000484466552734375, -2.09808349609375e-05, 0.0, -4.9591064453125e-05, -0.000347137451171875, 0.0, -0.018453598022460938, -1.9073486328125e-05, -2.86102294921875e-05, -0.15937602519989014, 0.0, -0.13593292236328125, -0.0002040863037109375, -0.16823208332061768, -1.1444091796875e-05, -1.811981201171875e-05, 0.0, -0.0004725413164123893, 0.0, -1.9073486328125e-06, -0.0003070831298828125, -1.33514404296875e-05, -7.867804924899247e-06, 0.0, -0.00012063964095432311, -2.3841855067985307e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(minions(1)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -4.767622201208546, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -4.194544792175293, -0.0015201568603515625, -1.9073486328125e-05, -1.9073486328125e-06, -0.15730272233486176, -0.0018726240377873182, -0.000362396240234375, -7.62939453125e-05, -3.814697265625e-06, -0.056328773498535156, -3.814697265625e-06, -0.1723184585571289, -0.0008528393227607012, -4.768370445162873e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.0017920008394867182, -0.0046883816830813885, -3.24249267578125e-05, -4.76837158203125e-05, -0.051028456538915634, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0008042637491598725, -0.014228885993361473, -0.08948802947998047, -5.7220458984375e-06, -0.012680087238550186, -3.933906555175781e-06, 0.0, -2.47955322265625e-05, 0.0, -5.4835410992382094e-05, 0.0, -4.1961669921875e-05, -0.0021820068359375, -1.33514404296875e-05, -1.0013571227318607e-05, 0.0, -0.00015377989620901644, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Taunt()), Buff\n            (Taunt())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "<UNK>Attack"}, "hole2": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "Adjacent"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "<UNK>", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -4.864725470046238, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -1.217360496520996, -0.0046655843034386635, -0.012488842010498047, -2.47955322265625e-05, -1.71661376953125e-05, -1.6266165971755981, -0.6611329317092896, -1.2278556823730469e-05, -0.6615791320800781, -0.000225067138671875, -7.62939453125e-06, -0.09542499482631683, -4.9232225137529895e-05, -0.13117408752441406, -0.00051116943359375, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -0.001064300537109375, -3.933906555175781e-06, -0.011960983276367188, -7.62939453125e-06, -2.86102294921875e-05, -0.06913614273071289, -1.9073486328125e-06, -0.16111373901367188, -0.00022125244140625, -0.16890990734100342, -1.919269561767578e-05, -2.241134461655747e-05, 0.0, -0.0006004495662637055, 0.0, -1.9073486328125e-06, -0.000270843505859375, -1.33514404296875e-05, -7.987013304955326e-06, 0.0, -0.00011968598118983209, -2.3841855067985307e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(<UNK>Attack(1)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "BuffUntil"}, "hole2": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "Adjacent"}}]}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "Until", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Adjacent", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -5.232285433494262, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -1.217360496520996, -0.0046655843034386635, -0.012488842010498047, -2.47955322265625e-05, -1.71661376953125e-05, -0.37675875425338745, -0.38554832339286804, -1.1920928955078125e-05, -0.10357856750488281, -0.12693309783935547, -1.9073486328125e-05, -0.09303111582994461, -0.0004897998878732324, -5.710122059099376e-05, -0.6545692682266235, -0.00026067771250382066, -0.49295902252197266, -0.0032825469970703125, -5.340576171875e-05, -1.9073486328125e-06, -0.08213317394256592, -0.00016021728515625, 0.0, -0.0027561187744140625, -1.9073486328125e-05, -3.814697265625e-06, -0.01631450653076172, 0.0, -0.24999237060546875, -0.0001888275146484375, -1.0275863409042358, -0.00011527538299560547, -0.0060176849365234375, -3.814697265625e-06, -0.3340262174606323, 0.0, 0.0, -1.728534698486328e-05, 0.0, -0.0001008481704047881, 0.0, -7.62939453125e-06, -0.000743865966796875, -1.71661376953125e-05, -4.649158654501662e-06, 0.0, -0.00012934196274727583, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(BuffUntil(\n            ChangeAttack(2), MinionSelector(condition=Adjacent()))),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "BuffUntil"}, "hole2": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsMinion"}}]}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "Until", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Minion", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -5.384978058798815, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -1.217360496520996, -0.0046655843034386635, -0.012488842010498047, -2.47955322265625e-05, -1.71661376953125e-05, -0.37675875425338745, -0.38554832339286804, -1.1920928955078125e-05, -0.10357856750488281, -0.12693309783935547, -1.9073486328125e-05, -0.09303111582994461, -0.0004897998878732324, -5.710122059099376e-05, -0.6545692682266235, -0.00026067771250382066, -0.49295902252197266, -0.0032825469970703125, -5.340576171875e-05, -1.9073486328125e-06, -0.08213317394256592, -0.00016021728515625, 0.0, -0.0027561187744140625, -1.9073486328125e-05, -3.814697265625e-06, -0.01631450653076172, 0.0, -0.24999237060546875, -0.0001888275146484375, -0.5696643590927124, -0.1394013911485672, -0.00246429443359375, -0.0048732757568359375, -3.814697265625e-06, -0.8038327693939209, -4.172325134277344e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.00016032806888688356, 0.0, -9.5367431640625e-06, -0.0008697509765625, -1.52587890625e-05, -5.125993993715383e-06, 0.0, -0.000139236290124245, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(BuffUntil(\n            ChangeAttack(2), MinionSelector(condition=IsMinion()))),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "BuffUntil"}, "hole2": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsMinion"}}]}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 3}], "hole0": "SunfuryProtector", "hole4": "player"}, "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "Until", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Minion", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -5.58140781969626, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -1.217360496520996, -0.0046655843034386635, -0.012488842010498047, -2.47955322265625e-05, -1.71661376953125e-05, -0.37675875425338745, -0.38554832339286804, -1.1920928955078125e-05, -0.10357856750488281, -0.12693309783935547, -1.9073486328125e-05, -0.09303111582994461, -0.0004897998878732324, -5.710122059099376e-05, -0.8944868445396423, -8.583057933719829e-06, -0.1401205062866211, -0.0021686553955078125, -4.76837158203125e-05, 0.0, -0.22516679763793945, -0.000202178955078125, 0.0, -0.00203704833984375, -2.09808349609375e-05, -5.7220458984375e-06, -0.018530843779444695, 0.0, -0.35356998443603516, -0.0001068115234375, -0.6498876810073853, -0.1402893215417862, -0.0028238296508789062, -0.00514984130859375, -3.814697265625e-06, -0.7847286462783813, -4.172325134277344e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.00015806338342372328, 0.0, -9.5367431640625e-06, -0.000885009765625, -1.52587890625e-05, -5.125993993715383e-06, 0.0, -0.00013506397954188287, -1.1920928244535389e-07], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(BuffUntil(\n            ChangeAttack(3), MinionSelector(condition=IsMinion()))),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}], "gold_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Taunt())),\n            MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -2.307603812527013, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -0.3271484375, -9.1552734375e-05, -0.0005397796630859375, -0.00019168853759765625, -4.1961669921875e-05, -0.0001068115234375, 0.0, -0.48200833797454834, -7.2479248046875e-05, -2.86102294921875e-05, -3.4332275390625e-05, 0.0, -0.2747846841812134, 0.0, -0.45179271697998047, -0.033431053161621094, -0.007785797119140625, -1.9073486328125e-06, -0.000354766845703125, -1.9073486328125e-06, -0.06739997863769531, 0.0, -0.0017490386962890625, -7.62939453125e-06, -0.08566009998321533, -0.0017212629318237305, -2.384185791015625e-06, -0.013645768165588379, 0.0, -1.561634780955501e-05, 0.0, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-06, -2.3841871552576777e-06, -1.311301275563892e-06, -2.2649796846963e-06, -1.6689286894688848e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=EnemyPlayer(), condition=Null, picker=\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -2.975391960362394, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -1.6936397552490234, -0.0001773834228515625, -1.9073486328125e-05, -0.00037658214569091797, -0.0001373291015625, -8.58306884765625e-05, -1.9073486328125e-06, -0.5533484220504761, -7.05718994140625e-05, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -0.11576187610626221, 0.0, -0.00141143798828125, -3.0517578125e-05, -0.051139116287231445, -6.365770968841389e-05, -9.417526598554105e-06, -0.00017178058624267578, 0.0, -2.753724402282387e-05, 0.0, -1.1444091796875e-05, -8.58306884765625e-05, -1.9073486328125e-06, -1.9073504518019035e-06, -9.536738616588991e-07, -2.384188292126055e-06, -1.7881377516459906e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -3.196190095256206, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -0.3271484375, -9.1552734375e-05, -0.0005397796630859375, -0.00019168853759765625, -4.1961669921875e-05, -0.0001068115234375, 0.0, -0.9731601476669312, -0.00035583972930908203, -1.1444091796875e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.42273569107055664, 0.0, -0.7114963531494141, -0.01992034912109375, -0.010601043701171875, -1.9073486328125e-06, -0.0003204345703125, -1.9073486328125e-06, -0.04648232460021973, 0.0, -0.003162384033203125, -1.1444091796875e-05, -0.10528099536895752, -0.0012907981872558594, -2.2649765014648438e-06, -0.014168500900268555, 0.0, -1.561634780955501e-05, 0.0, -1.33514404296875e-05, -0.000171661376953125, -1.9073486328125e-06, -2.3841871552576777e-06, -1.311301275563892e-06, -2.264979229948949e-06, -3.933904736186378e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=BothPlayer(), condition=Null, picker=\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -3.269168949407053, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -1.6936397552490234, -0.0001773834228515625, -1.9073486328125e-05, -0.00037658214569091797, -0.0001373291015625, -8.58306884765625e-05, -1.9073486328125e-06, -0.8618563413619995, -0.0003135204315185547, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.13267624378204346, 0.0, -0.0035552978515625, -3.62396240234375e-05, -0.01712167263031006, -8.130072092171758e-05, -7.748602001811378e-06, -0.000164031982421875, 0.0, -3.0040657293284312e-05, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -1.7881416169984732e-06, -8.344646857949556e-07, -2.1457703951455187e-06, -1.6689286894688848e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -4.494030785344698, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -0.3271484375, -9.1552734375e-05, -0.0005397796630859375, -0.00019168853759765625, -4.1961669921875e-05, -0.0001068115234375, 0.0, -0.48200833797454834, -7.2479248046875e-05, -2.86102294921875e-05, -3.4332275390625e-05, 0.0, -1.7258497476577759, 0.0, -0.001129150390625, -9.5367431640625e-06, -0.3753671646118164, -0.00017786026000976562, -6.556510470545618e-06, -0.000354766845703125, -7.62939453125e-06, -0.6876425743103027, 0.0, -0.02305316925048828, -0.1309833526611328, -0.0052263736724853516, 0.0, -0.0006077289581298828, 0.0, -0.00034127174876630306, 0.0, -3.814697265625e-06, -0.17420673370361328, -7.62939453125e-06, -1.1920932365683257e-06, -1.311301275563892e-06, -1.6689446056261659e-06, -7.152555099310121e-07], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=EnemyPlayer(), picker=RandomPicker(),\n            condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -4.554832893956522, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -0.3271484375, -9.1552734375e-05, -0.0005397796630859375, -0.00019168853759765625, -4.1961669921875e-05, -0.0001068115234375, 0.0, -0.9731601476669312, -0.00035583972930908203, -1.1444091796875e-05, -6.29425048828125e-05, -3.814697265625e-06, -1.2319350242614746, 0.0, -0.002410888671875, -9.5367431640625e-06, -0.28634870052337646, -9.405607852386311e-05, -1.943111237778794e-05, -0.00019073486328125, -1.1444091796875e-05, -0.9480482339859009, 0.0, -0.037364959716796875, -0.051619529724121094, -0.004920244216918945, -1.9073486328125e-06, -0.00044548511505126953, 0.0, -0.00028060079785063863, 0.0, -3.814697265625e-06, -0.13061237335205078, -9.5367431640625e-06, -1.1920932365683257e-06, -1.311301275563892e-06, -1.907360910990974e-06, -7.152555099310121e-07], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker(),\n            condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "condition", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -4.5569172566502445, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -0.3271484375, -9.1552734375e-05, -0.0005397796630859375, -0.00019168853759765625, -4.1961669921875e-05, -0.0001068115234375, 0.0, -0.48200833797454834, -7.2479248046875e-05, -2.86102294921875e-05, -3.4332275390625e-05, 0.0, -0.2747846841812134, 0.0, -1.2894372940063477, -4.00543212890625e-05, -0.8315348625183105, -0.0008609294891357422, -2.4080271032289602e-05, -0.0001678466796875, -7.62939453125e-06, -0.670844554901123, 0.0, -0.020689964294433594, -0.04058074951171875, -0.0029393434524536133, -1.9073486328125e-06, -0.0004132986068725586, 0.0, -0.0003560484910849482, 0.0, -3.814697265625e-06, -0.05516624450683594, -7.62939453125e-06, -1.0728840607043821e-06, -9.536738616588991e-07, -2.980249519168865e-06, -4.768370445162873e-07], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=EnemyPlayer(), condition=RandomPicker(),\n            condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "condition", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -4.6290482039213074, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -0.3271484375, -9.1552734375e-05, -0.0005397796630859375, -0.00019168853759765625, -4.1961669921875e-05, -0.0001068115234375, 0.0, -0.9731601476669312, -0.00035583972930908203, -1.1444091796875e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.42273569107055664, 0.0, -1.151839256286621, -3.24249267578125e-05, -0.06235992908477783, -0.00027894898084923625, -9.357929229736328e-05, -7.43865966796875e-05, -7.62939453125e-06, -0.46956396102905273, 0.0, -7.2479248046875e-05, 0.0, -0.6609761714935303, -0.000377655029296875, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.4464941311161965e-05, 0.0, -5.7220458984375e-06, -5.91278076171875e-05, -1.9073486328125e-06, -3.576291476292681e-07, -7.152555099310121e-07, -1.4305160220828839e-06, -2.0265558760002023e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=BothPlayer(), condition=UserPicker(),\n            players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "condition", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -4.808211300928711, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -0.3271484375, -9.1552734375e-05, -0.0005397796630859375, -0.00019168853759765625, -4.1961669921875e-05, -0.0001068115234375, 0.0, -0.48200833797454834, -7.2479248046875e-05, -2.86102294921875e-05, -3.4332275390625e-05, 0.0, -0.2747846841812134, 0.0, -1.2894372940063477, -4.00543212890625e-05, -0.6586899757385254, -0.00031649856828153133, -4.899501436739229e-05, -5.91278076171875e-05, -3.814697265625e-06, -0.5548943281173706, 0.0, -7.2479248046875e-05, 0.0, -0.6602790355682373, -0.00039839744567871094, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.3511281546670943e-05, 0.0, -5.7220458984375e-06, -6.103515625e-05, -1.9073486328125e-06, -3.576291476292681e-07, -7.152555099310121e-07, -1.4305160220828839e-06, -2.0265558760002023e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=EnemyPlayer(), condition=UserPicker(),\n            players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"elts": [{"_type": "Template13", "hole0": "ManaCost", "hole1": {"_type": "Name", "id": "Attribute"}, "hole2": [{"_type": "Str", "s": "mana"}, {"_type": "Template19", "hole0": "SelfSelector"}]}, {"_type": "Template18_expr_seq", "hole0": "IsMinion"}], "_type": "List"}}], "_type": "Template13", "hole0": "Transform", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 129, "Transform", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 19, 106, 170, 46, 130, "Mana", "Cost", "<EOS>", 21, 110, "Attribute", "<EOS>", 170, 43, 119, "mana", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 49, 143, "Is", "Minion", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -4.815118456717805, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -1.9964675903320312, -0.06385421752929688, -0.0008071158663369715, -0.0016750397626310587, -0.0014753341674804688, -9.5367431640625e-05, -0.052108850330114365, -0.004234671592712402, -2.1457672119140625e-06, -0.0001926422119140625, -2.09808349609375e-05, -2.47955322265625e-05, -0.02566087245941162, -9.918212890625e-05, -0.02030658721923828, -0.000255584716796875, -0.00151824951171875, -0.0008573532104492188, -0.038552284240722656, -0.008309596218168736, -0.006131410598754883, -1.33514404296875e-05, -9.34600830078125e-05, -1.1444091796875e-05, -0.018492817878723145, -0.0005847215070389211, -0.000347137451171875, -0.03848457336425781, -4.1961669921875e-05, -0.8632660508155823, -3.826618194580078e-05, -0.8005886077880859, -9.5367431640625e-06, -0.05412614345550537, -3.814697265625e-06, 0.0, -0.002796173095703125, -0.10338497161865234, -0.03169631585478783, -0.09141582995653152, -1.9073486328125e-06, -0.0069122314453125, -6.103515625e-05, -0.0001316070556640625, 0.0, -0.07940781116485596, -3.4332275390625e-05, -3.814697265625e-06, -0.021062850952148438, -1.9073486328125e-06, -1.9073486328125e-06, -0.008605241775512695, -1.71661376953125e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.46527791023254395, -4.1961669921875e-05, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -1.1682502190524247e-05, 0.0, -5.7220458984375e-06, -0.000518798828125, -3.814697265625e-06, -1.0728840607043821e-06, -4.768370445162873e-07, -2.3841953407099936e-06, -3.218649908376392e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('mana', SelfSelector())),\n            IsMinion()])), MinionSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "RandomPicker"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -4.899701333290118, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -0.3271484375, -9.1552734375e-05, -0.0005397796630859375, -0.00019168853759765625, -4.1961669921875e-05, -0.0001068115234375, 0.0, -0.9731601476669312, -0.00035583972930908203, -1.1444091796875e-05, -6.29425048828125e-05, -3.814697265625e-06, -1.2319350242614746, 0.0, -0.002410888671875, -9.5367431640625e-06, -0.28634870052337646, -9.405607852386311e-05, -1.943111237778794e-05, -0.00019073486328125, -1.1444091796875e-05, -0.5608135461807251, 0.0, -0.0002956390380859375, -1.9073486328125e-06, -0.9527041912078857, -0.00023102760314941406, -9.775161743164062e-06, -0.0039757490158081055, 0.0, -2.9921451641712338e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, -1.9073486328125e-06, -2.3841871552576777e-06, -1.0728830375228426e-06, -2.145769940398168e-06, -4.1723224057932384e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker(),\n            players=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "<UNK>"}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}, {"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -4.944151139473483, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -0.3271484375, -9.1552734375e-05, -0.0005397796630859375, -0.00019168853759765625, -4.1961669921875e-05, -0.0001068115234375, 0.0, -0.9731601476669312, -0.00035583972930908203, -1.1444091796875e-05, -6.29425048828125e-05, -3.814697265625e-06, -1.2319350242614746, 0.0, -0.002410888671875, -9.5367431640625e-06, -0.28634870052337646, -9.405607852386311e-05, -1.943111237778794e-05, -0.00019073486328125, -1.1444091796875e-05, -0.5608135461807251, 0.0, -0.0002956390380859375, -1.9073486328125e-06, -1.001037359237671, -0.00035130977630615234, -3.814697265625e-06, -1.52587890625e-05, 0.0, -3.790844129980542e-05, 0.0, -5.7220458984375e-06, -6.103515625e-05, -1.9073486328125e-06, -4.768381813846645e-07, -7.152555099310121e-07, -1.5497253116336651e-06, -1.9073468138230965e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker(),\n            players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"elts": [{"_type": "Template13", "hole0": "ManaCost", "hole1": {"_type": "Name", "id": "Attribute"}, "hole2": [{"_type": "Str", "s": "mana"}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}, {"_type": "Template18_expr_seq", "hole0": "IsSpell"}], "_type": "List"}}], "_type": "Template13", "hole0": "Transform", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 129, "Transform", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 19, 106, 170, 46, 130, "Mana", "Cost", "<EOS>", 21, 110, "Attribute", "<EOS>", 170, 43, 119, "mana", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", 49, 143, "Is", "Spell", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -5.260110138115429, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -1.9964675903320312, -0.06385421752929688, -0.0008071158663369715, -0.0016750397626310587, -0.0014753341674804688, -9.5367431640625e-05, -0.052108850330114365, -0.004234671592712402, -2.1457672119140625e-06, -0.0001926422119140625, -2.09808349609375e-05, -2.47955322265625e-05, -0.02566087245941162, -9.918212890625e-05, -0.02030658721923828, -0.000255584716796875, -0.00151824951171875, -0.0008573532104492188, -0.038552284240722656, -0.008309596218168736, -0.006131410598754883, -1.33514404296875e-05, -9.34600830078125e-05, -1.1444091796875e-05, -0.018492817878723145, -0.0005847215070389211, -0.000347137451171875, -0.03848457336425781, -4.1961669921875e-05, -0.8632660508155823, -3.826618194580078e-05, -0.60345458984375, -9.5367431640625e-05, -0.09281157702207565, -3.4332275390625e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.07890991866588593, -0.0003913637774530798, 0.0, -0.008472442626953125, -0.0013208389282226562, -0.0036773681640625, -0.5416663885116577, -0.000171661376953125, -0.3086366653442383, -0.0002765655517578125, -4.9591064453125e-05, 0.0, -0.10731327533721924, -2.86102294921875e-05, 0.0, -0.01381683349609375, -3.814697265625e-06, -1.9073486328125e-06, -0.0037080049514770508, -1.33514404296875e-05, -4.38690185546875e-05, -1.9073486328125e-06, -0.34603703022003174, -0.00014126300811767578, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.6808495274744928e-05, 0.0, -7.62939453125e-06, -5.340576171875e-05, -1.9073486328125e-06, -3.576291476292681e-07, -7.152555099310121e-07, -2.3841953407099936e-06, -4.053113570989808e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('mana', PlayerSelector(\n            EnemyPlayer()))), IsSpell()])), MinionSelector(players=\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"elts": [{"_type": "Template13", "hole0": "ManaCost", "hole1": {"_type": "Name", "id": "Attribute"}, "hole2": [{"_type": "Str", "s": "mana"}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}, {"_type": "Template18_expr_seq", "hole0": "IsMinion"}], "_type": "List"}}], "_type": "Template13", "hole0": "Transform", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 129, "Transform", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 19, 106, 170, 46, 130, "Mana", "Cost", "<EOS>", 21, 110, "Attribute", "<EOS>", 170, 43, 119, "mana", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", 49, 143, "Is", "Minion", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -5.468682406600145, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -1.9964675903320312, -0.06385421752929688, -0.0008071158663369715, -0.0016750397626310587, -0.0014753341674804688, -9.5367431640625e-05, -0.052108850330114365, -0.004234671592712402, -2.1457672119140625e-06, -0.0001926422119140625, -2.09808349609375e-05, -2.47955322265625e-05, -0.02566087245941162, -9.918212890625e-05, -0.02030658721923828, -0.000255584716796875, -0.00151824951171875, -0.0008573532104492188, -0.038552284240722656, -0.008309596218168736, -0.006131410598754883, -1.33514404296875e-05, -9.34600830078125e-05, -1.1444091796875e-05, -0.018492817878723145, -0.0005847215070389211, -0.000347137451171875, -0.03848457336425781, -4.1961669921875e-05, -0.8632660508155823, -3.826618194580078e-05, -0.60345458984375, -9.5367431640625e-05, -0.09281157702207565, -3.4332275390625e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.07890991866588593, -0.0003913637774530798, 0.0, -0.008472442626953125, -0.0013208389282226562, -0.0036773681640625, -1.0293993949890137, 0.0, -0.18105125427246094, -0.0001659393310546875, -9.5367431640625e-05, 0.0, -0.023552894592285156, -6.4849853515625e-05, 0.0, -0.010836601257324219, -1.9073486328125e-06, -1.9073486328125e-06, -0.0037413835525512695, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.2814093828201294, -0.00011074542999267578, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.7046912034857087e-05, 0.0, -7.62939453125e-06, -5.340576171875e-05, -1.9073486328125e-06, -3.576291476292681e-07, -5.960462772236497e-07, -2.3841953407099936e-06, -3.8146954466355965e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('mana', PlayerSelector(\n            EnemyPlayer()))), IsMinion()])), MinionSelector(players=\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"hole3": [{"arg": "conditions", "_type": "keyword", "value": {"elts": [{"_type": "Template13", "hole0": "ManaCost", "hole1": {"_type": "Name", "id": "Attribute"}, "hole2": [{"_type": "Str", "s": "health"}, {"_type": "Template13", "hole0": "PlayerSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}, {"_type": "Template18_expr_seq", "hole0": "IsSpell"}], "_type": "List"}}], "_type": "Template13", "hole0": "Transform", "hole1": {"_type": "Name", "id": "CardQuery"}}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 3}], "hole0": "TinkmasterOverspark", "hole4": "player"}, "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 129, "Transform", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 176, 53, 159, "conditions", "<EOS>", 19, 106, 170, 46, 130, "Mana", "Cost", "<EOS>", 21, 110, "Attribute", "<EOS>", 170, 43, 119, "health", "<EOS>", 46, 128, "Player", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", 49, 143, "Is", "Spell", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -5.653674458226156, "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -1.9964675903320312, -0.06385421752929688, -0.0008071158663369715, -0.0016750397626310587, -0.0014753341674804688, -9.5367431640625e-05, -0.052108850330114365, -0.004234671592712402, -2.1457672119140625e-06, -0.0001926422119140625, -2.09808349609375e-05, -2.47955322265625e-05, -0.02566087245941162, -9.918212890625e-05, -0.02030658721923828, -0.000255584716796875, -0.00151824951171875, -0.0008573532104492188, -0.038552284240722656, -0.008309596218168736, -0.006131410598754883, -1.33514404296875e-05, -9.34600830078125e-05, -1.1444091796875e-05, -0.018492817878723145, -0.0005847215070389211, -0.000347137451171875, -0.03848457336425781, -4.1961669921875e-05, -1.6376686096191406, -3.814697265625e-06, -0.005719184875488281, -3.814697265625e-05, -0.20295807719230652, -5.7220458984375e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.07817177474498749, -0.00025880252360366285, 0.0, -0.014614105224609375, -0.0018100738525390625, -0.003878831397742033, -0.5857672095298767, -0.0001354217529296875, -0.3615589141845703, -0.0004367828369140625, -5.53131103515625e-05, 0.0, -0.07822525501251221, -2.86102294921875e-05, 0.0, -0.014995574951171875, -3.814697265625e-06, -1.9073486328125e-06, -0.004005551338195801, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.3773537874221802, -0.00015270709991455078, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.6689285985194147e-05, 0.0, -7.62939453125e-06, -5.340576171875e-05, -1.9073486328125e-06, -3.576291476292681e-07, -7.152555099310121e-07, -2.3841953407099936e-06, -4.1723224057932384e-06], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('health', PlayerSelector(\n            EnemyPlayer()))), IsSpell()])), MinionSelector(players=\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}], "gold_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=[Devilsaur(), Squirrel()])\n            ), MinionSelector(players=BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}
{"beams": [{"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Vaporize", "hole4": "player"}, "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -2.0998150205634474, "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -0.056303977966308594, 0.0, -1.1920909855689388e-05, 0.0, -0.005214691162109375, -0.0007753372192382812, -0.0007381439208984375, -0.0001468658447265625, -2.288818359375e-05, -0.0008935928344726562, 0.0, -0.0023174285888671875, 0.0, -6.127357482910156e-05, -6.198883056640625e-06, -0.00021100031153764576, 0.0, -0.0005611181259155273, -1.9073486328125e-06, -0.0009325742721557617, 0.0, -0.0036516189575195312, -1.33514404296875e-05, -3.814697265625e-06, -0.19628284871578217, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -0.00919342041015625, -0.000202178955078125, -3.62396240234375e-05, -0.0007381439208984375, 0.0, -9.5367431640625e-06, -6.866455078125e-05, -0.000194549560546875, -3.0517578125e-05, -0.00020658968423958868, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.1920922133867862e-06, -0.03343009948730469, -3.24249267578125e-05, -7.2479248046875e-05, -0.0081939697265625, 0.0, -0.006730079650878906, -3.814697265625e-06, -0.0012216567993164062, -1.9073486328125e-06, -0.00011086463928222656, -3.647804260253906e-05, -7.28368540876545e-05, 0.0, -0.0002598762512207031, 0.0, -0.17964518070220947, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.2239684760570526, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0001373291015625, -5.7220458984375e-06, -0.00144195556640625, -8.0108642578125e-05, -0.033428192138671875, -2.3365017113974318e-05, -0.0001316070556640625, -0.0001239776611328125, -0.2684001922607422, -3.24249267578125e-05, -7.975101470947266e-05, -2.741813204920618e-06, -5.7220458984375e-06, -0.014485359191894531, -2.3841855067985307e-07, -0.021612167358398438, -1.1444091796875e-05, -0.0002193450927734375, -0.02086353302001953, 0.0, -0.011994361877441406, -3.814697265625e-06, -0.0023241043090820312, 0.0, -0.0031853914260864258, -7.748603820800781e-06, -0.0007519721984863281, 0.0, -0.0008127689361572266, 0.0, -0.005909085273742676, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.24219000339508057, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Vaporize", "hole4": "player"}, "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -3.72223188936956, "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -0.056303977966308594, 0.0, -1.1920909855689388e-05, 0.0, -0.005214691162109375, -0.0007753372192382812, -0.0007381439208984375, -0.0001468658447265625, -2.288818359375e-05, -0.0008935928344726562, 0.0, -0.0023174285888671875, 0.0, -6.127357482910156e-05, -6.198883056640625e-06, -0.00021100031153764576, 0.0, -0.0005611181259155273, -1.9073486328125e-06, -0.0009325742721557617, 0.0, -0.0036516189575195312, -1.33514404296875e-05, -3.814697265625e-06, -0.19628284871578217, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -0.00919342041015625, -0.000202178955078125, -3.62396240234375e-05, -0.0007381439208984375, 0.0, -9.5367431640625e-06, -6.866455078125e-05, -0.000194549560546875, -3.0517578125e-05, -0.00020658968423958868, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.1920922133867862e-06, -0.03343009948730469, -3.24249267578125e-05, -7.2479248046875e-05, -0.0081939697265625, 0.0, -0.006730079650878906, -3.814697265625e-06, -0.0012216567993164062, -1.9073486328125e-06, -0.00011086463928222656, -3.647804260253906e-05, -7.28368540876545e-05, 0.0, -0.0002598762512207031, 0.0, -1.8278433084487915, 0.0, -0.0001392364501953125, -5.7220458984375e-06, -7.62939453125e-06, -0.225814089179039, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.00014495849609375, -5.7220458984375e-06, -0.0014400482177734375, -7.05718994140625e-05, -0.03176403045654297, -2.34842264035251e-05, -0.0001392364501953125, -0.0001373291015625, -0.23795604705810547, -3.62396240234375e-05, -7.95125961303711e-05, -2.622604142743512e-06, -7.62939453125e-06, -0.017635345458984375, -2.3841855067985307e-07, -0.019796371459960938, -1.1444091796875e-05, -0.0002079010009765625, -0.022400856018066406, 0.0, -0.012421607971191406, -1.9073486328125e-06, -0.0023050308227539062, 0.0, -0.0031625032424926758, -7.748603820800781e-06, -0.0007805824279785156, 0.0, -0.0008223056793212891, 0.0, -0.005870938301086426, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.24332714080810547, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002288818359375, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "card_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Vaporize", "hole4": "player"}, "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "card_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -3.863947401048982, "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -0.056303977966308594, 0.0, -1.1920909855689388e-05, 0.0, -0.005214691162109375, -0.0007753372192382812, -0.0007381439208984375, -0.0001468658447265625, -2.288818359375e-05, -0.0008935928344726562, 0.0, -0.0023174285888671875, 0.0, -6.127357482910156e-05, -6.198883056640625e-06, -0.00021100031153764576, 0.0, -0.0005611181259155273, -1.9073486328125e-06, -0.0009325742721557617, 0.0, -0.0036516189575195312, -1.33514404296875e-05, -3.814697265625e-06, -0.19628284871578217, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -0.00919342041015625, -0.000202178955078125, -3.62396240234375e-05, -0.0007381439208984375, 0.0, -9.5367431640625e-06, -6.866455078125e-05, -0.000194549560546875, -3.0517578125e-05, -0.00020658968423958868, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.1920922133867862e-06, -0.03343009948730469, -3.24249267578125e-05, -7.2479248046875e-05, -0.0081939697265625, 0.0, -0.006730079650878906, -3.814697265625e-06, -0.0012216567993164062, -1.9073486328125e-06, -0.00011086463928222656, -3.647804260253906e-05, -7.28368540876545e-05, 0.0, -0.0002598762512207031, 0.0, -0.17964518070220947, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.2239684760570526, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0001373291015625, -5.7220458984375e-06, -0.00144195556640625, -8.0108642578125e-05, -0.033428192138671875, -2.3365017113974318e-05, -0.0001316070556640625, -0.0001239776611328125, -0.2684001922607422, -3.24249267578125e-05, -7.975101470947266e-05, -2.741813204920618e-06, -5.7220458984375e-06, -0.014485359191894531, -2.3841855067985307e-07, -0.021612167358398438, -1.1444091796875e-05, -0.0002193450927734375, -0.02086353302001953, 0.0, -0.011994361877441406, -3.814697265625e-06, -0.0023241043090820312, 0.0, -0.0031853914260864258, -7.748603820800781e-06, -0.0007519721984863281, 0.0, -0.0008127689361572266, 0.0, -0.005909085273742676, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -2.0063281059265137, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -0.0001811981201171875, -5.7220458984375e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "card_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Vaporize", "hole4": "player"}, "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "card_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -4.078883091215651, "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -0.056303977966308594, 0.0, -1.1920909855689388e-05, 0.0, -0.005214691162109375, -0.0007753372192382812, -0.0007381439208984375, -0.0001468658447265625, -2.288818359375e-05, -0.0008935928344726562, 0.0, -0.0023174285888671875, 0.0, -6.127357482910156e-05, -6.198883056640625e-06, -0.00021100031153764576, 0.0, -0.0005611181259155273, -1.9073486328125e-06, -0.0009325742721557617, 0.0, -0.0036516189575195312, -1.33514404296875e-05, -3.814697265625e-06, -0.19628284871578217, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -0.00919342041015625, -0.000202178955078125, -3.62396240234375e-05, -0.0007381439208984375, 0.0, -9.5367431640625e-06, -6.866455078125e-05, -0.000194549560546875, -3.0517578125e-05, -0.00020658968423958868, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.1920922133867862e-06, -0.03343009948730469, -3.24249267578125e-05, -7.2479248046875e-05, -0.0081939697265625, 0.0, -0.006730079650878906, -3.814697265625e-06, -0.0012216567993164062, -1.9073486328125e-06, -0.00011086463928222656, -3.647804260253906e-05, -7.28368540876545e-05, 0.0, -0.0002598762512207031, 0.0, -0.17964518070220947, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -2.195542812347412, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -8.96453857421875e-05, -3.814697265625e-06, -0.001033782958984375, -0.0001125335693359375, -0.04305744171142578, -1.931190308823716e-05, -0.000152587890625, -0.0001049041748046875, -0.2421255111694336, -3.814697265625e-05, -4.8995018005371094e-05, -5.960462772236497e-07, -7.62939453125e-06, -0.014619827270507812, -2.3841855067985307e-07, -0.018604278564453125, -9.5367431640625e-06, -0.0001983642578125, -0.01872730255126953, 0.0, -0.013437271118164062, -3.814697265625e-06, -0.0027647018432617188, 0.0, -0.003651738166809082, -5.841255187988281e-06, -0.0009788274765014648, 0.0, -0.0008146762847900391, 0.0, -0.005704998970031738, -5.7220458984375e-06, -2.09808349609375e-05, -2.47955322265625e-05, -1.33514404296875e-05, -0.2694113254547119, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002384185791015625, -1.9073486328125e-06, -0.0002193450927734375, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "card_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Vaporize", "hole4": "player"}, "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "card_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -4.322051787974793, "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -0.056303977966308594, 0.0, -1.1920909855689388e-05, 0.0, -0.005214691162109375, -0.0007753372192382812, -0.0007381439208984375, -0.0001468658447265625, -2.288818359375e-05, -0.0008935928344726562, 0.0, -0.0023174285888671875, 0.0, -6.127357482910156e-05, -6.198883056640625e-06, -0.00021100031153764576, 0.0, -0.0005611181259155273, -1.9073486328125e-06, -0.0009325742721557617, 0.0, -0.0036516189575195312, -1.33514404296875e-05, -3.814697265625e-06, -2.381727695465088, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0001373291015625, -1.9073486328125e-06, -0.0001087188720703125, -1.9073486328125e-06, -0.009211540222167969, -0.0001983642578125, -3.0517578125e-05, -0.0008258819580078125, 0.0, -9.5367431640625e-06, -6.866455078125e-05, -0.00020599365234375, -3.4332275390625e-05, -0.0001904964301502332, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.0728830375228426e-06, -0.0326995849609375, -3.4332275390625e-05, -6.866455078125e-05, -0.008521080017089844, 0.0, -0.007163047790527344, -3.814697265625e-06, -0.0012044906616210938, -1.9073486328125e-06, -0.00010704994201660156, -3.457069396972656e-05, -7.498262129956856e-05, 0.0, -0.0002541542053222656, 0.0, -0.21631872653961182, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.22463485598564148, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0001373291015625, -5.7220458984375e-06, -0.001537322998046875, -7.82012939453125e-05, -0.03250312805175781, -2.34842264035251e-05, -0.0001354217529296875, -0.000125885009765625, -0.26766395568847656, -3.24249267578125e-05, -8.356571197509766e-05, -2.741813204920618e-06, -5.7220458984375e-06, -0.015559196472167969, -2.3841855067985307e-07, -0.02233123779296875, -1.1444091796875e-05, -0.0002155303955078125, -0.021630287170410156, 0.0, -0.012296676635742188, -3.814697265625e-06, -0.0023241043090820312, 0.0, -0.0031615495681762695, -7.748603820800781e-06, -0.0007500648498535156, 0.0, -0.0008127689361572266, 0.0, -0.005910992622375488, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.24026358127593994, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Vaporize", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Vaporize"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Vaporize", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 181, 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -4.89226676209892, "score_history": [-3.0517578125e-05, -0.7316074371337891, -0.00014578233822248876, -0.0005551547510549426, -0.0003094672574661672, -0.00021003730944357812, -1.1920928244535389e-07, -0.0012531280517578125, -0.000507354736328125, -0.0001354217529296875, -3.9696344174444675e-05, -2.622604142743512e-06, -3.576278118089249e-07, -5.9604644775390625e-06, -0.00147247314453125, 0.0, -0.00298309326171875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -4.410743713378906e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -0.0004118680953979492, -7.62939453125e-05, -0.09370231628417969, -0.0013637542724609375, -3.24249267578125e-05, -9.5367431640625e-06, -2.288818359375e-05, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004558563232421875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.811309814453125, -0.0018558502197265625, -0.0025528669357299805, -3.814697265625e-06, -0.008083343505859375, -0.0006389617919921875, -0.010851538740098476, -0.00780642032623291, -0.00484804343432188, -2.0265579223632812e-06, -0.04144859313964844, -1.9073486328125e-05, -2.86102294921875e-05, 0.0, -0.02676260471343994, -1.9073486328125e-06, -0.0057888031005859375, -0.0001239776611328125, -9.5367431640625e-06, 0.0, -0.011523842811584473, -0.00026404857635498047, -0.00565338134765625, -0.0011615753173828125, -0.000202178955078125, -0.0004705190658569336, -0.00014710426330566406, -0.42897796630859375, -0.08774185180664062, -1.52587890625e-05, -3.814697265625e-06, -0.10902321338653564, -0.017259597778320312, 0.0, -0.0001010894775390625, -1.9073486328125e-06, 0.0, -0.0030188560485839844, -9.5367431640625e-06, -0.07482051849365234, -3.4332275390625e-05, -0.15785269439220428, -0.09559771418571472, -0.00035858154296875, -0.908111572265625, -0.002262115478515625, -0.025014877319335938, -0.015193939208984375, 0.0, -0.00035606982419267297, -1.9788742065429688e-05, -0.00146484375, 0.0, -0.009634971618652344, -5.14984130859375e-05, -4.38690185546875e-05, -0.0011074516223743558, -3.838539123535156e-05, -2.6702880859375e-05, -0.0001239776611328125, -0.0004749298095703125, -0.000118255615234375, -0.0006928440416231751, -3.8146954466355965e-06, -1.33514404296875e-05, -4.41074053014745e-06, -2.7418097943154862e-06, -0.3176708221435547, -0.00016021728515625, -5.340576171875e-05, -0.0040149688720703125, -1.9073486328125e-06, -0.0057468414306640625, -3.814697265625e-06, -0.0007410049438476562, -1.9073486328125e-06, -9.751319885253906e-05, -5.9485435485839844e-05, -7.569785520900041e-05, 0.0, -0.00026357173919677734, -1.9073486328125e-06, -0.010823369026184082, 0.0, -0.0002498626708984375, -5.7220458984375e-06, -1.1444091796875e-05, -0.22217974066734314, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000133514404296875, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -0.010149002075195312, -2.6702880859375e-05, -0.3455343246459961, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -0.00014495849609375, -6.103515625e-05, -3.3855438232421875e-05, -2.384185791015625e-06, -3.814697265625e-06, -2.110004425048828e-05, -4.768370445162873e-07, -0.017475128173828125, -1.33514404296875e-05, -0.00011444091796875, -0.008077621459960938, 0.0, -0.007365226745605469, -1.9073486328125e-06, -0.0014581680297851562, 0.0, -0.001118779182434082, -2.1219253540039062e-05, -0.00012934207916259766, 0.0, -0.0006123781204223633, 0.0, -0.012004971504211426, -9.5367431640625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.2081150859594345, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001220703125, -1.9073486328125e-06, -0.0001659393310546875, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Vaporize\n        for i in range(0, CardSelector(condition=IsSpell())):\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "activate", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Vaporize", "hole4": "player"}, "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.061849839349826, "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -3.011298179626465, 0.0, -9.822561696637422e-05, 0.0, -0.0041904449462890625, -0.0002918243408203125, -0.0004901885986328125, -0.0001392364501953125, -1.1444091796875e-05, -0.001190185546875, 0.0, -0.0012836456298828125, 0.0, -4.982948303222656e-05, -5.9604644775390625e-06, -0.00014615054533351213, 0.0, -0.0004286766052246094, -2.0265579223632812e-06, -0.0008105039596557617, 0.0, -0.0037641525268554688, -1.71661376953125e-05, -7.62939453125e-06, -0.21828244626522064, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.000148773193359375, -3.814697265625e-06, -0.010125160217285156, -0.000194549560546875, -3.62396240234375e-05, -0.0007266998291015625, 0.0, -9.5367431640625e-06, -6.866455078125e-05, -0.000194549560546875, -3.0517578125e-05, -0.00020480154489632696, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.1920922133867862e-06, -0.03270721435546875, -3.24249267578125e-05, -7.43865966796875e-05, -0.008297920227050781, 0.0, -0.006695747375488281, -3.814697265625e-06, -0.0012187957763671875, -1.9073486328125e-06, -0.00011277198791503906, -3.647804260253906e-05, -7.081030344124883e-05, 0.0, -0.00026357173919677734, 0.0, -0.16653692722320557, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.22367247939109802, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0001373291015625, -5.7220458984375e-06, -0.001438140869140625, -8.0108642578125e-05, -0.033054351806640625, -2.3365017113974318e-05, -0.000133514404296875, -0.0001239776611328125, -0.2691364288330078, -3.24249267578125e-05, -7.975101470947266e-05, -2.741813204920618e-06, -5.7220458984375e-06, -0.014458656311035156, -2.3841855067985307e-07, -0.021518707275390625, -1.1444091796875e-05, -0.00022125244140625, -0.020981788635253906, 0.0, -0.011910438537597656, -3.814697265625e-06, -0.0023260116577148438, 0.0, -0.0031996965408325195, -7.748603820800781e-06, -0.0007576942443847656, 0.0, -0.0008127689361572266, 0.0, -0.005910992622375488, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.24268054962158203, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002288818359375, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Vaporize", "hole4": "player"}, "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "character_attack", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.107342252733552, "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -0.056303977966308594, 0.0, -1.1920909855689388e-05, 0.0, -0.005214691162109375, -0.0007753372192382812, -0.0007381439208984375, -0.0001468658447265625, -2.288818359375e-05, -0.0008935928344726562, 0.0, -0.0023174285888671875, 0.0, -6.127357482910156e-05, -6.198883056640625e-06, -0.00021100031153764576, 0.0, -0.0005611181259155273, -1.9073486328125e-06, -0.0009325742721557617, 0.0, -0.0036516189575195312, -1.33514404296875e-05, -3.814697265625e-06, -0.19628284871578217, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -0.00919342041015625, -0.000202178955078125, -3.62396240234375e-05, -0.0007381439208984375, 0.0, -9.5367431640625e-06, -6.866455078125e-05, -0.000194549560546875, -3.0517578125e-05, -0.00020658968423958868, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.1920922133867862e-06, -0.03343009948730469, -3.24249267578125e-05, -7.2479248046875e-05, -0.0081939697265625, 0.0, -0.006730079650878906, -3.814697265625e-06, -0.0012216567993164062, -1.9073486328125e-06, -0.00011086463928222656, -3.647804260253906e-05, -7.28368540876545e-05, 0.0, -0.0002598762512207031, 0.0, -0.17964518070220947, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.2239684760570526, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0001373291015625, -5.7220458984375e-06, -0.00144195556640625, -8.0108642578125e-05, -0.033428192138671875, -2.3365017113974318e-05, -0.0001316070556640625, -0.0001239776611328125, -0.2684001922607422, -3.24249267578125e-05, -7.975101470947266e-05, -2.741813204920618e-06, -5.7220458984375e-06, -0.014485359191894531, -2.3841855067985307e-07, -0.021612167358398438, -1.1444091796875e-05, -0.0002193450927734375, -0.02086353302001953, 0.0, -0.011994361877441406, -3.814697265625e-06, -0.0023241043090820312, 0.0, -0.0031853914260864258, -7.748603820800781e-06, -0.0007519721984863281, 0.0, -0.0008127689361572266, 0.0, -0.005909085273742676, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -3.2499022483825684, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0001049041748046875, 0.0, -0.0001544952392578125, -5.7220458984375e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Vaporize", "hole4": "player"}, "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "character_attack", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.1124571955246765, "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -0.056303977966308594, 0.0, -1.1920909855689388e-05, 0.0, -0.005214691162109375, -0.0007753372192382812, -0.0007381439208984375, -0.0001468658447265625, -2.288818359375e-05, -0.0008935928344726562, 0.0, -0.0023174285888671875, 0.0, -6.127357482910156e-05, -6.198883056640625e-06, -0.00021100031153764576, 0.0, -0.0005611181259155273, -1.9073486328125e-06, -0.0009325742721557617, 0.0, -0.0036516189575195312, -1.33514404296875e-05, -3.814697265625e-06, -0.19628284871578217, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -0.00919342041015625, -0.000202178955078125, -3.62396240234375e-05, -0.0007381439208984375, 0.0, -9.5367431640625e-06, -6.866455078125e-05, -0.000194549560546875, -3.0517578125e-05, -0.00020658968423958868, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.1920922133867862e-06, -0.03343009948730469, -3.24249267578125e-05, -7.2479248046875e-05, -0.0081939697265625, 0.0, -0.006730079650878906, -3.814697265625e-06, -0.0012216567993164062, -1.9073486328125e-06, -0.00011086463928222656, -3.647804260253906e-05, -7.28368540876545e-05, 0.0, -0.0002598762512207031, 0.0, -0.17964518070220947, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -3.1415276527404785, -5.841255187988281e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -8.96453857421875e-05, -3.814697265625e-06, -0.001483917236328125, -8.7738037109375e-05, -0.053801655769348145, -1.752376374497544e-05, -0.0001392364501953125, -0.000102996826171875, -0.33105945587158203, -4.1961669921875e-05, -4.7087669372558594e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.01300048828125, -2.3841855067985307e-07, -0.019365310668945312, -9.5367431640625e-06, -0.000217437744140625, -0.023622512817382812, 0.0, -0.012072563171386719, -3.814697265625e-06, -0.0024690628051757812, 0.0, -0.003415226936340332, -7.748603820800781e-06, -0.0007423162460327148, 0.0, -0.0008146762847900391, 0.0, -0.005758404731750488, -5.7220458984375e-06, -1.9073486328125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.254999041557312, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002288818359375, -1.9073486328125e-06, -0.000217437744140625, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Vaporize", "hole4": "player"}, "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "character_attack", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.11628177225824, "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -0.056303977966308594, 0.0, -1.1920909855689388e-05, 0.0, -0.005214691162109375, -0.0007753372192382812, -0.0007381439208984375, -0.0001468658447265625, -2.288818359375e-05, -0.0008935928344726562, 0.0, -0.0023174285888671875, 0.0, -6.127357482910156e-05, -6.198883056640625e-06, -0.00021100031153764576, 0.0, -0.0005611181259155273, -1.9073486328125e-06, -0.0009325742721557617, 0.0, -0.0036516189575195312, -1.33514404296875e-05, -3.814697265625e-06, -3.205507278442383, -2.2649765014648438e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -0.008671760559082031, -0.0001621246337890625, -2.47955322265625e-05, -0.000774383544921875, 0.0, -9.5367431640625e-06, -7.05718994140625e-05, -0.000209808349609375, -3.24249267578125e-05, -0.000194430336705409, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.0728830375228426e-06, -0.0325775146484375, -3.24249267578125e-05, -6.866455078125e-05, -0.008928298950195312, 0.0, -0.007068634033203125, -3.814697265625e-06, -0.0011920928955078125, -1.9073486328125e-06, -0.00010704994201660156, -3.647804260253906e-05, -7.28368540876545e-05, 0.0, -0.0002579689025878906, 0.0, -0.18505728244781494, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.22488591074943542, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0001354217529296875, -5.7220458984375e-06, -0.0017147064208984375, -7.82012939453125e-05, -0.032189369201660156, -2.34842264035251e-05, -0.0001354217529296875, -0.000125885009765625, -0.26998424530029297, -3.24249267578125e-05, -8.356571197509766e-05, -2.741813204920618e-06, -5.7220458984375e-06, -0.015738487243652344, -2.3841855067985307e-07, -0.022283554077148438, -1.1444091796875e-05, -0.0002155303955078125, -0.0223236083984375, 0.0, -0.012121200561523438, -3.814697265625e-06, -0.0023088455200195312, 0.0, -0.0031625032424926758, -7.748603820800781e-06, -0.0007348060607910156, 0.0, -0.0008146762847900391, 0.0, -0.005916714668273926, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.23945534229278564, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Vaporize", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Add"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}], "value": {"_type": "Subscript", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}, "slice": {"_type": "Index", "value": {"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 1}}}}}]}, "choice_history": [54, 125, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 55, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 59, 79, 169, 32, 80, 21, 110, "card", "<EOS>", "target", "<EOS>", 24, 121, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 57, 101, 31, 154, 76, 23, 115, "1", "<EOS>", 181, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.156852836582104, "score_history": [-3.0517578125e-05, -0.7316074371337891, -0.00014578233822248876, -0.0005551547510549426, -0.0003094672574661672, -0.00021003730944357812, -1.1920928244535389e-07, -0.0012531280517578125, -0.000507354736328125, -0.0001354217529296875, -3.9696344174444675e-05, -2.622604142743512e-06, -3.576278118089249e-07, -5.9604644775390625e-06, -0.00147247314453125, 0.0, -0.00298309326171875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -4.410743713378906e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -0.0004118680953979492, -7.62939453125e-05, -0.09370231628417969, -0.0013637542724609375, -3.24249267578125e-05, -9.5367431640625e-06, -2.288818359375e-05, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004558563232421875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.7811088562011719, -3.24249267578125e-05, -3.814697265625e-06, -0.0003490447998046875, -1.9073486328125e-05, -0.2784745693206787, -0.00025177001953125, -0.5989179611206055, -0.000247955322265625, -0.018708229064941406, -0.000247955322265625, -0.0077648162841796875, -1.9073486328125e-06, -0.10933387279510498, -0.0004911422729492188, -0.0005855560302734375, -0.000301361083984375, 0.0, -0.03636455535888672, -7.62939453125e-06, -0.0001010894775390625, -1.9073486328125e-06, -0.04307746887207031, -1.9073486328125e-06, -0.0006656646728515625, 0.0, -0.0006698369979858398, 0.0, -0.5038824081420898, -0.016176223754882812, -0.0002460479736328125, -5.7220458984375e-06, 0.0, -0.0001354217529296875, -5.7220458984375e-06, -0.0001316070556640625, -3.814697265625e-06, 0.0, -0.011874198913574219, 0.0, -0.0004444122314453125, 0.0, -0.01215362548828125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.0026341676712036133, 0.0, -0.0641927719116211, -1.9073486328125e-06, 0.0, -0.22320556640625, -5.7220458984375e-06, -0.00078582763671875, 0.0, -0.023728489875793457, -5.7220458984375e-06, -0.02671337127685547, 0.0, -0.33434295654296875, -0.00049591064453125, -0.0012760162353515625, -1.9073486328125e-06, -0.006428718566894531, 0.0, -0.0004062652587890625, 0.0, -0.014338493347167969, 0.0, -6.67572021484375e-05, 0.0, -0.0018988847732543945, 0.0, -0.0024051666259765625, -0.0003566741943359375, -0.03212928771972656, -0.0003223419189453125, -0.0031414031982421875, -6.4849853515625e-05, -1.9073486328125e-06, -0.040280867367982864, -9.5367431640625e-06, -0.01064300537109375, -0.0014667510986328125, -5.7220458984375e-06, -0.8378804922103882, 0.0, -9.5367431640625e-06, -5.340576171875e-05, -0.0040149688720703125, -2.47955322265625e-05, -8.738040196476504e-05, -2.1457672119140625e-06, -7.62939453125e-06, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0073394775390625, -1.52587890625e-05, -8.392333984375e-05, -0.0053577423095703125, 0.0, -0.0052585601806640625, -1.9073486328125e-06, -0.0013437271118164062, 0.0, -0.0008078813552856445, -2.8848648071289062e-05, -8.285044168587774e-05, 0.0, -0.00047516822814941406, 0.0, -0.023696303367614746, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.21996626257896423, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0001373291015625, -5.7220458984375e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = len(self.player.minions) + len(self.player.minions)\n        card.target = self.player.minions[-1]\n\n    def activate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole6": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}], "hole0": "Vaporize", "hole4": "player"}, "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.213365907075335, "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -0.056303977966308594, 0.0, -1.1920909855689388e-05, 0.0, -0.005214691162109375, -0.0007753372192382812, -0.0007381439208984375, -0.0001468658447265625, -2.288818359375e-05, -0.0008935928344726562, 0.0, -0.0023174285888671875, 0.0, -6.127357482910156e-05, -6.198883056640625e-06, -0.00021100031153764576, 0.0, -0.0005611181259155273, -1.9073486328125e-06, -0.0009325742721557617, 0.0, -0.0036516189575195312, -1.33514404296875e-05, -3.814697265625e-06, -0.19628284871578217, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -0.00919342041015625, -0.000202178955078125, -3.62396240234375e-05, -0.0007381439208984375, 0.0, -9.5367431640625e-06, -6.866455078125e-05, -0.000194549560546875, -3.0517578125e-05, -0.00020658968423958868, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.1920922133867862e-06, -0.03343009948730469, -3.24249267578125e-05, -7.2479248046875e-05, -0.0081939697265625, 0.0, -0.006730079650878906, -3.814697265625e-06, -0.0012216567993164062, -1.9073486328125e-06, -0.00011086463928222656, -3.647804260253906e-05, -7.28368540876545e-05, 0.0, -0.0002598762512207031, 0.0, -0.17964518070220947, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.2239684760570526, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0001373291015625, -5.7220458984375e-06, -0.00144195556640625, -8.0108642578125e-05, -3.4452123641967773, 0.0, -2.47955322265625e-05, -9.5367431640625e-05, -0.00012969970703125, -5.7220458984375e-05, -3.862380617647432e-05, -2.503394853192731e-06, -3.814697265625e-06, -1.919269561767578e-05, -5.960462772236497e-07, -0.051372528076171875, -1.1444091796875e-05, -0.00011444091796875, -0.009195327758789062, 0.0, -0.008053779602050781, -1.9073486328125e-06, -0.0014190673828125, 0.0, -0.0010091066360473633, -1.9311904907226562e-05, -0.00014531612396240234, 0.0, -0.0005971193313598633, 0.0, -0.0111161470413208, -9.5367431640625e-06, -2.09808349609375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.2116478532552719, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -0.0001735687255859375, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}, {"_type": "FunctionDef", "name": "_reveal", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Vaporize", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Vaporize"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Vaporize", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 181, 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.923847567876962, "score_history": [-3.0517578125e-05, -0.7316074371337891, -0.00014578233822248876, -0.0005551547510549426, -0.0003094672574661672, -0.00021003730944357812, -1.1920928244535389e-07, -0.0012531280517578125, -0.000507354736328125, -0.0001354217529296875, -3.9696344174444675e-05, -2.622604142743512e-06, -3.576278118089249e-07, -5.9604644775390625e-06, -0.00147247314453125, 0.0, -0.00298309326171875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -4.410743713378906e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -0.0004118680953979492, -7.62939453125e-05, -0.09370231628417969, -0.0013637542724609375, -3.24249267578125e-05, -9.5367431640625e-06, -2.288818359375e-05, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004558563232421875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.811309814453125, -0.0018558502197265625, -0.0025528669357299805, -3.814697265625e-06, -0.008083343505859375, -0.0006389617919921875, -0.010851538740098476, -0.00780642032623291, -0.00484804343432188, -2.0265579223632812e-06, -0.04144859313964844, -1.9073486328125e-05, -2.86102294921875e-05, 0.0, -0.02676260471343994, -1.9073486328125e-06, -0.0057888031005859375, -0.0001239776611328125, -9.5367431640625e-06, 0.0, -0.011523842811584473, -0.00026404857635498047, -0.00565338134765625, -0.0011615753173828125, -0.000202178955078125, -0.0004705190658569336, -0.00014710426330566406, -0.42897796630859375, -0.08774185180664062, -1.52587890625e-05, -3.814697265625e-06, -0.10902321338653564, -0.017259597778320312, 0.0, -0.0001010894775390625, -1.9073486328125e-06, 0.0, -0.0030188560485839844, -9.5367431640625e-06, -0.07482051849365234, -3.4332275390625e-05, -0.15785269439220428, -0.09559771418571472, -0.00035858154296875, -0.908111572265625, -0.002262115478515625, -0.025014877319335938, -0.015193939208984375, 0.0, -0.00035606982419267297, -1.9788742065429688e-05, -0.00146484375, 0.0, -0.009634971618652344, -5.14984130859375e-05, -4.38690185546875e-05, -0.0011074516223743558, -3.838539123535156e-05, -2.6702880859375e-05, -0.0001239776611328125, -0.0004749298095703125, -0.000118255615234375, -0.0006928440416231751, -3.8146954466355965e-06, -1.33514404296875e-05, -4.41074053014745e-06, -2.7418097943154862e-06, -0.3176708221435547, -0.00016021728515625, -5.340576171875e-05, -0.0040149688720703125, -1.9073486328125e-06, -0.0057468414306640625, -3.814697265625e-06, -0.0007410049438476562, -1.9073486328125e-06, -9.751319885253906e-05, -5.9485435485839844e-05, -7.569785520900041e-05, 0.0, -0.00026357173919677734, -1.9073486328125e-06, -0.010823369026184082, 0.0, -0.0002498626708984375, -5.7220458984375e-06, -1.1444091796875e-05, -0.22217974066734314, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000133514404296875, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -0.010149002075195312, -2.6702880859375e-05, -1.241861343383789, -4.88758041683468e-06, -3.814697265625e-05, -5.7220458984375e-05, -0.1217947006225586, -3.814697265625e-05, -3.3020973205566406e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.003238677978515625, -1.1920928244535389e-07, -0.013425827026367188, -1.1444091796875e-05, -0.0002002716064453125, -0.01882171630859375, 0.0, -0.009801864624023438, -1.9073486328125e-06, -0.0020265579223632812, 0.0, -0.0027544498443603516, -1.1682510375976562e-05, -0.0003504753112792969, 0.0, -0.0007784366607666016, 0.0, -0.006422162055969238, -7.62939453125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.21223019063472748, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -0.0001964569091796875, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Vaporize\n        for i in range(0, CardSelector(condition=IsSpell())):\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole2": "player"}, {"_type": "Compare", "comparators": [{"_type": "Num", "n": 7}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Vaporize", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "BinOp", "op": {"_type": "Add"}, "right": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}, "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}]}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "target"}], "value": {"_type": "Subscript", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}, "attr": "minions"}, "slice": {"_type": "Index", "value": {"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"_type": "Num", "n": 1}}}}}]}, "choice_history": [54, 125, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 14, 82, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 55, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 59, 79, 169, 32, 80, 21, 110, "card", "<EOS>", "target", "<EOS>", 24, 121, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 57, 101, 31, 154, 76, 23, 115, "1", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -6.074173952277633, "score_history": [-3.0517578125e-05, -0.7316074371337891, -0.00014578233822248876, -0.0005551547510549426, -0.0003094672574661672, -0.00021003730944357812, -1.1920928244535389e-07, -0.0012531280517578125, -0.000507354736328125, -0.0001354217529296875, -3.9696344174444675e-05, -2.622604142743512e-06, -3.576278118089249e-07, -5.9604644775390625e-06, -0.00147247314453125, 0.0, -0.00298309326171875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -4.410743713378906e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -0.0004118680953979492, -7.62939453125e-05, -0.09370231628417969, -0.0013637542724609375, -3.24249267578125e-05, -9.5367431640625e-06, -2.288818359375e-05, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004558563232421875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.7811088562011719, -3.24249267578125e-05, -3.814697265625e-06, -0.0003490447998046875, -1.9073486328125e-05, -0.2784745693206787, -0.00025177001953125, -0.5989179611206055, -0.000247955322265625, -0.018708229064941406, -0.000247955322265625, -0.0077648162841796875, -1.9073486328125e-06, -0.10933387279510498, -0.0004911422729492188, -0.0005855560302734375, -0.000301361083984375, 0.0, -0.03636455535888672, -7.62939453125e-06, -0.0001010894775390625, -1.9073486328125e-06, -0.04307746887207031, -1.9073486328125e-06, -0.0006656646728515625, 0.0, -0.0006698369979858398, 0.0, -0.5038824081420898, -0.016176223754882812, -0.0002460479736328125, -5.7220458984375e-06, 0.0, -0.0001354217529296875, -5.7220458984375e-06, -0.0001316070556640625, -3.814697265625e-06, 0.0, -0.011874198913574219, 0.0, -0.0004444122314453125, 0.0, -0.01215362548828125, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.0026341676712036133, 0.0, -0.0641927719116211, -1.9073486328125e-06, 0.0, -0.22320556640625, -5.7220458984375e-06, -0.00078582763671875, 0.0, -0.023728489875793457, -5.7220458984375e-06, -0.02671337127685547, 0.0, -0.33434295654296875, -0.00049591064453125, -0.0012760162353515625, -1.9073486328125e-06, -0.006428718566894531, 0.0, -0.0004062652587890625, 0.0, -0.014338493347167969, 0.0, -6.67572021484375e-05, 0.0, -0.0018988847732543945, 0.0, -0.0024051666259765625, -0.0003566741943359375, -0.03212928771972656, -0.0003223419189453125, -0.0031414031982421875, -6.4849853515625e-05, -1.9073486328125e-06, -0.040280867367982864, -9.5367431640625e-06, -0.01064300537109375, -0.0014667510986328125, -5.7220458984375e-06, -0.7595809698104858, 0.0, -5.7220458984375e-06, -4.9591064453125e-05, -0.5904302597045898, -1.52587890625e-05, -8.928775787353516e-05, -1.1920928244535389e-07, -2.86102294921875e-05, -0.05130636692047119, -5.960462772236497e-07, -4.1961669921875e-05, -0.0009185075177811086, -3.814697265625e-06, -0.000331878662109375, -0.19586944580078125, -0.0023660659790039062, -0.0044612884521484375, -0.0002613067626953125, -0.0003414154052734375, -2.47955322265625e-05, -0.021205902099609375, -0.0046138763427734375, -7.43865966796875e-05, 0.0, -0.00010120868682861328, -4.768370445162873e-07, -0.010920524597167969, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -5.9604644775390625e-06, 0.0, -0.01571941375732422, -0.0004749298095703125, -0.005096435546875, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0023251771926879883, -1.9073486328125e-06, -6.866455078125e-05, 0.0, 0.0, -0.014975547790527344, -3.814697265625e-06, -0.0001697540283203125, 0.0, -0.3180180788040161, -3.814697265625e-06, -0.0001201629638671875, 0.0, -0.0015975236892700195, -1.9073486328125e-06, -7.62939453125e-06, -0.02130413055419922, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0010164976119995117, -1.9073486328125e-05], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = len(self.player.minions) + len(self.player.minions)\n        card.target = self.player.minions[-1]\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(self.player.minions) < 7\n"}, {"model_output": {"hole3": "use", "_type": "Template0", "hole1": "SecretCard", "hole7": [{"_type": "FunctionDef", "name": "activate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "bind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "player"}], "value": {"_type": "Name", "id": "player"}}]}, {"_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, "attr": "current_player"}, "hole1": "unbind", "hole2": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "_reveal"}]}]}], "hole2": [{"hole3": "RARE", "_type": "Template6", "hole0": "Vaporize", "hole1": 3, "hole2": "MAGE"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole0": "Vaporize", "hole4": "player", "hole6": [{"_type": "Expr", "value": {"hole3": "game", "_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole2": "player"}}, {"_type": "ImportFrom", "names": [{"_type": "alias", "name": "Vaporize"}], "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"_type": "For", "body": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "reveal"}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}, "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Template19", "hole0": "IsSpell"}}]}]}, "target": {"_type": "Name", "id": "i"}}]}, "choice_history": [54, 125, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Vaporize", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 181, 71, 136, 29, 146, "super", "<EOS>", "reveal", "<EOS>", 182, 65, 94, "activate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 182, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 59, 79, 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 21, 110, "player", "<EOS>", 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -6.304277446733799, "score_history": [-3.0517578125e-05, -0.7316074371337891, -0.00014578233822248876, -0.0005551547510549426, -0.0003094672574661672, -0.00021003730944357812, -1.1920928244535389e-07, -0.0012531280517578125, -0.000507354736328125, -0.0001354217529296875, -3.9696344174444675e-05, -2.622604142743512e-06, -3.576278118089249e-07, -5.9604644775390625e-06, -0.00147247314453125, 0.0, -0.00298309326171875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -4.410743713378906e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -0.0004118680953979492, -7.62939453125e-05, -0.09370231628417969, -0.0013637542724609375, -3.24249267578125e-05, -9.5367431640625e-06, -2.288818359375e-05, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004558563232421875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.811309814453125, -0.0018558502197265625, -0.0025528669357299805, -3.814697265625e-06, -0.008083343505859375, -0.0006389617919921875, -0.010851538740098476, -0.00780642032623291, -0.00484804343432188, -2.0265579223632812e-06, -0.04144859313964844, -1.9073486328125e-05, -2.86102294921875e-05, 0.0, -0.02676260471343994, -1.9073486328125e-06, -0.0057888031005859375, -0.0001239776611328125, -9.5367431640625e-06, 0.0, -0.011523842811584473, -0.00026404857635498047, -0.00565338134765625, -0.0011615753173828125, -0.000202178955078125, -0.0004705190658569336, -0.00014710426330566406, -0.42897796630859375, -0.08774185180664062, -1.52587890625e-05, -3.814697265625e-06, -0.10902321338653564, -0.017259597778320312, 0.0, -0.0001010894775390625, -1.9073486328125e-06, 0.0, -0.0030188560485839844, -9.5367431640625e-06, -0.07482051849365234, -3.4332275390625e-05, -0.15785269439220428, -0.09559771418571472, -0.00035858154296875, -0.908111572265625, -0.002262115478515625, -0.025014877319335938, -0.015193939208984375, 0.0, -0.00035606982419267297, -1.9788742065429688e-05, -0.00146484375, 0.0, -0.009634971618652344, -5.14984130859375e-05, -4.38690185546875e-05, -0.0011074516223743558, -3.838539123535156e-05, -2.6702880859375e-05, -0.0001239776611328125, -0.0004749298095703125, -0.000118255615234375, -0.0006928440416231751, -3.8146954466355965e-06, -1.33514404296875e-05, -4.41074053014745e-06, -2.7418097943154862e-06, -1.3037099838256836, -0.0016126632690429688, -4.57763671875e-05, -0.0033502578735351562, -3.814697265625e-06, -0.032691001892089844, -9.5367431640625e-06, -0.00052642822265625, 0.0, -0.00013947486877441406, -7.474422454833984e-05, -5.6624397984705865e-05, -1.9073486328125e-06, -0.00020420551300048828, -1.9073486328125e-06, -0.01837456226348877, 0.0, -0.0002689361572265625, -3.814697265625e-06, -9.5367431640625e-06, -0.20431026816368103, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.0001430511474609375, -5.7220458984375e-06, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, 0.0, -0.0013800859451293945, 0.0, -0.0031766891479492188, 0.0, -0.331695556640625, -8.0108642578125e-05, -0.0018701553344726562, 0.0, -0.000324249267578125, -0.00019073486328125, -0.0005842447280883789, 0.0, -8.20159912109375e-05, -3.814697265625e-05, -0.0004596710205078125, -2.09808349609375e-05, -3.290176027803682e-05, -2.384185791015625e-06, -3.814697265625e-06, -0.00010120868682861328, -4.768370445162873e-07, -0.3169288635253906, -2.09808349609375e-05, -0.000110626220703125, -0.02045440673828125, 0.0, -0.009675979614257812, -3.814697265625e-06, -0.004311561584472656, -1.9073486328125e-06, -0.006741523742675781, -9.655952453613281e-06, -0.0006399154663085938, 0.0, -0.0007516145706176758, 0.0, -0.006431698799133301, -7.62939453125e-06, -2.288818359375e-05, -4.57763671875e-05, -2.288818359375e-05, -0.3150366544723511, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001583099365234375, -1.9073486328125e-06, -0.0001926422119140625, -7.62939453125e-06], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Vaporize\n        for i in range(0, CardSelector(condition=IsSpell())):\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}], "gold_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and attacker.is_minion(\n            ) and not attacker.removed:\n            attacker.die(self)\n            attacker.game.check_delayed()\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "stealth"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.04689117779263796, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -0.04404950141906738, 0.0, -0.0003814697265625, -4.9591064453125e-05, -7.557867502328008e-05, -7.152555099310121e-07], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "super"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "super", "<EOS>", 22, 111, "True", "<EOS>"], "score": -3.927274907741655, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -3.912365198135376, 0.0, -0.012094497680664062, -0.00038909912109375, -8.90493392944336e-05, -2.741813204920618e-06], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, super=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "windfury"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -4.454804743443091, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -4.447088241577148, 0.0, -0.005101203918457031, -0.0001544952392578125, -0.00012636184692382812, -1.1920928244535389e-07], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, windfury=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "charge"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -5.551377142582503, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -5.548139572143555, -1.33514404296875e-05, -0.0001201629638671875, -0.0004711151123046875, -0.00029647350311279297, -2.1457672119140625e-06], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "FREE"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "FREE", "<EOS>", 22, 111, "True", "<EOS>"], "score": -6.060477937345404, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -5.971787452697754, 0.0, -0.08575630187988281, -0.00035858154296875, -0.0002406835264991969, -5.960462772236497e-07], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, FREE=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.134553636227217, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -7.122293949127197, 0.0, -0.009469985961914062, -0.0003376007080078125, -0.00011563301086425781, -2.1457672119140625e-06], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, ALL=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "divine_shield"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.46876593938881, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -7.455008029937744, 0.0, -0.011261940002441406, -6.67572021484375e-05, -9.465217590332031e-05, -2.3841855067985307e-07], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, divine_shield=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "Both"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "Both", "<EOS>", 22, 111, "True", "<EOS>"], "score": -7.849208677921858, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -7.829273223876953, -4.38690185546875e-05, -0.016946792602539062, -0.0003719329833984375, -0.00023651123046875, -2.0265579223632812e-06], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, Both=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "buffs", "_type": "keyword", "value": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "targets"}}], "_type": "List"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Worgen Infiltrator"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Worgen", " ", "Infiltrator", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "targets", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -8.296964036037615, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -6.874296188354492, -0.0007762908935546875, -5.7220458984375e-06, -1.9073486328125e-06, -3.9458249375456944e-05, 0.0, -1.9907914975192398e-05, 0.0, -0.0061855316162109375, -1.9073486328125e-06, -7.62939453125e-06, -3.576278118089249e-07, -0.00010323524475097656, -7.987019671418238e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -5.507318928721361e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.384185791015625e-06, -0.0012303590774536133, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.900856922380626e-05, 0.0, -3.4451481042196974e-05, 0.0, -5.7220458984375e-06, -0.15095138549804688, -5.7220458984375e-06, -0.1833057403564453, 0.0, -0.025394439697265625, -0.0029582977294921875, -0.009578704833984375, -0.0019855499267578125, -0.07002639770507812, -0.2138051986694336, 0.0, -1.1444091796875e-05, 0.0, -0.392267107963562, -0.2737833261489868, -0.0011425018310546875, 0.0, -0.018687963485717773, 0.0, -6.866455078125e-05, -0.06989479064941406, -9.5367431640625e-06, -2.2530530259246007e-05, 0.0, -4.5655862777493894e-05, -1.1920928244535389e-07], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, buffs=[Buff(targets())])\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "Amount"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "Amount", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.577374900420061, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -8.547517776489258, 0.0, -0.026963233947753906, -0.0003719329833984375, -0.0001841782795963809, -3.4570680327306036e-06], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, Amount=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "Num", "n": 1}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "super"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "super", "<EOS>", 23, 115, "1", "<EOS>"], "score": -8.72744758966234, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -3.912365198135376, 0.0, -4.7719573974609375, -0.029447555541992188, -0.011343116872012615, 0.0], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, super=1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 1, "hole2": "ALL"}], "hole6": [{"hole3": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "CantAttack"}}], "_type": "List"}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "buffs"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Cant", "Attack", "<EOS>"], "score": -8.760109747562943, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -7.824560642242432, 0.0, -0.1569051742553711, -0.001331329345703125, -0.0004634857177734375, -0.01952648162841797, -0.0003910064697265625, -0.01089024543762207, -2.3841855067985307e-07, -1.52587890625e-05, 0.0, -0.7139284610748291, -0.02924048900604248, -0.000522613525390625], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, buffs=[Buff(CantAttack())])\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": "COMMON", "_type": "Template6", "hole0": "Worgen Infiltrator", "hole1": 2, "hole2": "ALL"}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "stealth"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 22, 111, "True", "<EOS>"], "score": -8.817651097982882, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -8.770247459411621, -2.384185791015625e-06, -7.62939453125e-05, 0.0, -2.5153160095214844e-05, 0.0, -1.1444091796875e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-06, -0.003143310546875, -0.000141143798828125, -1.2397744285408407e-05, -8.344646857949556e-07, -0.00023897105711512268, -1.1920928244535389e-07, -0.04193615913391113, 0.0, -0.0003032684326171875, -5.340576171875e-05, -6.175040471134707e-05, -7.152555099310121e-07], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "MURLOC"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Worgen Infiltrator"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"hole3": {"_type": "NameConstant", "value": true}, "_type": "Template9", "hole0": 2, "hole1": 1, "hole2": "stealth"}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Worgen", " ", "Infiltrator", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 22, 111, "True", "<EOS>"], "score": -9.305001837328305, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -6.874296188354492, -0.0007762908935546875, -5.7220458984375e-06, -1.9073486328125e-06, -3.9458249375456944e-05, 0.0, -1.9907914975192398e-05, 0.0, -0.0061855316162109375, -1.9073486328125e-06, -7.62939453125e-06, -3.576278118089249e-07, -0.00010323524475097656, -7.987019671418238e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -5.507318928721361e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.384185791015625e-06, -0.0012303590774536133, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.900856922380626e-05, 0.0, -3.4451481042196974e-05, 0.0, -5.7220458984375e-06, -1.9672927856445312, -3.814697265625e-06, -0.42090797424316406, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.00010895729064941406, 0.0, -1.71661376953125e-05, -0.0001888275146484375, -2.288818359375e-05, -9.775153557711747e-06, -1.9073468138230965e-06, -9.190478886011988e-05, -1.1920928244535389e-07, -0.03304922580718994, -1.1920928244535389e-07, -0.000164031982421875, -3.814697265625e-05, -4.661082857637666e-05, -4.768370445162873e-07], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "buffs", "_type": "keyword", "value": {"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "CantAttack"}}], "_type": "List"}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Worgen Infiltrator"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "WorgenInfiltrator", "hole4": "player"}, "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Worgen", " ", "Infiltrator", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "buffs", "<EOS>", 19, 106, 169, 46, 128, "Buff", "<EOS>", 21, 110, "Cant", "Attack", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -10.189703213546295, "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -6.874296188354492, -0.0007762908935546875, -5.7220458984375e-06, -1.9073486328125e-06, -3.9458249375456944e-05, 0.0, -1.9907914975192398e-05, 0.0, -0.0061855316162109375, -1.9073486328125e-06, -7.62939453125e-06, -3.576278118089249e-07, -0.00010323524475097656, -7.987019671418238e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -5.507318928721361e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.384185791015625e-06, -0.0012303590774536133, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.900856922380626e-05, 0.0, -3.4451481042196974e-05, 0.0, -5.7220458984375e-06, -0.15095138549804688, -5.7220458984375e-06, -0.1833057403564453, 0.0, -0.025394439697265625, -0.0029582977294921875, -0.009578704833984375, -0.0019855499267578125, -0.07002639770507812, -0.2138051986694336, 0.0, -1.1444091796875e-05, 0.0, -2.1907293796539307, -0.11966812610626221, -1.33514404296875e-05, -0.000110626220703125, 0.0, -0.0008833408355712891, 0.0, -3.4332275390625e-05, -0.3370075225830078, -0.000171661376953125, -1.4781946447328664e-05, 0.0, -2.801362643367611e-05, -2.3841855067985307e-07], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, buffs=[Buff(CantAttack())])\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}], "gold_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template15", "hole0": "RandomPicker", "hole1": 4}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}]}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 87, 21, 110, "Character", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 47, 134, "Random", "Picker", "<EOS>", "4", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -1.9539005620083003, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.7316007614135742, -1.9073486328125e-06, -1.71661376953125e-05, -0.03150928020477295, -0.0004941225051879883, 0.0, -0.0014362335205078125, -0.00075531005859375, -6.4849853515625e-05, -0.000701904296875, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.01612865924835205, -7.43865966796875e-05, -8.20159912109375e-05, -0.32232093811035156, -0.0010318756103515625, -0.050079941749572754, -0.0011713459389284253, -0.00018322466348763555, -0.21666502952575684, -6.258478970266879e-05, -0.0045909881591796875, -0.0004673004150390625, -0.00030517578125, 0.0, -0.0036525726318359375, -0.00011253354023210704, -7.62939453125e-06, -7.62939453125e-06, -0.000766754150390625, -0.04450225830078125, -0.003397007705643773, -9.059900548891164e-06, -6.4849853515625e-05, 0.0, -0.0017986297607421875, -0.006632804870605469, -5.7220458984375e-06, -0.000118255615234375, -0.00567626953125, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -0.0003875493712257594, -0.0010707464534789324, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, 0.0, -5.14984130859375e-05, 0.0, -8.7738037109375e-05, -2.3841855067985307e-07, -0.1483440399169922, -2.86102294921875e-05, -6.103515625e-05, 0.0, -1.1444091796875e-05, -0.009924888610839844, -8.392333984375e-05, -0.000225067138671875, -1.9073486328125e-06, -0.0009456868283450603, 0.0, -1.4185905456542969e-05, -1.9073486328125e-06, -8.630691445432603e-05, 0.0, -1.9073486328125e-06, -0.0001621246337890625, -5.7220458984375e-06, -0.00024521350860595703, -2.47952248173533e-05, -0.000377655029296875, -2.3841855067985307e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(Null, EnemyPlayer(), RandomPicker(4)),\n            GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}, {"_type": "Template15", "hole0": "OpponentMinionCountIsGreaterThan", "hole1": 4}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 47, 134, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -2.709475018198816, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.784637451171875, -3.24249267578125e-05, -7.62939453125e-06, -0.0006353855133056641, -2.6702880859375e-05, 0.0, -0.026276588439941406, -4.38690185546875e-05, -0.000102996826171875, -0.0003719329833984375, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.4244922399520874, -0.00013744831085205078, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.019130706787109375, 0.0, -0.014668464660644531, -1.71661376953125e-05, -0.006050586700439453, -7.891654968261719e-05, -2.6702880859375e-05, -0.17841720581054688, -1.9073486328125e-05, -0.8019260168075562, -0.010626078583300114, -0.0306931734085083, -0.0008914470672607422, -0.024983763694763184, -0.002616047626361251, -1.52587890625e-05, -0.03321836516261101, -0.00013994828623253852, -0.0011198233114555478, 0.0, -0.0010115564800798893, -1.9073486328125e-06, -1.9073486328125e-06, -0.000949859619140625, -5.7220458984375e-06, -0.00016415119171142578, -6.0794889577664435e-05, -0.0004922151565551758, -3.576278118089249e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            OpponentMinionCountIsGreaterThan(4)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}, {"_type": "Template15", "hole0": "OpponentMinionCountIsGreaterThan", "hole1": 4}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 47, 134, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -3.3065473327062023, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.784637451171875, -3.24249267578125e-05, -7.62939453125e-06, -0.0006353855133056641, -2.6702880859375e-05, 0.0, -0.026276588439941406, -4.38690185546875e-05, -0.000102996826171875, -0.0003719329833984375, 0.0, -0.0002689361572265625, -7.62939453125e-06, -1.0760787725448608, -5.161762237548828e-05, -5.14984130859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.054004669189453125, 0.0, -0.009136199951171875, -5.7220458984375e-06, -0.008906126022338867, -8.690357208251953e-05, -1.71661376953125e-05, -0.11802959442138672, -2.09808349609375e-05, -0.7692244052886963, -0.008543492294847965, -0.021707653999328613, -0.0018525123596191406, -0.03843045234680176, -0.0027902123983949423, -1.71661376953125e-05, -0.03582480549812317, -0.0001074056708603166, -0.0010127561399713159, 0.0, -0.0013210619799792767, -1.9073486328125e-06, -1.9073486328125e-06, -0.0011043548583984375, -5.7220458984375e-06, -0.00016415119171142578, -6.222531374078244e-05, -0.0004998445510864258, -3.576278118089249e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker()),\n            OpponentMinionCountIsGreaterThan(4)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template15", "hole0": "RandomPicker", "hole1": 5}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}]}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 87, 21, 110, "Character", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 47, 134, "Random", "Picker", "<EOS>", "5", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -3.4266969148813686, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.7316007614135742, -1.9073486328125e-06, -1.71661376953125e-05, -0.03150928020477295, -0.0004941225051879883, 0.0, -0.0014362335205078125, -0.00075531005859375, -6.4849853515625e-05, -0.000701904296875, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.01612865924835205, -7.43865966796875e-05, -8.20159912109375e-05, -0.32232093811035156, -0.0010318756103515625, -0.050079941749572754, -0.0011713459389284253, -0.00018322466348763555, -1.6366642713546753, -0.00010478287003934383, -0.024576187133789062, -0.05798530578613281, -0.0002269744873046875, 0.0, -0.005870819091796875, -0.00010621546243783087, -9.5367431640625e-06, -9.5367431640625e-06, -0.000629425048828125, -0.04278755187988281, -0.0027262596413493156, -8.2254373410251e-06, -6.29425048828125e-05, 0.0, -0.0018862485885620117, -0.0037631988525390625, -5.7220458984375e-06, -0.000118255615234375, -0.005496978759765625, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -0.0003682374663185328, -0.0010818240698426962, -5.7220458984375e-06, -9.5367431640625e-06, -3.62396240234375e-05, 0.0, -7.43865966796875e-05, 0.0, -7.82012939453125e-05, -2.3841855067985307e-07, -0.12865161895751953, -3.0517578125e-05, -5.340576171875e-05, 0.0, -1.1444091796875e-05, -0.008234977722167969, -9.34600830078125e-05, -0.0002460479736328125, -1.9073486328125e-06, -0.0009535546996630728, 0.0, -1.4066696166992188e-05, -1.9073486328125e-06, -8.726055966690183e-05, 0.0, -1.9073486328125e-06, -0.0001621246337890625, -5.7220458984375e-06, -0.0002262592315673828, -1.7165990357170813e-05, -0.000354766845703125, -1.1920928244535389e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(Null, EnemyPlayer(), RandomPicker(5)),\n            GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template19", "hole0": "RandomPicker"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 87, 21, 110, "Character", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Random", "Picker", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -3.5063146621777648, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.7316007614135742, -1.9073486328125e-06, -1.71661376953125e-05, -0.03150928020477295, -0.0004941225051879883, 0.0, -0.0014362335205078125, -0.00075531005859375, -6.4849853515625e-05, -0.000701904296875, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.01612865924835205, -7.43865966796875e-05, -8.20159912109375e-05, -1.4954462051391602, -1.52587890625e-05, -0.36755800247192383, -9.97781753540039e-05, -5.173683166503906e-05, -0.17923641204833984, -0.00099945068359375, -6.103515625e-05, 0.0, -0.003593205474317074, -0.0003074293490499258, -3.814697265625e-06, -9.5367431640625e-06, -0.000720977783203125, -0.22836780548095703, -0.0017506792210042477, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0011626482009887695, -4.422663914738223e-05, 0.0, -0.0001983642578125, 0.0, -1.52587890625e-05, -0.0566178560256958, -1.9073486328125e-06, -0.000339508056640625, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.0014191865921020508, -0.0007896419847384095, 0.0, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000690460205078125, -7.152555099310121e-07, -0.01751422882080078, -1.52587890625e-05, -3.814697265625e-05, 0.0, -4.76837158203125e-05, -0.012484550476074219, -0.0001049041748046875, -0.00066375732421875, -1.9073486328125e-06, -0.006763921584933996, -1.1920928244535389e-07, -2.169608706026338e-05, -3.814697265625e-06, -0.00013601634418591857, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001544952392578125, -5.7220458984375e-06, -0.00025093555450439453, -2.4437606043647975e-05, -0.000324249267578125, -3.576278118089249e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(Null, EnemyPlayer(), RandomPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}, {"_type": "Template15", "hole0": "IsMinionCountIsGreaterThan", "hole1": 4}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 47, 134, "Is", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -3.515147999360323, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.784637451171875, -3.24249267578125e-05, -7.62939453125e-06, -0.0006353855133056641, -2.6702880859375e-05, 0.0, -0.026276588439941406, -4.38690185546875e-05, -0.000102996826171875, -0.0003719329833984375, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.4244922399520874, -0.00013744831085205078, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.019130706787109375, 0.0, -0.014668464660644531, -1.71661376953125e-05, -0.006050586700439453, -7.891654968261719e-05, -2.6702880859375e-05, -0.17841720581054688, -1.9073486328125e-05, -1.4258922338485718, -0.10204432904720306, -0.03253173828125, -0.034052491188049316, -0.08108437061309814, -0.002319812076166272, -2.09808349609375e-05, -0.032341957092285156, -0.00011610723595367745, -0.0013244004221633077, 0.0, -0.0010546701960265636, -3.814697265625e-06, -1.9073486328125e-06, -0.0011138916015625, -7.62939453125e-06, -0.00013375282287597656, -4.339123915997334e-05, -0.0005036592483520508, -2.3841855067985307e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            IsMinionCountIsGreaterThan(4)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -3.685922407352301, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.784637451171875, -3.24249267578125e-05, -7.62939453125e-06, -0.0006353855133056641, -2.6702880859375e-05, 0.0, -0.026276588439941406, -4.38690185546875e-05, -0.000102996826171875, -0.0003719329833984375, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.4244922399520874, -0.00013744831085205078, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.019130706787109375, 0.0, -0.014668464660644531, -1.71661376953125e-05, -0.006050586700439453, -7.891654968261719e-05, -2.6702880859375e-05, -1.821207046508789, -0.008962631225585938, -0.00014495849609375, 0.0, -0.0031901595648378134, -0.0003331808838993311, -9.5367431640625e-06, -1.33514404296875e-05, -0.000904083251953125, -0.0979461669921875, -0.0021571828983724117, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0022001266479492188, -4.792211620952003e-05, 0.0, -0.00014495849609375, 0.0, -1.9073486328125e-05, -0.08210670948028564, -1.9073486328125e-06, -0.00046825408935546875, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -0.0011713504791259766, -0.001017689355649054, 0.0, -3.814697265625e-06, -6.866455078125e-05, 0.0, -9.5367431640625e-05, 0.0, -0.0007592439651489258, -7.152555099310121e-07, -0.01744365692138672, -1.33514404296875e-05, -4.9591064453125e-05, 0.0, -4.1961669921875e-05, -0.013165473937988281, -9.5367431640625e-05, -0.0007724761962890625, -1.9073486328125e-06, -0.008306125178933144, -1.1920928244535389e-07, -2.2053714928915724e-05, -3.814697265625e-06, -0.00014018864021636546, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001544952392578125, -5.7220458984375e-06, -0.00022459030151367188, -1.490105023549404e-05, -0.00029754638671875, -2.3841855067985307e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template15", "hole0": "RandomPicker", "hole1": 4}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}]}]}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 87, 21, 110, "Character", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 47, 134, "Random", "Picker", "<EOS>", "4", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -4.132653938131796, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.7316007614135742, -1.9073486328125e-06, -1.71661376953125e-05, -0.03150928020477295, -0.0004941225051879883, 0.0, -0.0014362335205078125, -0.00075531005859375, -6.4849853515625e-05, -0.000701904296875, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.01612865924835205, -7.43865966796875e-05, -8.20159912109375e-05, -0.32232093811035156, -0.0010318756103515625, -0.050079941749572754, -0.0011713459389284253, -0.00018322466348763555, -0.21666502952575684, -6.258478970266879e-05, -0.0045909881591796875, -0.0004673004150390625, -0.00030517578125, 0.0, -0.0036525726318359375, -0.00011253354023210704, -7.62939453125e-06, -7.62939453125e-06, -0.000766754150390625, -0.04450225830078125, -0.003397007705643773, -9.059900548891164e-06, -6.4849853515625e-05, 0.0, -0.0017986297607421875, -0.006632804870605469, -5.7220458984375e-06, -0.000118255615234375, -0.00567626953125, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -0.0003875493712257594, -0.0010707464534789324, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, 0.0, -5.14984130859375e-05, 0.0, -8.7738037109375e-05, -2.3841855067985307e-07, -2.316349983215332, -5.7220458984375e-06, -0.0007648468017578125, -1.9073486328125e-06, -5.7220458984375e-06, -0.01951122283935547, -5.14984130859375e-05, -0.0001850128173828125, -7.62939453125e-06, -0.001409888151101768, 0.0, -2.014636993408203e-05, -1.9073486328125e-06, -0.0001082411763491109, -1.9073486328125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -0.00024902820587158203, -2.4199192921514623e-05, -0.0004311800003051758, -2.3841855067985307e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(Null, EnemyPlayer(), RandomPicker(4)),\n            GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.MECH))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}, {"_type": "Template15", "hole0": "IsMinionCountIsGreaterThan", "hole1": 4}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 47, 134, "Is", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -4.212908023508334, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.784637451171875, -3.24249267578125e-05, -7.62939453125e-06, -0.0006353855133056641, -2.6702880859375e-05, 0.0, -0.026276588439941406, -4.38690185546875e-05, -0.000102996826171875, -0.0003719329833984375, 0.0, -0.0002689361572265625, -7.62939453125e-06, -1.0760787725448608, -5.161762237548828e-05, -5.14984130859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.054004669189453125, 0.0, -0.009136199951171875, -5.7220458984375e-06, -0.008906126022338867, -8.690357208251953e-05, -1.71661376953125e-05, -0.11802959442138672, -2.09808349609375e-05, -1.4011003971099854, -0.10831198841333389, -0.031169891357421875, -0.0982670783996582, -0.1073923110961914, -0.0027575490530580282, -2.47955322265625e-05, -0.03528985381126404, -9.059758303919807e-05, -0.0011777032632380724, 0.0, -0.0014546418096870184, -1.9073486328125e-06, -1.9073486328125e-06, -0.001300811767578125, -7.62939453125e-06, -0.00013184547424316406, -4.446407547220588e-05, -0.0005074739456176758, -2.3841855067985307e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker()),\n            IsMinionCountIsGreaterThan(4)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 4}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template15", "hole0": "RandomPicker", "hole1": 4}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}]}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Character", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 47, 134, "Random", "Picker", "<EOS>", "4", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -4.494749249921881, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -2.450310230255127, -8.344646857949556e-07, -2.09808349609375e-05, -0.6265878677368164, -1.9073486328125e-06, -3.814697265625e-06, -0.37495148181915283, -0.0012744665145874023, 0.0, -0.0010833740234375, -0.0009374618530273438, -6.29425048828125e-05, -0.001323699951171875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.021909713745117188, -7.82012939453125e-05, -7.43865966796875e-05, -0.3410158157348633, -0.0010833740234375, -0.0609893798828125, -0.0012137845624238253, -0.0001797675940906629, -0.22252464294433594, -5.6862769270082936e-05, -0.0076580047607421875, -0.0004520416259765625, -0.0003204345703125, 0.0, -0.0037304162979125977, -0.0001114606493501924, -7.62939453125e-06, -7.62939453125e-06, -0.00074005126953125, -0.04579734802246094, -0.0034003346227109432, -9.179109838441946e-06, -6.4849853515625e-05, 0.0, -0.0017681121826171875, -0.0067310333251953125, -5.7220458984375e-06, -0.0001201629638671875, -0.0057163238525390625, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -0.0003856420225929469, -0.0010777763091027737, -5.7220458984375e-06, -1.1444091796875e-05, -3.62396240234375e-05, 0.0, -4.76837158203125e-05, 0.0, -8.96453857421875e-05, -2.3841855067985307e-07, -0.1526470184326172, -2.86102294921875e-05, -6.103515625e-05, 0.0, -1.33514404296875e-05, -0.010399818420410156, -8.0108642578125e-05, -0.00022125244140625, -1.9073486328125e-06, -0.0009431834332644939, 0.0, -1.4185905456542969e-05, -1.9073486328125e-06, -8.583009912399575e-05, 0.0, -1.9073486328125e-06, -0.0001621246337890625, -5.7220458984375e-06, -0.00024521350860595703, -2.47952248173533e-05, -0.00037384033203125, -2.3841855067985307e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(4),\n            CharacterSelector(Null, EnemyPlayer(), RandomPicker(4)),\n            GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 5}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template15", "hole0": "RandomPicker", "hole1": 4}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}]}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "5", "<EOS>", 35, 87, 21, 110, "Character", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 47, 134, "Random", "Picker", "<EOS>", "4", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -4.622681734129344, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -2.367321491241455, -3.802703940891661e-05, -9.34600830078125e-05, -0.020570755004882812, -1.9073486328125e-06, -2.47955322265625e-05, -1.279768705368042, -0.0031849145889282227, 0.0, -0.0009479522705078125, -0.0009241104125976562, -7.82012939453125e-05, -0.0009899139404296875, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.03629493713378906, -8.392333984375e-05, -8.58306884765625e-05, -0.25284385681152344, -0.0010852813720703125, -0.05999422073364258, -0.0011985250748693943, -0.0001816749427234754, -0.21922409534454346, -6.00814055360388e-05, -0.0047245025634765625, -0.0004940032958984375, -0.0003108978271484375, 0.0, -0.0035550594329833984, -0.00011420247028581798, -7.62939453125e-06, -7.62939453125e-06, -0.000774383544921875, -0.04442119598388672, -0.0034174390602856874, -9.059900548891164e-06, -6.4849853515625e-05, 0.0, -0.001789093017578125, -0.006699562072753906, -5.7220458984375e-06, -0.0001201629638671875, -0.00567626953125, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -0.0003799199766945094, -0.0010795632842928171, -5.7220458984375e-06, -1.1444091796875e-05, -3.62396240234375e-05, 0.0, -5.340576171875e-05, 0.0, -8.7738037109375e-05, -2.3841855067985307e-07, -0.1463451385498047, -2.86102294921875e-05, -6.103515625e-05, 0.0, -1.1444091796875e-05, -0.009694099426269531, -8.392333984375e-05, -0.0002269744873046875, -1.9073486328125e-06, -0.0009477133862674236, 0.0, -1.4185905456542969e-05, -1.9073486328125e-06, -8.642612374387681e-05, 0.0, -1.9073486328125e-06, -0.0001621246337890625, -5.7220458984375e-06, -0.00024521350860595703, -2.47952248173533e-05, -0.000377655029296875, -2.3841855067985307e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(5),\n            CharacterSelector(Null, EnemyPlayer(), RandomPicker(4)),\n            GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 5}, {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}, {"_type": "Template19", "hole0": "BothPlayer"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "5", "<EOS>", 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 50, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -4.673932843380491, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -2.367321491241455, -3.802703940891661e-05, -9.34600830078125e-05, -0.020570755004882812, -1.9073486328125e-06, -2.47955322265625e-05, -0.5504024028778076, -0.0016374588012695312, -3.814697265625e-06, -0.00060272216796875, -0.0001068115234375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.01372063159942627, 0.0, -0.2178487777709961, -7.62939453125e-06, -0.8163118362426758, -2.47955322265625e-05, -0.5387978553771973, -0.0002499818801879883, -0.0001316070556640625, -2.6702880859375e-05, 0.0, -4.4584237912204117e-05, 0.0, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.00017631053924560547, -1.2516897186287679e-05, -0.00039696693420410156, -1.1920928244535389e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(5), IsType(\n            MINION_TYPE.DRAGON), BothPlayer()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}, {"_type": "Template15", "hole0": "RandomPicker", "hole1": 5}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 47, 134, "Random", "Picker", "<EOS>", "5", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -4.749602973808635, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.784637451171875, -3.24249267578125e-05, -7.62939453125e-06, -0.0006353855133056641, -2.6702880859375e-05, 0.0, -0.026276588439941406, -4.38690185546875e-05, -0.000102996826171875, -0.0003719329833984375, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.4244922399520874, -0.00013744831085205078, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.019130706787109375, 0.0, -0.014668464660644531, -1.71661376953125e-05, -0.006050586700439453, -7.891654968261719e-05, -2.6702880859375e-05, -0.17841720581054688, -1.9073486328125e-05, -2.3361055850982666, -0.009659207426011562, -0.0011622897582128644, -0.5984841585159302, -0.00019740371499210596, -0.0009569668327458203, 0.0, -0.0007636502268724144, 0.0, -1.9073486328125e-06, -0.001079559326171875, -3.814697265625e-06, -0.00023412704467773438, -6.5205356804654e-05, -0.000331878662109375, -5.960462772236497e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            RandomPicker(5)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Template19", "hole0": "UserPicker"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -4.750684516849979, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.784637451171875, -3.24249267578125e-05, -7.62939453125e-06, -0.0006353855133056641, -2.6702880859375e-05, 0.0, -0.026276588439941406, -4.38690185546875e-05, -0.000102996826171875, -0.0003719329833984375, 0.0, -0.0002689361572265625, -7.62939453125e-06, -1.0760787725448608, -5.161762237548828e-05, -5.14984130859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.054004669189453125, 0.0, -0.009136199951171875, -5.7220458984375e-06, -0.008906126022338867, -8.690357208251953e-05, -1.71661376953125e-05, -2.2050771713256836, -0.007096290588378906, -0.0001621246337890625, 0.0, -0.00430142879486084, -0.0003847941989079118, -9.5367431640625e-06, -1.33514404296875e-05, -0.000896453857421875, -0.0963735580444336, -0.0022203619591891766, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0021266937255859375, -4.982946484233253e-05, 0.0, -0.000141143798828125, 0.0, -1.9073486328125e-05, -0.08014309406280518, -1.9073486328125e-06, -0.000461578369140625, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -0.0010797977447509766, -0.0010404583299532533, 0.0, -5.7220458984375e-06, -6.67572021484375e-05, 0.0, -9.5367431640625e-05, 0.0, -0.0007649660110473633, -7.152555099310121e-07, -0.01746654510498047, -1.33514404296875e-05, -4.76837158203125e-05, 0.0, -4.1961669921875e-05, -0.014323234558105469, -9.72747802734375e-05, -0.00081634521484375, -1.9073486328125e-06, -0.008580783382058144, -1.1920928244535389e-07, -2.2172922399477102e-05, -3.814697265625e-06, -0.00014102306158747524, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001544952392578125, -5.7220458984375e-06, -0.00022459030151367188, -1.4781842764932662e-05, -0.00029754638671875, -2.3841855067985307e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template15", "hole0": "Damage", "hole1": 3}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Template19", "hole0": "EnemyPlayer"}, {"_type": "Template19", "hole0": "UserPicker"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 4}], "hole0": "BlackwingCorruptor", "hole4": "player"}, "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 87, 21, 110, "Character", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "User", "Picker", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -4.83203568754282, "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.7316007614135742, -1.9073486328125e-06, -1.71661376953125e-05, -0.03150928020477295, -0.0004941225051879883, 0.0, -0.0014362335205078125, -0.00075531005859375, -6.4849853515625e-05, -0.000701904296875, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.01612865924835205, -7.43865966796875e-05, -8.20159912109375e-05, -1.4954462051391602, -1.52587890625e-05, -1.2783026695251465, -0.00018131711112800986, -2.050399598374497e-05, -0.3649435043334961, -0.000720977783203125, -7.62939453125e-05, 0.0, -0.004289506934583187, -0.0003151755081489682, -3.814697265625e-06, -5.7220458984375e-06, -0.0009365081787109375, -0.45542049407958984, -0.0017438876675441861, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0011074542999267578, -4.816054570255801e-05, 0.0, -0.0002346038818359375, 0.0, -1.52587890625e-05, -0.057967305183410645, -1.9073486328125e-06, -0.0003414154052734375, -7.62939453125e-06, -4.9591064453125e-05, 0.0, -0.0012074708938598633, -0.0007323023164644837, 0.0, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0006885528564453125, -7.152555099310121e-07, -0.01750946044921875, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -5.14984130859375e-05, -0.012360572814941406, -0.0001010894775390625, -0.0006275177001953125, -1.9073486328125e-06, -0.007382855284959078, -1.1920928244535389e-07, -2.169608706026338e-05, -3.814697265625e-06, -0.00013601644604932517, -1.9073486328125e-06, -1.9073486328125e-06, -0.000152587890625, -5.7220458984375e-06, -0.00024902820587158203, -2.372236667724792e-05, -0.0003204345703125, -3.576278118089249e-07], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(Null, EnemyPlayer(), UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}], "gold_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+3/+3"}}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "+3/+3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -2.3020670754959056, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.31302642822265625, -0.03383922576904297, -0.21255207061767578, -0.0020650746300816536, -0.05997931957244873, -1.9073486328125e-05, -9.5367431640625e-06, -0.41472065448760986, -0.04062211513519287, -7.05718994140625e-05, -0.20559406280517578, -0.011007308959960938, -0.015177488327026367, 0.0, -1.71661376953125e-05, 0.0, -0.14934484660625458, -0.21807488799095154, -0.015157699584960938, -1.9073486328125e-06, -0.2036830186843872, -2.3841855067985307e-07, 0.0, -7.43865966796875e-05, 0.0, -2.384185791015625e-06, 0.0, -6.67572021484375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -2.5033946258190554e-06, -1.1920928244535389e-07, -7.574680239486042e-06, -3.2186455882765586e-06], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(Buff(Buff(+3/+3()))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "+3/+3Crusher"}}, {"_type": "Template19", "hole0": "PlayerSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "+3/+3", "Crusher", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -3.5084088721681113, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.31302642822265625, -0.03383922576904297, -1.9204950332641602, -0.24411852657794952, -4.0531158447265625e-06, -5.7220458984375e-06, 0.0, -0.21071773767471313, -0.3460254669189453, -0.001612153952009976, -0.02667713165283203, -1.33514404296875e-05, -0.004899961408227682, 0.0, 0.0, -3.814697265625e-05, 0.0, -5.245207830739673e-06, 0.0, -2.288818359375e-05, -3.24249267578125e-05, -7.62939453125e-06, -2.741813204920618e-06, -1.1920928244535389e-07, -8.0473273555981e-06, -2.861018856492592e-06], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(+3/+3Crusher()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -3.5125356829412766, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.31302642822265625, -0.03383922576904297, -0.21255207061767578, -0.0020650746300816536, -0.05997931957244873, -1.9073486328125e-05, -9.5367431640625e-06, -1.2713385820388794, -0.3264455795288086, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.4307175874710083, -5.53131103515625e-05, -0.45507240295410156, 0.0, -0.0003795623779296875, -1.9073486328125e-06, 0.0, -5.340576171875e-05, 0.0, -7.152556463552173e-06, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -7.62939453125e-06, -9.536736342852237e-07, -2.3841855067985307e-07, -7.4279973887314554e-06, -1.1682462172757369e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(ChangeHealth(3)), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Health"}}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Health", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -3.9293086525133845, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.31302642822265625, -0.03383922576904297, -0.21255207061767578, -0.0020650746300816536, -0.05997931957244873, -1.9073486328125e-05, -9.5367431640625e-06, -0.41472065448760986, -0.04062211513519287, -7.05718994140625e-05, -0.20559406280517578, -0.011007308959960938, -0.015177488327026367, 0.0, -1.71661376953125e-05, 0.0, -2.1091437339782715, -0.030102476477622986, -0.05792713165283203, -1.9073486328125e-06, -0.01628267765045166, -1.1920928244535389e-07, 0.0, -8.0108642578125e-05, 0.0, -2.1457672119140625e-06, 0.0, -6.4849853515625e-05, -0.000125885009765625, -7.62939453125e-06, -2.384185336268274e-06, -1.1920928244535389e-07, -7.09318646840984e-06, -6.318082796497038e-06], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(Buff(Buff(Health()))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -4.003842974331533, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3344831466674805, -0.49415111541748047, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0007030079141259193, -0.0003204345703125, -0.0007762908935546875, -0.00014495849609375, -3.814697265625e-05, -0.00014495849609375, -1.9073486328125e-05, -0.0021905899047851562, -0.0002328153350390494, -5.7220458984375e-06, -0.0001068115234375, 0.0, -9.775113721843809e-05, -0.004842162132263184, 0.0, -0.001239776611328125, -0.01473236083984375, 0.0, -0.48053860664367676, -7.82012939453125e-05, -5.7220458984375e-06, -0.060898780822753906, -2.6941299438476562e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.52587890625e-05, -4.470347266760655e-05, -7.832050323486328e-05, 0.0, -8.58306884765625e-05, -0.0001373291015625, -1.9073486328125e-06, -0.43619048595428467, -5.7220458984375e-05, -0.0014190673828125, -1.9073486328125e-06, -0.00020992755889892578, -3.933906555175781e-06, 0.0, -0.3132047653198242, -0.0009002685546875, -3.0517578125e-05, 0.0, -0.0029053688049316406, -0.0002886056900024414, -3.814697265625e-06, -5.7220458984375e-06, -5.91278076171875e-05, -0.2818031311035156, -0.0010114904725924134, -0.000774383544921875, -5.7220458984375e-06, 0.0, -0.0006895065307617188, -0.0003209114074707031, 0.0, -0.0001659393310546875, -5.7220458984375e-06, -3.814697265625e-06, -0.052899956703186035, 0.0, -0.013127326965332031, -2.86102294921875e-05, -3.62396240234375e-05, 0.0, -0.002135634422302246, -7.414666470140219e-05, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001544952392578125, 0.0, -0.00019609928131103516, -9.059865078597795e-06, -0.02905750274658203, -1.9073486328125e-06, -0.0001201629638671875, 0.0, -1.9073486328125e-06, -0.04955267906188965, -8.940695806813892e-06, -0.000514984130859375, 0.0, -0.011900422163307667, -1.9073486328125e-06, -0.0003323554992675781, -1.9073486328125e-06, -7.629391620866954e-05, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -3.814697265625e-06, -1.4305101103673223e-06, -3.576278118089249e-07, -1.3646672414324712e-05, -1.0609570381348021e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -4.224860209359399, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -1.657465934753418, -0.3010540008544922, -2.6702880859375e-05, -6.413459777832031e-05, -1.9073486328125e-06, -0.0006618499755859375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -0.5428533554077148, -0.020699501037597656, -5.340576171875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0006383914733305573, -0.0002498626708984375, -0.0007572174072265625, -0.0001087188720703125, -4.57763671875e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0013227462768554688, -0.00023651088122278452, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -0.00010549967555562034, -0.004880428314208984, 0.0, -0.0012187957763671875, -0.01338958740234375, 0.0, -0.46156394481658936, -7.62939453125e-05, -5.7220458984375e-06, -0.06072235107421875, -2.6941299438476562e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.71661376953125e-05, -4.470347266760655e-05, -8.0108642578125e-05, 0.0, -9.1552734375e-05, -0.0001354217529296875, -1.9073486328125e-06, -0.5188071727752686, -5.91278076171875e-05, -0.0013275146484375, -1.9073486328125e-06, -0.00022518634796142578, -3.933906555175781e-06, 0.0, -0.18687725067138672, -0.0009174346923828125, -3.0517578125e-05, 0.0, -0.002596259117126465, -0.00028705596923828125, -3.814697265625e-06, -3.814697265625e-06, -5.91278076171875e-05, -0.27989673614501953, -0.0009869333589449525, -0.0008029937744140625, -5.7220458984375e-06, 0.0, -0.0006895065307617188, -0.0003209114074707031, 0.0, -0.0001678466796875, -5.7220458984375e-06, -3.814697265625e-06, -0.05281412601470947, 0.0, -0.013119697570800781, -2.86102294921875e-05, -3.62396240234375e-05, 0.0, -0.002089858055114746, -7.486187678296119e-05, 0.0, -0.000392913818359375, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001544952392578125, 0.0, -0.00019419193267822266, -9.059865078597795e-06, -0.029297828674316406, -1.9073486328125e-06, -0.000118255615234375, 0.0, -1.9073486328125e-06, -0.04925990104675293, -8.940695806813892e-06, -0.0005168914794921875, 0.0, -0.011808750219643116, -1.9073486328125e-06, -0.0003323554992675781, -1.9073486328125e-06, -7.641312549822032e-05, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -3.814697265625e-06, -1.4305101103673223e-06, -2.3841855067985307e-07, -1.4241321878216695e-05, -1.0609570381348021e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -4.3479213500146585, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.31302642822265625, -0.03383922576904297, -0.21255207061767578, -0.0020650746300816536, -0.05997931957244873, -1.9073486328125e-05, -9.5367431640625e-06, -1.2713385820388794, -1.283546805381775, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.4912041127681732, -3.814697265625e-05, -0.2728424072265625, 0.0, -0.0004177093505859375, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, 0.0, -7.152556463552173e-06, 0.0, -1.71661376953125e-05, -4.38690185546875e-05, -7.62939453125e-06, -8.344644584212801e-07, -3.576278118089249e-07, -7.683179319428746e-06, -1.835809598560445e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(ChangeAttack(3)), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "Buff"}, "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+3/+3Health"}}]}, {"_type": "Template19", "hole0": "SelfSelector"}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "+3/+3", "Health", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -4.385684998345653, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.31302642822265625, -0.03383922576904297, -0.21255207061767578, -0.0020650746300816536, -0.05997931957244873, -1.9073486328125e-05, -9.5367431640625e-06, -0.41472065448760986, -0.04062211513519287, -7.05718994140625e-05, -0.20559406280517578, -0.011007308959960938, -0.015177488327026367, 0.0, -1.71661376953125e-05, 0.0, -0.14934484660625458, -2.352940559387207, -1.1920928244535389e-07, -0.0269317626953125, 0.0, -0.14065420627593994, -1.9073486328125e-06, 0.0, -6.4849853515625e-05, 0.0, -2.1457672119140625e-06, 0.0, -7.62939453125e-05, -9.34600830078125e-05, -7.62939453125e-06, -2.6226039153698366e-06, -1.1920928244535389e-07, -7.065246791171376e-06, -3.3378546504536644e-06], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(Buff(Buff(+3/+3Health()))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -4.387389364281958, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3344831466674805, -0.49415111541748047, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0007030079141259193, -0.0003204345703125, -0.0007762908935546875, -0.00014495849609375, -3.814697265625e-05, -0.00014495849609375, -1.9073486328125e-05, -0.0021905899047851562, -0.0002328153350390494, -5.7220458984375e-06, -0.0001068115234375, 0.0, -9.775113721843809e-05, -0.004842162132263184, 0.0, -0.001239776611328125, -0.01473236083984375, 0.0, -0.975170373916626, -1.33514404296875e-05, -1.1444091796875e-05, -0.015428543090820312, -5.7697296142578125e-05, -2.86102294921875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.706047598621808e-05, -7.82012939453125e-05, 0.0, -0.0001430511474609375, -0.00011444091796875, -1.9073486328125e-06, -0.5492610931396484, -1.33514404296875e-05, -0.0035457611083984375, -5.7220458984375e-06, -0.00042819976806640625, -4.0531158447265625e-06, 0.0, -0.09732627868652344, -0.0008678436279296875, -4.1961669921875e-05, 0.0, -0.0033501386642456055, -0.0002472400665283203, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -0.30764293670654297, -0.0009452099329791963, -0.000797271728515625, -5.7220458984375e-06, 0.0, -0.0005826950073242188, -0.0003153085708618164, 0.0, -0.0002040863037109375, -5.7220458984375e-06, -3.814697265625e-06, -0.05457735061645508, 0.0, -0.013383865356445312, -2.6702880859375e-05, -3.814697265625e-05, 0.0, -0.0018153190612792969, -7.14048946974799e-05, 0.0, -0.000396728515625, -2.47955322265625e-05, -1.9073486328125e-06, -0.000152587890625, 0.0, -0.00018668174743652344, -8.583032467868179e-06, -0.02929210662841797, -1.9073486328125e-06, -0.0001220703125, 0.0, -1.9073486328125e-06, -0.05634772777557373, -8.940695806813892e-06, -0.0005397796630859375, 0.0, -0.012009617872536182, -1.9073486328125e-06, -0.0003590583801269531, -1.9073486328125e-06, -7.65323347877711e-05, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -3.814697265625e-06, -1.4305101103673223e-06, -3.576278118089249e-07, -1.4518856005452108e-05, -1.1205610462639015e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -4.487936785149728, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3344831466674805, -0.49415111541748047, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0007030079141259193, -0.0003204345703125, -0.0007762908935546875, -0.00014495849609375, -3.814697265625e-05, -0.00014495849609375, -1.9073486328125e-05, -0.0021905899047851562, -0.0002328153350390494, -5.7220458984375e-06, -0.0001068115234375, 0.0, -9.775113721843809e-05, -0.004842162132263184, 0.0, -0.001239776611328125, -0.01473236083984375, 0.0, -0.48053860664367676, -7.82012939453125e-05, -5.7220458984375e-06, -0.060898780822753906, -2.6941299438476562e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.52587890625e-05, -4.470347266760655e-05, -7.832050323486328e-05, 0.0, -8.58306884765625e-05, -0.0001373291015625, -1.9073486328125e-06, -1.093185305595398, -1.1444091796875e-05, -0.005008697509765625, -7.62939453125e-06, -0.00039184093475341797, -4.0531158447265625e-06, 0.0, -0.10590839385986328, -0.000873565673828125, -3.814697265625e-05, 0.0, -0.003495454788208008, -0.0002472400665283203, -3.814697265625e-06, -5.7220458984375e-06, -4.38690185546875e-05, -0.30503177642822266, -0.0009337658993899822, -0.0007877349853515625, -5.7220458984375e-06, 0.0, -0.0005904436111450195, -0.0003153085708618164, 0.0, -0.0002002716064453125, -5.7220458984375e-06, -3.814697265625e-06, -0.05432474613189697, 0.0, -0.013354301452636719, -2.6702880859375e-05, -3.814697265625e-05, 0.0, -0.0018343925476074219, -7.152409671107307e-05, 0.0, -0.000396728515625, -2.47955322265625e-05, -1.9073486328125e-06, -0.000152587890625, 0.0, -0.00018858909606933594, -8.583032467868179e-06, -0.02925395965576172, -1.9073486328125e-06, -0.0001239776611328125, 0.0, -1.9073486328125e-06, -0.054886579513549805, -8.940695806813892e-06, -0.000537872314453125, 0.0, -0.012031910009682178, -1.9073486328125e-06, -0.0003495216369628906, -1.9073486328125e-06, -7.641312549822032e-05, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -3.814697265625e-06, -1.4305101103673223e-06, -3.576278118089249e-07, -1.3433865206025075e-05, -1.0967194612021558e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(2))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -4.572135253378086, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -1.657465934753418, -0.3010540008544922, -2.6702880859375e-05, -6.413459777832031e-05, -1.9073486328125e-06, -0.0006618499755859375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -0.5428533554077148, -0.020699501037597656, -5.340576171875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0006383914733305573, -0.0002498626708984375, -0.0007572174072265625, -0.0001087188720703125, -4.57763671875e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0013227462768554688, -0.00023651088122278452, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -0.00010549967555562034, -0.004880428314208984, 0.0, -0.0012187957763671875, -0.01338958740234375, 0.0, -0.46156394481658936, -7.62939453125e-05, -5.7220458984375e-06, -0.06072235107421875, -2.6941299438476562e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.71661376953125e-05, -4.470347266760655e-05, -8.0108642578125e-05, 0.0, -9.1552734375e-05, -0.0001354217529296875, -1.9073486328125e-06, -0.9541051387786865, -1.33514404296875e-05, -0.0040798187255859375, -7.62939453125e-06, -0.00039970874786376953, -4.0531158447265625e-06, 0.0, -0.06218910217285156, -0.0008983612060546875, -3.814697265625e-05, 0.0, -0.003287672996520996, -0.0002455711364746094, -3.814697265625e-06, -5.7220458984375e-06, -4.38690185546875e-05, -0.30580711364746094, -0.000903367530554533, -0.000812530517578125, -5.7220458984375e-06, 0.0, -0.0005846023559570312, -0.0003153085708618164, 0.0, -0.000202178955078125, -5.7220458984375e-06, -3.814697265625e-06, -0.054273247718811035, 0.0, -0.013358116149902344, -2.6702880859375e-05, -3.814697265625e-05, 0.0, -0.0017943382263183594, -7.17625007382594e-05, 0.0, -0.0003986358642578125, -2.47955322265625e-05, -1.9073486328125e-06, -0.000152587890625, 0.0, -0.00018668174743652344, -8.702239938429557e-06, -0.02945995330810547, -1.9073486328125e-06, -0.0001239776611328125, 0.0, -1.9073486328125e-06, -0.05490767955780029, -9.059905096364673e-06, -0.000537872314453125, 0.0, -0.011946913786232471, -1.9073486328125e-06, -0.0003514289855957031, -1.9073486328125e-06, -7.65323347877711e-05, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -3.814697265625e-06, -1.4305101103673223e-06, -3.576278118089249e-07, -1.4028281839273404e-05, -1.0967194612021558e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(2))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -4.663306171731868, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -1.657465934753418, -0.3010540008544922, -2.6702880859375e-05, -6.413459777832031e-05, -1.9073486328125e-06, -0.0006618499755859375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -0.5428533554077148, -0.020699501037597656, -5.340576171875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0006383914733305573, -0.0002498626708984375, -0.0007572174072265625, -0.0001087188720703125, -4.57763671875e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0013227462768554688, -0.00023651088122278452, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -0.00010549967555562034, -0.004880428314208984, 0.0, -0.0012187957763671875, -0.01338958740234375, 0.0, -1.0069578886032104, -1.33514404296875e-05, -1.1444091796875e-05, -0.016786575317382812, -5.9604644775390625e-05, -2.86102294921875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.896782461903058e-05, -8.0108642578125e-05, 0.0, -0.000152587890625, -0.0001163482666015625, -1.9073486328125e-06, -0.5454338788986206, -1.33514404296875e-05, -0.002979278564453125, -7.62939453125e-06, -0.00043022632598876953, -4.0531158447265625e-06, 0.0, -0.057163238525390625, -0.0008869171142578125, -4.1961669921875e-05, 0.0, -0.0031423568725585938, -0.0002474784851074219, -3.814697265625e-06, -5.7220458984375e-06, -4.38690185546875e-05, -0.30889225006103516, -0.0009129042155109346, -0.0008220672607421875, -5.7220458984375e-06, 0.0, -0.0005769729614257812, -0.0003153085708618164, 0.0, -0.0002079010009765625, -5.7220458984375e-06, -3.814697265625e-06, -0.05454206466674805, 0.0, -0.013390541076660156, -2.6702880859375e-05, -3.814697265625e-05, 0.0, -0.0017752647399902344, -7.164329872466624e-05, 0.0, -0.0003986358642578125, -2.47955322265625e-05, -1.9073486328125e-06, -0.000152587890625, 0.0, -0.00018668174743652344, -8.702239938429557e-06, -0.02949237823486328, -1.9073486328125e-06, -0.0001220703125, 0.0, -1.9073486328125e-06, -0.05613410472869873, -9.059905096364673e-06, -0.0005397796630859375, 0.0, -0.011921760626137257, -1.9073486328125e-06, -0.0003590583801269531, -1.9073486328125e-06, -7.665154407732189e-05, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -3.814697265625e-06, -1.4305101103673223e-06, -3.576278118089249e-07, -1.3443644093058538e-05, -1.1205610462639015e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (2)), Buff(ChangeHealth(2))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -4.897511041950352, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3344831466674805, -0.49415111541748047, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0007030079141259193, -0.0003204345703125, -0.0007762908935546875, -0.00014495849609375, -3.814697265625e-05, -0.00014495849609375, -1.9073486328125e-05, -0.0021905899047851562, -0.0002328153350390494, -5.7220458984375e-06, -0.0001068115234375, 0.0, -9.775113721843809e-05, -0.004842162132263184, 0.0, -0.001239776611328125, -0.01473236083984375, 0.0, -0.975170373916626, -1.33514404296875e-05, -1.1444091796875e-05, -0.015428543090820312, -5.7697296142578125e-05, -2.86102294921875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.706047598621808e-05, -7.82012939453125e-05, 0.0, -0.0001430511474609375, -0.00011444091796875, -1.9073486328125e-06, -0.9109859466552734, -5.7220458984375e-05, -0.00125885009765625, -1.9073486328125e-06, -0.00019848346710205078, -2.0265579223632812e-06, 0.0, -0.28491783142089844, -0.00087738037109375, -3.4332275390625e-05, 0.0, -0.0027791261672973633, -0.0002887248992919922, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-05, -0.27877235412597656, -0.0010261532152071595, -0.0007877349853515625, -5.7220458984375e-06, 0.0, -0.0006837844848632812, -0.0003228187561035156, 0.0, -0.0001678466796875, -5.7220458984375e-06, -3.814697265625e-06, -0.053006768226623535, 0.0, -0.013164520263671875, -2.86102294921875e-05, -3.62396240234375e-05, 0.0, -0.0021175146102905273, -7.40274554118514e-05, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001544952392578125, 0.0, -0.00019609928131103516, -9.059865078597795e-06, -0.02913665771484375, -1.9073486328125e-06, -0.000118255615234375, 0.0, -1.9073486328125e-06, -0.05067610740661621, -8.940695806813892e-06, -0.000518798828125, 0.0, -0.011884805746376514, -1.9073486328125e-06, -0.0003418922424316406, -1.9073486328125e-06, -7.832047413103282e-05, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -3.814697265625e-06, -1.4305101103673223e-06, -3.576278118089249e-07, -1.4850872503302526e-05, -1.07287787614041e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(3))]),\n            SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType\n            (MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -5.1069075156308585, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -1.657465934753418, -0.3010540008544922, -2.6702880859375e-05, -6.413459777832031e-05, -1.9073486328125e-06, -0.0006618499755859375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -0.5428533554077148, -0.020699501037597656, -5.340576171875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0006383914733305573, -0.0002498626708984375, -0.0007572174072265625, -0.0001087188720703125, -4.57763671875e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0013227462768554688, -0.00023651088122278452, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -0.00010549967555562034, -0.004880428314208984, 0.0, -0.0012187957763671875, -0.01338958740234375, 0.0, -1.0069578886032104, -1.33514404296875e-05, -1.1444091796875e-05, -0.016786575317382812, -5.9604644775390625e-05, -2.86102294921875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.896782461903058e-05, -8.0108642578125e-05, 0.0, -0.000152587890625, -0.0001163482666015625, -1.9073486328125e-06, -0.9173344373703003, -5.7220458984375e-05, -0.001232147216796875, -1.9073486328125e-06, -0.00021576881408691406, -2.0265579223632812e-06, 0.0, -0.17072391510009766, -0.00089263916015625, -3.4332275390625e-05, 0.0, -0.0024815797805786133, -0.00028717517852783203, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-05, -0.2772054672241211, -0.0009995695436373353, -0.0008144378662109375, -5.7220458984375e-06, 0.0, -0.0006856918334960938, -0.0003209114074707031, 0.0, -0.0001697540283203125, -5.7220458984375e-06, -3.814697265625e-06, -0.0529247522354126, 0.0, -0.013158798217773438, -2.86102294921875e-05, -3.62396240234375e-05, 0.0, -0.002070784568786621, -7.462347275577486e-05, 0.0, -0.000392913818359375, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001544952392578125, 0.0, -0.00019419193267822266, -9.179073458653875e-06, -0.029369354248046875, -1.9073486328125e-06, -0.000118255615234375, 0.0, -1.9073486328125e-06, -0.050191640853881836, -8.940695806813892e-06, -0.000518798828125, 0.0, -0.011790272779762745, -1.9073486328125e-06, -0.0003399848937988281, -1.9073486328125e-06, -7.641312549822032e-05, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -3.814697265625e-06, -1.4305101103673223e-06, -3.576278118089249e-07, -1.401361350872321e-05, -1.07287787614041e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (2)), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "PIRATE"}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}], "hole0": "DrakonidCrusher", "hole4": "player"}, "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 128, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -5.544953735063146, "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3344831466674805, -0.49415111541748047, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0007030079141259193, -0.0003204345703125, -0.0007762908935546875, -0.00014495849609375, -3.814697265625e-05, -0.00014495849609375, -1.9073486328125e-05, -0.0021905899047851562, -0.0002328153350390494, -5.7220458984375e-06, -0.0001068115234375, 0.0, -9.775113721843809e-05, -0.004842162132263184, 0.0, -0.001239776611328125, -0.01473236083984375, 0.0, -0.48053860664367676, -7.82012939453125e-05, -5.7220458984375e-06, -0.060898780822753906, -2.6941299438476562e-05, -2.47955322265625e-05, -1.33514404296875e-05, -1.52587890625e-05, -4.470347266760655e-05, -7.832050323486328e-05, 0.0, -8.58306884765625e-05, -0.0001373291015625, -1.9073486328125e-06, -0.43619048595428467, -5.7220458984375e-05, -0.0014190673828125, -1.9073486328125e-06, -0.00020992755889892578, -3.933906555175781e-06, 0.0, -0.3132047653198242, -0.0009002685546875, -3.0517578125e-05, 0.0, -0.0029053688049316406, -0.0002886056900024414, -3.814697265625e-06, -5.7220458984375e-06, -5.91278076171875e-05, -1.5180320739746094, -0.0011775493621826172, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.02787960320711136, -0.0007829316891729832, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, 0.0, -0.39922428131103516, -1.71661376953125e-05, -0.0002765655517578125, -1.9073486328125e-06, -0.03887045383453369, -1.52587890625e-05, -6.902217864990234e-05, -1.9073486328125e-06, -6.783004937460646e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.7881372968986398e-06, -5.960462772236497e-07, -1.2841776879213285e-05, -1.5735502529423684e-05], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), GreaterThan(Count(CardSelector()), value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}], "gold_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), Not(GreaterThan(Attribute('health',\n            HeroSelector(EnemyPlayer())), value=15))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -0.09586179846462528, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -0.0034375328104943037, -1.0728830375228426e-06, -2.6702880859375e-05, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -3.814697265625e-05, -0.0003643035888671875, -0.0002727508544921875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -0.07058537006378174, 0.0, -7.05718994140625e-05, -7.62939453125e-05, -0.0006618499755859375, -5.7220458984375e-06, -0.00113677978515625, -0.0007991790771484375, -0.0007152557373046875, -0.001238107681274414, -1.71661376953125e-05, -0.00019681453704833984, 0.0, -0.00014638900756835938, 0.0, -1.71661376953125e-05, -3.24249267578125e-05, -7.62939453125e-05, -0.0007262155413627625, -1.9073486328125e-06, -0.00011098543473053724, -3.814697265625e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -2.748053598137062, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -0.0034375328104943037, -1.0728830375228426e-06, -2.6702880859375e-05, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -3.814697265625e-05, -0.0003643035888671875, -0.0002727508544921875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -2.723078727722168, 0.0, -4.9591064453125e-05, -3.4332275390625e-05, -0.0001220703125, -1.9073486328125e-06, -0.0010738372802734375, -0.000301361083984375, -0.0011425018310546875, -0.0017293691635131836, -1.33514404296875e-05, -0.00014328956604003906, 0.0, -9.465216135140508e-05, 0.0, -1.52587890625e-05, -4.00543212890625e-05, -8.58306884765625e-05, -0.0007381811738014221, -1.9073486328125e-06, -0.00014006932906340808, -3.814697265625e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "p"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Imp", "<EOS>", 42, 115, "0", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -6.129037531756467, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -5.216241836547852, -0.009202957153320312, 0.0, -3.099441164522432e-05, 0.0, -0.00014996519894339144, 0.0, -0.08694744110107422, -0.000850677490234375, -9.34600830078125e-05, -4.291525328881107e-06, -3.099440846199286e-06, -0.0009784698486328125, -1.71661376953125e-05, -0.15408764779567719, -2.1457672119140625e-06, -0.0001125335693359375, -0.00104522705078125, -4.1961669921875e-05, -3.814697265625e-06, -6.67572021484375e-05, -0.0012216567993164062, -0.0236968994140625, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.4990130662918091, 0.0, -0.00012969970703125, -0.00057220458984375, -0.0011692047119140625, -1.1444091796875e-05, -0.0021076202392578125, -0.016605377197265625, -7.62939453125e-06, 0.0, -0.0040988922119140625, 0.0, -0.08989810943603516, -0.0001220703125, -0.0004981756210327148, 0.0, -0.010510681197047234, 0.0, -1.1444091796875e-05, -0.0067424774169921875, -0.0001068115234375, -0.0008906051516532898, 0.0, -0.0009713741019368172, 0.0], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 0, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "0", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -6.645684010970399, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -6.570347309112549, -4.887569048150908e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -0.0015851259231567383, -0.000518798828125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -0.05199253559112549, 0.0, -7.2479248046875e-05, -8.20159912109375e-05, -0.0006580352783203125, -5.7220458984375e-06, -0.0011959075927734375, -0.000774383544921875, -0.0007228851318359375, -0.0012476444244384766, -1.71661376953125e-05, -0.00018727779388427734, 0.0, -0.00017130374908447266, 0.0, -1.71661376953125e-05, -3.24249267578125e-05, -7.62939453125e-05, -0.0007329061627388, -1.9073486328125e-06, -0.00011015105701517314, -3.814697265625e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 0, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -6.705809636135541, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -0.0034375328104943037, -1.0728830375228426e-06, -2.6702880859375e-05, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -3.814697265625e-05, -0.0003643035888671875, -0.0002727508544921875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -6.6806440353393555, -1.52587890625e-05, -0.000579833984375, -1.52587890625e-05, -0.0007343292236328125, -3.814697265625e-06, -0.00067138671875, -0.0005397796630859375, -0.00079345703125, -0.0012695789337158203, -1.52587890625e-05, -0.00015473365783691406, 0.0, -0.00016307829355355352, 0.0, -1.52587890625e-05, -3.62396240234375e-05, -7.43865966796875e-05, -0.00071755051612854, -1.9073486328125e-06, -0.00011718411406036466, -3.814697265625e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "p"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Imp", "<EOS>", 42, 115, "0", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -6.7092675992405475, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -5.216241836547852, -0.009202957153320312, 0.0, -3.099441164522432e-05, 0.0, -0.00014996519894339144, 0.0, -0.08694744110107422, -0.000850677490234375, -9.34600830078125e-05, -4.291525328881107e-06, -3.099440846199286e-06, -0.0009784698486328125, -1.71661376953125e-05, -0.15408764779567719, -2.1457672119140625e-06, -0.0001125335693359375, -0.00104522705078125, -4.1961669921875e-05, -3.814697265625e-06, -6.67572021484375e-05, -0.0012216567993164062, -0.0236968994140625, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.9672156572341919, 0.0, -2.09808349609375e-05, -0.0001926422119140625, -0.0005702972412109375, -3.814697265625e-06, -0.0002765655517578125, -0.008215904235839844, -9.5367431640625e-06, 0.0, -0.00452423095703125, 0.0, -0.21038150787353516, -0.00018310546875, -0.0006088018417358398, 0.0, -0.011834381148219109, 0.0, -1.1444091796875e-05, -0.00753021240234375, -0.000110626220703125, -0.0009765569120645523, 0.0, -0.0010306891053915024, 0.0], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "Minion", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -7.110574480160722, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -6.967579364776611, -0.02078115940093994, -0.000148773193359375, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -0.0009632110595703125, -0.0003948211669921875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.6253204345703125e-05, -1.9073486328125e-06, -0.10004627704620361, 0.0, -8.392333984375e-05, -9.1552734375e-05, -0.00067901611328125, -5.7220458984375e-06, -0.00095367431640625, -0.00066375732421875, -0.00061798095703125, -0.001123666763305664, -1.71661376953125e-05, -0.00019490718841552734, 0.0, -9.46521686273627e-05, 0.0, -1.52587890625e-05, -3.4332275390625e-05, -7.62939453125e-05, -0.0007412396371364594, -1.9073486328125e-06, -0.00010931691213045269, -3.814697265625e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 0, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -7.444173499614408, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -7.355000972747803, -8.106231689453125e-06, -0.000293731689453125, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -0.0001125335693359375, -0.0010033845901489258, -0.0005283355712890625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.0013580322265625e-05, -1.9073486328125e-06, -0.06599819660186768, 0.0, -7.2479248046875e-05, -8.0108642578125e-05, -0.000732421875, -5.7220458984375e-06, -0.0011920928955078125, -0.0007534027099609375, -0.000659942626953125, -0.0012428760528564453, -1.52587890625e-05, -0.00020253658294677734, 0.0, -0.00018465518951416016, 0.0, -1.71661376953125e-05, -3.24249267578125e-05, -7.82012939453125e-05, -0.0007435530424118042, -1.9073486328125e-06, -0.00011038944649044424, -3.814697265625e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "1", "<EOS>"], "score": -7.595051102696175, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -0.0034375328104943037, -1.0728830375228426e-06, -2.6702880859375e-05, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -3.814697265625e-05, -0.0003643035888671875, -0.0002727508544921875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -0.07058537006378174, 0.0, -7.05718994140625e-05, -7.62939453125e-05, -0.0006618499755859375, -5.7220458984375e-06, -0.00113677978515625, -0.0007991790771484375, -0.0007152557373046875, -0.001238107681274414, -1.71661376953125e-05, -0.00019681453704833984, 0.0, -0.00014638900756835938, 0.0, -1.71661376953125e-05, -3.24249267578125e-05, -7.62939453125e-05, -7.497371673583984, -0.0001239776611328125, -0.002536576008424163, 0.0], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(3, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -7.878862339773605, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -5.216241836547852, -0.009202957153320312, 0.0, -3.099441164522432e-05, 0.0, -0.00014996519894339144, 0.0, -2.5235071182250977, -0.001102447509765625, -4.38690185546875e-05, -1.597391747054644e-05, -5.006789251638111e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.025946566835045815, -8.34464663057588e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, -0.001720428466796875, -0.0020961761474609375, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867813110351562e-06, -1.9073486328125e-06, -0.08446335792541504, 0.0, -5.7220458984375e-05, -0.00014495849609375, -0.001171112060546875, -5.7220458984375e-06, -0.0003070831298828125, -1.9073486328125e-06, -0.009024739265441895, 0.0, -2.6702880859375e-05, -8.7738037109375e-05, -0.000148773193359375, -0.002313387580215931, -1.9073486328125e-06, -0.00020312999549787492, -1.9073486328125e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, True)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DRAGON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -7.946087636462266, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -0.0034375328104943037, -1.0728830375228426e-06, -2.6702880859375e-05, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -3.814697265625e-05, -0.0003643035888671875, -0.0002727508544921875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -0.07058537006378174, 0.0, -7.05718994140625e-05, -7.62939453125e-05, -0.0006618499755859375, -5.7220458984375e-06, -0.00113677978515625, -0.0007991790771484375, -0.0007152557373046875, -7.850398063659668, -3.933906555175781e-06, -0.00020051002502441406, 0.0, -1.6450876501039602e-05, 0.0, -5.340576171875e-05, -1.71661376953125e-05, -0.0001316070556640625, -0.0018412098288536072, -5.7220458984375e-06, -0.00011551735224202275, -9.5367431640625e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "CARD_RARITY"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "CARD_RARITY", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -8.046240125891359, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -0.0034375328104943037, -1.0728830375228426e-06, -2.6702880859375e-05, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -3.814697265625e-05, -0.0003643035888671875, -0.0002727508544921875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -8.020567893981934, 0.0, -0.0002040863037109375, -6.103515625e-05, -0.001544952392578125, -3.814697265625e-06, -0.0005016326904296875, -0.000720977783203125, -0.0006008148193359375, -0.001220107078552246, -1.71661376953125e-05, -0.00029218196868896484, 0.0, -0.00022041794727556407, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -8.392333984375e-05, -0.0007642731070518494, -1.9073486328125e-06, -0.00012660074571613222, -3.814697265625e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            CARD_RARITY, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -8.086147404049711, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -0.0034375328104943037, -1.0728830375228426e-06, -2.6702880859375e-05, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -3.814697265625e-05, -0.0003643035888671875, -0.0002727508544921875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -8.06064224243164, -1.9073486328125e-06, -0.0003871917724609375, -1.9073486328125e-05, -0.0008678436279296875, -1.33514404296875e-05, -0.000370025634765625, -0.000732421875, -0.0009937286376953125, -0.0016024112701416016, -1.9073486328125e-05, -0.00015091896057128906, 0.0, -0.00010657307575456798, 0.0, -1.52587890625e-05, -3.814697265625e-05, -7.82012939453125e-05, -0.0007171295583248138, -1.9073486328125e-06, -0.0001426918024662882, -3.814697265625e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"_type": "Template16", "hole0": "DEMON"}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "player"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "WARLOCK", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -8.126615973014282, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -0.0034375328104943037, -1.0728830375228426e-06, -2.6702880859375e-05, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -3.814697265625e-05, -0.0003643035888671875, -0.0002727508544921875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -0.07058537006378174, 0.0, -7.05718994140625e-05, -7.62939453125e-05, -8.012639045715332, -0.015402793884277344, -0.0051784515380859375, -0.0002346038818359375, -0.001247406005859375, -0.0006945133209228516, -2.288818359375e-05, -0.00016617774963378906, 0.0, -8.821486699162051e-05, 0.0, -1.52587890625e-05, -3.4332275390625e-05, -8.20159912109375e-05, -0.0007159300148487091, -1.9073486328125e-06, -0.0001128923031501472, -3.814697265625e-06], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}]}], "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}], "hole0": "Imp", "hole4": "p"}, "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -8.258707773604101, "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -5.216241836547852, -0.009202957153320312, 0.0, -3.099441164522432e-05, 0.0, -0.00014996519894339144, 0.0, -0.08694744110107422, -0.000850677490234375, -9.34600830078125e-05, -4.291525328881107e-06, -3.099440846199286e-06, -0.0009784698486328125, -1.71661376953125e-05, -2.1908159255981445, -3.814697265625e-06, -0.00012969970703125, -0.00074005126953125, -6.4849853515625e-05, -3.814697265625e-06, -3.4332275390625e-05, -0.0007610321044921875, -0.009464263916015625, 0.0, -1.71661376953125e-05, -9.918212890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.6110278367996216, 0.0, -0.00012969970703125, -0.000591278076171875, -0.0011768341064453125, -9.5367431640625e-06, -0.0021820068359375, -0.016420364379882812, -7.62939453125e-06, 0.0, -0.004108428955078125, 0.0, -0.08536434173583984, -0.0001201629638671875, -0.0004962682723999023, 0.0, -0.010720370337367058, 0.0, -1.1444091796875e-05, -0.00698089599609375, -0.000102996826171875, -0.0009246710687875748, 0.0, -0.000981261022388935, 0.0], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}], "gold_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}
{"beams": [{"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2Whelp"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "Whelp", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -2.123266669374509, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.15751123428344727, -1.1444091796875e-05, -1.1444091796875e-05, -0.06333351135253906, -0.00023651123046875, -1.1920928244535389e-07, -7.62939453125e-06, -2.6702880859375e-05, -0.07337424904108047, -0.6739678382873535, -1.1324837942083832e-05, -0.030015945434570312, 0.0, -0.027072066441178322, -3.218649908376392e-06, 0.0, -0.28865718841552734, -0.00160980224609375, -2.6702880859375e-05, 0.0, -0.00037229061126708984, -8.130073547363281e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -0.042514801025390625, -0.0005539525882340968, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.01639091968536377, -0.0007693767547607422, 0.0, -0.0002460479736328125, 0.0, 0.0, -0.06066906452178955, -5.7220458984375e-06, -0.0009765625, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.009618163108825684, -1.3828227565682027e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014913082122802734, -1.0490362910786644e-05, -0.005527496337890625, -4.1961669921875e-05, -0.00011444091796875, 0.0, -5.7220458984375e-06, -0.001523137092590332, -1.728534698486328e-05, -4.00543212890625e-05, 0.0, -0.008841154165565968, 0.0, -5.865095590706915e-05, -1.9073486328125e-06, -0.00018166768131777644, -1.9073486328125e-06, -3.814697265625e-06, -0.0001220703125, -5.7220458984375e-06, -0.00017380710050929338, 0.0, -3.9934315282152966e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(+2Whelp())]), SelfSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -2.8848193567462133, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.15751123428344727, -1.1444091796875e-05, -1.1444091796875e-05, -0.06333351135253906, -0.00023651123046875, -1.1920928244535389e-07, -7.62939453125e-06, -2.6702880859375e-05, -0.07337424904108047, -1.2050631046295166, -0.023584365844726562, 0.0, -0.011607278138399124, -3.099440846199286e-06, 0.0, -0.5509834289550781, -0.0021152496337890625, -2.6702880859375e-05, 0.0, -0.0002789497375488281, -8.869171142578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -0.033616065979003906, -0.0005463247071020305, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.017369389533996582, -0.0007750988006591797, 0.0, -0.000225067138671875, 0.0, 0.0, -0.05839550495147705, -5.7220458984375e-06, -0.0009613037109375, -5.7220458984375e-05, -3.24249267578125e-05, 0.0, -0.009593367576599121, -1.3947435945738107e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00015103816986083984, -1.07287787614041e-05, -0.0054264068603515625, -4.1961669921875e-05, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0014182329177856445, -1.728534698486328e-05, -4.00543212890625e-05, 0.0, -0.008930203504860401, 0.0, -5.865095590706915e-05, -1.9073486328125e-06, -0.00018405180890113115, -1.9073486328125e-06, -3.814697265625e-06, -0.0001239776611328125, -3.814697265625e-06, -0.00017392630979884416, 0.0, -3.981510963058099e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(+2())]), SelfSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2Whelp"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "Whelp", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -2.9100902812107208, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -1.147966980934143, 0.0, 0.0, -0.000461578369140625, -3.814697265625e-06, -0.04774794355034828, -5.7220458984375e-06, -3.0517578125e-05, -0.0068988800048828125, -0.00045418739318847656, -1.1920928244535389e-07, -5.7220458984375e-06, -2.47955322265625e-05, -0.02587335743010044, -0.8734995126724243, -5.006785613659304e-06, -0.034313201904296875, 0.0, -0.1416676640510559, -1.5497195136049413e-06, 0.0, -0.20065689086914062, -0.0015850067138671875, -3.62396240234375e-05, 0.0, -0.00040268898010253906, -7.736682891845703e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -0.047351837158203125, -0.000646563246846199, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.017276883125305176, -0.00024259090423583984, 0.0, -0.00020599365234375, 0.0, 0.0, -0.06046879291534424, -7.62939453125e-06, -0.0009450912475585938, -5.7220458984375e-05, -3.4332275390625e-05, 0.0, -0.009238600730895996, -1.347060333500849e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00015676021575927734, -9.417489309271332e-06, -0.005245208740234375, -4.1961669921875e-05, -0.0001201629638671875, 0.0, -3.814697265625e-06, -0.0013953447341918945, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -0.009165522642433643, 0.0, -6.0439095250330865e-05, -1.9073486328125e-06, -0.00018059492867905647, -1.9073486328125e-06, -3.814697265625e-06, -0.0001239776611328125, -3.814697265625e-06, -0.00017380710050929338, 0.0, -3.981510963058099e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeHealth\n            (3)), Buff(+2Whelp())]), SelfSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -3.3609260311818545, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -1.147966980934143, 0.0, 0.0, -0.000461578369140625, -3.814697265625e-06, -0.04774794355034828, -5.7220458984375e-06, -3.0517578125e-05, -0.0068988800048828125, -0.00045418739318847656, -1.1920928244535389e-07, -5.7220458984375e-06, -2.47955322265625e-05, -0.02587335743010044, -1.1439330577850342, -0.024663925170898438, -1.9073486328125e-06, -0.08227692544460297, -3.3378591979271732e-06, 0.0, -0.46306610107421875, -0.00203704833984375, -3.62396240234375e-05, 0.0, -0.0002827644348144531, -8.106231689453125e-05, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -0.03584861755371094, -0.0006463262252509594, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018181920051574707, -0.00024449825286865234, 0.0, -0.0001850128173828125, 0.0, 0.0, -0.05783283710479736, -7.62939453125e-06, -0.0009336471557617188, -5.91278076171875e-05, -3.4332275390625e-05, 0.0, -0.009281635284423828, -1.3589810805569869e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00015866756439208984, -9.536697689327411e-06, -0.0051822662353515625, -4.1961669921875e-05, -0.000102996826171875, -1.9073486328125e-06, -3.814697265625e-06, -0.0013219118118286133, -1.728534698486328e-05, -4.00543212890625e-05, 0.0, -0.00923144444823265, 0.0, -5.8531746617518365e-05, -1.9073486328125e-06, -0.00018262147204950452, -1.9073486328125e-06, -3.814697265625e-06, -0.0001239776611328125, -3.814697265625e-06, -0.00017201896116603166, 0.0, -3.957670196541585e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeHealth\n            (3)), Buff(+2())]), SelfSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -3.572207331550544, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -1.9571876525878906, -1.9073486328125e-06, -3.814697265625e-06, -0.23613929748535156, -7.200241088867188e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.0002288818359375, -0.0001068115234375, -0.00012099742889404297, 0.0, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.42685019969940186, -3.814697265625e-06, -0.00018310546875, 0.0, -2.8729409677907825e-05, -2.0265579223632812e-06, 0.0, -0.13994312286376953, -0.004351615905761719, -2.6702880859375e-05, 0.0, -0.0002504587173461914, -0.00010395050048828125, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -0.038300514221191406, -0.0006064039189368486, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.02403271198272705, -0.0008093118667602539, 0.0, -0.0002155303955078125, 0.0, 0.0, -0.055937886238098145, -7.62939453125e-06, -0.0008764266967773438, -5.7220458984375e-05, -3.24249267578125e-05, 0.0, -0.009445667266845703, -1.4185851796355564e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014340877532958984, -1.823885577323381e-05, -0.006028175354003906, -4.9591064453125e-05, -9.1552734375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.001393437385559082, -1.728534698486328e-05, -4.00543212890625e-05, 0.0, -0.009535429067909718, 0.0, -6.0439095250330865e-05, -1.9073486328125e-06, -0.00018095274572260678, -1.9073486328125e-06, -3.814697265625e-06, -0.000125885009765625, -3.814697265625e-06, -0.00016319745918735862, 0.0, -3.838465272565372e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (2)), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2Whelp"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "Whelp", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -4.2680355041870754, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -2.3330554962158203, 0.0, 0.0, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -7.49826431274414e-05, 0.0, -0.00018083937175106257, 0.0, -0.0022678375244140625, -0.0007724761962890625, -3.24249267578125e-05, -0.0002595186233520508, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, 0.0, -0.0006103515625, -0.07243156433105469, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004876852035522461, -0.000324249267578125, -5.7220458984375e-06, -0.000965118408203125, -7.2479248046875e-05, -0.004197120666503906, -3.814697265625e-06, -0.0031948089599609375, -0.00017118314281105995, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.38276445865631104, -1.9073486328125e-06, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.15823328495025635, -1.1444091796875e-05, -1.1444091796875e-05, -0.06380939483642578, -0.00023651123046875, -1.1920928244535389e-07, -7.62939453125e-06, -2.6702880859375e-05, -0.07335386425256729, -0.6734833717346191, -1.1324837942083832e-05, -0.030078887939453125, 0.0, -0.027121419087052345, -3.218649908376392e-06, 0.0, -0.28691959381103516, -0.00160980224609375, -2.6702880859375e-05, 0.0, -0.00037038326263427734, -8.130073547363281e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -0.04245948791503906, -0.0005539525882340968, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.016389966011047363, -0.0007693767547607422, 0.0, -0.0002460479736328125, 0.0, 0.0, -0.06067097187042236, -5.7220458984375e-06, -0.0009765625, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.009620070457458496, -1.3828227565682027e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014913082122802734, -1.0490362910786644e-05, -0.005509376525878906, -4.1961669921875e-05, -0.00011444091796875, 0.0, -5.7220458984375e-06, -0.001523137092590332, -1.728534698486328e-05, -4.00543212890625e-05, 0.0, -0.008841154165565968, 0.0, -5.865095590706915e-05, -1.9073486328125e-06, -0.00018166768131777644, -1.9073486328125e-06, -3.814697265625e-06, -0.0001220703125, -5.7220458984375e-06, -0.00017380710050929338, 0.0, -3.9934315282152966e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(+2Whelp())]), SelfSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 2}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 2}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -4.271635889519075, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -1.9571876525878906, -1.9073486328125e-06, -3.814697265625e-06, -0.23613929748535156, -7.200241088867188e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.0002288818359375, -0.0001068115234375, -0.00012099742889404297, 0.0, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.2214117050170898, 0.0, -0.000823974609375, -3.814697265625e-06, -4.684919258579612e-05, -2.0265579223632812e-06, 0.0, -0.042031288146972656, -0.0032491683959960938, -3.24249267578125e-05, 0.0, -0.00041866302490234375, -9.238719940185547e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -0.04085540771484375, -0.0005984163144603372, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.030595898628234863, -0.0008301734924316406, 0.0, -0.0002460479736328125, 0.0, 0.0, -0.050869107246398926, -7.62939453125e-06, -0.0008363723754882812, -5.340576171875e-05, -3.24249267578125e-05, 0.0, -0.00903463363647461, -1.4066643416299485e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00015866756439208984, -1.8358061424805783e-05, -0.005623817443847656, -4.9591064453125e-05, -0.0001068115234375, -1.9073486328125e-06, -5.7220458984375e-06, -0.001397252082824707, -1.728534698486328e-05, -4.00543212890625e-05, 0.0, -0.009325501509010792, 0.0, -5.8531746617518365e-05, -1.9073486328125e-06, -0.00017868803115561604, -1.9073486328125e-06, -3.814697265625e-06, -0.000125885009765625, -3.814697265625e-06, -0.00016868108650669456, 0.0, -3.9219088648678735e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (2)), Buff(ChangeHealth(2))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2Health"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "Health", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -4.321701258987098, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.15751123428344727, -1.1444091796875e-05, -1.1444091796875e-05, -0.06333351135253906, -0.00023651123046875, -1.1920928244535389e-07, -7.62939453125e-06, -2.6702880859375e-05, -0.07337424904108047, -2.963228464126587, -4.887576324108522e-06, -0.015939712524414062, 0.0, -0.015298121608793736, -3.218649908376392e-06, 0.0, -0.22170352935791016, -0.00180816650390625, -2.86102294921875e-05, 0.0, -0.00037038326263427734, -8.106231689453125e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -0.043869972229003906, -0.0005668263183906674, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.01703464984893799, -0.0007770061492919922, 0.0, -0.000255584716796875, 0.0, 0.0, -0.06089127063751221, -5.7220458984375e-06, -0.0009593963623046875, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.009450316429138184, -1.3828227565682027e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014913082122802734, -1.0490362910786644e-05, -0.005507469177246094, -4.1961669921875e-05, -0.0001277923583984375, 0.0, -5.7220458984375e-06, -0.001523137092590332, -1.71661376953125e-05, -4.00543212890625e-05, 0.0, -0.008566376753151417, 0.0, -5.877016519661993e-05, -1.9073486328125e-06, -0.00018095251289196312, -1.9073486328125e-06, -3.814697265625e-06, -0.0001239776611328125, -5.7220458984375e-06, -0.00017392630979884416, 0.0, -4.005352093372494e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(+2Health())]), SelfSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -4.322365164837265, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.15751123428344727, -1.1444091796875e-05, -1.1444091796875e-05, -2.8231935501098633, -4.0650356822879985e-05, -7.2479248046875e-05, -1.33514404296875e-05, -0.00057220458984375, -7.104871474439278e-05, -0.00025463104248046875, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.38995158672332764, -3.814697265625e-06, -0.000194549560546875, 0.0, -3.1113602744881064e-05, -2.0265579223632812e-06, 0.0, -0.14056110382080078, -0.004398345947265625, -2.86102294921875e-05, 0.0, -0.0002504587173461914, -0.00010204315185546875, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -0.036759376525878906, -0.0006071193492971361, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.023900151252746582, -0.0008074045181274414, 0.0, -0.0002117156982421875, 0.0, 0.0, -0.05592834949493408, -7.62939453125e-06, -0.000885009765625, -5.7220458984375e-05, -3.24249267578125e-05, 0.0, -0.009495258331298828, -1.4185851796355564e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00013768672943115234, -1.764281842042692e-05, -0.006198883056640625, -4.76837158203125e-05, -8.96453857421875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.001397252082824707, -1.728534698486328e-05, -4.00543212890625e-05, 0.0, -0.009519335813820362, 0.0, -6.0439095250330865e-05, -1.9073486328125e-06, -0.0001805951469577849, -1.9073486328125e-06, -3.814697265625e-06, -0.000125885009765625, -3.814697265625e-06, -0.00016307824989780784, 0.0, -3.838465272565372e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2Windfury"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "Windfury", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -4.442015699009964, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -1.147966980934143, 0.0, 0.0, -0.000461578369140625, -3.814697265625e-06, -0.04774794355034828, -5.7220458984375e-06, -3.0517578125e-05, -0.0068988800048828125, -0.00045418739318847656, -1.1920928244535389e-07, -5.7220458984375e-06, -2.47955322265625e-05, -0.02587335743010044, -2.5623161792755127, -1.9907929527107626e-05, -0.0050449371337890625, 0.0, -0.03826633840799332, -4.053113570989808e-06, 0.0, -0.17833232879638672, -0.0016727447509765625, -3.4332275390625e-05, 0.0, -0.00040280818939208984, -7.736682891845703e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -0.04463386535644531, -0.0006451330264098942, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.01770317554473877, -0.00024056434631347656, 0.0, -0.00020599365234375, 0.0, 0.0, -0.06065952777862549, -7.62939453125e-06, -0.0009517669677734375, -5.7220458984375e-05, -3.4332275390625e-05, 0.0, -0.009212851524353027, -1.347060333500849e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014913082122802734, -9.417489309271332e-06, -0.005469322204589844, -4.1961669921875e-05, -0.0001392364501953125, 0.0, -3.814697265625e-06, -0.001389622688293457, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -0.009059187956154346, 0.0, -6.0439095250330865e-05, -1.9073486328125e-06, -0.00018011813517659903, -1.9073486328125e-06, -3.814697265625e-06, -0.0001239776611328125, -3.814697265625e-06, -0.00017380710050929338, 0.0, -3.981510963058099e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeHealth\n            (3)), Buff(+2Windfury())]), SelfSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2Windfury"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}]}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "Windfury", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -4.905845838665066, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.15751123428344727, -1.1444091796875e-05, -1.1444091796875e-05, -0.06333351135253906, -0.00023651123046875, -1.1920928244535389e-07, -7.62939453125e-06, -2.6702880859375e-05, -0.07337424904108047, -3.511957883834839, -2.9444565370795317e-05, -0.0035953521728515625, 0.0, -0.007002454251050949, -3.6954863844584906e-06, 0.0, -0.2826271057128906, -0.0016460418701171875, -2.6702880859375e-05, 0.0, -0.0004010200500488281, -8.511543273925781e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -0.03895092010498047, -0.0005656338180415332, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.01661503314971924, -0.0007674694061279297, 0.0, -0.000247955322265625, 0.0, 0.0, -0.06101334095001221, -5.7220458984375e-06, -0.0009822845458984375, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.009530425071716309, -1.3947435945738107e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014150142669677734, -1.0371154530730564e-05, -0.0057525634765625, -4.1961669921875e-05, -0.000133514404296875, 0.0, -5.7220458984375e-06, -0.0014983415603637695, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -0.008720275945961475, 0.0, -5.865095590706915e-05, -1.9073486328125e-06, -0.00018071412341669202, -1.9073486328125e-06, -3.814697265625e-06, -0.0001239776611328125, -3.814697265625e-06, -0.00017380710050929338, 0.0, -3.9934315282152966e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(+2Windfury())]), SelfSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2Whelp"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"hole3": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}], "_type": "Template13", "hole0": "Not", "hole1": {"_type": "Name", "id": "GreaterThan"}, "hole2": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "Whelp", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 46, 131, "Not", "<EOS>", 21, 110, "Greater", "Than", "<EOS>", 169, 46, 128, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -5.254899347344228, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.15751123428344727, -1.1444091796875e-05, -1.1444091796875e-05, -0.06333351135253906, -0.00023651123046875, -1.1920928244535389e-07, -7.62939453125e-06, -2.6702880859375e-05, -0.07337424904108047, -0.6739678382873535, -1.1324837942083832e-05, -0.030015945434570312, 0.0, -0.027072066441178322, -3.218649908376392e-06, 0.0, -1.4448623657226562, -0.17486286163330078, -0.0029355287551879883, -0.03392601013183594, -0.00022125244140625, -1.71661376953125e-05, -0.5958359241485596, -0.00024068319180514663, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, -0.14113712310791016, -0.004366636276245117, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.1497328281402588, -0.0053695146925747395, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.015459060668945312, -5.7220458984375e-06, -0.0001678466796875, -1.9073486328125e-06, -0.0014017820358276367, -3.814697265625e-06, -6.60419391351752e-05, 0.0, -8.451812755083665e-05, 0.0, -5.7220458984375e-06, -0.000102996826171875, -3.814697265625e-06, -0.00015616412565577775, 0.0, -3.71926071238704e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(+2Whelp())]), SelfSelector(), Not(GreaterThan(Count(\n            CardSelector()), value=0))))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"hole3": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}], "_type": "Template13", "hole0": "Not", "hole1": {"_type": "Name", "id": "GreaterThan"}, "hole2": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 46, 131, "Not", "<EOS>", 21, 110, "Greater", "Than", "<EOS>", 169, 46, 128, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -5.299014266550095, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.15751123428344727, -1.1444091796875e-05, -1.1444091796875e-05, -0.06333351135253906, -0.00023651123046875, -1.1920928244535389e-07, -7.62939453125e-06, -2.6702880859375e-05, -0.07337424904108047, -1.2050631046295166, -0.023584365844726562, 0.0, -0.011607278138399124, -3.099440846199286e-06, 0.0, -0.904047966003418, -0.12376689910888672, -0.0021344423294067383, -0.02252197265625, -0.00034046173095703125, -3.0517578125e-05, -0.6651700735092163, -0.000275969214271754, -1.9073486328125e-06, -1.9073486328125e-06, -8.96453857421875e-05, -0.17663002014160156, -0.004133343696594238, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.18844473361969, -0.004756040871143341, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0115814208984375, -5.7220458984375e-06, -0.0001659393310546875, -1.9073486328125e-06, -0.0014581680297851562, -3.814697265625e-06, -6.60419391351752e-05, 0.0, -7.915387686807662e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -3.814697265625e-06, -0.00015258784696925431, 0.0, -3.6954195820726454e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(+2())]), SelfSelector(), Not(GreaterThan(Count(\n            CardSelector()), value=0))))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2Whelp"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"hole3": [{"arg": "players", "_type": "keyword", "value": {"_type": "Template19", "hole0": "BothPlayer"}}], "_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "CardSelector"}}], "keywords": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "Whelp", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -5.456561069551292, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.15751123428344727, -1.1444091796875e-05, -1.1444091796875e-05, -0.06333351135253906, -0.00023651123046875, -1.1920928244535389e-07, -7.62939453125e-06, -2.6702880859375e-05, -0.07337424904108047, -0.6739678382873535, -1.1324837942083832e-05, -0.030015945434570312, 0.0, -0.027072066441178322, -3.218649908376392e-06, 0.0, -0.28865718841552734, -0.00160980224609375, -2.6702880859375e-05, 0.0, -0.00037229061126708984, -8.130073547363281e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -0.042514801025390625, -0.0005539525882340968, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.01639091968536377, -0.0007693767547607422, 0.0, -0.0002460479736328125, 0.0, 0.0, -3.278141975402832, -4.1961669921875e-05, -0.0001163482666015625, -3.814697265625e-06, -0.005289077293127775, -4.2557716369628906e-05, -1.52587890625e-05, -0.000308990478515625, 0.0, -1.9073486328125e-06, -0.06008195877075195, -2.6702880859375e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.07692158222198486, 0.0, -5.590883665718138e-05, -1.9073486328125e-06, -8.559085836168379e-05, 0.0, -3.814697265625e-06, -0.000186920166015625, -5.7220458984375e-06, -0.00010931482393061742, 0.0, -1.966933996300213e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(+2Whelp())]), SelfSelector(), GreaterThan(Count(\n            CardSelector(players=BothPlayer())), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"model_output": {"hole3": "create_minion", "_type": "Template0", "hole1": "MinionCard", "hole2": [{"hole3": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Num", "n": 3}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "+2Whelp"}}], "_type": "List"}]}, {"_type": "Template19", "hole0": "SelfSelector"}, {"hole3": [{"arg": "value", "_type": "keyword", "value": {"_type": "Num", "n": 0}}], "_type": "Template13", "hole0": "Not", "hole1": {"_type": "Name", "id": "GreaterThan"}, "hole2": [{"_type": "Template13", "hole0": "Count", "hole1": {"_type": "Name", "id": "WeaponSelector"}}]}]}}], "_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}], "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}], "hole0": "TwilightWhelp", "hole4": "player"}, "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "Whelp", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 46, 131, "Not", "<EOS>", 21, 110, "Greater", "Than", "<EOS>", 169, 46, 128, "Count", "<EOS>", 21, 110, "Weapon", "Selector", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -6.026790180903383, "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.15751123428344727, -1.1444091796875e-05, -1.1444091796875e-05, -0.06333351135253906, -0.00023651123046875, -1.1920928244535389e-07, -7.62939453125e-06, -2.6702880859375e-05, -0.07337424904108047, -0.6739678382873535, -1.1324837942083832e-05, -0.030015945434570312, 0.0, -0.027072066441178322, -3.218649908376392e-06, 0.0, -1.4448623657226562, -0.17486286163330078, -0.0029355287551879883, -0.03392601013183594, -0.00022125244140625, -1.71661376953125e-05, -0.5958359241485596, -0.00024068319180514663, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, -0.14113712310791016, -0.004366636276245117, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.8522694110870361, -0.0064176758751273155, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.08433723449707031, -3.814697265625e-06, -0.000125885009765625, 0.0, -0.0008789300918579102, -1.9073486328125e-06, -5.1736828027060255e-05, 0.0, -5.9246751334285364e-05, 0.0, -7.62939453125e-06, -0.00012969970703125, -5.7220458984375e-06, -0.00016522403166163713, 0.0, -3.755022044060752e-05, 0.0], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(+2Whelp())]), SelfSelector(), Not(GreaterThan(Count(\n            WeaponSelector()), value=0))))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}], "gold_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(2))), SelfSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}
