{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template19", "hole0": "Destroy"}, {"_type": "Template13", "hole0": "WeaponSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}}], "hole2": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "AcidicSwampOoze", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}]}, "score": -0.03992268226552653, "choice_history": [54, 122, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Destroy", "<EOS>", 46, 128, "Weapon", "Selector", "<EOS>", 21, 110, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-05, -0.00014876213390380144, -0.007758393883705139, -0.0016113180899992585, -0.00018416139937471598, -4.9911439418792725e-05, -6.198883056640625e-06, -4.6491513785440475e-06, -5.7220458984375e-06, -0.00012969970703125, -3.4332275390625e-05, -8.392333984375e-05, -1.9073486328125e-06, -5.125998541188892e-06, 0.0, -6.437291176553117e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -8.0108642578125e-05, -2.5987286790041253e-05, -4.971027374267578e-05, -0.0005764911766164005, -0.0002982616424560547, -0.0003978004679083824, -6.318092346191406e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3603191948495805e-05, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.576277322281385e-06, -0.000762939453125, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.3828258488501888e-05, 0.0, -7.748603820800781e-06, 0.0, -4.1961669921875e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.00022363662719726562, -9.5367431640625e-06, -0.000274658203125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.110004425048828e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00135040283203125, -3.24249267578125e-05, -0.002823958871886134, -0.019138872623443604, -4.57763671875e-05, -2.09808349609375e-05, -0.0014959496911615133, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0016496150055900216, -6.902217864990234e-05, 0.0, -4.57763671875e-05, 0.0, -1.0132789611816406e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-05, -3.814697265625e-06, -1.573562440171372e-05, 0.0, -6.294249760685489e-05, -1.1920928244535389e-07]}], "index": 0}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "AncestralHealing", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "heal", "hole2": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}], "value": {"_type": "NameConstant", "value": true}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.3497323598025801, "choice_history": [54, 124, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Ancestral", " ", "Healing", "<EOS>", 42, 115, "0", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 35, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 40, 110, "self", "<EOS>", 59, 79, 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "score_history": [-6.103515625e-05, -7.43865966796875e-05, 0.0, -2.622600959512056e-06, -8.106212590064388e-06, -8.338945917785168e-06, -0.00012969970703125, -1.1920928244535389e-07, -3.0517578125e-05, -1.33514404296875e-05, -0.002223968505859375, -1.1444091796875e-05, -2.09808349609375e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -0.00010812281107064337, 0.0, -7.62939453125e-05, -1.1444091796875e-05, -9.5367431640625e-06, -5.960462772236497e-07, -0.0002140998694812879, -3.910064333467744e-05, -7.152555099310121e-07, -9.5367431640625e-06, -1.9073486328125e-06, -8.940683983382769e-06, -0.0007410907419398427, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -6.103515625e-05, -3.159046173095703e-05, -0.015302658081054688, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.0050067901611328125, 0.0, -0.0009937286376953125, -3.814697265625e-06, -0.0005779266357421875, -3.24249267578125e-05, -9.5367431640625e-06, -0.0002307891845703125, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00110626220703125, 0.0, -0.0002652406692504883, -7.069110870361328e-05, -0.0007711648941040039, -9.655952453613281e-06, -0.0001506805419921875, 0.0, -0.006397247314453125, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -0.001453399658203125, 0.0, -0.011663436889648438, -3.24249267578125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -5.7220458984375e-05, -1.52587890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.576278118089249e-07, -1.0013580322265625e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00019347667694091797, 0.0, -0.004451751708984375, -0.0001811981201171875, -8.7738037109375e-05, -3.814697265625e-06, -0.00018310546875, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.152555099310121e-07, -0.05854177474975586, 0.0, -2.09808349609375e-05, -0.0002727508544921875, -0.0002651214599609375, -0.0001621246337890625, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002371072769165039, -2.0265579223632812e-06, -0.009099483489990234, -5.7220458984375e-06, -5.7220458984375e-05, -0.0007410049438476562, -0.0006618499755859375, -0.000179290771484375, -7.62939453125e-05, -0.1889629364013672, 0.0, -0.0001373291015625, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -0.0001621246337890625, -1.1920928244535389e-07, -0.003229975700378418, -1.71661376953125e-05, -0.016122817993164062, -0.0002918243408203125, -0.000400543212890625, 0.0, -0.0023136138916015625, -1.71661376953125e-05, -3.814697265625e-06, -0.00023651123046875, -1.9073486328125e-05, -0.00115966796875, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -1.1444091796875e-05, 0.0, -2.288818359375e-05, -1.1920928244535389e-07, -0.01058495044708252, 0.0, -0.00022125244140625, -3.24249267578125e-05, -0.0013669729232788086, 0.0]}], "index": 1}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Animal Companion", "hole1": 3, "hole3": "COMMON", "hole2": "HUNTER"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole7": [{"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole3": "game", "hole2": "player"}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Name", "id": "player"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}], "hole0": "AnimalCompanion", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "card"}, "hole1": "summon", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Name", "id": "player"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Name", "id": "player"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -3.898294558932406, "choice_history": [54, 125, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 19, 106, 171, 35, 85, 13, 80, 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 35, 85, 13, 80, 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 35, 85, 13, 80, 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 59, 79, 169, 40, 110, "card", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>", 71, 137, 21, 110, "card", "<EOS>", "summon", "<EOS>", 171, 40, 110, "player", "<EOS>", 32, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Leokk(), hearthbreaker.cards.minions.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score_history": [-5.14984130859375e-05, -0.006999015808105469, -1.3351351299206726e-05, -3.099436753473128e-06, -0.00195526541210711, -1.1443455150583759e-05, -2.47955322265625e-05, -3.576278118089249e-07, -9.5367431640625e-06, -0.0020389556884765625, -2.288818359375e-05, -1.0609570381348021e-05, -0.00012957814033143222, -3.0875205993652344e-05, -0.000133514404296875, -2.622600959512056e-06, -3.814697265625e-06, -0.003215789794921875, 0.0, -2.491474151611328e-05, 0.0, -0.00012242794036865234, 0.0, -3.4689903259277344e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0010398626327514648, 0.0, -0.006068229675292969, -0.04150581359863281, -7.43865966796875e-05, -7.05718994140625e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -0.004047393798828125, -3.814697265625e-06, -1.33514404296875e-05, -5.53131103515625e-05, 0.0, -0.0001723764871712774, -6.29425048828125e-05, -0.015065193176269531, -0.008721351623535156, -0.00020599365234375, -0.0026617050170898438, -0.00048065185546875, -0.000213623046875, -1.52587890625e-05, -0.000278472900390625, 0.0, -0.0273590087890625, 0.0, -0.02447986602783203, 0.0, -0.2860294580459595, -4.768370445162873e-07, -0.0018922090530395508, 0.0, -0.0023214812390506268, 0.0, -1.033422827720642, -9.5367431640625e-06, -0.0005626678466796875, -0.0002593994140625, -0.0001220703125, -3.814697265625e-06, -0.000148773193359375, 0.0, -0.01719379425048828, 0.0, -0.12551403045654297, 0.0, -0.026305317878723145, -1.1920928244535389e-07, -0.009238958358764648, 0.0, -0.012755869887769222, 0.0, -0.9976768493652344, -1.71661376953125e-05, -0.0001125335693359375, -0.000522613525390625, -4.00543212890625e-05, -1.9073486328125e-06, -0.000911712646484375, 0.0, -0.08595848083496094, 0.0, -0.03108692169189453, 0.0, -0.011151432991027832, -1.1920928244535389e-07, -0.0475231409072876, 0.0, -0.009837508201599121, 0.0, -0.9179203510284424, -5.555152893066406e-05, -0.000782012939453125, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.06314563751220703, -3.814697265625e-06, -0.0023889541625976562, -7.43865966796875e-05, -0.005390167236328125, 0.0, -0.00012969970703125, 0.0, -0.005495666526257992, -1.1920928244535389e-07, -0.0068863630294799805, -5.006789251638111e-06, -0.0002727508544921875, -0.00226593017578125, 0.0, -0.0010498701594769955, -4.649161837733118e-06, -0.00093841552734375, -0.0006160736083984375, -4.57763671875e-05, 0.0, -0.006654389668256044, -7.748603820800781e-06, -0.0011616945266723633, -4.529942543740617e-06, -0.0002288818359375, -0.0013227462768554688, -2.09808349609375e-05, -0.00031566619873046875, 0.0, -0.0007839202880859375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.004067420959472656, 0.0, -0.000408172607421875, 0.0, -0.0002651214599609375, -0.00098419189453125, -1.33514404296875e-05, 0.0, -2.3365020751953125e-05, -9.536738616588991e-07, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.389617919921875e-05, -7.152555099310121e-07, -0.0018815994262695312, 0.0, -7.43865966796875e-05, -0.0006198883056640625, -4.1961669921875e-05, -0.002210855484008789, -1.9073486328125e-06, -1.52587890625e-05, -4.38690185546875e-05, -6.866455078125e-05, -0.0002079010009765625, -4.398822784423828e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0029224157333374023, -4.768370445162873e-07, -5.53131103515625e-05, -0.00010883808135986328, 0.0, -2.86102294921875e-05, -0.000774383544921875, -0.0001773834228515625, -0.001186370849609375, -0.000152587890625, -0.0001316070556640625, -0.0001735687255859375, -0.0023250579833984375, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.004785656929016113, -2.3841855067985307e-07, -0.0016021728515625, 0.0, -0.0002918243408203125, 0.0, -3.337860107421875e-05, 0.0, -0.0036220550537109375, -9.5367431640625e-05, -0.00022125244140625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003044605255126953, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, 0.0, -0.0002231597900390625, 0.0, -4.7087669372558594e-05, -2.264974000354414e-06, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-05, -0.000579833984375, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.0008269548416137695, -5.7220458984375e-06]}], "index": 2}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2, "hole3": "FREE", "hole2": "MAGE"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "ArcaneExplosion", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"args": [{"n": 1, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.031209104362453388, "choice_history": [54, 124, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.33514404296875e-05, -0.00017547607421875, -2.3841855067985307e-07, -2.1457481125253253e-05, -2.7418097943154862e-06, -1.1920201359316707e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.001209259033203125, -8.96453857421875e-05, -3.528532761265524e-05, -0.0001410245313309133, -1.9073484509135596e-05, 0.0, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.00223541259765625, 0.0, -0.0011998414993286133, 0.0, -1.9073486328125e-05, 0.0, -1.728534698486328e-05, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.004406929016113281, -5.7220458984375e-06, -1.71661376953125e-05, -8.20159912109375e-05, -1.71661376953125e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.0001087188720703125, -0.0002117156982421875, -0.000926971435546875, -9.5367431640625e-06, -0.0005512237548828125, -5.7220458984375e-06, -0.0013170242309570312, -0.000133514404296875, -0.000179290771484375, -9.5367431640625e-06, -3.62396240234375e-05, 0.0, -0.0001983642578125, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.000247955322265625, -1.1444091796875e-05, 0.0, -0.0015087127685546875, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -5.3763389587402344e-05, -3.814697265625e-06, -0.003833770751953125, -1.9073486328125e-06, -0.00017571439093444496, -1.9073486328125e-06, -2.47955322265625e-05, -0.0018739700317382812, -2.6702880859375e-05, -0.000461578369140625, -7.2479248046875e-05, -0.001296401023864746, -2.3841855067985307e-07, -0.00027108192443847656, 0.0, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-05, -3.4332275390625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -0.00012361977132968605, -2.1457672119140625e-06, -0.00023901461099740118, -7.259845733642578e-05, -7.62939453125e-06, -0.0045013427734375, -4.1961669921875e-05, -0.002070540562272072, -1.0728830375228426e-06, -3.0517578125e-05, -8.392333984375e-05, -0.00022983551025390625, 0.0]}], "index": 3}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3, "hole3": "FREE", "hole2": "MAGE"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "ArcaneIntellect", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"target": {"_type": "Name", "id": "c"}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}], "_type": "For", "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.16792183431896746, "choice_history": [54, 124, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "c", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 181, 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "score_history": [-1.9073486328125e-05, -9.1552734375e-05, -5.960462772236497e-07, -0.00010263450531056151, -9.298322765971534e-06, -2.0207371562719345e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, -0.0009098052978515625, -0.0001850128173828125, -1.5497195136049413e-06, -0.00012850711937062442, -8.82148651726311e-06, 0.0, -8.344646857949556e-07, -2.0265579223632812e-06, -0.0020924806594848633, 0.0, -0.0015010833740234375, 0.0, -2.288818359375e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -2.47955322265625e-05, -2.0623205273295753e-05, 0.0, -0.006072998046875, -4.9591064453125e-05, -0.0003032684326171875, -0.0001239776611328125, -9.34600830078125e-05, -0.001888275146484375, 0.0, -1.1920922133867862e-06, -1.1920928244535389e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -6.687641143798828e-05, 0.0, -2.47955322265625e-05, -7.62939453125e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.01811821572482586, -1.9073486328125e-05, -0.0001697540283203125, -0.0004425048828125, -3.814697265625e-05, -7.62939453125e-06, -0.0010435625445097685, -3.218649908376392e-06, -7.62939453125e-06, -0.024906158447265625, -0.0004634857177734375, -0.0003288851585239172, -1.33514404296875e-05, -0.03652000427246094, -0.000118255615234375, -0.03189897537231445, -1.9073486328125e-06, -0.0020599365234375, -0.0006694793701171875, -0.01220703125, -0.0001735687255859375, -7.05718994140625e-05, -0.02343761920928955, -4.768370445162873e-07, -0.0012596845626831055, 0.0]}], "index": 4}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1, "hole3": "FREE", "hole2": "MAGE"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "ArcaneMissiles", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "targets"}, "hole1": "append", "hole2": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "target"}], "value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "target"}, "hole1": "damage", "hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"n": 3, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.20287254499520202, "choice_history": [54, 124, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 184, 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 71, 137, 21, 110, "targets", "<EOS>", "append", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 59, 79, 169, 40, 110, "target", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "targets", "<EOS>", 71, 137, 21, 110, "target", "<EOS>", "damage", "<EOS>", 170, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score_history": [-3.814697265625e-06, -0.0005092620849609375, -3.576278118089249e-07, -2.0265373677830212e-05, -5.125986263010418e-06, -2.026550646405667e-06, -7.62939453125e-06, -3.576278118089249e-07, -5.7220458984375e-06, -0.00838470458984375, -2.6702880859375e-05, -6.794906312279636e-06, -0.000619930331595242, -0.00013196468353271484, 0.0, -0.0002002716064453125, -4.768370445162873e-07, -0.0007781982421875, 0.0, -0.0028591156005859375, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0018224716186523438, -2.09808349609375e-05, -1.9073486328125e-05, -2.47955322265625e-05, -9.1552734375e-05, -5.340576171875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.00011444091796875, 0.0, -0.0019989013671875, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.01191556453704834, -1.9073486328125e-06, -0.0020074844360351562, -1.52587890625e-05, -0.005948066711425781, 0.0, -0.0009633302688598633, -1.1444091796875e-05, -3.814697265625e-06, -0.00049591064453125, -3.814697265625e-05, -0.00019705294107552618, -1.9073486328125e-06, -0.00133514404296875, -0.0001201629638671875, -0.00039768218994140625, 0.0, -9.5367431640625e-06, 0.0, -0.0007915493915788829, -7.62939453125e-06, -0.0015392303466796875, -0.000148773193359375, -0.0003108978271484375, -0.0002689361572265625, -9.5367431640625e-06, -0.009384001605212688, -3.814697265625e-06, -0.0016994476318359375, -0.0010585784912109375, -0.0015544891357421875, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -0.00227200984954834, -3.814697265625e-06, -0.0001430511474609375, -2.09808349609375e-05, -0.000270843505859375, 0.0, -2.6702880859375e-05, 0.0, -0.0064345598220825195, 0.0, -0.000621795654296875, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001811981201171875, 0.0, -7.05718994140625e-05, 0.0, -0.00010347366333007812, -1.9073486328125e-06, -0.0072574615478515625, -2.6702880859375e-05, -0.0003694295883178711, -5.7220458984375e-06, -0.0016841888427734375, -1.52587890625e-05, -0.02001476287841797, 0.0, -0.0026311874389648438, -7.62939453125e-06, -0.0009899139404296875, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -7.62939453125e-06, -5.7220458984375e-05, 0.0, -0.001216888427734375, -1.9073486328125e-06, -0.0009996891021728516, -3.814697265625e-06, -0.06009197235107422, -2.6702880859375e-05, -0.0019263029098510742, -1.1920928244535389e-07, -0.0011157989501953125, -4.38690185546875e-05, 0.0, -0.000110626220703125, -0.0001125335693359375, -0.0014840364456176758, -1.0848020792764146e-05, -0.00019073486328125, -0.0001697540283203125, -0.0001583099365234375, -8.392333984375e-05, -0.0009613037109375, 0.0, -0.0038622617721557617, 0.0, -0.013417243957519531, -0.0001544952392578125, -0.000331878662109375, -0.000965118408203125, -1.9073486328125e-06, -0.0003731250762939453, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -0.0004978179931640625, 0.0, -0.002232193946838379, -1.1920928244535389e-07, -0.0020656585693359375, 0.0, -5.7220458984375e-06, -0.0023717880249023438, -0.0001354217529296875, -0.0048631662502884865, -4.0531158447265625e-06, -0.000431060791015625, -1.33514404296875e-05, -0.0006799697875976562, 0.0]}], "index": 5}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "ArcaneShot", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"args": [{"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.7206264209229616, "choice_history": [54, 124, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Arcane", " ", "Shot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score_history": [-0.000133514404296875, -1.1444091796875e-05, -3.576278118089249e-07, -4.61332529084757e-05, -1.0728796951298136e-05, -0.00023102574050426483, -1.52587890625e-05, -2.3841855067985307e-07, -1.1444091796875e-05, -5.14984130859375e-05, -0.0001964569091796875, -1.71661376953125e-05, -3.814697265625e-06, -9.655952453613281e-06, -5.7220458984375e-06, -2.3126602172851562e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -4.7206853196257725e-05, -1.0013571227318607e-05, -2.419931479380466e-05, -1.9073486328125e-05, -1.1444091796875e-05, -3.588174149626866e-05, -5.245203283266164e-06, -9.5367431640625e-06, -2.86102294921875e-05, -4.57763671875e-05, 0.0, -1.52587890625e-05, -0.00016784665058366954, -0.6896125078201294, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0004731416702270508, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0003261566162109375, -1.1920928244535389e-07, -0.000202178955078125, -0.0001354217529296875, -4.00543212890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.000217437744140625, 0.0, -0.00014007091522216797, -2.503394853192731e-06, -0.0006368160247802734, -5.841255187988281e-06, -1.9073486328125e-05, 0.0, -3.814697265625e-06, 0.0, -4.00543212890625e-05, -1.71661376953125e-05, -0.00016224384307861328, -3.814697265625e-06, -0.011737823486328125, -0.0001125335693359375, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0023632049560546875, -0.000263214111328125, -5.340576171875e-05, -4.57763671875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0001659393310546875, 0.0, -6.866455078125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00017547607421875, -2.47955322265625e-05, -0.0001697540283203125, -1.71661376953125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0008832216262817383, -3.814697265625e-06, -1.71661376953125e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.01012940239161253, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.000354766845703125, 0.0]}], "index": 6}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Arcanite Reaper", "hole1": 5, "hole3": "COMMON", "hole2": "WARRIOR"}], "hole3": "create_weapon", "hole4": "player", "_type": "Template0", "hole0": "ArcaniteReaper", "hole1": "WeaponCard", "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 5, "hole2": 2}]}, "score": -0.05312414169804924, "choice_history": [54, 122, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score_history": [-2.09808349609375e-05, -0.021005630493164062, -5.686121585313231e-05, -2.8729025871143676e-05, -3.504691630951129e-05, -0.002361619845032692, -1.3828277587890625e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.017688751220703125, -8.58306884765625e-05, -2.2411095415009186e-05, -0.00015282486856449395, -5.7220458984375e-06, -4.410743713378906e-06, -5.197526479605585e-05, 0.0, -0.004509091377258301, -1.9073486328125e-06, -0.0003721713728737086, 0.0, -0.001560807228088379, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -5.91278076171875e-05, -0.0030651092529296875, -0.001434326171875, -3.886190097546205e-05, -0.00012504296319093555, -7.998943328857422e-05, -1.311301275563892e-06, -0.0003290176100563258, 0.0]}], "index": 7}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Assassinate"}, {"n": 5, "_type": "Num"}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Assassinate", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.07724085596779418, "choice_history": [54, 124, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Assassinate", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score_history": [-4.1961669921875e-05, -0.0005283355712890625, -1.907332261907868e-05, -0.00018452441145200282, -4.410692781675607e-06, -3.933906555175781e-06, -7.152555099310121e-07, -9.5367431640625e-06, -2.86102294921875e-05, -0.0001506805419921875, -7.62939453125e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -2.4557111828471534e-05, 0.0, -0.0007991790771484375, -7.62939453125e-06, -3.814697265625e-06, -9.059873264050111e-06, -1.33514404296875e-05, -3.0517578125e-05, -7.43865966796875e-05, -2.9802276912960224e-06, -0.0008318412001244724, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -8.034706115722656e-05, -0.0005748268449679017, -0.001453995704650879, -1.6689286894688848e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -7.498262129956856e-05, 0.0, -0.0002574920654296875, -1.1920928244535389e-07, -0.006389617919921875, -1.9073486328125e-06, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.0002460479736328125, 0.0, -2.7418136596679688e-05, -8.940695806813892e-06, -0.004377648234367371, -3.814697265625e-05, -1.3589859008789062e-05, 0.0, -2.0265579223632812e-06, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.561641511216294e-05, -2.3841855067985307e-07, -0.000637054443359375, -9.5367431640625e-05, -5.340576171875e-05, -3.0517578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -4.899501436739229e-05, 0.0, 0.0, 0.0, -3.778933751164004e-05, 0.0, -0.0002040863037109375, -0.011437416076660156, -2.09808349609375e-05, 0.0, -0.0019817352294921875, -9.72747802734375e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.503394853192731e-06, -4.649158654501662e-06, -0.041408538818359375, 0.0, -3.814697265625e-06, -0.0024471282958984375, -0.0002899169921875, -0.0015659332275390625, -2.288818359375e-05]}], "index": 8}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"_type": "Template8", "hole0": "target"}, "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Name", "id": "target"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Name", "id": "target"}}, "ops": [{"_type": "Eq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Name", "id": "target"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "_type": "Lambda"}}], "hole2": [{"_type": "Str", "s": "Backstab"}, {"n": 0, "_type": "Num"}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Backstab", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"args": [{"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.3195936748826611, "choice_history": [54, 124, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Backstab", "<EOS>", 42, 115, "0", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 53, 159, "filter_func", "<EOS>", 18, 104, 0, 150, "target", "<EOS>", 15, 83, 2, 170, 36, 90, 13, 80, 21, 110, "target", "<EOS>", "health", "<EOS>", 166, 4, 169, 35, 85, 13, 80, 21, 110, "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 85, 13, 80, 21, 110, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score_history": [-5.7220458984375e-06, -3.24249267578125e-05, -2.264974000354414e-06, -6.830471829744056e-05, -1.6685662558302283e-06, -9.5367431640625e-06, -7.152555099310121e-07, -2.288818359375e-05, -6.4849853515625e-05, -9.1552734375e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.3589859008789062e-05, 0.0, -0.000457763671875, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-05, -1.0013530300057027e-05, -5.2450905059231445e-05, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -4.57763671875e-05, -0.004033923149108887, -0.0005646944046020508, -4.768370445162873e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -8.416175842285156e-05, 0.0, -0.0001354217529296875, 0.0, -0.030450820922851562, -0.0002536773681640625, -0.0001506805419921875, -0.0004901885986328125, 0.0, -0.0001430511474609375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -0.00010693073272705078, -5.9604644775390625e-06, -0.004228472709655762, -1.9073486328125e-06, -0.000301361083984375, -1.9073486328125e-06, -0.0014973878860473633, 0.0, -0.00194549560546875, -0.0001697540283203125, -0.0003490447998046875, -0.000331878662109375, -0.006803154945373535, -1.1920928244535389e-07, -0.0026264190673828125, -0.0002613067626953125, -0.00040435791015625, -0.0001373291015625, -0.0024423599243164062, -0.000255584716796875, -0.0001544952392578125, 0.0, -0.0003070831298828125, -3.0517578125e-05, -0.0019761647563427687, -3.182882210239768e-05, -0.006180524826049805, -1.2993798009119928e-05, -0.0006389617919921875, -0.17302799224853516, -0.0006732940673828125, -0.007914543151855469, -0.0001392364501953125, -6.4849853515625e-05, 0.0, -0.001178741455078125, 0.0, -0.0014835596084594727, -4.041194551973604e-05, -0.0037851333618164062, -4.470348358154297e-05, -0.0016078948974609375, -7.82012939453125e-05, -0.0001392364501953125, -1.1444091796875e-05, -0.01509857177734375, -3.62396240234375e-05, -0.0017998218536376953, -5.9604644775390625e-06, -0.008603096008300781, -9.655952453613281e-06, -0.00040090084075927734, 0.0, -1.9431096006883308e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -7.59350077714771e-05, -3.576278118089249e-07, -0.026175498962402344, -0.0001316070556640625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00010764598846435547, 0.0, -0.0006256103515625, -0.000545501708984375, -1.52587890625e-05, 0.0, -0.0009250640869140625, -7.62939453125e-06, -3.0517578125e-05, -5.53131103515625e-05, -3.814697265625e-06, -7.152555099310121e-07, -0.0005664825439453125, 0.0, -6.866455078125e-05, -6.29425048828125e-05, -6.866455078125e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.1444091796875e-05, -7.62939453125e-06, -2.0265579223632812e-06, -9.894371032714844e-06, -0.00034368038177490234, -2.5153160095214844e-05, -0.000156402587890625, -0.0015277862548828125, -3.814697265625e-06, -0.0030036962125450373, -8.344646857949556e-07, -2.86102294921875e-05, -1.1444091796875e-05, -8.0108642578125e-05, -1.9073486328125e-06]}], "index": 9}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Blessing of Kings"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "BlessingOfKings", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "change_attack", "hole2": [{"n": 4, "_type": "Num"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "increase_health", "hole2": [{"n": 4, "_type": "Num"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.45875001314431785, "choice_history": [54, 124, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessing", " ", "of", " ", "Kings", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score_history": [-0.00023651123046875, -5.14984130859375e-05, -5.960462772236497e-07, -0.0005387242417782545, -0.0001820160250645131, -0.0010400388855487108, -1.9311901269247755e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -4.38690185546875e-05, -2.6702880859375e-05, -0.00022125244140625, -1.33514404296875e-05, -5.7220458984375e-06, -6.198883056640625e-06, 0.0, -1.8715816622716375e-05, -3.814697265625e-06, -0.0004901885986328125, -1.9073486328125e-06, -1.33514404296875e-05, -4.410734163684538e-06, -0.000855565071105957, -0.0001919103233376518, -6.92605972290039e-05, -5.8412537327967584e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265558760002023e-06, -2.503394853192731e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -4.9591064453125e-05, -3.3855139918159693e-05, -0.018814444541931152, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00010311603546142578, 0.0, -4.2438507080078125e-05, 0.0, -0.00045013427734375, -1.9073486328125e-06, -3.814697265625e-06, -7.05718994140625e-05, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0003566741943359375, 0.0, -0.00010502338409423828, -3.6597251892089844e-05, -0.0013852119445800781, -4.5299530029296875e-06, -5.960462203802308e-06, 0.0, -0.0005692242993973196, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.9485435485839844e-05, -1.1920928244535389e-07, -0.0025043487548828125, -0.00026702880859375, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.556510470545618e-06, -1.1920928244535389e-07, -3.8146954466355965e-06, 0.0, -4.76837158203125e-05, 0.0, -0.0006064176559448242, 0.0, -0.0008869171142578125, -0.001140594482421875, -0.000331878662109375, 0.0, -0.0006694793701171875, -1.9073486328125e-06, -4.57763671875e-05, -9.5367431640625e-06, -3.314018249511719e-05, -4.887569048150908e-06, -0.38664281368255615, -7.62939453125e-06, -3.24249267578125e-05, -0.0049037933349609375, -5.7220458984375e-06, -0.02314198762178421, -2.3841855067985307e-07, -0.000156402587890625, -9.918212890625e-05, -0.0006694793701171875, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -7.43865966796875e-05, -1.9073486328125e-06, -7.677078247070312e-05, -5.722038622479886e-06, -0.008801579475402832, -0.0001087188720703125, -8.58306884765625e-05, -2.09808349609375e-05, -0.000152587890625, -0.0007487088441848755, -5.960462772236497e-07]}], "index": 10}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "BlessingOfMight", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "change_attack", "hole2": [{"n": 3, "_type": "Num"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.09380688844867535, "choice_history": [54, 124, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessing", " ", "of", " ", "Might", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "3", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score_history": [-0.0005016326904296875, -9.1552734375e-05, -3.576278118089249e-07, -0.00042253959691151977, -4.9351521738572046e-05, -1.6689286894688848e-06, -7.3904229793697596e-06, -1.7642974853515625e-05, -1.5497195136049413e-06, -1.71661376953125e-05, -1.71661376953125e-05, -0.0016918182373046875, -1.71661376953125e-05, -3.814697265625e-06, -1.2159347534179688e-05, -1.9073486328125e-06, -1.5139572496991605e-05, -2.6702880859375e-05, -0.0013408660888671875, -5.7220458984375e-06, -3.814697265625e-06, -2.622600959512056e-06, -0.0007996558560989797, -0.00015961214376147836, -8.130073547363281e-05, -0.00013220308755990118, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.24764249753207e-05, -5.483612312673358e-06, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -5.4120821005199105e-05, -0.003271341323852539, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -0.0005168914794921875, 0.0, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -7.62939453125e-06, 0.0, -0.00031280517578125, 0.0, -3.814697265625e-05, -2.0265579223632812e-06, -0.0016492605209350586, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -0.00012969970703125, -1.52587890625e-05, -9.191036224365234e-05, -5.7220458984375e-06, -0.0026636123657226562, -8.7738037109375e-05, -3.24249267578125e-05, -1.9073486328125e-05, -5.7220458984375e-05, -1.71661376953125e-05, 0.0, -3.933906555175781e-06, 0.0, -9.775161743164062e-06, 0.0, -5.53131103515625e-05, 0.0, -2.6822082872968167e-05, 0.0, -0.017124176025390625, -0.004138946533203125, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -2.86102294921875e-05, -7.62939453125e-06, -2.09808349609375e-05, -5.125993993715383e-06, -0.03367137908935547, -1.9073486328125e-06, -1.1444091796875e-05, -0.006500244140625, -1.9073486328125e-06, -0.01704118400812149, -5.7220458984375e-06]}], "index": 11}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "BloodfenRaptor", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 3, "hole1": 2}]}, "score": -0.008667753485006813, "choice_history": [54, 122, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Bloodfen", " ", "Raptor", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -0.00043156370520591736, -0.00014316289161797613, -2.3841855067985307e-07, -6.541609764099121e-06, -1.52587890625e-05, -5.960462772236497e-07, -3.814697265625e-06, -0.0003757476806640625, -0.0003452301025390625, -9.34600830078125e-05, 0.0, -2.2649765014648438e-06, 0.0, -1.0967253729177173e-05, 0.0, -3.62396240234375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -1.4305104514278355e-06, -7.11679458618164e-05, -2.0861582015641034e-05, -4.017353057861328e-05, -7.62939453125e-05, 0.0, -6.604100053664297e-05, -5.960462772236497e-07, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.6702880859375e-05, -2.2888181774760596e-05, -0.0001697540283203125, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00022363383322954178, 0.0, -0.0024472475051879883, -1.1920928244535389e-07, -5.14984130859375e-05, -9.1552734375e-05, -6.4849853515625e-05, -0.0006731347530148923, -6.4373016357421875e-06, -1.1444091796875e-05, 0.0, -0.0003339052200317383, 0.0, -5.7220458984375e-06, -0.0017719268798828125, -2.288818359375e-05, -5.3285057219909504e-05, -1.9073486328125e-06, -0.0008842630195431411, 0.0]}], "index": 12}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Bloodlust", "hole1": 5, "hole3": "COMMON", "hole2": "SHAMAN"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Bloodlust", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "change_temp_attack", "hole2": [{"n": 3, "_type": "Num"}]}], "_type": "For", "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Name", "id": "player"}}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.07532706213214624, "choice_history": [54, 124, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "3", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "score_history": [-7.05718994140625e-05, -4.76837158203125e-05, -5.8887653722194955e-05, -0.0014738955069333315, -1.9348692148923874e-05, -3.814697265625e-05, 0.0, -3.0517578125e-05, -0.0005359649658203125, -2.47955322265625e-05, -3.933898824470816e-06, -0.0003666877746582031, -1.0013530300057027e-05, -0.0005025863647460938, -0.001911163330078125, 0.0, -0.000186920166015625, 0.0, -8.976459503173828e-05, 0.0, -5.698204040527344e-05, 0.0, -4.57763671875e-05, -0.0004291534423828125, -0.00018632342107594013, -2.0265579223632812e-06, -0.028222084045410156, -7.05718994140625e-05, -4.38690185546875e-05, -0.000194549560546875, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -5.137898551765829e-05, -7.2479248046875e-05, -2.0265579223632812e-06, 0.0, 0.0, 0.0, -3.4689903259277344e-05, 0.0, -0.0032596588134765625, -0.0002994537353515625, -1.33514404296875e-05, 0.0, -0.0031757354736328125, 0.0, -0.00032520294189453125, 0.0, -0.0008068084716796875, 0.0, -0.001949310302734375, 0.0, -0.0021414717193692923, -1.1444091796875e-05, -4.76837158203125e-05, -0.0040130615234375, -2.09808349609375e-05, -0.008154869079589844, 0.0, -0.0005218982696533203, -3.933906555175781e-06, -0.009632468223571777, 0.0, -2.6702880859375e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.0059075369499623775, -0.00011444091796875]}], "index": 13}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "MURLOC"}], "hole2": [{"_type": "Str", "s": "Bluegill Warrior"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "BluegillWarrior", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 2, "hole1": 1, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "charge"}]}, "score": -0.03319356005768981, "choice_history": [54, 122, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Bluegill", " ", "Warrior", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score_history": [0.0, -1.71661376953125e-05, -0.002457695547491312, -2.670261892490089e-05, -2.229192978120409e-05, -2.504885196685791e-05, -5.412101745605469e-05, -6.437280717364047e-06, -5.7220458984375e-06, -0.00017547607421875, -9.72747802734375e-05, -1.71661376953125e-05, -3.814697265625e-06, -2.2649765014648438e-06, 0.0, -6.079673767089844e-06, 0.0, -0.0004787445068359375, -5.7220458984375e-06, -3.24249267578125e-05, -7.271740287251305e-06, -4.398822784423828e-05, -2.574920654296875e-05, -2.0265579223632812e-06, 0.0, 0.0, -1.263609101442853e-05, -2.3841855067985307e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -1.52587890625e-05, -0.001811981201171875, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -3.814697265625e-06, 0.0, -0.0014927387237548828, -1.1920928244535389e-07, -7.891654968261719e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -3.24249267578125e-05, -0.0008015632629394531, -2.288818359375e-05, -4.9591064453125e-05, 0.0, -0.0015192031860351562, 0.0, -3.62396240234375e-05, -0.00012969970703125, -2.288818359375e-05, -2.002716064453125e-05, -1.7881377516459906e-06, -5.233277261140756e-05, -3.933898824470816e-06, -0.022850871086120605, -0.00010502338409423828, -0.0002651214599609375, -7.82012939453125e-05, -4.971027374267578e-05, -3.814697265625e-06]}], "index": 14}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": true}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "Boar", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}]}, "score": -0.019102729883840652, "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Boar", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-3.814697265625e-06, -9.1552734375e-05, -2.3007127310847864e-05, -8.344650268554688e-06, -1.774728298187256e-05, -7.62939453125e-06, -1.1920928244535389e-07, -4.9591064453125e-05, -0.0003509521484375, -0.000621795654296875, -0.0006771087646484375, -1.9073486328125e-06, -3.588198887882754e-05, 0.0, -0.0001453088625567034, 0.0, -0.00284576416015625, -0.0058307647705078125, -4.1961669921875e-05, -3.576278118089249e-07, -0.0003824744781013578, -5.7220458984375e-06, 0.0, -0.0014242291217669845, -8.344646857949556e-07, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.00015044212341308594, 0.0, -1.5497207641601562e-05, 0.0, -1.1444091796875e-05, -7.82012939453125e-05, -8.988380432128906e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.91278076171875e-05, -0.000244140625, -0.0010107769630849361, -8.225420970120467e-06, -1.52587890625e-05, 0.0, -0.004261136054992676, 0.0, -7.62939453125e-06, -0.0001201629638671875, -0.0001926422119140625, -3.40690603479743e-05, 0.0, -8.260835602413863e-05, -1.1920928244535389e-07]}], "index": 15}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Charge", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "change_attack", "hole2": [{"n": 2, "_type": "Num"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.5502158417835901, "choice_history": [54, 124, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Charge", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score_history": [-7.62939453125e-06, -4.9591064453125e-05, -0.0001037067049765028, -1.0013561222876888e-05, -0.001953117549419403, -0.0003032684326171875, 0.0, -0.000293731689453125, -6.866455078125e-05, -0.0069637298583984375, -9.5367431640625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.000858306884765625, -1.33514404296875e-05, -9.5367431640625e-06, -7.510157047363464e-06, -1.1920928244535389e-07, -8.20159912109375e-05, -3.814697265625e-06, -0.00034969847183674574, -3.266334533691406e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00153350830078125, -7.748603820800781e-06, -0.002979278564453125, -2.47955322265625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -0.011440277099609375, 0.0, -0.000370025634765625, 0.0, -0.0004291534423828125, 0.0, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, 0.0, -0.000179290771484375, 0.0, -0.000213623046875, -3.814697265625e-06, -0.02743351459503174, -1.33514404296875e-05, -0.0001850128173828125, 0.0, -5.7220458984375e-05, 0.0, -6.103515625e-05, -1.52587890625e-05, -7.641315460205078e-05, 0.0, -0.006089210510253906, -0.0002346038818359375, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -4.506111145019531e-05, 0.0, -0.0028839111328125, -0.0027523040771484375, -2.47955322265625e-05, 0.0, -0.0001087188720703125, -1.33514404296875e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.0001087188720703125, -3.576278118089249e-07, -0.34350502490997314, -3.814697265625e-06, -7.62939453125e-06, -0.0074367523193359375, -1.9073486328125e-06, -0.011848794296383858, 0.0, -8.7738037109375e-05, -0.00102996826171875, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.000255584716796875, 0.0, -0.000148773193359375, -5.960462772236497e-07, -0.08363080024719238, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -0.015268325805664062, -0.0001544952392578125, -4.768370445162873e-07, -7.43865966796875e-05, -5.7220458984375e-06, -0.0071345302276313305, -0.01074504479765892]}], "index": 16}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Chillwind Yeti", "hole1": 4, "hole3": "COMMON", "hole2": "ALL"}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "ChillwindYeti", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 5}]}, "score": -0.027929147072143223, "choice_history": [54, 122, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -0.008710011839866638, -0.00044121628161519766, 0.0, -6.880611181259155e-06, -1.1563301086425781e-05, -3.576278118089249e-07, -3.814697265625e-06, -0.0140533447265625, -2.47955322265625e-05, -7.152555099310121e-07, -7.462496432708576e-05, -7.748603820800781e-06, 0.0, -0.0001837053569033742, 0.0, -0.000164031982421875, 0.0, -1.5497207641601562e-05, 0.0, -1.52587890625e-05, 0.0, -2.6106834411621094e-05, 0.0, -9.5367431640625e-06, -0.000736236572265625, -9.5367431640625e-06, -0.0015208696713671088, 0.0, -0.0018884981982409954, 0.0]}], "index": 17}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Claw", "hole1": 1, "hole3": "FREE", "hole2": "DRUID"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Claw", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Name", "id": "player"}}, "hole1": "change_temp_attack", "hole2": [{"n": 2, "_type": "Num"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Name", "id": "player"}}, "hole1": "increase_armor", "hole2": [{"n": 2, "_type": "Num"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.29867756297261394, "choice_history": [54, 124, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 169, 42, 115, "2", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score_history": [-3.814697265625e-06, -0.000125885009765625, -2.253030106658116e-05, -4.1960789531003684e-05, -0.00010466575622558594, -7.43865966796875e-05, 0.0, -0.0003948211669921875, -0.0016345977783203125, -3.814697265625e-06, -2.3841855067985307e-07, -0.0006716251373291016, -0.003033634275197983, -6.437280717364047e-06, -0.00038802623748779297, -2.3841855067985307e-07, -0.0017396179027855396, 0.0, -4.482268923311494e-05, 0.0, -4.291534423828125e-06, 0.0, -4.1961669921875e-05, -0.0001220703125, -5.245208740234375e-05, -2.0265579223632812e-06, -0.000148773193359375, -0.0001277923583984375, -3.814697265625e-06, -4.76837158203125e-05, -1.52587890625e-05, -7.62939453125e-06, 0.0, -4.0531158447265625e-06, -5.7220458984375e-06, -5.841255187988281e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.503394853192731e-06, 0.0, -0.0024213790893554688, -8.0108642578125e-05, -3.4332275390625e-05, -4.9591064453125e-05, -6.4849853515625e-05, 0.0, -2.6702880859375e-05, 0.0, -0.001274692127481103, -6.79492904964718e-06, -0.00960838794708252, -9.5367431640625e-06, -1.71661376953125e-05, -0.000316619873046875, -1.9073486328125e-06, -0.014851972460746765, -9.5367431640625e-06, -0.000179290771484375, -0.0006237030029296875, -0.00015163421630859375, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -0.00309478840790689, -4.0531158447265625e-06, -0.25332140922546387, -0.0001087188720703125, -3.4332275390625e-05, -0.0001811981201171875, -9.5367431640625e-06, -0.0029594693332910538, -0.0002899169921875]}], "index": 18}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Cleave", "hole1": 2, "hole3": "COMMON", "hole2": "WARRIOR"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole7": [{"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "can_use", "hole3": "game", "hole2": "player"}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}], "hole0": "Cleave", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"args": [{"n": 3, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.4517596432453317, "choice_history": [54, 125, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score_history": [-9.5367431640625e-06, -0.0061206817626953125, -1.1920928244535389e-07, -0.0004390706308186054, -1.2871576473116875e-05, -0.00014495849609375, 0.0, -0.000331878662109375, -0.0032958984375, -7.2479248046875e-05, -9.17908164410619e-06, 0.0, -2.622600959512056e-06, 0.0, -0.017421722412109375, -2.288818359375e-05, -3.659723370219581e-05, 0.0, -0.0008230209350585938, 0.0, -1.3589859008789062e-05, 0.0, -6.4849853515625e-05, -3.814697265625e-05, -3.254413604736328e-05, 0.0, -0.001953125, -0.0001544952392578125, -1.52587890625e-05, -0.000396728515625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0010509490966796875, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -0.028688430786132812, -9.5367431640625e-06, -0.000156402587890625, -1.9073486328125e-05, -0.00040435791015625, -0.003444671630859375, -1.1444091796875e-05, -0.000102996826171875, -3.814697265625e-06, -0.00012969970703125, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.0012007951736450195, -2.1457672119140625e-06, -0.0002709627151489258, -2.1457672119140625e-06, -2.288818359375e-05, -5.7220458984375e-06, 0.0, -0.00038433074951171875, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -7.057189213810489e-05, -1.9073486328125e-06, -0.003406524658203125, 0.0, -0.00011444092524470761, 0.0, -0.017183303833007812, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0037810802459716797, 0.0, -0.0031414031982421875, -7.62939453125e-06, -9.1552734375e-05, 0.0, -0.0038808584213256836, 0.0, -7.62939453125e-06, -0.0001125335693359375, -7.62939453125e-06, -0.0015746355056762695, 0.0, -0.0062999725341796875, -0.0001468658447265625, -0.007249003741890192, 0.0, -0.0023164749145507812, -7.05718994140625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -0.00084686279296875, -0.007033586502075195, -6.43729799776338e-06, -2.86102294921875e-05, -2.288818359375e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0007302551530301571, -3.576278118089249e-07, -0.009996414184570312, -0.0001285076141357422, -4.1961669921875e-05, -0.0007171630859375, 0.0, -0.0048480043187737465, -2.121925172104966e-05, -0.0021200180053710938, -0.0004730224609375, -3.814697265625e-05, 0.0, -0.0004158490337431431, -0.000969535845797509, -0.05572326108813286, -3.576272320060525e-06, -0.00038909912109375, -0.000263214111328125, -5.7220458984375e-06, -0.004434702917933464, -7.390948667307384e-06, -7.43865966796875e-05, -0.001407623291015625, -0.0003223419189453125, -5.7220458984375e-06, -0.135151669383049, -4.8993817472364753e-05, -0.0010930299758911133, -8.344646857949556e-07, -7.62939453125e-06, -0.0009059906005859375, -5.53131103515625e-05, -8.0108642578125e-05, -7.62939453125e-06, -1.33514404296875e-05, -4.9591064453125e-05, -0.0004897856852039695, -3.4570680327306036e-06, -0.0003908872022293508, -6.091594696044922e-05, -2.6702880859375e-05, -0.00040435791015625, -0.0001468658447265625, -0.06644147634506226, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, -0.006962776184082031, 0.0, -0.0014781951904296875, -0.0002536773681640625, -0.000370025634765625, -0.004910826683044434, -5.9604644775390625e-06, -0.00020599365234375, -1.9073486328125e-05, -0.00035858154296875, -7.2479248046875e-05, -0.00028264522552490234, 0.0, -8.20159912109375e-05, -0.00012218952178955078, -4.768370445162873e-07, -7.05718994140625e-05, -1.1205671398784034e-05, -3.814697265625e-06, -0.000431060791015625, -0.0008335113525390625, -0.000141143798828125, -0.00228118896484375, -7.05718994140625e-05, -6.29425048828125e-05, -8.96453857421875e-05, -0.0001068115234375, -9.34600830078125e-05, -8.392333984375e-05, 0.0, -0.0006732940673828125, 0.0, -0.0028420686721801758, 0.0, -0.0008106231689453125, 0.0, -4.208087921142578e-05, 0.0, -0.0005340576171875, -9.5367431640625e-06, -0.001544952392578125, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -0.00025391578674316406, 0.0, -0.001201629638671875, -1.1444091796875e-05, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.00011146067845402285, -1.9073486328125e-06, -0.0022469758987426758, 0.0, -5.14984130859375e-05, 0.0, -9.5367431640625e-06, -0.0032396316528320312, -0.0002117156982421875, -0.0002651214599609375, 0.0, -0.00447189761325717, 0.0]}], "index": 19}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Consecration", "hole1": 4, "hole3": "COMMON", "hole2": "PALADIN"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Consecration", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"args": [{"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}, "hole1": "damage", "hole2": [{"args": [{"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.19855334662589996, "choice_history": [54, 124, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score_history": [-5.7220458984375e-06, -0.0008373260498046875, -1.668929826337262e-06, -1.7523612768854946e-05, -7.427297532558441e-06, -7.2479248046875e-05, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0342559814453125, -6.103515625e-05, -5.960462772236497e-07, -2.384185791015625e-06, -2.026555648626527e-06, 0.0, -0.07955598831176758, -1.9073486328125e-06, -0.00019645689462777227, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-05, -9.72747802734375e-05, -1.9073486328125e-06, -0.003513336181640625, -4.57763671875e-05, -1.52587890625e-05, -0.00012969970703125, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0029001235961914062, -5.7220458984375e-05, -0.0004634857177734375, -1.9073486328125e-06, -0.00026702880859375, -1.9073486328125e-05, -0.0007829666137695312, -2.288818359375e-05, -0.0001068115234375, -9.5367431640625e-06, -7.05718994140625e-05, -1.9073486328125e-06, -0.0002841949462890625, -4.57763671875e-05, -0.00020599365234375, 0.0, 0.0, -1.1444091796875e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -0.000232696533203125, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -0.0008106231689453125, -3.814697265625e-06, -0.0003699064254760742, 0.0, -2.09808349609375e-05, -0.020025253295898438, -2.6702880859375e-05, -0.005215644836425781, -1.1444091796875e-05, -0.0007419586181640625, 0.0, -3.445148468017578e-05, 0.0, -1.1444091796875e-05, -0.00012969970703125, -0.0001125335693359375, -1.1444091796875e-05, -0.0012054443359375, -4.38690185546875e-05, -3.814697265625e-06, -0.00067138671875, -1.33514404296875e-05, -0.00060272216796875, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.52587890625e-05, -0.0006357366219162941, -1.1920928244535389e-07, -4.00543212890625e-05, -8.0108642578125e-05, -0.0004444122314453125, 0.0, -0.01593780517578125, -0.00048065185546875, -0.00011444091796875, -0.0003681182861328125, -0.000316619873046875, -4.9591064453125e-05, -0.000370025634765625, -1.9073486328125e-06, -0.014539718627929688, -9.5367431640625e-06, -0.00531768798828125, -1.9073486328125e-06, -0.0007017850875854492, 0.0, -0.0009136199951171875, -1.9073486328125e-06, -2.288818359375e-05, -0.0002155303955078125, -0.0003147125244140625, -2.47955322265625e-05, -1.71661376953125e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.0002690553665161133, -7.82012939453125e-05, -0.001239776611328125, -2.86102294921875e-05, -1.52587890625e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007615021895617247, -2.3841855067985307e-07, -4.9591064453125e-05, -8.20159912109375e-05, -0.000274658203125, 0.0]}], "index": 20}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Core Hound"}, {"n": 7, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "CoreHound", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 9, "hole1": 5}]}, "score": -0.005626798531849886, "choice_history": [54, 122, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Core", " ", "Hound", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score_history": [0.0, -4.76837158203125e-05, -6.317892984952778e-05, -1.1086402082582936e-05, -1.1920922133867862e-06, -1.8656253814697266e-05, -9.5367431640625e-06, -5.960462772236497e-07, -9.5367431640625e-06, -0.000247955322265625, -0.0007476806640625, -5.340576171875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.2993786185688805e-05, 0.0, -0.0020542144775390625, -1.33514404296875e-05, -1.33514404296875e-05, -1.1920922133867862e-06, -0.0002062318380922079, -7.033347174001392e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -5.7220458984375e-06, -1.358979079668643e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.0531158447265625e-06, -6.19888032815652e-06, -2.7060508728027344e-05, -5.006789251638111e-06, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0007457085885107517, -1.1920928244535389e-07, -3.993509744759649e-05, 0.0, -3.4332275390625e-05, -7.2479248046875e-05, -2.288818359375e-05, -0.000701445562299341, -8.344646857949556e-07, -5.7220458984375e-06, 0.0, -5.2809715270996094e-05, 0.0, -9.5367431640625e-06, -7.2479248046875e-05, -2.6702880859375e-05, -0.00014316065062303096, -8.344646857949556e-07, -1.2874589629063848e-05, 0.0]}], "index": 21}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Corruption"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Corruption", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "add_effect", "hole2": [{"args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template19", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"_type": "Template19", "hole0": "Kill"}, {"_type": "Template19", "hole0": "SelfSelector"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.20394594294430135, "choice_history": [54, 124, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Corruption", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 169, 35, 87, 21, 110, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Turn", "Started", "<EOS>", 176, 53, 159, "player", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 50, 146, "Kill", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score_history": [-5.7220458984375e-06, -0.0005426406860351562, -4.8636207793606445e-05, -8.940534462453797e-05, -7.384922355413437e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -5.340576171875e-05, -0.000576019287109375, -7.62939453125e-05, -1.9073486328125e-06, -3.099440846199286e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0002307891845703125, -9.5367431640625e-06, -3.814697265625e-06, -1.7881377516459906e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002766452671494335, -3.576272320060525e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1682510375976562e-05, -0.0020294189453125, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.254413604736328e-05, 0.0, -0.002857208251953125, -3.814697265625e-06, -1.9073486328125e-06, -0.00077056884765625, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.57763671875e-05, 0.0, -9.1552734375e-05, 0.0, -2.3245811462402344e-05, -7.390974587906385e-06, -0.003504571970552206, -0.000125885009765625, -3.6835670471191406e-05, 0.0, -2.2649765014648438e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -8.833404717734084e-05, -6.079673767089844e-06, -0.001560211181640625, -3.0517578125e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.52587890625e-05, 0.0, -8.344650268554688e-06, 0.0, -2.3007391064311378e-05, 0.0, -1.9073486328125e-06, 0.0, -2.2649763195659034e-05, 0.0, -0.0004253387451171875, -0.004464149475097656, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003681182861328125, -9.918212890625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -3.933906555175781e-06, -1.3470649719238281e-05, -0.06525814533233643, 0.0, -0.0001316070556640625, -0.00064849853515625, -4.1961669921875e-05, -0.000629425048828125, -0.0002536773681640625, -0.007040977478027344, -0.00136566162109375, -0.0004425048828125, -0.013051986694335938, -0.0018901824951171875, -9.72747802734375e-05, 0.0, -0.012566328048706055, -0.04545235633850098, -0.0012540817260742188, -0.0003299713134765625, -0.000354766845703125, -9.5367431640625e-06, -0.0038918256759643555, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -0.001045822398737073, -0.00022327899932861328, -3.814697265625e-05, -0.000339508056640625, -0.00014495849609375, -5.7220458984375e-06, 0.0, -0.0005054473876953125, -9.34600830078125e-05, 0.0, -0.0001277923583984375, -0.004390716552734375, -1.9073486328125e-06, -0.022308766841888428, -5.078315734863281e-05, -0.000339508056640625, 0.0, -0.0007706880569458008, -3.933906555175781e-06, 0.0]}], "index": 22}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Dalaran Mage", "hole1": 3, "hole3": "COMMON", "hole2": "ALL"}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "DalaranMage", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 1, "hole1": 4, "hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage"}]}, "score": -0.008178812115346545, "choice_history": [54, 122, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 115, "1", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score_history": [0.0, -9.5367431640625e-06, -5.245195097813848e-06, -4.053033626405522e-05, -6.651669536950067e-05, -1.5436671674251556e-06, -3.6835572245763615e-05, -4.52994936495088e-06, -1.9073486328125e-06, -0.00148773193359375, -5.7220458984375e-06, -2.3841855067985307e-07, -0.0002107573818648234, -7.867813110351562e-06, -2.145764938177308e-06, -8.654252451378852e-05, 0.0, -0.0001888275146484375, 0.0, -9.608268737792969e-05, 0.0, -3.814697265625e-06, 0.0, -0.00018537044525146484, 0.0, -3.814697265625e-06, -0.0003452301025390625, -7.62939453125e-05, -1.0013576684286818e-05, -7.152555099310121e-07, -3.147121242363937e-05, 0.0, -0.00468099070712924, 0.0, -0.000324249267578125, -1.9073486328125e-06, -0.0002623792679514736, 0.0]}], "index": 23}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Divine Spirit"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "DivineSpirit", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "increase_health", "hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.24620135255148057, "choice_history": [54, 124, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Divine", " ", "Spirit", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "score_history": [-0.00017547607421875, -6.29425048828125e-05, -3.933898824470816e-06, -3.933904736186378e-06, -0.00141817273106426, -5.8191828429698944e-05, -2.6702880859375e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -4.9591064453125e-05, -0.010250091552734375, -4.38690185546875e-05, -3.814697265625e-06, -7.867813110351562e-06, -1.1920928244535389e-07, -1.2397762475302443e-05, -1.9073486328125e-06, -0.000629425048828125, -3.814697265625e-06, -5.7220458984375e-06, -2.0265373677830212e-05, -0.00011062569683417678, -4.374974378151819e-05, -0.0061664581298828125, -9.5367431640625e-06, -1.9073486328125e-06, -7.033215297269635e-06, -1.1920928244535389e-07, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000255584716796875, -2.2649765014648438e-06, -0.010806083679199219, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.00011277198791503906, 0.0, -1.537799835205078e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.9073486328125e-06, -5.14984130859375e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0003108978271484375, 0.0, -4.398822784423828e-05, -2.2649765014648438e-06, -0.0036927461624145508, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -9.751319885253906e-05, 0.0, -0.022876739501953125, -0.0001220703125, -3.814697265625e-06, -5.340576171875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.987022399902344e-06, 0.0, -1.01327859738376e-05, 0.0, -2.09808349609375e-05, 0.0, -3.504753112792969e-05, 0.0, -0.007537841796875, -0.04182910919189453, -7.62939453125e-06, 0.0, -0.0001239776611328125, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -5.960462772236497e-07, -0.07307147979736328, -7.62939453125e-06, -0.000400543212890625, -0.0007495880126953125, 0.0, -0.0015392303466796875, 0.0, -0.000141143798828125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1920922133867862e-06, -0.06287193298339844, 0.0]}], "index": 24}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template13", "hole0": "Summon", "hole1": {"_type": "Name", "id": "MechanicalDragonling"}}, {"_type": "Template19", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}}], "hole2": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "DragonlingMechanic", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 4}]}, "score": -0.007387609683661367, "choice_history": [54, 122, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Dragonling", " ", "Mechanic", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Mechanical", "Dragonling", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [0.0, -1.71661376953125e-05, -1.6689160474925302e-05, -7.152555099310121e-07, -1.311301275563892e-06, -1.1909287422895432e-07, -1.8239017663290724e-05, -5.006777428206988e-06, -3.0517578125e-05, -0.0001316070556640625, -3.0517578125e-05, -1.33514404296875e-05, -6.29425048828125e-05, -2.1457672119140625e-06, 0.0, -6.914137884450611e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.576278118089249e-07, -4.971027374267578e-05, -1.919269561767578e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.00015868614718783647, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -5.841255187988281e-06, -0.0010623931884765625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.210803985595703e-05, 0.0, -3.8743019104003906e-05, 0.0, -8.7738037109375e-05, -0.0001354217529296875, -1.9073486328125e-06, -0.0005890130996704102, -9.5367431640625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -7.462501525878906e-05, -9.536697689327411e-06, -3.24249267578125e-05, -0.0001888275146484375, -0.000110626220703125, -0.000109904445707798, -0.0013617537915706635, -4.38690185546875e-05, -3.814697265625e-06, -0.00048450854956172407, -0.0009318288648501039, -0.0011204908369109035, -5.7220458984375e-06, -1.9073486328125e-06, -4.2080762796103954e-05, -3.814697265625e-06, 0.0, -8.106231689453125e-06, 0.0, -5.9960802900604904e-05, 0.0, -2.09808349609375e-05, -4.57763671875e-05, -7.62939453125e-06, -7.271765298355604e-06, -2.3841855067985307e-07, -1.1920883480343036e-07, -1.311301275563892e-06]}], "index": 25}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "DrainLife", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"args": [{"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Name", "id": "player"}}, "hole1": "heal", "hole2": [{"args": [{"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.05175953239438513, "choice_history": [54, 124, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drain", " ", "Life", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score_history": [0.0, -2.86102294921875e-05, -2.3841855067985307e-07, -5.018585216021165e-05, -1.8834924048860557e-05, -1.0351184755563736e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.43865966796875e-05, -0.00153350830078125, -6.103515625e-05, 0.0, -7.62939453125e-06, -2.47955322265625e-05, -4.208087921142578e-05, -5.7220458984375e-06, -0.00070953369140625, -1.33514404296875e-05, -2.288818359375e-05, -3.6954811548639555e-06, -0.00013744831085205078, -2.1219102563918568e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.52587890625e-05, -0.00040276130312122405, -6.73532485961914e-05, -2.86102294921875e-05, -8.7738037109375e-05, -3.814697265625e-05, 0.0, -1.9073486328125e-05, -6.330013275146484e-05, -0.0002651214599609375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -4.76837158203125e-05, 0.0, -3.0517578125e-05, 0.0, -0.001049041748046875, -1.71661376953125e-05, -0.00035858154296875, 0.0, -1.52587890625e-05, -0.000476837158203125, 0.0, -0.00020122528076171875, -3.62396240234375e-05, -3.24249267578125e-05, 0.0, -2.288818359375e-05, 0.0, -0.0001544952392578125, 0.0, -0.00045239925384521484, -6.079673767089844e-06, -0.0017480843234807253, -2.8967857360839844e-05, -5.841255187988281e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.00047576427459716797, -3.814697265625e-06, -0.0010786056518554688, -5.14984130859375e-05, -3.814697265625e-06, -6.29425048828125e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2993811651540454e-05, 0.0, -0.00018310546875, -0.0001201629638671875, -0.00012969970703125, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -0.00014495849609375, -1.1920928244535389e-07, -0.00022709369659423828, -2.6702880859375e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.814697265625e-05, -9.1552734375e-05, -4.9591064453125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.004341244697570801, -0.0007871389389038086, -3.814697265625e-06, -9.5367431640625e-05, -1.33514404296875e-05, -0.0003147013485431671, -1.1920928244535389e-07, -4.00543212890625e-05, -3.814697265625e-06, -0.0002803802490234375, 0.0, -0.000263214111328125, -0.0003528594970703125, -0.0003032684326171875, -1.52587890625e-05, -0.0001163482666015625, -3.814697265625e-06, -0.008881568908691406, -1.5497195136049413e-06, -0.0035089252050966024, -8.10622896096902e-06, -0.012898564338684082, -4.768370445162873e-07, -4.76837158203125e-05, -0.000133514404296875, -6.67572021484375e-05, -0.0001010894775390625, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.53131103515625e-05, -6.0796710386057384e-06, -0.005386710166931152, -4.971027374267578e-05, -4.9591064453125e-05, -0.00038909912109375, -1.33514404296875e-05, -0.0002901677507907152, -3.576278118089249e-07, -0.0001316070556640625, -1.9073486328125e-06, -0.001190185546875, 0.0]}], "index": 26}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "DEMON"}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template19", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}}], "hole2": [{"_type": "Str", "s": "Dread Infernal"}, {"n": 6, "_type": "Num"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "DreadInfernal", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 6, "hole1": 6}]}, "score": -0.03298874441911437, "choice_history": [54, 122, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Dread", " ", "Infernal", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 176, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -4.9591064453125e-05, -7.855583680793643e-05, -6.222647789400071e-05, -2.3841830625315197e-06, -8.422881364822388e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.002777099609375, -0.0004520416259765625, -2.47955322265625e-05, -8.58306884765625e-05, -1.52587890625e-05, -3.099440846199286e-06, 0.0, -1.549720582261216e-05, 0.0, -0.000591278076171875, -0.0001430511474609375, -2.86102294921875e-05, -1.6689286894688848e-06, -0.00018405805167276412, -5.340573261491954e-05, -4.88758041683468e-06, -9.5367431640625e-06, 0.0, -0.00011909016029676422, -5.125986263010418e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -2.372264862060547e-05, -0.0006622076034545898, 0.0, 0.0, -0.0009326934814453125, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.001551985740661621, 0.0, -0.0016012191772460938, -0.0004177093505859375, -0.0002040863037109375, -0.0015926361083984375, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003528594970703125, -0.0016143321990966797, -6.4849853515625e-05, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -0.0010890960693359375, -0.0002498626708984375, -1.1920928244535389e-07, 0.0, -7.62939453125e-05, -0.0002689361572265625, -0.005570742301642895, -4.410662586451508e-05, -0.0015877187252044678, -0.0004121469391975552, -0.000698089599609375, -0.00017547607421875, -5.14984130859375e-05, -3.0517578125e-05, -0.0013467073440551758, -2.6702880859375e-05, 0.0, -0.0011005401611328125, -1.9073486328125e-06, -0.0051059722900390625, -3.24249267578125e-05, 0.0, -0.0002460479736328125, -0.0002193450927734375, -4.38690185546875e-05, -0.0001354217529296875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.1563301086425781e-05, 0.0, -3.814697265625e-06, -0.00011444091796875, -2.86102294921875e-05, -0.00024724003742448986, -1.0371154530730564e-05, -8.048716699704528e-05, -5.960462772236497e-07]}], "index": 27}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template19", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}}], "hole2": [{"_type": "Str", "s": "Elven Archer"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "ElvenArcher", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 1, "hole1": 1}]}, "score": -0.5183189046080372, "choice_history": [54, 122, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Elven", " ", "Archer", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -0.00014006110723130405, -0.00012039413559250534, -8.106198947643861e-06, -4.759058356285095e-07, -1.4066696166992188e-05, -3.576278118089249e-07, -5.53131103515625e-05, -0.0002460479736328125, -3.62396240234375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -3.743171691894531e-05, 0.0, -3.123283386230469e-05, 0.0, -0.0002288818359375, -2.09808349609375e-05, -7.62939453125e-06, -2.9802276912960224e-06, -0.00013756752014160156, -6.019950160407461e-05, -3.838539123535156e-05, -1.9073486328125e-06, 0.0, -2.739325282163918e-05, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.340576171875e-05, -3.814697265625e-06, -0.0005016326904296875, 0.0, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.00016427040100097656, 0.0, -0.00012600421905517578, 0.0, -0.4974336624145508, -6.103515625e-05, -9.918212890625e-05, -0.0005388259887695312, -0.000125885009765625, -1.9073486328125e-06, -5.7220458984375e-05, -0.0008258819580078125, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-06, -0.00047206878662109375, -0.0001430511474609375, -0.00037801265716552734, -3.802776336669922e-05, -0.0006057620048522949, -0.0005769702838733792, -0.00019073486328125, -0.0052814483642578125, -2.86102294921875e-05, -0.000247955322265625, -0.0009883642196655273, -0.0014190673828125, 0.0, -0.0003795623779296875, -1.1444091796875e-05, -4.57763671875e-05, -4.780292510986328e-05, 0.0, -0.0001125335693359375, -1.71661376953125e-05, -0.0005704164505004883, -0.00010693073272705078, -1.9073486328125e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.0019767284393310547, 0.0, -0.001819610595703125, -8.20159912109375e-05, -0.0008217096328735352, -0.00016295909881591797, -5.7220458984375e-06, -2.491474151611328e-05, 0.0, -3.361701965332031e-05, 0.0, -1.52587890625e-05, -8.20159912109375e-05, -2.86102294921875e-05, -7.152562830015086e-06, -3.2186455882765586e-06, -1.0731455404311419e-06, -4.410734163684538e-06]}], "index": 28}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"n": 0, "_type": "Num"}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": true}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "ExcessMana", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.06865033522023367, "choice_history": [54, 124, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Excess", " ", "Mana", "<EOS>", 42, 115, "0", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [-0.00022125244140625, -0.0002498626708984375, 0.0, -2.9802317840221804e-06, -0.00046648335410282016, -5.951384082436562e-06, -2.47955322265625e-05, 0.0, -8.392333984375e-05, -0.0003376007080078125, -0.0009059906005859375, -0.0001201629638671875, -1.52587890625e-05, -0.00023900199448689818, -1.9073486328125e-06, -0.0001955027983058244, -1.9073486328125e-06, -0.00284576416015625, -6.67572021484375e-05, -2.288818359375e-05, -2.5510462364763953e-05, -7.963163079693913e-05, -8.583065209677443e-06, -0.00017987262981478125, -7.62939453125e-06, -5.7220458984375e-06, -2.9802276912960224e-06, -0.00010179955279454589, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -7.557844219263643e-05, -0.0011868476867675781, -2.0265579223632812e-06, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0002497434616088867, 0.0, -2.47955322265625e-05, -6.103515625e-05, -5.1975199312437326e-05, -5.960462203802308e-06, -0.0016914606094360352, 0.0, -0.002111074049025774, 0.0, -0.0001697540283203125, -0.0001773834228515625, -7.236003875732422e-05, -4.768370445162873e-07, -0.04272937774658203, -0.0001678466796875, -0.0001201629638671875, -4.57763671875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.033342626527883e-06, -1.1920928244535389e-07, -1.2516963579400908e-05, 0.0, -4.0531158447265625e-06, 0.0, -0.0002542733564041555, 0.0, -0.0043621063232421875, -0.0026655197143554688, -8.58306884765625e-05, -1.33514404296875e-05, -0.0005065202713012695, -1.6689286894688848e-06, -0.005337356124073267, -1.9073486328125e-06]}], "index": 29}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"_type": "Template8", "hole0": "target"}, "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Name", "id": "target"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Name", "id": "target"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Name", "id": "target"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "_type": "Lambda"}}], "hole2": [{"_type": "Str", "s": "Execute"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Execute", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.13189557534123963, "choice_history": [54, 124, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Execute", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 53, 159, "filter_func", "<EOS>", 18, 104, 0, 150, "target", "<EOS>", 15, 83, 2, 170, 36, 90, 13, 80, 21, 110, "target", "<EOS>", "health", "<EOS>", 166, 12, 169, 35, 85, 13, 80, 21, 110, "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 85, 13, 80, 21, 110, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 169, 40, 110, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score_history": [-2.47955322265625e-05, -0.00054168701171875, -1.7881377516459906e-06, -3.3974134566960856e-05, -4.7681896830908954e-07, -1.5020368664409034e-05, -8.344646857949556e-07, -3.4332275390625e-05, -3.0517578125e-05, -0.0001659393310546875, -3.24249267578125e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -6.759166717529297e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.410734163684538e-06, 0.0, -3.814697265625e-06, -8.96453857421875e-05, -2.1457663024193607e-06, -9.619814227335155e-05, -4.38690185546875e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0015510320663452148, -0.0001856088638305664, -0.0013942718505859375, -5.841255187988281e-06, -0.00029754638671875, 0.0, -2.6702880859375e-05, 0.0, -0.00025141239166259766, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -0.010197639465332031, -5.340576171875e-05, -9.918212890625e-05, -0.000217437744140625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0002803802490234375, 0.0, -2.9087066650390625e-05, -1.1563301086425781e-05, -0.009647485800087452, -1.9073486328125e-06, -6.29425048828125e-05, -2.86102294921875e-05, -0.004872560501098633, -7.62939453125e-06, -0.0013647079467773438, -0.0014104843139648438, -3.24249267578125e-05, -0.0009822845458984375, -0.0012345314025878906, -5.960462772236497e-07, -0.000286102294921875, -0.0001544952392578125, -0.0003948211669921875, -5.7220458984375e-05, -0.0036220550537109375, -0.00067901611328125, -0.004818916320800781, -1.33514404296875e-05, -0.0007686614990234375, -2.288818359375e-05, -0.014452301897108555, -1.5735502529423684e-05, -0.01411829236894846, -2.384185791015625e-06, -0.0016813278198242188, -0.0143280029296875, -0.00022125244140625, -8.20159912109375e-05, -9.34600830078125e-05, -0.000331878662109375, 0.0, -0.0003070831298828125, 0.0, -0.0012195068411529064, -1.347060333500849e-05, -0.011888742446899414, -3.898143768310547e-05, -0.000576019287109375, -0.0002117156982421875, -0.000213623046875, -2.86102294921875e-05, -0.0015087127685546875, -1.9073486328125e-06, -0.0013184547424316406, -2.1457672119140625e-06, -0.0010045766830444336, -2.2649765014648438e-06, -0.00018584726785775274, 0.0, -8.702273589733522e-06, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -4.231929415254854e-05, -2.3841855067985307e-07, -0.0017299652099609375, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -7.510185241699219e-05, 0.0, -3.933906555175781e-06, 0.0, -6.842610309831798e-05, 0.0, -0.0001621246337890625, -0.008459091186523438, -0.00025177001953125, 0.0, -4.57763671875e-05, -2.6702880859375e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.537799835205078e-05, -7.152555099310121e-07, -0.009301168844103813, 0.0, -9.5367431640625e-06, -0.0006389617919921875, -0.00014495849609375, -0.00021457672119140625, -5.7220458984375e-06]}], "index": 30}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Fan of Knives", "hole1": 3, "hole3": "COMMON", "hole2": "ROGUE"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "FanOfKnives", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"args": [{"n": 1, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.036307950322843396, "choice_history": [54, 124, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score_history": [-1.9073486328125e-06, -2.288818359375e-05, -1.2874520507466514e-05, -0.00047835480654612184, -0.0011374439345672727, -8.987976616481319e-05, -3.933904736186378e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.0014553070068359375, -1.52587890625e-05, -4.911301948595792e-05, -0.00017058780940715224, -9.036048140842468e-05, -0.00020074844360351562, -0.00013124938413966447, -3.635883331298828e-05, -5.364416210795753e-06, -2.193450927734375e-05, -0.005500912666320801, -3.814697265625e-06, -9.393502841703594e-05, 0.0, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -4.0531158447265625e-06, -1.52587890625e-05, -0.0002079010009765625, -3.62396240234375e-05, -1.1444091796875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -0.0014324188232421875, -8.20159912109375e-05, -0.00024318695068359375, -3.814697265625e-06, -2.47955322265625e-05, -1.1801719665527344e-05, -0.0012617111206054688, -0.0001239776611328125, -0.0001773834228515625, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -0.0024127960205078125, -1.9073486328125e-06, -0.0001506805419921875, -2.3841855067985307e-07, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001544952392578125, -9.5367431640625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.340576171875e-05, -3.0517578125e-05, -0.0015048980712890625, -3.814697265625e-06, -0.0003037452115677297, 0.0, -7.62939453125e-06, -0.001373291015625, -0.0001049041748046875, -0.0002422332763671875, -9.5367431640625e-06, -7.641315460205078e-05, -2.3841855067985307e-07, -0.00018715858459472656, 0.0, -0.0001277923583984375, -9.5367431640625e-06, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.33514404296875e-05, -8.869171142578125e-05, -2.503394853192731e-06, -0.0003043410833925009, -1.919269561767578e-05, 0.0, -0.0006351470947265625, -1.1444091796875e-05, -0.0007395663997158408, -2.0861407392658293e-05, -1.1444091796875e-05, -5.7220458984375e-05, -9.1552734375e-05, 0.0, -0.010488510131835938, -0.000324249267578125, -1.33514404296875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00325620174407959, 0.0]}], "index": 31}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Fireball"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Fireball", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.026644140262753524, "choice_history": [54, 124, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fireball", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-0.002017974853515625, -8.20159912109375e-05, -0.0005579821881838143, -8.106198947643861e-06, -0.00032208114862442017, -4.9591064453125e-05, -1.1920928244535389e-07, -2.288818359375e-05, -9.1552734375e-05, -0.00046539306640625, -2.6702880859375e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -3.635883331298828e-05, -3.814697265625e-06, -0.0012054443359375, -1.9073486328125e-06, -8.0108642578125e-05, -2.145764938177308e-06, -0.0002040863037109375, -0.0003814697265625, -0.00048065185546875, -3.6954811548639555e-06, -5.841255187988281e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -0.0023479461669921875, -0.0003224611282348633, -0.0030231475830078125, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -0.0014858245849609375, 0.0, -0.000881195068359375, 0.0, -0.000152587890625, -1.9073486328125e-06, -7.2479248046875e-05, -0.0002193450927734375, 0.0, -9.34600830078125e-05, -1.33514404296875e-05, -2.09808349609375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0003108978271484375, 0.0, -0.00029659271240234375, -3.933906555175781e-06, -0.000517725944519043, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -6.103515625e-05, -1.33514404296875e-05, -5.352497100830078e-05, -7.2479248046875e-05, -0.0002079010009765625, -6.4849853515625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.503394853192731e-06, 0.0, -2.6702880859375e-05, 0.0, -7.832050323486328e-05, 0.0, -0.0023975372314453125, -0.0004596710205078125, -3.814697265625e-05, -6.4849853515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.33514404296875e-05, -0.000179290771484375, 0.0, -0.0002288818359375, -1.1444091796875e-05, -5.7220458984375e-06, -0.0007839202880859375, -0.0001544952392578125, -0.0003414154052734375, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, -7.62939453125e-06, -0.0009218454360961914, -1.1444091796875e-05, -6.29425048828125e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.003828614018857479, -2.264974000354414e-06, -3.62396240234375e-05, -4.9591064453125e-05, -0.00022125244140625, -1.9073486328125e-06]}], "index": 32}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Flamestrike", "hole1": 7, "hole3": "COMMON", "hole2": "MAGE"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Flamestrike", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"args": [{"n": 4, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.12711355906230892, "choice_history": [54, 124, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "4", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score_history": [-9.5367431640625e-06, -0.000408172607421875, -8.583032467868179e-06, -5.245195097813848e-06, -3.573950380086899e-07, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0006103515625, -4.9591064453125e-05, -1.2516897186287679e-05, -2.384185791015625e-06, -0.00025129312416538596, -2.0742272681673057e-05, -0.0002919435501098633, 0.0, -7.224082946777344e-05, 0.0, -3.814697265625e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, -5.53131103515625e-05, -8.58306884765625e-05, -0.000110626220703125, 0.0, -0.1071481704711914, -5.7220458984375e-06, -2.09808349609375e-05, -9.918212890625e-05, -4.00543212890625e-05, -8.96453857421875e-05, 0.0, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.000209808349609375, -6.29425048828125e-05, -0.0005331039428710938, -3.814697265625e-06, -0.0001373291015625, -7.62939453125e-06, -0.0044116973876953125, -0.0002155303955078125, -0.000263214111328125, 0.0, -3.62396240234375e-05, 0.0, -0.0001659393310546875, -6.67572021484375e-05, -0.00101470947265625, 0.0, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -0.00048065185546875, 0.0, -4.76837158203125e-05, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.002101898193359375, -3.814697265625e-06, -0.00019550323486328125, -1.9073486328125e-06, -7.62939453125e-06, -0.0008487701416015625, -0.0001354217529296875, -0.0006580352783203125, -2.86102294921875e-05, -0.00026726722717285156, 0.0, -0.004037976264953613, 0.0, -1.1444091796875e-05, -4.9591064453125e-05, -2.09808349609375e-05, -4.57763671875e-05, 0.0, -4.9591064453125e-05, 0.0, -9.012221562443301e-05, -2.8967857360839844e-05, -0.0004222393035888672, -2.47955322265625e-05, -5.7220458984375e-06, -0.000438690185546875, -5.7220458984375e-06, -0.00023005285765975714, 0.0, -1.52587890625e-05, -6.4849853515625e-05, -3.24249267578125e-05, 0.0]}], "index": 33}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "TOTEM"}], "hole2": [{"_type": "Str", "s": "Flametongue Totem"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "FlametongueTotem", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 0, "hole1": 3, "hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template13", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "Adjacent"}}]}, "hole2": "auras"}]}, "score": -0.05197717527374124, "choice_history": [54, 122, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flametongue", " ", "Totem", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "2", "<EOS>", 46, 128, "Minion", "Selector", "<EOS>", 21, 110, "Adjacent", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score_history": [-0.0001373291015625, -7.43865966796875e-05, -3.6000557884108275e-05, -2.491462328180205e-05, -3.9219725294969976e-05, -0.00012138485908508301, -6.878376007080078e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.00048065185546875, -0.001972198486328125, -7.62939453125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -7.867811291362159e-06, 0.0, -0.0001926422119140625, -2.09808349609375e-05, -9.5367431640625e-06, -4.887569048150908e-06, -5.793571472167969e-05, -2.6583669750834815e-05, -5.7220458984375e-06, 0.0, 0.0, -9.878978016786277e-05, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -2.3841855067985307e-07, -0.0009598731994628906, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.6570091247558594e-05, 0.0, -0.002360701560974121, 0.0, -2.288818359375e-05, -0.0005397796630859375, -0.00011444091796875, -0.0006469488143920898, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.35385513305664e-05, 0.0, -5.7220458984375e-06, -0.0001983642578125, -4.38690185546875e-05, -3.576278118089249e-07, -0.00017462669347878546, -2.8609512810362503e-05, 0.0, -0.015061735175549984, -8.344650268554688e-06, -0.0009746551513671875, -0.0056934356689453125, -0.00046503543853759766, -5.7220458984375e-06, -0.00101470947265625, -0.000225067138671875, -7.62939453125e-05, -0.01113748550415039, -0.00014865394041407853, -2.300739288330078e-05, -0.004353488329797983, -1.9192666513845325e-05, -0.0008831024169921875, -0.0004253387451171875, -0.0007331276428885758, -5.14984130859375e-05, -8.344646857949556e-07, -0.0001010894775390625, -0.0006504058837890625, -0.0011090969201177359, -0.00015389085456263274]}], "index": 34}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": true}]}], "hole3": "create_minion", "hole4": "p", "_type": "Template0", "hole0": "Frog", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 0, "hole1": 1, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt"}]}, "score": -0.06825332805293272, "choice_history": [54, 122, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Frog", "<EOS>", 42, 115, "0", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score_history": [0.0, -0.0002269744873046875, -2.741792195593007e-05, -3.5881646908819675e-05, -2.130866050720215e-05, -5.340576171875e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.000240325927734375, -0.011287689208984375, -0.0001964569091796875, 0.0, -2.193450927734375e-05, 0.0, -0.00017653773829806596, 0.0, -0.000904083251953125, -0.00189208984375, -2.288818359375e-05, -1.1920928244535389e-07, -1.311301275563892e-06, -1.1444091796875e-05, 0.0, -0.0010672836797311902, -1.5497195136049413e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -2.0265579223632812e-06, -0.00102996826171875, -9.655952453613281e-06, -3.62396240234375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00010979169746860862, 0.0, -2.5272369384765625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.8743019104003906e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.00023281571338884532, -6.079673767089844e-06, -1.33514404296875e-05, 0.0, -0.04576981067657471, 0.0, -9.5367431640625e-06, -0.0001659393310546875, -0.0018253326416015625, -0.000915377342607826, -2.9802276912960224e-06, -8.130040805554017e-05, 0.0, -0.000748753547668457, -1.9073486328125e-06, -2.86102294921875e-05, -5.14984130859375e-05, -0.0007230043411254883, -1.9073486328125e-06]}], "index": 35}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Frost Nova", "hole1": 3, "hole3": "COMMON", "hole2": "MAGE"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "FrostNova", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "_type": "For", "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.02762411822550348, "choice_history": [54, 124, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score_history": [-0.0001125335693359375, -0.0007381439208984375, -1.0251946150674485e-05, -0.00012790338951162994, -1.1444091796875e-05, -0.00014522671699523926, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.0009822845458984375, -2.288818359375e-05, -5.030505417380482e-05, -7.712841033935547e-05, -6.198873961693607e-06, 0.0, -0.0002169373183278367, -9.5367431640625e-06, -0.0005130767822265625, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.537799835205078e-05, 0.0, -0.0007152557373046875, -1.9073486328125e-06, -9.34600830078125e-05, -0.0002288818359375, -2.09808349609375e-05, -0.000293731689453125, 0.0, -2.300739288330078e-05, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000179290771484375, -3.4332275390625e-05, -3.0517578125e-05, 0.0, -0.0003986358642578125, -3.814697265625e-06, -0.0004329681396484375, 0.0, -0.0002536773681640625, 0.0, -4.1961669921875e-05, 0.0, -0.00020599365234375, -1.9073486328125e-06, -0.003612518310546875, -2.288818359375e-05, -0.0012428759364411235, -1.9073486328125e-06, -1.9073486328125e-06, -9.72747802734375e-05, -3.24249267578125e-05, -0.005084991455078125, -1.9073486328125e-06, -6.127357482910156e-05, 0.0, -0.008864402770996094, 0.0, -1.9073486328125e-06, -0.0006275177001953125, -0.00020599365234375, -9.34600830078125e-05, -1.9073486328125e-06, -1.52587890625e-05, -4.57763671875e-05, -0.0014327678363770247, -5.352497100830078e-05]}], "index": 36}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "FrostShock", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"args": [{"n": 1, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.05066552811409508, "choice_history": [54, 124, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Frost", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score_history": [-9.5367431640625e-06, -4.9591064453125e-05, -1.1920928244535389e-07, -4.0531076592742465e-06, -7.152555099310121e-07, -7.150229066610336e-07, -3.814697265625e-06, -1.1920928244535389e-07, -0.000339508056640625, -4.38690185546875e-05, -0.0002460479736328125, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.220008850097656e-05, -1.9073486328125e-06, -0.000499725341796875, -9.5367431640625e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -4.601478576660156e-05, -1.5497138520004228e-05, -2.0265558760002023e-06, -7.62939453125e-06, -7.62939453125e-06, -6.794906312279636e-06, -2.622600959512056e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.655952453613281e-06, -0.013484954833984375, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.000278472900390625, 0.0, -0.0004006624221801758, -1.9073486328125e-06, -0.0001316070556640625, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002918243408203125, -1.9073486328125e-06, -1.1444091796875e-05, -8.7738037109375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, 0.0, -0.0001125335693359375, 0.0, -0.0002193450927734375, -3.814697265625e-06, -0.0018726587295532227, 0.0, -4.0531158447265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -2.0384788513183594e-05, -5.9604644775390625e-06, -0.0011339187622070312, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012969970703125, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.3020973205566406e-05, 0.0, -0.00011444091796875, -0.00016021728515625, -2.47955322265625e-05, -7.62939453125e-06, -0.0001087188720703125, -3.4332275390625e-05, -2.288818359375e-05, -3.62396240234375e-05, -0.00048828125, 0.0, -0.000484466552734375, -1.9073486328125e-06, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-05, -9.5367431640625e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002117156982421875, -1.1444091796875e-05, -0.0003720521926879883, -8.96453857421875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0004737719427794218, -3.6954863844584906e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.00041484832763671875, 0.0, -0.001941680908203125, -0.011327743530273438, -1.52587890625e-05, -1.9073486328125e-06, -0.000385284423828125, -1.9073486328125e-06, -0.0001125335693359375, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -0.01195824146270752, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.00014495849609375, -3.0517578125e-05, 0.0, -0.0004425048828125, -3.814697265625e-06, -0.0004733765381388366, -0.000213623046875]}], "index": 37}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Frostbolt"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Frostbolt", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"args": [{"n": 3, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "add_buff", "hole2": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.042456117756607625, "choice_history": [54, 124, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Frostbolt", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score_history": [-4.76837158203125e-05, -7.05718994140625e-05, -1.3470558769768104e-05, -3.099436753473128e-06, -2.503104042261839e-06, -2.288818359375e-05, 0.0, -0.00019073486328125, -5.14984130859375e-05, -6.866455078125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.1975250244140625e-05, 0.0, -9.918212890625e-05, -1.1444091796875e-05, -0.00011444091796875, -2.0265558760002023e-06, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -5.960456519460422e-07, -1.7881377516459906e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000888824462890625, -8.404254913330078e-05, -0.00336456298828125, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0012054443359375, 0.0, -0.00010693073272705078, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.0001373291015625, -0.0002269744873046875, 0.0, -1.52587890625e-05, -6.29425048828125e-05, -5.7220458984375e-06, 0.0, -3.0517578125e-05, 0.0, -0.001262664794921875, 0.0, -0.0003072023391723633, -3.814697265625e-06, -0.002758026123046875, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.00014328956604003906, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -7.832050323486328e-05, -3.814697265625e-06, -0.00054168701171875, -8.392333984375e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.826618194580078e-05, 0.0, -0.00029754638671875, -0.0003185272216796875, -5.7220458984375e-05, -1.71661376953125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.14984130859375e-05, -0.0008649826049804688, 0.0, -0.0027980804443359375, -3.814697265625e-06, -7.62939453125e-06, -0.0005035400390625, -1.71661376953125e-05, -0.0009746551513671875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0007190704345703125, -1.9073486328125e-05, -0.0021514892578125, -2.09808349609375e-05, -3.814697265625e-06, -0.0003566741943359375, -5.7220458984375e-06, -0.00504755973815918, -4.291525328881107e-06, -7.62939453125e-06, 0.0, -0.0001811981201171875, -3.62396240234375e-05, -5.340576171875e-05, -0.006374359130859375, -0.0001316070556640625, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -8.392333984375e-05, -2.0265579223632812e-06, -0.006814122200012207, 0.0, -0.0001316070556640625, -7.43865966796875e-05, -0.0001926422119140625, -8.404254913330078e-05, -1.1920928244535389e-07, -0.0001468658447265625, -3.814697265625e-06, -0.0011992135550826788, -0.00014531612396240234]}], "index": 38}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Frostwolf Grunt", "hole1": 2, "hole3": "COMMON", "hole2": "ALL"}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "FrostwolfGrunt", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 2, "hole1": 2, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt"}]}, "score": -0.013819572462423935, "choice_history": [54, 122, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score_history": [0.0, -7.62939453125e-06, -2.8371408916427754e-05, -5.042444172431715e-05, -4.768370445162873e-07, -1.1909287422895432e-07, -1.0848044439626392e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0074710845947265625, -5.7220458984375e-06, -4.529942543740617e-06, -0.0001255264360224828, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0001506805419921875, 0.0, -4.0411949157714844e-05, 0.0, -1.52587890625e-05, 0.0, -0.0035489797592163086, 0.0, 0.0, -0.0001010894775390625, -0.000797271728515625, -1.5735617125756107e-05, -1.1920928244535389e-07, -2.3841583242756315e-05, 0.0, -0.0012322664260864258, 0.0, -3.0517578125e-05, -2.288818359375e-05, -0.0001049041748046875, -1.9073486328125e-06]}], "index": 39}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Goldshire Footman", "hole1": 1, "hole3": "COMMON", "hole2": "ALL"}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "GoldshireFootman", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 1, "hole1": 2, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt"}]}, "score": -0.029467933959601567, "choice_history": [54, 122, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -2.038458114839159e-05, -0.00010156135249417275, -7.152555099310121e-07, -1.1909287422895432e-07, -8.70227722771233e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0117034912109375, -3.814697265625e-06, -3.3378546504536644e-06, -0.00013661273987963796, -9.655952453613281e-06, -1.9073486328125e-06, -0.00020360996131785214, 0.0, -5.91278076171875e-05, 0.0, -3.8743019104003906e-05, 0.0, -1.71661376953125e-05, 0.0, -0.015195846557617188, 0.0, 0.0, -7.2479248046875e-05, -0.0004062652587890625, -4.172324224782642e-06, -1.0728830375228426e-06, -0.0005309577099978924, 0.0, -0.0008069276809692383, 0.0, -2.6702880859375e-05, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06]}], "index": 40}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "MURLOC"}], "hole2": [{"_type": "Str", "s": "Grimscale Oracle"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "GrimscaleOracle", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 1, "hole1": 1, "hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Template19", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}]}, "hole2": "auras"}]}, "score": -0.1706687542635592, "choice_history": [54, 122, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Grimscale", " ", "Oracle", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score_history": [0.0, -1.52587890625e-05, -2.8967437174287625e-05, -4.768370445162873e-07, -6.318072337307967e-06, -1.8328428268432617e-05, -0.00010752677917480469, -1.2159273865108844e-05, -1.9073486328125e-06, -0.0002899169921875, -0.0001678466796875, -0.000179290771484375, -2.6702880859375e-05, -3.576277322281385e-06, 0.0, -6.008085983921774e-05, 0.0, -0.002643585205078125, -9.1552734375e-05, -2.6702880859375e-05, -1.1920928244535389e-07, -0.00015759319649077952, -1.5497207641601562e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0004036426544189453, -1.9073468138230965e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -2.002716064453125e-05, -0.0002040863037109375, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00043559071491472423, -2.3841855067985307e-07, -0.0002655982971191406, 0.0, -0.000804901123046875, -0.0001125335693359375, -0.0002288818359375, -0.0009413957595825195, -3.24249267578125e-05, -2.47955322265625e-05, 0.0, -0.0007539987564086914, 0.0, -1.52587890625e-05, -4.57763671875e-05, -6.866455078125e-05, -1.6927006072364748e-05, -1.704684109427035e-05, -7.880269549787045e-06, -5.125986263010418e-06, -0.0017543663270771503, -5.14984130859375e-05, -0.00048065185546875, -0.02480316162109375, -0.0020710229873657227, -9.655952453613281e-06, -0.0004024505615234375, -0.0002765655517578125, -0.00090789794921875, -0.00048520276322960854, -0.00045859802048653364, -4.780292510986328e-05, -0.10507545620203018, -0.0006716245552524924, -0.0009784698486328125, -0.001262664794921875, -6.866455078125e-05, -9.5367431640625e-06, -0.0034716136287897825, -0.00023090839385986328, -1.9073486328125e-06, -0.0003337860107421875, -0.013154983520507812, -0.0001735687255859375, -0.00052642822265625, 0.0, -0.0005284339422360063, -0.0008454275084659457, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.0005805479013361037, -2.1815101717947982e-05, -0.0011920928955078125, -2.288818359375e-05, -0.000545501708984375, 0.0, -0.0005246400833129883, -0.00032806396484375, -2.86102294921875e-05]}], "index": 41}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template15", "hole0": "Heal", "hole1": 6}, {"_type": "Template19", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}}], "hole2": [{"_type": "Str", "s": "Guardian of Kings"}, {"n": 7, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "GuardianOfKings", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 5, "hole1": 6}]}, "score": -0.04620521519470344, "choice_history": [54, 122, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Guardian", " ", "of", " ", "Kings", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "6", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score_history": [-1.9073486328125e-06, -0.0002040863037109375, -2.3841830625315197e-06, -0.001183151500299573, -0.001780830672942102, -0.0002337471814826131, -0.003460109233856201, -5.9604644775390625e-06, -2.3841855067985307e-07, -9.72747802734375e-05, -0.000186920166015625, -3.0517578125e-05, -1.52587890625e-05, 0.0, -3.576278118089249e-07, 0.0, -1.3589810805569869e-05, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.960462772236497e-07, -0.00034284580033272505, -3.778933751164004e-05, -0.00010979175567626953, -0.00019919872283935547, -2.3484179109800607e-05, -1.9073486328125e-06, -2.6702880859375e-05, -7.271765298355604e-06, -2.372236667724792e-05, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.109989509335719e-05, -0.011372566223144531, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.5789947509765625e-05, 0.0, -0.0007799863815307617, 0.0, -2.09808349609375e-05, -9.5367431640625e-06, -4.57763671875e-05, -0.0008198022842407227, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -9.5367431640625e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -0.016668319702148438, -2.6702880859375e-05, -0.00471454905346036, -0.0013851233525201678, -0.0013062582584097981, -3.266298153903335e-05, -0.0001392364501953125, -2.288818359375e-05, -0.00010395050048828125, -0.00017547607421875, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -1.2874562344222795e-05, 0.0, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -0.00014841550728306174, -2.384185791015625e-06, -1.025199526338838e-05, -1.1920922133867862e-06]}], "index": 42}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Gurubashi Berserker", "hole1": 5, "hole3": "COMMON", "hole2": "ALL"}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "GurubashiBerserker", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 2, "hole1": 7, "hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template19", "hole0": "MinionIsTarget"}}], "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"args": [{"_type": "Template13", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"n": 3, "_type": "Num"}]}, {"_type": "Template19", "hole0": "SelfSelector"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}]}, "hole2": "effects"}]}, "score": -0.1820542291479157, "choice_history": [54, 122, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Character", "Damaged", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Minion", "Is", "Target", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -5.328513361746445e-05, -7.915183232398704e-05, -1.3112978194840252e-05, -6.1318278312683105e-06, -2.479548675182741e-05, -3.576272320060525e-06, -3.814697265625e-06, -0.0004596710205078125, -1.52587890625e-05, -5.960462772236497e-07, -0.00027344957925379276, -3.933906555175781e-06, -1.9073486328125e-06, -0.00010538096103118733, -2.622604142743512e-06, -0.0005931854248046875, 0.0, -5.173683166503906e-05, 0.0, -5.7220458984375e-06, 0.0, -7.832050323486328e-05, 0.0, -1.9073486328125e-06, -0.000701904296875, -8.392333984375e-05, -5.006777428206988e-06, -2.384182153036818e-05, -0.0004868212854489684, -4.291525328881107e-06, -0.02281045913696289, -1.0728830375228426e-06, -0.00112152099609375, -4.1961669921875e-05, -1.0728831512096804e-05, -9.5367431640625e-06, -0.0003299713134765625, -0.06446075439453125, -0.0003643035888671875, -0.0002422332763671875, -6.4849853515625e-05, -0.005463599693030119, -0.0184861421585083, -9.441284055355936e-05, -0.019739151000976562, -2.09808349609375e-05, -1.9073486328125e-06, -0.001677335356362164, -1.5258787243510596e-05, -0.0015459060668945312, -1.9073486328125e-06, -0.004480578936636448, -0.014054417610168457, -0.01156309712678194, -6.794917680963408e-06, -0.000217437744140625, -3.814697265625e-05, -1.33514404296875e-05, 0.0, -0.0008276700391434133, -1.1444091796875e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -4.57763671875e-05, -0.0009250640869140625, -0.0005801897495985031, -3.814697265625e-05, -6.103515625e-05, -4.57763671875e-05, -6.54458999633789e-05, -0.0015192031860351562, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.007316346280276775, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0005899667739868164, -3.933906555175781e-06, 0.0]}], "index": 43}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "HammerOfWrath", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"args": [{"n": 3, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}, {"_type": "Template17", "hole0": {"_type": "Name", "id": "player"}, "hole1": "draw"}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.026149280858952295, "choice_history": [54, 124, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score_history": [-4.57763671875e-05, -1.9073486328125e-05, -2.074220174108632e-05, -0.000400529766920954, -0.00356507720425725, -0.00117103336378932, -1.0363291949033737e-05, -9.655952453613281e-06, -1.7881377516459906e-06, -2.86102294921875e-05, -9.5367431640625e-05, -0.0001621246337890625, -2.86102294921875e-05, -1.33514404296875e-05, -9.894371032714844e-06, -2.09808349609375e-05, -3.993509744759649e-05, -1.1444091796875e-05, -0.000652313232421875, -5.7220458984375e-06, -5.7220458984375e-06, -2.0265558760002023e-06, -0.0002377033233642578, -2.3722612240817398e-05, -9.012222290039062e-05, -0.0003397464461158961, -0.0007210969924926758, -1.9073486328125e-06, -3.814697265625e-06, -3.576278118089249e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.14984130859375e-05, -0.0001724831818137318, -0.005408287048339844, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000118255615234375, 0.0, -0.0005095005035400391, -1.1444091796875e-05, -0.0003604888916015625, -1.9073486328125e-06, -1.9073486328125e-05, -0.00032806396484375, -1.52587890625e-05, -8.20159912109375e-05, -5.340576171875e-05, -0.0001430511474609375, 0.0, -3.814697265625e-06, 0.0, -0.0001220703125, 0.0, -9.512901306152344e-05, -4.0531158447265625e-06, -0.00029408925911411643, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -4.8160552978515625e-05, -9.5367431640625e-06, -0.0001850128173828125, -0.0006122589111328125, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -3.6954863844584906e-06, 0.0, -1.1444091796875e-05, 0.0, -1.9788720237556845e-05, 0.0, -2.09808349609375e-05, -0.001354217529296875, -6.4849853515625e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.00049591064453125, -8.392333984375e-05, -3.814697265625e-06, -0.000385284423828125, -2.3841855067985307e-07, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003452301025390625, -1.9073486328125e-05, -0.000148773193359375, -2.47955322265625e-05, -3.814697265625e-06, -5.340576171875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.001637337962165475, -0.000591278076171875, -1.9073486328125e-06, -0.0021762847900390625, -3.814697265625e-06, -0.0004518031782936305, -3.2186455882765586e-06, -5.7220458984375e-06, -5.7220458984375e-05, -0.00034177303314208984, -1.2516919014160521e-05, -0.00011444091796875, -8.0108642578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0008385175024159253, 0.0]}], "index": 44}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "HandOfProtection", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}], "value": {"_type": "NameConstant", "value": true}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.13440036738756334, "choice_history": [54, 124, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Hand", " ", "of", " ", "Protection", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 111, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score_history": [-0.0018024444580078125, -7.62939453125e-05, -3.3378546504536644e-06, -0.002350167604163289, -0.00021503653260879219, -0.002862530294805765, -3.707401629071683e-05, -3.1113613658817485e-05, -5.245195097813848e-06, -3.4332275390625e-05, -2.288818359375e-05, -0.00354766845703125, -1.9073486328125e-05, -2.6702880859375e-05, -1.0013580322265625e-05, -5.7220458984375e-06, -1.5377991076093167e-05, -6.29425048828125e-05, -0.00083160400390625, -5.7220458984375e-06, -5.7220458984375e-06, -1.6689286894688848e-06, -0.0001484142558183521, -0.0002079007390420884, -0.0001398324966430664, -0.00017559526895638555, -0.001024484634399414, -1.9073486328125e-06, 0.0, -5.125983079778962e-06, -6.985420623095706e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00016891956329345703, -0.0002781028160825372, -0.0025720596313476562, -1.1563301086425781e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.780292510986328e-05, 0.0, -0.00030517578125, -2.0265579223632812e-06, -0.0009641647338867188, -1.9073486328125e-06, -3.4332275390625e-05, -0.000148773193359375, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0002689361572265625, 0.0, -0.0003261566162109375, -1.9073486328125e-06, -0.0005277395248413086, -1.1920928244535389e-07, -1.919269561767578e-05, 0.0, -5.7697296142578125e-05, 0.0, -0.000232696533203125, -2.288818359375e-05, -0.0001456737518310547, -1.52587890625e-05, -0.00101470947265625, -0.004428863525390625, -0.0005626678466796875, -8.20159912109375e-05, -1.52587890625e-05, -2.86102294921875e-05, -1.1444091796875e-05, -2.503394853192731e-06, -3.4332275390625e-05, -6.198883056640625e-06, 0.0, -0.0007724761962890625, 0.0, -0.00010538100468693301, 0.0, -0.00379180908203125, -9.5367431640625e-06, -0.0001544952392578125, -4.1961669921875e-05, 0.0, -0.03635883331298828, 0.0, -0.0003509521484375, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -0.00033223628997802734, -2.3841830625315197e-06, -0.05581092834472656, 0.0, -0.0003299713134765625, -0.0066013336181640625, -0.0034897327423095703, -7.152555099310121e-07]}], "index": 45}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "HealingTotem", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 0, "hole1": 2, "hole3": {"_type": "Template18", "hole0": "Effect", "hole1": [{"_type": "Template19", "hole0": "TurnEnded"}, {"args": [{"_type": "Template15", "hole0": "Heal", "hole1": 1}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}]}, "hole2": "effects"}]}, "score": -0.045936733213601144, "choice_history": [54, 122, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Healing", " ", "Totem", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score_history": [-1.9073486328125e-06, -0.0002918243408203125, -1.4305104514278355e-06, -2.264974000354414e-06, -8.583057933719829e-06, -0.00026836805045604706, -0.0001468658447265625, 0.0, -0.0001621246337890625, -0.00041961669921875, -6.67572021484375e-05, -7.62939453125e-06, 0.0, 0.0, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0029392242431640625, -1.33514404296875e-05, -1.52587890625e-05, -8.821448318485636e-06, -0.0002243518829345703, -3.433226083870977e-05, -1.1444091796875e-05, -0.0018749237060546875, -3.814697265625e-06, -0.00016629556193947792, -1.9073486328125e-05, -0.00083160400390625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.34600830078125e-05, -2.1457672119140625e-06, -0.0007572174072265625, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000492095947265625, 0.0, -0.0006771087646484375, 0.0, -2.6702880859375e-05, -0.0001220703125, -9.584426879882812e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -6.67572021484375e-05, -2.3841855067985307e-07, -0.003780364990234375, 0.0, -0.0003204345703125, 0.0, -4.363058542367071e-05, 0.0, -7.62939453125e-06, -0.0007801055908203125, -2.288818359375e-05, -1.2040129149681889e-05, -4.768360213347478e-06, -0.0009977150475606322, -1.1920928244535389e-07, -0.0014704465866088867, -5.960462772236497e-07, -0.0001010894775390625, -0.0017642974853515625, -0.00020110607147216797, 0.0, -0.00012969970703125, -0.00328826904296875, -1.1444091796875e-05, -0.0003091096878051758, -0.0005360841751098633, -1.9073486328125e-06, -0.0005474090576171875, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.4332275390625e-05, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -0.000782012939453125, -1.1444091796875e-05, -0.005373593885451555, -5.841255187988281e-06, -0.00737400259822607, -0.0003024339384865016, -0.00099945068359375, -5.7220458984375e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.000118255615234375, -0.0001697540283203125, 0.0, -0.00072479248046875, -0.000713348388671875, -7.62939453125e-06, -0.0018885130994021893, 0.0, -0.0021514892578125, -0.000762939453125, -7.0929505454842e-05, 0.0]}], "index": 46}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "HealingTouch", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "heal", "hole2": [{"args": [{"n": 8, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.038316417687831006, "choice_history": [54, 124, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Healing", " ", "Touch", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 42, 115, "8", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score_history": [-0.000408172607421875, -2.288818359375e-05, -7.152555099310121e-07, -0.00016604475968051702, -3.290122185717337e-05, -1.1920201359316707e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.010072708129882812, -0.0002269744873046875, -2.47955322265625e-05, -2.288818359375e-05, -2.384185791015625e-06, -1.9073486328125e-06, -3.409382770769298e-05, -1.9073486328125e-06, -0.000209808349609375, -3.814697265625e-06, -3.814697265625e-06, -4.172316494077677e-06, -0.00010776519775390625, -1.072883515007561e-05, -0.0018405914306640625, -2.09808349609375e-05, -1.9073486328125e-06, -0.00040268898010253906, -5.9604562920867465e-06, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001755891426000744, -0.0003268718719482422, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.491474151611328e-05, 0.0, -0.0006390810012817383, -5.841255187988281e-06, -4.1961669921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000919342041015625, -7.05718994140625e-05, -0.0001659393310546875, -2.6702880859375e-05, -0.0028247833251953125, 0.0, -2.86102294921875e-05, 0.0, -0.0005893707275390625, -2.0265579223632812e-06, -0.0004315362893976271, -0.0007539987564086914, -0.0013099908828735352, -0.0006353855133056641, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -0.0016521215438842773, -2.86102294921875e-05, -0.0016117095947265625, -9.34600830078125e-05, -6.4849853515625e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.1457672119140625e-06, -4.291534423828125e-06, 0.0, 0.0, 0.0, -5.257129669189453e-05, 0.0, -0.0006465911865234375, -0.0010118484497070312, -0.0001354217529296875, -0.0001316070556640625, -3.62396240234375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265579223632812e-06, -9.012222290039062e-05, -6.198863957251888e-06, -0.005270242691040039, 0.0, -0.0002498626708984375, -0.0002689361572265625, -9.5367431640625e-06, -0.0001201629638671875, -2.86102294921875e-05, -7.62939453125e-06, -1.9073486328125e-05, -6.699562072753906e-05, -2.145764938177308e-06, -0.0008245338103733957, -4.00543212890625e-05, -0.0004215240478515625, -0.0012683868408203125, -5.7220458984375e-06, -0.0003169772680848837, -0.00015615257143508643, -1.1444091796875e-05, 0.0, -0.0008603334426879883, -1.1920922133867862e-06]}], "index": 47}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Hex", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "minion"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "<UNK>", "hole2": [{"_type": "Name", "id": "minion"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.5872336724439577, "choice_history": [54, 124, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Hex", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 185, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "frog", "<EOS>", 16, 85, 13, 80, 13, 80, 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "frog", "<EOS>", "create_minion", "<EOS>", 169, 41, 112, "Null", "<EOS>", 59, 79, 169, 32, 80, 21, 110, "minion", "<EOS>", "card", "<EOS>", 21, 110, "frog", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 169, 40, 110, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score_history": [-0.013765335083007812, -0.000247955322265625, -1.2278481335670222e-05, -1.9788643840001896e-05, -2.3840766516514122e-07, -0.0002231597900390625, -1.1920928244535389e-07, -7.62939453125e-06, -0.000164031982421875, -0.00341796875, -1.9073486328125e-06, -1.9073486328125e-06, -4.5299530029296875e-06, -2.0265579223632812e-06, -5.0066999392583966e-05, 0.0, -0.00042724609375, -2.47955322265625e-05, -1.52587890625e-05, -3.576278118089249e-07, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-05, -1.3112993428876507e-06, -5.781534127891064e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -2.682209014892578e-05, -0.00046539306640625, 0.0, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.0001239776611328125, 0.0, -0.0008697509765625, 0.0, -0.0017871856689453125, -0.0006923675537109375, -2.6702880859375e-05, -0.000102996826171875, 0.0, -1.71661376953125e-05, 0.0, -4.38690185546875e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0003814697265625, 0.0, -0.00041961669921875, -1.9073486328125e-06, -0.0006525506032630801, -6.198883056640625e-06, -0.00011742115020751953, 0.0, -7.867813110351562e-06, 0.0, -0.0004787445068359375, -1.9073486328125e-06, -1.9073486328125e-05, -1.1920928244535389e-07, -0.016817092895507812, -0.005553245544433594, -0.0005283355712890625, -3.24249267578125e-05, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.7404556274414062e-05, -3.933906555175781e-06, -4.0531158447265625e-06, 0.0, -7.43865966796875e-05, 0.0, -1.919269561767578e-05, 0.0, -0.004004478454589844, -9.5367431640625e-06, -3.0517578125e-05, -0.0002460479736328125, -0.000431060791015625, -0.06529712677001953, -2.6702880859375e-05, -0.0072765350341796875, -4.9591064453125e-05, -0.0001354217529296875, -3.24249267578125e-05, -1.52587890625e-05, -7.62939453125e-06, -0.00016021728515625, -1.1444091796875e-05, -0.008557319641113281, 0.0, -0.06719684600830078, 0.0, -0.0784991979598999, -1.1324817933200393e-05, -0.02004063129425049, 0.0, -0.0007202874403446913, 0.0, -0.004965849220752716, -1.9073486328125e-06, -0.008184488862752914, -0.0001901245123008266, -0.001129150390625, -9.1552734375e-05, -0.0002574920654296875, -0.000125885009765625, -4.00543212890625e-05, -0.0159961748868227, -1.2516919014160521e-05, -0.00109100341796875, -0.0001354217529296875, -0.001026153564453125, -5.7220458984375e-06, -0.001171112060546875, 0.0, -0.036276817321777344, -1.71661376953125e-05, -0.0012984275817871094, 0.0, -3.62396240234375e-05, -0.0002613067626953125, -0.000438690185546875, -0.0007235825760290027, -5.9604644775390625e-06, -0.0008068084716796875, -0.0001659393310546875, -3.814697265625e-06, -0.000774383544921875, -5.7220458984375e-06, -0.011649131774902344, 0.0, -0.010382866486907005, -3.576278118089249e-07, -0.0062408447265625, 0.0, -0.08240318298339844, -5.7220458984375e-05, -0.05792844295501709, -3.814697265625e-06, -0.01589679718017578, -7.2479248046875e-05, -0.000156402587890625, -1.9073486328125e-05, -0.008794784545898438, 0.0, -0.0009675025939941406, 0.0, -0.00015842914581298828, -6.318072337307967e-06, -0.006907308474183083, 0.0, -1.9073486328125e-05, -0.002346038818359375, -1.9073486328125e-06, -0.007267117500305176, -2.9802276912960224e-06]}], "index": 48}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Holy Light"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "HolyLight", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "heal", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.04953659841267921, "choice_history": [54, 124, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Holy", " ", "Light", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score_history": [-4.57763671875e-05, -2.09808349609375e-05, -2.3841855067985307e-07, -1.4305104514278355e-06, -2.861018856492592e-06, -1.2880191206932068e-05, -1.1444091796875e-05, -5.960462772236497e-07, -3.814697265625e-06, -0.0006732940673828125, -0.0002613067626953125, -6.67572021484375e-05, -9.5367431640625e-06, -2.503394853192731e-06, -3.814697265625e-06, -1.1682510375976562e-05, -5.7220458984375e-06, -0.0001735687255859375, -3.4332275390625e-05, -1.9073486328125e-06, -1.0609570381348021e-05, -0.0001959799265023321, -3.7789133784826845e-05, -0.00038230419158935547, -3.814697265625e-06, 0.0, -0.00013744831085205078, -5.257036900729872e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -1.33514404296875e-05, -5.1855990022886544e-05, -0.0035305023193359375, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.000274658203125, -1.1444091796875e-05, -8.0108642578125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0032635927200317383, -4.76837158203125e-05, -0.0002288818359375, -3.814697265625e-05, -0.0009937286376953125, 0.0, -2.09808349609375e-05, 0.0, -0.001773834228515625, -1.1920928244535389e-07, -0.0009584426297806203, -0.00013566017150878906, -0.002236485481262207, -0.0001583099365234375, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -5.14984130859375e-05, -2.47955322265625e-05, -0.0021649599075317383, -4.00543212890625e-05, -0.00067138671875, -0.000202178955078125, -0.000118255615234375, -1.52587890625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.556489552167477e-06, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -7.62939453125e-06, 0.0, -3.504752748995088e-05, 0.0, -0.0021228790283203125, -0.0002040863037109375, -0.0001010894775390625, -0.0001239776611328125, -3.24249267578125e-05, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.0003949403762817383, -9.536738616588991e-07, -0.00582122802734375, 0.0, -0.0004119873046875, -0.000301361083984375, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0002721548080444336, -1.0728830375228426e-06, -0.0008194345282390714, -4.00543212890625e-05, -0.000274658203125, -0.008578300476074219, -3.814697265625e-06, -0.0021558671724051237, -0.0010453977156430483, -2.09808349609375e-05, -1.9073486328125e-06, -0.00715482234954834, -3.576278118089249e-07]}], "index": 49}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Holy Nova", "hole1": 5, "hole3": "COMMON", "hole2": "PRIEST"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "HolyNova", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"args": [{"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template17", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "heal", "hole2": [{"args": [{"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "_type": "For", "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Name", "id": "player"}}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.14450976531710324, "choice_history": [54, 124, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score_history": [0.0, -7.2479248046875e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -9.536738616588991e-07, -4.120171070098877e-06, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -0.0102996826171875, -3.4332275390625e-05, -1.0728830375228426e-06, -0.00017392545123584569, -1.4424300388782285e-05, -1.9073486328125e-06, -0.004668377339839935, 0.0, -0.011369705200195312, -3.814697265625e-06, -2.300739288330078e-05, 0.0, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -0.0003108978271484375, -0.0012516975402832031, -1.9073486328125e-06, -0.0009937286376953125, -0.00011444091796875, -2.86102294921875e-05, -0.0001964569091796875, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -0.0038957595825195312, -0.00042629241943359375, -0.0007009506225585938, -3.4332275390625e-05, -0.0001277923583984375, -1.1563301086425781e-05, -0.00128173828125, -0.000751495361328125, -0.0004215240478515625, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0008258819580078125, -4.57763671875e-05, -0.0001163482666015625, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.004563331604003906, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001506805419921875, -3.814697265625e-06, -0.0017414093017578125, 0.0, -0.00045120716094970703, 0.0, -1.9073486328125e-05, -0.0004825592041015625, -6.103515625e-05, -0.000347137451171875, -0.000217437744140625, -0.0016138553619384766, -2.1457672119140625e-06, -0.0013926029205322266, 0.0, -6.67572021484375e-05, -0.0001678466796875, -3.4332275390625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.0411949157714844e-05, -1.1920928244535389e-07, -0.03493654727935791, -9.5367431640625e-06, -1.33514404296875e-05, -0.0018444061279296875, -2.09808349609375e-05, -0.006595010403543711, -1.1920928244535389e-07, -7.62939453125e-06, -3.24249267578125e-05, -0.00019931793212890625, 0.0, -0.003200531005859375, -0.0002193450927734375, -0.000148773193359375, 0.0, -0.00034928321838378906, -5.483625955093885e-06, -0.004433631896972656, -1.9073486328125e-06, -0.0009860992431640625, -1.9073486328125e-06, -0.000232696533203125, 0.0, -0.00014889240264892578, -0.0003490447998046875, -1.1444091796875e-05, -0.0014801025390625, -0.00046539306640625, -0.0023603439331054688, -9.5367431640625e-06, -0.003483891487121582, -1.1086458471254446e-05, -0.011765480041503906, 0.0, -0.000270843505859375, -0.000652313232421875, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, 0.0, -2.491474151611328e-05, -2.2649765014648438e-06, -0.0012890100479125977, -9.5367431640625e-06, -2.6702880859375e-05, -0.013248443603515625, -1.52587890625e-05, -0.0054023354314267635, -1.1920928244535389e-07, -3.62396240234375e-05, -2.09808349609375e-05, -0.0003108978271484375, 0.0]}], "index": 50}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "HolySmite", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"args": [{"n": 2, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.06112681800734521, "choice_history": [54, 124, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Holy", " ", "Smite", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score_history": [-0.00025177001953125, -3.0517578125e-05, -1.1920928244535389e-07, -1.1920922133867862e-06, -4.649054244509898e-05, -1.1672847904264927e-05, -7.62939453125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -0.0001964569091796875, -0.0002841949462890625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -3.647804260253906e-05, -5.7220458984375e-06, -0.0018901824951171875, -7.62939453125e-06, -2.6702880859375e-05, -8.940656698541716e-06, -0.0001776216086000204, -2.6464205802767538e-05, -0.00054931640625, -5.7220458984375e-06, -7.62939453125e-06, -1.4781938261876348e-05, -1.3709019185625948e-05, -0.00012969970703125, -6.67572021484375e-05, -1.71661376953125e-05, -3.814697265625e-06, -6.67572021484375e-05, -0.00011765932140406221, -0.020669221878051758, -2.1457672119140625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -5.340576171875e-05, 0.0, -0.0003452301025390625, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0005321502685546875, 0.0, -0.000213623046875, -7.2479248046875e-05, -6.29425048828125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.000324249267578125, 0.0, -0.0002797842025756836, -2.1457672119140625e-06, -0.005936145782470703, -1.1563301086425781e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001010894775390625, -4.9591064453125e-05, -0.00012218952178955078, -3.814697265625e-06, -0.0040225982666015625, -0.000316619873046875, -3.4332275390625e-05, -0.000118255615234375, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.1457672119140625e-06, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -3.838539123535156e-05, 0.0, -0.01654815673828125, -0.0002002716064453125, -5.7220458984375e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.52587890625e-05, -0.000202178955078125, 0.0, -0.00014495849609375, -3.62396240234375e-05, -7.62939453125e-06, -0.000125885009765625, -3.0517578125e-05, -0.0001316070556640625, -2.86102294921875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0003902912139892578, -2.0265579223632812e-06, -5.7220458984375e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0047152056358754635, -2.3841855067985307e-07, -3.4332275390625e-05, -5.7220458984375e-06, -0.0006923675537109375, -1.9073486328125e-06]}], "index": 51}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "<UNK>"}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"n": 2, "_type": "Num"}]}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template13", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}]}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template19", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}}], "hole2": [{"_type": "Str", "s": "Houndmaster"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "Houndmaster", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 4, "hole1": 3}]}, "score": -0.7078323064587764, "choice_history": [54, 122, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Houndmaster", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "<UNK>", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 171, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "Taunt", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(Taunt()), Buff(\n            Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-9.5367431640625e-06, -0.000431060791015625, -0.00013100386422593147, -3.576278118089249e-07, -1.0035932064056396e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -0.010763168334960938, -0.0001201629638671875, -0.000141143798828125, -3.4332275390625e-05, -1.52587890625e-05, -3.2782554626464844e-05, 0.0, -2.384185791015625e-06, 0.0, -0.0010232925415039062, -0.000335693359375, -1.9073486328125e-05, -5.125999450683594e-06, -2.09808349609375e-05, -0.0001316070556640625, -3.814697265625e-06, -0.001304197940044105, 0.0, -0.00031280517578125, -3.24249267578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003337860107421875, -1.9073486328125e-06, -0.0033761262893676758, 0.0, -0.0001506805419921875, -2.86102294921875e-05, -9.5367431640625e-06, 0.0, -0.0004086494445800781, 0.0, -0.004651427268981934, 0.0, -0.07115364074707031, -0.0033521652221679688, -0.000621795654296875, -0.0009272086317650974, 0.0, -0.0006237030029296875, -0.000759124755859375, -0.0008034706115722656, -1.9073486328125e-06, -0.022705078125, -0.0022449493408203125, -9.5367431640625e-06, 0.0, -0.00028228759765625, 0.0, -7.05718994140625e-05, -0.0006074905395507812, -0.004132270812988281, -7.43865966796875e-05, 0.0, -0.002624587155878544, -2.7179718017578125e-05, -0.000209808349609375, -0.0013675689697265625, -0.0013370513916015625, -0.0005321502685546875, -5.53131103515625e-05, -0.016222000122070312, -0.0005849224398843944, -2.110004425048828e-05, -2.288818359375e-05, -0.000110626220703125, -0.00038658417179249227, -0.004698276519775391, 0.0, -3.814697265625e-06, -0.0001068115234375, -1.9073486328125e-06, -0.013055086135864258, 0.0, -1.9073486328125e-05, -0.1596822738647461, -5.555152893066406e-05, -1.9073468138230965e-06, -2.6702880859375e-05, -2.47955322265625e-05, -0.000580858439207077, -0.0003992306883446872, -0.00029754638671875, -0.18901443481445312, -0.0005578986601904035, -2.9802276912960224e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0007943350938148797, -0.007210488431155682, -0.0021076202392578125, -0.0023965835571289062, -0.0014219284057617188, 0.0, -0.020599281415343285, -0.0002765655517578125, -2.0265579223632812e-06, -1.33514404296875e-05, -0.024695396423339844, -0.00038909912109375, -3.24249267578125e-05, 0.0, -0.0011817021295428276, -0.0003955364227294922, -1.1444091796875e-05, -0.0001659393310546875, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001471996190957725, -1.549720582261216e-05, -0.0024919509887695312, -5.340576171875e-05, -0.040238380432128906, -9.5367431640625e-06, -0.0064601898193359375, -0.04926431179046631, 0.0, -0.012745857238769531, -0.0005435943603515625, -0.00039637088775634766, -0.00015842914581298828, -1.3470649719238281e-05, -7.462501525878906e-05, 0.0, -3.767005182453431e-05, 0.0, -0.000118255615234375, -3.62396240234375e-05, -5.53131103515625e-05, -0.0013597297947853804, 0.0, -0.0062796748243272305, 0.0]}], "index": 52}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": true}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "Huffer", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 4, "hole1": 2, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "charge"}]}, "score": -0.028341957641060844, "choice_history": [54, 122, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Huffer", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -0.00012969970703125, -0.00012707008863799274, -0.0002970694040413946, -7.426738739013672e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -0.000141143798828125, -0.00026702880859375, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.014011383056640625, -0.0004024505615234375, -4.57763671875e-05, -5.960462772236497e-07, -0.0002534218947403133, -1.1444091796875e-05, 0.0, -6.794587534386665e-06, -3.6954811548639555e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00035858154296875, -2.288818359375e-05, -0.002254486083984375, -8.392333984375e-05, -1.52587890625e-05, -4.38690185546875e-05, -5.7220458984375e-06, 0.0, -0.0001837015151977539, 0.0, -4.44650613644626e-05, 0.0, -9.5367431640625e-06, -0.000102996826171875, -0.00010204315185546875, -7.867813110351562e-06, -2.47955322265625e-05, -0.0001926422119140625, -0.000102996826171875, -0.00035130971809849143, -1.9073486328125e-05, -4.38690185546875e-05, 0.0, -0.00024378299713134766, 0.0, -1.52587890625e-05, -0.0001392364501953125, -1.33514404296875e-05, -6.079673767089844e-06, 0.0, -0.0002199148148065433, -2.3841855067985307e-07, -0.007685184478759766, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06]}], "index": 53}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Humility"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "Humility", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "change_attack", "hole2": [{"_type": "BinOp", "op": {"_type": "Sub"}, "left": {"n": 1, "_type": "Num"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.6120624163216206, "choice_history": [54, 124, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Humility", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 33, 82, 23, 115, "1", "<EOS>", 56, 16, 85, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score_history": [-0.000286102294921875, -0.0001316070556640625, -0.00040892345714382827, -0.002214958192780614, -4.053101292811334e-06, -0.00011873245239257812, -1.1920928244535389e-07, -2.09808349609375e-05, -2.288818359375e-05, -0.000476837158203125, -1.52587890625e-05, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -9.894371032714844e-06, 0.0, -0.0043315887451171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.6450841940240934e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.1939664545934647e-07, -8.95221673999913e-05, -1.1444091796875e-05, 0.0, -2.288818359375e-05, 0.0, -3.0517578125e-05, -6.31808916295995e-06, -0.03664886951446533, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00012445449829101562, 0.0, -6.496906280517578e-05, 0.0, -8.392333984375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.43865966796875e-05, 0.0, -0.000194549560546875, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.00038421154022216797, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -9.1552734375e-05, 0.0, -6.103515625e-05, -7.62939453125e-06, -8.976459503173828e-05, -1.9073486328125e-06, -0.008412361145019531, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.894371032714844e-06, 0.0, -2.288818359375e-05, 0.0, -4.7326087951660156e-05, 0.0, -0.043064117431640625, -0.0039768218994140625, -2.288818359375e-05, 0.0, -0.000171661376953125, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -4.768370445162873e-07, -0.0734720230102539, -1.9073486328125e-06, -1.52587890625e-05, -0.40700626373291016, -0.00026702880859375, -0.00203704833984375, -9.5367431640625e-05, -0.0028018951416015625, -1.9073486328125e-06, -0.01169586181640625, -0.0002918243408203125, -0.0004634857177734375, -0.00033092498779296875, -1.9073486328125e-06, -0.0020275115966796875, 0.0, -0.00029754638671875, 0.0, -0.0005340576171875, -7.62939453125e-06, -4.00543212890625e-05, -3.576278118089249e-07, -0.008586525917053223, 0.0]}], "index": 54}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "<UNK> Mark"}, {"n": 0, "_type": "Num"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "<UNK>Mark", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "increase_health", "hole2": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -1.0740558399244051, "choice_history": [54, 124, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Mark", "<EOS>", 42, 115, "0", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.card)\n", "score_history": [-5.53131103515625e-05, -0.0001544952392578125, -0.002094616647809744, -0.0004300146538298577, -2.2292097128229216e-05, -2.2149179130792618e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -4.00543212890625e-05, -0.0010509490966796875, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -1.9073486328125e-06, -0.0011920928955078125, -1.9073486328125e-06, -3.814697265625e-06, -0.0007286630570888519, -0.00012969970703125, -5.9604562920867465e-06, -0.0002288818359375, -1.9073486328125e-05, 0.0, -1.859664735093247e-05, -6.794906312279636e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.4332275390625e-05, -2.384185791015625e-06, -0.01028287410736084, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.357929229736328e-05, 0.0, -1.728534698486328e-05, 0.0, -0.00051116943359375, -1.1444091796875e-05, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -0.0002574920654296875, 0.0, -1.71661376953125e-05, -2.5033950805664062e-05, -0.000980377197265625, -2.2649765014648438e-06, -8.20159912109375e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -1.9073486328125e-06, -0.00041604042053222656, 0.0, -0.00731658935546875, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -3.814697265625e-06, 0.0, -4.5299530029296875e-05, 0.0, -0.003269195556640625, -0.0049037933349609375, -4.1961669921875e-05, -3.814697265625e-06, -0.000133514404296875, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, -0.4611152410507202, 0.0, -0.000217437744140625, -0.1259632110595703, 0.0, -0.003513336181640625, 0.0, -0.000125885009765625, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.33514404296875e-05, -9.536738616588991e-07, -0.4480009078979492, -5.7220458984375e-06]}], "index": 55}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template19", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}}, {"_type": "keyword", "arg": "combo", "value": {"args": [{"_type": "Template15", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template19", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template19", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}}], "hole2": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "IronforgeRifleman", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 2}]}, "score": -0.9120672175837967, "choice_history": [54, 122, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Ironforge", " ", "Rifleman", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "combo", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(1), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score_history": [-3.814697265625e-06, -1.71661376953125e-05, -0.00035661060246638954, -0.00010859376925509423, -9.65590606938349e-06, -9.51928086578846e-07, -1.239776611328125e-05, -5.960462772236497e-07, -5.340576171875e-05, -0.0003376007080078125, -3.0517578125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -4.5299530029296875e-05, 0.0, -2.9325485229492188e-05, 0.0, -0.000125885009765625, -1.52587890625e-05, -7.62939453125e-06, -0.00010227633902104571, -0.00011074542999267578, -3.254377588746138e-05, -5.733966827392578e-05, -1.9073486328125e-06, 0.0, -6.079672402847791e-06, -7.152555099310121e-07, -2.09808349609375e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004596710205078125, 0.0, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -0.00012421607971191406, 0.0, -0.0001125335693359375, 0.0, -0.2771186828613281, -0.43334484100341797, -5.14984130859375e-05, -0.008767247200012207, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -0.000209808349609375, 0.0, -3.814697265625e-06, -0.00045680999755859375, -8.7738037109375e-05, -0.00034368038177490234, -4.744529724121094e-05, -0.0013897120952606201, -0.0003519026795402169, -0.0001392364501953125, -0.004128456115722656, -3.0517578125e-05, -0.0002956390380859375, -0.0008184909820556641, -0.0011234283447265625, 0.0, -0.0004482269287109375, -1.1444091796875e-05, -4.00543212890625e-05, -4.208087921142578e-05, 0.0, -0.000102996826171875, -1.71661376953125e-05, -0.0005495548248291016, -9.739398956298828e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.002386808395385742, 0.0, -0.0023193359375, -8.392333984375e-05, -0.0008858442306518555, -0.00013840198516845703, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.13057684898376465, -9.5367431640625e-06, -0.000423431396484375, -0.000110626220703125, -0.0001850128173828125, -1.9073486328125e-06, -0.0006389617919921875, 0.0, -5.7220458984375e-06, -0.000652313232421875, -6.29425048828125e-05, -0.013049483299255371, -1.0728831512096804e-05, -0.00873547326773405, -0.00036308972630649805, -0.00043487548828125, -0.0008029937744140625, -9.5367431640625e-06, -5.7220458984375e-05, -0.0019747018814086914, -0.0004349946975708008, 0.0, -0.0071811676025390625, -1.33514404296875e-05, -3.814697265625e-06, -0.00010895729064941406, 0.0, -9.1552734375e-05, -1.1444091796875e-05, -0.00029778480529785156, -7.069110870361328e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.00232541561126709, 0.0, -0.0026226043701171875, -5.14984130859375e-05, -0.0007866621017456055, -0.00011551380157470703, -1.3470649719238281e-05, -3.838539123535156e-05, 0.0, -6.628035771427676e-05, 0.0, -1.9073486328125e-05, -6.67572021484375e-05, -2.47955322265625e-05, -5.364416665543104e-06, -1.1920922133867862e-06, -0.0011816025944426656, -1.4305104514278355e-06]}], "index": 56}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "IronfurGrizzly", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 3, "hole1": 3, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt"}]}, "score": -0.07384299807537786, "choice_history": [54, 122, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Ironfur", " ", "Grizzly", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score_history": [0.0, -9.5367431640625e-05, -0.00032669928623363376, -0.00015221897047013044, -7.152555099310121e-07, -2.7455389499664307e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0001964569091796875, -0.0002307891845703125, -4.38690185546875e-05, -1.9073486328125e-06, -5.841253368998878e-06, 0.0, -4.649158654501662e-06, 0.0, -0.000209808349609375, -7.62939453125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010704994201660156, -1.2278556823730469e-05, -1.728534698486328e-05, -9.5367431640625e-05, 0.0, -7.0333489929907955e-06, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.099440846199286e-06, -0.0002002716064453125, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00011181485024280846, 0.0, -4.231929415254854e-05, 0.0, -1.33514404296875e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0003833732334896922, -4.0531158447265625e-06, -3.814697265625e-06, 0.0, -0.0670328140258789, 0.0, -3.814697265625e-06, -0.0001678466796875, -0.0005741119384765625, -8.439678640570492e-05, 0.0, -0.0010264593875035644, 0.0, -0.0014878511428833008, -3.814697265625e-06, -2.09808349609375e-05, -5.14984130859375e-05, -0.0009652376174926758, 0.0]}], "index": 57}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "hole2": [{"_type": "Str", "s": "Kill Command"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}]}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "KillCommand", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Name", "id": "player"}}, {"args": {"_type": "Template8", "hole0": "x"}, "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "x"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"body": [{"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"args": [{"n": 3, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "_type": "If", "orelse": [{"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"args": [{"n": 3, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"_type": "Name", "id": "<UNK>"}, "ops": [{"_type": "Is"}]}}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.9331494097795954, "choice_history": [54, 124, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Kill", " ", "Command", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 16, 87, 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 170, 32, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", 37, 104, 0, 150, "x", "<EOS>", 17, 90, 13, 80, 13, 80, 21, 110, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 98, 17, 90, 21, 110, "<UNK>", "<EOS>", 166, 8, 169, 41, 112, "Null", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -9.918212890625e-05, -3.099436753473128e-06, -1.1920878932869527e-05, -1.9073304429184645e-05, -8.343704394064844e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -3.4332275390625e-05, -4.1961669921875e-05, -0.0001354217529296875, -2.09808349609375e-05, -3.814697265625e-06, -6.318092346191406e-06, 0.0, -8.583065209677443e-06, 0.0, -0.0001735687255859375, -1.33514404296875e-05, 0.0, -9.179073458653875e-06, -0.00016796588897705078, -4.649161837733118e-06, -2.491474151611328e-05, -1.9073486328125e-06, 0.0, -3.0279159545898438e-05, -5.006777428206988e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.551078432588838e-05, -0.005941987037658691, 0.0, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -8.118152618408203e-05, 0.0, -0.00061798095703125, -7.62939453125e-06, -8.96453857421875e-05, -0.000347137451171875, 0.0, -2.6702880859375e-05, -0.0001239776611328125, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00115203857421875, -1.9073486328125e-06, -0.0001207590103149414, -2.300739288330078e-05, -0.001349329948425293, -2.86102294921875e-05, -4.208087921142578e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0002841949462890625, -3.814697265625e-06, -0.0004273653030395508, -7.62939453125e-06, -0.0033559799194335938, -0.0013141632080078125, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.2649765014648438e-06, 0.0, -1.1920928955078125e-05, 0.0, -0.00011444091796875, 0.0, -2.515315827622544e-05, 0.0, -0.033911705017089844, -0.0001068115234375, 0.0, -0.0007686614990234375, -9.5367431640625e-06, -0.0010628700256347656, -0.00012791156768798828, -0.002269744873046875, -4.76837158203125e-05, -1.1444091796875e-05, -4.1961669921875e-05, -0.013641357421875, -1.9073486328125e-06, -0.001255035400390625, 0.0, -0.0005168914794921875, 0.0, -0.000179290771484375, 0.0, -0.0014859437942504883, -1.9073486328125e-06, -6.67572021484375e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.0005474090576171875, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.00096893310546875, 0.0, -0.000270843505859375, -0.00030517578125, -0.0001049041748046875, -0.0004215240478515625, -0.0025942325592041016, 0.0, -0.0008144378662109375, -0.0011577606201171875, -0.0005359649658203125, -2.6702880859375e-05, -0.0011005401611328125, -3.0517578125e-05, -0.0900115966796875, -1.9073486328125e-06, -0.01066577434539795, 0.0, -0.009260773658752441, -0.000141143798828125, -0.00308990478515625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0032644271850585938, -3.62396240234375e-05, -2.6702880859375e-05, -0.0007038116455078125, -0.0023708343505859375, -1.9073486328125e-06, -5.14984130859375e-05, -8.106231689453125e-06, -0.0008144378662109375, -0.000110626220703125, -0.0015153884887695312, -0.0031576156616210938, -0.0006885528564453125, -0.000194549560546875, -0.002124786376953125, -1.9073486328125e-06, -0.01843869686126709, -0.0009665489196777344, -0.0006313323974609375, -0.0032701492309570312, -1.33514404296875e-05, -0.016262054443359375, -0.0003204345703125, -0.0009970495011657476, -2.7418097943154862e-06, -0.00031280517578125, -8.96453857421875e-05, -0.0002994537353515625, -7.82012939453125e-05, -0.000354766845703125, -0.00046634674072265625, 0.0, -0.0009765625, 0.0, -0.0001125335693359375, 0.0, -0.0007354021072387695, 0.0, -5.7220458984375e-06, -0.00127410888671875, -0.062218666076660156, -8.392333984375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0001283884048461914, -1.9073486328125e-06, -0.0019456148147583008, -1.0013580322265625e-05, -0.0002155303955078125, -5.14984130859375e-05, -2.09808349609375e-05, -0.26959601044654846, -1.1920928244535389e-07, -2.47955322265625e-05, 0.0, -0.0013980865478515625, -7.748603820800781e-06, -8.58306884765625e-05, -0.0006465911865234375, -0.0001926422119140625, -3.4332275390625e-05, -0.0001277923583984375, -6.103515625e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0016671419143676758, 0.0, -4.9591064453125e-05, -0.00176239013671875, -0.00041961669921875, -0.0002956390380859375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.00011456012725830078, 0.0, -0.003938794136047363, -5.841255187988281e-06, -0.000225067138671875, -6.866455078125e-05, -3.62396240234375e-05, -0.33106690645217896, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -0.001422882080078125, -5.7220458984375e-06]}], "index": 58}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Kobold Geomancer", "hole1": 2, "hole3": "COMMON", "hole2": "ALL"}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "KoboldGeomancer", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 2, "hole1": 2, "hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage"}]}, "score": -0.2372542008580396, "choice_history": [54, 122, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 115, "1", "<EOS>"], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.0503786799963564e-05, -3.385492891538888e-05, -0.00024065504840109497, -4.762550815939903e-07, -7.593458576593548e-05, -7.033323527139146e-06, -1.9073486328125e-06, -0.0017547607421875, -7.62939453125e-06, -3.576278118089249e-07, -0.0003269745211582631, -9.894371032714844e-06, -3.814697265625e-06, -4.529946636466775e-06, -2.3841830625315197e-06, -0.00019276142120361328, 0.0, -0.00011491775512695312, 0.0, -3.814697265625e-06, 0.0, -9.953975677490234e-05, 0.0, -1.9073486328125e-06, -0.0005474090576171875, -8.58306884765625e-05, -1.5258770872605965e-05, -1.1920922133867862e-06, -6.0795013268943876e-05, -3.576278118089249e-07, -0.23247694969177246, 0.0, -0.000244140625, -1.9073486328125e-06, -0.0009070522501133382, -1.1920928244535389e-07]}], "index": 59}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Kor'kron Elite", "hole1": 4, "hole3": "COMMON", "hole2": "WARRIOR"}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "<UNK>Elite", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 4, "hole1": 3, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "charge"}]}, "score": -0.5089416223162715, "choice_history": [54, 122, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score_history": [-3.814697265625e-06, -1.33514404296875e-05, -0.48424041271209717, -0.00215822272002697, -3.576278118089249e-07, -4.384852945804596e-05, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0027370452880859375, -2.288818359375e-05, -3.480850500636734e-05, -8.881081885192543e-05, -1.33514404296875e-05, 0.0, -0.0019195766653865576, 0.0, -0.007671356201171875, -5.7220458984375e-06, -0.00019812583923339844, 0.0, -0.001129150390625, 0.0, -8.976459503173828e-05, 0.0, 0.0, -8.96453857421875e-05, -0.0001087188720703125, -9.667872654972598e-05, -1.1920928244535389e-07, -0.00016771338414400816, 0.0, -0.0080641508102417, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06]}], "index": 60}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": true}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "Leokk", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 2, "hole1": 4, "hole3": {"_type": "Template18", "hole0": "Aura", "hole1": [{"_type": "Template15", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template19", "hole0": "MinionSelector"}]}, "hole2": "auras"}]}, "score": -0.10452286216472828, "choice_history": [54, 122, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Leokk", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 50, 146, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score_history": [0.0, -4.1961669921875e-05, -1.740443622111343e-05, -0.007919583469629288, -3.0517578125e-05, -0.0001125335693359375, -3.933906555175781e-06, -1.1444091796875e-05, -0.000274658203125, -0.0002574920654296875, -0.000171661376953125, 0.0, -3.0994415283203125e-05, -1.1920928244535389e-07, -0.0001461505889892578, 0.0, -0.0014801025390625, -0.00045013427734375, -2.288818359375e-05, -1.1920928244535389e-07, -0.0019866228103637695, -1.1444091796875e-05, 0.0, -1.168137532658875e-05, -2.0265558760002023e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -0.0001201629638671875, -4.0531158447265625e-06, -0.0016747713088989258, -5.9604644775390625e-06, -1.1444091796875e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.00016033649444580078, 0.0, -0.0001735684636514634, 0.0, -1.33514404296875e-05, -0.000324249267578125, -3.099439709330909e-05, -1.919269561767578e-05, -5.91278076171875e-05, -0.0005340576171875, -0.000217437744140625, -0.0003675184561870992, -2.3484230041503906e-05, -0.000244140625, 0.0, -0.003232240676879883, 0.0, -2.09808349609375e-05, -0.000152587890625, -1.52587890625e-05, -1.5497195136049413e-06, -5.602820692729438e-06, -3.3497228287160397e-05, -8.34461570775602e-06, -0.0011678675655275583, -7.867813110351562e-06, -0.000118255615234375, -0.05909156799316406, -0.002209637314081192, -5.960462772236497e-07, -3.24249267578125e-05, -0.0001506805419921875, -0.0001888275146484375, -0.0012365707661956549, -0.0006003364105708897, -2.5033950805664062e-05, -0.004697523079812527, -2.1457441107486375e-05, -0.011408805847167969, -5.7220458984375e-06, -0.0011629760265350342, -0.0018939971923828125, -4.768370445162873e-07]}], "index": 61}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole2": [{"_type": "Str", "s": "<UNK> Justice"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": true}]}], "hole3": "create_weapon", "hole4": "player", "_type": "Template0", "hole0": "<UNK>Justice", "hole1": "WeaponCard", "hole6": [{"_type": "Template14", "hole0": "Weapon", "hole1": 1, "hole2": 4}]}, "score": -0.8944719551061553, "choice_history": [54, 122, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "<UNK>", " ", "Justice", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 41, 111, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score_history": [-2.09808349609375e-05, -0.0008335113525390625, -0.0014856908237561584, -0.0016293388325721025, -0.004067051224410534, -0.0293031707406044, -8.165836334228516e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -0.4044208526611328, -0.20055770874023438, -7.62939453125e-06, 0.0, -1.0251998901367188e-05, 0.0, -9.655952453613281e-06, -5.7220458984375e-06, -0.17328739166259766, -1.52587890625e-05, -3.814697265625e-06, -0.04116435721516609, -9.1552734375e-05, -4.0531158447265625e-06, -4.1961669921875e-05, -3.62396240234375e-05, 0.0, -0.02442353591322899, -3.933898824470816e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -8.82148651726311e-06, -0.009786605834960938, -3.814697265625e-06, -0.000148773193359375, 0.0, -1.9073486328125e-06, 0.0, -1.537799835205078e-05, 0.0, -0.0004138946533203125, 0.0, -1.52587890625e-05, -4.57763671875e-05, -5.7220458984375e-05, -3.933906555175781e-06, -0.00098419189453125, -1.9073486328125e-06, -9.965896606445312e-05, 0.0, -0.000274658203125, -0.0006771087646484375, -0.0003376007080078125, -4.422662823344581e-05, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -2.0265558760002023e-06, 0.0]}], "index": 62}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Lord of the Arena", "hole1": 6, "hole3": "COMMON", "hole2": "ALL"}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "LordOfTheArena", "hole1": "MinionCard", "hole6": [{"_type": "Template9", "hole0": 6, "hole1": 5, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt"}]}, "score": -0.01755750848189308, "choice_history": [54, 122, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score_history": [-4.38690185546875e-05, -0.0009708404541015625, -0.00012003655137959868, -0.0006738877855241299, -0.0019134196918457747, -3.623903467087075e-05, -3.242446109652519e-05, -1.2991949915885925e-06, -7.867813110351562e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.00624847412109375, -3.814697265625e-06, -5.626602069241926e-05, -0.00035178574034944177, -3.3736214390955865e-05, -0.0002275705337524414, -0.0007518529891967773, -0.0003516674041748047, -0.0008280274923890829, -2.47955322265625e-05, -3.2464973628520966e-05, -5.8412379075889476e-06, -0.00022912025451660156, 0.0, -8.082389831542969e-05, 0.0, -8.213520050048828e-05, 0.0, -0.002436399459838867, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -0.00063323974609375, -2.0265558760002023e-06, -4.768370445162873e-07, -6.663784733973444e-05, 0.0, -0.001201629638671875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-05, 0.0]}], "index": 63}
{"beams": [{"model_output": {"hole2": [{"_type": "Template17", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "__init__", "hole3": [{"_type": "Template16", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": true}]}], "hole3": "create_minion", "hole4": "player", "_type": "Template0", "hole0": "MechanicalDragonling", "hole1": "MinionCard", "hole6": [{"_type": "Template11", "hole0": 2, "hole1": 1}]}, "score": -0.01753953146561571, "choice_history": [54, 122, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Mechanical", " ", "Dragonling", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -5.483612312673358e-06, -0.00021016597747802734, -1.6450801922474056e-05, -2.5779008865356445e-05, -5.841255187988281e-06, -1.6689286894688848e-06, -1.33514404296875e-05, -0.0001277923583984375, -0.000278472900390625, -0.000102996826171875, 0.0, -8.106231689453125e-06, 0.0, -1.8834980437532067e-05, 0.0, -0.0009593963623046875, -0.00041961669921875, -3.62396240234375e-05, -3.576278118089249e-07, -0.0009918212890625, -2.5987585104303434e-05, -3.933906555175781e-06, -2.6702880859375e-05, -5.91278076171875e-05, -7.64111100579612e-05, -7.152555099310121e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -0.0001621246337890625, -0.0001316070556640625, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0003261566162109375, 0.0, -5.841255187988281e-06, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.254413604736328e-05, -1.9073486328125e-06, -2.6702880859375e-05, -4.00543212890625e-05, -3.24249267578125e-05, -0.007420539855957031, 0.0, -1.728534698486328e-05, 0.0, -0.00013422963093034923, 0.0, -3.62396240234375e-05, -6.67572021484375e-05, -7.43865966796875e-05, -0.00546670239418745, 0.0, -7.629371339135105e-06, 0.0]}], "index": 64}
{"beams": [{"model_output": {"hole2": [{"_type": "Template6", "hole0": "Mind Blast", "hole1": 2, "hole3": "FREE", "hole2": "PRIEST"}], "hole3": "use", "hole4": "player", "_type": "Template0", "hole0": "MindBlast", "hole1": "SpellCard", "hole6": [{"_type": "Expr", "value": {"_type": "Template12", "hole0": {"_type": "Template19", "hole0": "super"}, "hole1": "use", "hole3": "game", "hole2": "player"}}, {"_type": "Template17", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}, "hole1": "damage", "hole2": [{"args": [{"n": 5, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}]}], "hole5": [{"_type": "arg", "arg": "game"}]}, "score": -0.10631185671607568, "choice_history": [54, 124, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "5", "<EOS>", 40, 110, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score_history": [-3.814697265625e-06, -0.0002346038818359375, 0.0, -2.0265558760002023e-06, -9.7508447652217e-05, -2.380460500717163e-06, -2.09808349609375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.0023555755615234375, -1.1444091796875e-05, -7.152555099310121e-07, -0.0003920392191503197, -4.5299530029296875e-06, -1.9073486328125e-06, -1.4304897376860026e-05, 0.0, -0.008257031440734863, 0.0, -0.0022346973419189453, 0.0, -9.775161743164062e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.4809112548828125e-05, -1.9073486328125e-06, -0.0651540756225586, -5.53131103515625e-05, -1.33514404296875e-05, -0.00014495849609375, -3.814697265625e-06, -1.1444091796875e-05, 0.0, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, 0.0, -0.0067138671875, -0.00038909912109375, -0.000308990478515625, -0.0010280609130859375, -0.0006017684936523438, -1.9073486328125e-05, -0.0011768341064453125, -1.9073486328125e-06, -0.0011730194091796875, -8.96453857421875e-05, -0.0014853477478027344, -2.384185791015625e-06, -0.006950962822884321, -3.576278118089249e-07, -0.0005741119384765625, -2.288818359375e-05, -2.6702880859375e-05, -0.0008335113525390625, -5.7220458984375e-05, -0.000583648681640625, -0.001087188720703125, -0.0004520416259765625, 0.0, -3.4809112548828125e-05, -7.62939453125e-06, -0.0007090568542480469, -5.9604644775390625e-06, -3.814697265625e-06, -0.0001316070556640625, -1.71661376953125e-05, -0.0016446112422272563, -1.0728830375228426e-06, -3.62396240234375e-05, -0.000453948974609375, -0.0005588531494140625, 0.0]}], "index": 65}
